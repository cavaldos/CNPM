import {
  ChannelActionContext,
  ChannelActionProvider,
  ChannelListContext,
  ChannelListContextProvider,
  ChannelStateContext,
  ChannelStateProvider,
  ChatContext,
  ChatProvider,
  ComponentContext,
  ComponentProvider,
  EmojiContext,
  EmojiProvider,
  MessageContext,
  MessageInputContext,
  MessageInputContextProvider,
  MessageListContext,
  MessageListContextProvider,
  MessageProvider,
  Streami18n,
  TranslationContext,
  TranslationProvider,
  TypingContext,
  TypingProvider,
  __assign,
  __awaiter,
  __extends,
  __generator,
  __rest,
  __spreadArray,
  de_default,
  defaultDateTimeParser,
  defaultTranslatorFunction,
  en_default,
  es_default,
  fr_default,
  hi_default,
  isDate,
  isDayOrMoment,
  isLanguageSupported,
  isNumberOrString,
  it_default,
  ja_default,
  ko_default,
  nl_default,
  pt_default,
  ru_default,
  tr_default,
  useChannelActionContext,
  useChannelListContext,
  useChannelStateContext,
  useChatContext,
  useComponentContext,
  useEmojiContext,
  useMessageContext,
  useMessageInputContext,
  useMessageListContext,
  useTranslationContext,
  useTypingContext,
  withChannelActionContext,
  withChannelStateContext,
  withChatContext,
  withComponentContext,
  withEmojiContext,
  withMessageContext,
  withTranslationContext,
  withTypingContext
} from "./chunk-NHKGCQYD.js";
import {
  logChatPromiseExecution
} from "./chunk-LAVNXO6E.js";
import "./chunk-ICC6B6UK.js";
import "./chunk-JAH63LOZ.js";
import "./chunk-7HVNDLRT.js";
import {
  ln,
  require_dist,
  require_extend,
  require_is_buffer
} from "./chunk-FHCXMP2U.js";
import "./chunk-DHH47WJI.js";
import {
  require_prop_types
} from "./chunk-6IJE4OMF.js";
import {
  index
} from "./chunk-PWDSAZHD.js";
import {
  _extends,
  _objectWithoutPropertiesLoose
} from "./chunk-VIFAQISN.js";
import "./chunk-VGHAXWEW.js";
import "./chunk-AAY5IJNO.js";
import "./chunk-O4E2PP7E.js";
import {
  require_react_dom
} from "./chunk-ZRNALROW.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/load-script/index.js
var require_load_script = __commonJS({
  "node_modules/load-script/index.js"(exports, module) {
    module.exports = function load(src, opts, cb) {
      var head = document.head || document.getElementsByTagName("head")[0];
      var script = document.createElement("script");
      if (typeof opts === "function") {
        cb = opts;
        opts = {};
      }
      opts = opts || {};
      cb = cb || function() {
      };
      script.type = opts.type || "text/javascript";
      script.charset = opts.charset || "utf8";
      script.async = "async" in opts ? !!opts.async : true;
      script.src = src;
      if (opts.attrs) {
        setAttributes(script, opts.attrs);
      }
      if (opts.text) {
        script.text = "" + opts.text;
      }
      var onend = "onload" in script ? stdOnEnd : ieOnEnd;
      onend(script, cb);
      if (!script.onload) {
        stdOnEnd(script, cb);
      }
      head.appendChild(script);
    };
    function setAttributes(script, attrs) {
      for (var attr in attrs) {
        script.setAttribute(attr, attrs[attr]);
      }
    }
    function stdOnEnd(script, cb) {
      script.onload = function() {
        this.onerror = this.onload = null;
        cb(null, script);
      };
      script.onerror = function() {
        this.onerror = this.onload = null;
        cb(new Error("Failed to load " + this.src), script);
      };
    }
    function ieOnEnd(script, cb) {
      script.onreadystatechange = function() {
        if (this.readyState != "complete" && this.readyState != "loaded")
          return;
        this.onreadystatechange = null;
        cb(null, script);
      };
    }
  }
});

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options2) {
      return options2.clone !== false && options2.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options2) : value;
    }
    function defaultArrayMerge(target, source, options2) {
      return target.concat(source).map(function(element3) {
        return cloneUnlessOtherwiseSpecified(element3, options2);
      });
    }
    function getMergeFunction(key, options2) {
      if (!options2.customMerge) {
        return deepmerge;
      }
      var customMerge = options2.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options2) {
      var destination = {};
      if (options2.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options2);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options2.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options2)(target[key], source[key], options2);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options2);
        }
      });
      return destination;
    }
    function deepmerge(target, source, options2) {
      options2 = options2 || {};
      options2.arrayMerge = options2.arrayMerge || defaultArrayMerge;
      options2.isMergeableObject = options2.isMergeableObject || isMergeableObject;
      options2.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options2);
      } else if (sourceIsArray) {
        return options2.arrayMerge(target, source, options2);
      } else {
        return mergeObject(target, source, options2);
      }
    }
    deepmerge.all = function deepmergeAll(array, options2) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge(prev, next, options2);
      }, {});
    };
    var deepmerge_1 = deepmerge;
    module.exports = deepmerge_1;
  }
});

// node_modules/react-player/lib/utils.js
var require_utils = __commonJS({
  "node_modules/react-player/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseStartTime = parseStartTime;
    exports.parseEndTime = parseEndTime;
    exports.randomString = randomString;
    exports.queryString = queryString;
    exports.getSDK = getSDK;
    exports.getConfig = getConfig;
    exports.omit = omit;
    exports.callPlayer = callPlayer;
    exports.isMediaStream = isMediaStream;
    exports.isBlobUrl = isBlobUrl;
    exports.supportsWebKitPresentationMode = supportsWebKitPresentationMode;
    var _loadScript = _interopRequireDefault(require_load_script());
    var _deepmerge = _interopRequireDefault(require_cjs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _slicedToArray3(arr, i) {
      return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
    }
    function _nonIterableRest3() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray3(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray3(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray3(o, minLen);
    }
    function _arrayLikeToArray3(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit3(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles3(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    var MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;
    var MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;
    var MATCH_START_STAMP = /(\d+)(h|m|s)/g;
    var MATCH_NUMERIC = /^\d+$/;
    function parseTimeParam(url, pattern) {
      if (url instanceof Array) {
        return void 0;
      }
      var match = url.match(pattern);
      if (match) {
        var stamp = match[1];
        if (stamp.match(MATCH_START_STAMP)) {
          return parseTimeString(stamp);
        }
        if (MATCH_NUMERIC.test(stamp)) {
          return parseInt(stamp);
        }
      }
      return void 0;
    }
    function parseTimeString(stamp) {
      var seconds = 0;
      var array = MATCH_START_STAMP.exec(stamp);
      while (array !== null) {
        var _array = array, _array2 = _slicedToArray3(_array, 3), count = _array2[1], period = _array2[2];
        if (period === "h")
          seconds += parseInt(count, 10) * 60 * 60;
        if (period === "m")
          seconds += parseInt(count, 10) * 60;
        if (period === "s")
          seconds += parseInt(count, 10);
        array = MATCH_START_STAMP.exec(stamp);
      }
      return seconds;
    }
    function parseStartTime(url) {
      return parseTimeParam(url, MATCH_START_QUERY);
    }
    function parseEndTime(url) {
      return parseTimeParam(url, MATCH_END_QUERY);
    }
    function randomString() {
      return Math.random().toString(36).substr(2, 5);
    }
    function queryString(object) {
      return Object.keys(object).map(function(key) {
        return "".concat(key, "=").concat(object[key]);
      }).join("&");
    }
    function getGlobal(key) {
      if (window[key]) {
        return window[key];
      }
      if (window.exports && window.exports[key]) {
        return window.exports[key];
      }
      if (window.module && window.module.exports && window.module.exports[key]) {
        return window.module.exports[key];
      }
      return null;
    }
    var requests = {};
    function getSDK(url, sdkGlobal) {
      var sdkReady = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      var isLoaded = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
        return true;
      };
      var fetchScript = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : _loadScript["default"];
      var existingGlobal = getGlobal(sdkGlobal);
      if (existingGlobal && isLoaded(existingGlobal)) {
        return Promise.resolve(existingGlobal);
      }
      return new Promise(function(resolve, reject) {
        if (requests[url]) {
          requests[url].push({
            resolve,
            reject
          });
          return;
        }
        requests[url] = [{
          resolve,
          reject
        }];
        var onLoaded = function onLoaded2(sdk) {
          requests[url].forEach(function(request) {
            return request.resolve(sdk);
          });
        };
        if (sdkReady) {
          var previousOnReady = window[sdkReady];
          window[sdkReady] = function() {
            if (previousOnReady)
              previousOnReady();
            onLoaded(getGlobal(sdkGlobal));
          };
        }
        fetchScript(url, function(err) {
          if (err) {
            requests[url].forEach(function(request) {
              return request.reject(err);
            });
            requests[url] = null;
          } else if (!sdkReady) {
            onLoaded(getGlobal(sdkGlobal));
          }
        });
      });
    }
    function getConfig(props, defaultProps2) {
      return (0, _deepmerge["default"])(defaultProps2.config, props.config);
    }
    function omit(object) {
      var _ref;
      for (var _len = arguments.length, arrays2 = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        arrays2[_key - 1] = arguments[_key];
      }
      var omitKeys = (_ref = []).concat.apply(_ref, arrays2);
      var output = {};
      var keys2 = Object.keys(object);
      for (var _i2 = 0, _keys = keys2; _i2 < _keys.length; _i2++) {
        var key = _keys[_i2];
        if (omitKeys.indexOf(key) === -1) {
          output[key] = object[key];
        }
      }
      return output;
    }
    function callPlayer(method) {
      var _this$player;
      if (!this.player || !this.player[method]) {
        var message = "ReactPlayer: ".concat(this.constructor.displayName, " player could not call %c").concat(method, "%c – ");
        if (!this.player) {
          message += "The player was not available";
        } else if (!this.player[method]) {
          message += "The method was not available";
        }
        console.warn(message, "font-weight: bold", "");
        return null;
      }
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      return (_this$player = this.player)[method].apply(_this$player, args);
    }
    function isMediaStream(url) {
      return typeof window !== "undefined" && typeof window.MediaStream !== "undefined" && url instanceof window.MediaStream;
    }
    function isBlobUrl(url) {
      return /^blob:/.test(url);
    }
    function supportsWebKitPresentationMode() {
      var video = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document.createElement("video");
      var notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;
      return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === "function" && notMobile;
    }
  }
});

// node_modules/react-player/lib/patterns.js
var require_patterns = __commonJS({
  "node_modules/react-player/lib/patterns.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.canPlay = exports.FLV_EXTENSIONS = exports.DASH_EXTENSIONS = exports.HLS_EXTENSIONS = exports.VIDEO_EXTENSIONS = exports.AUDIO_EXTENSIONS = exports.MATCH_URL_KALTURA = exports.MATCH_URL_VIDYARD = exports.MATCH_URL_MIXCLOUD = exports.MATCH_URL_DAILYMOTION = exports.MATCH_URL_TWITCH_CHANNEL = exports.MATCH_URL_TWITCH_VIDEO = exports.MATCH_URL_WISTIA = exports.MATCH_URL_STREAMABLE = exports.MATCH_URL_FACEBOOK_WATCH = exports.MATCH_URL_FACEBOOK = exports.MATCH_URL_VIMEO = exports.MATCH_URL_SOUNDCLOUD = exports.MATCH_URL_YOUTUBE = void 0;
    var _utils = require_utils();
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it;
      if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it)
            o = it;
          var i = 0;
          var F = function F2() {
          };
          return { s: F, n: function n() {
            if (i >= o.length)
              return { done: true };
            return { done: false, value: o[i++] };
          }, e: function e(_e) {
            throw _e;
          }, f: F };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var normalCompletion = true, didErr = false, err;
      return { s: function s() {
        it = o[Symbol.iterator]();
      }, n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      }, e: function e(_e2) {
        didErr = true;
        err = _e2;
      }, f: function f() {
        try {
          if (!normalCompletion && it["return"] != null)
            it["return"]();
        } finally {
          if (didErr)
            throw err;
        }
      } };
    }
    function _unsupportedIterableToArray3(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray3(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray3(o, minLen);
    }
    function _arrayLikeToArray3(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    var MATCH_URL_YOUTUBE = /(?:youtu\.be\/|youtube(?:-nocookie)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=|shorts\/))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//;
    exports.MATCH_URL_YOUTUBE = MATCH_URL_YOUTUBE;
    var MATCH_URL_SOUNDCLOUD = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/;
    exports.MATCH_URL_SOUNDCLOUD = MATCH_URL_SOUNDCLOUD;
    var MATCH_URL_VIMEO = /vimeo\.com\/(?!progressive_redirect).+/;
    exports.MATCH_URL_VIMEO = MATCH_URL_VIMEO;
    var MATCH_URL_FACEBOOK = /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/;
    exports.MATCH_URL_FACEBOOK = MATCH_URL_FACEBOOK;
    var MATCH_URL_FACEBOOK_WATCH = /^https?:\/\/fb\.watch\/.+$/;
    exports.MATCH_URL_FACEBOOK_WATCH = MATCH_URL_FACEBOOK_WATCH;
    var MATCH_URL_STREAMABLE = /streamable\.com\/([a-z0-9]+)$/;
    exports.MATCH_URL_STREAMABLE = MATCH_URL_STREAMABLE;
    var MATCH_URL_WISTIA = /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?(.*)$/;
    exports.MATCH_URL_WISTIA = MATCH_URL_WISTIA;
    var MATCH_URL_TWITCH_VIDEO = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/;
    exports.MATCH_URL_TWITCH_VIDEO = MATCH_URL_TWITCH_VIDEO;
    var MATCH_URL_TWITCH_CHANNEL = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/;
    exports.MATCH_URL_TWITCH_CHANNEL = MATCH_URL_TWITCH_CHANNEL;
    var MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?$/;
    exports.MATCH_URL_DAILYMOTION = MATCH_URL_DAILYMOTION;
    var MATCH_URL_MIXCLOUD = /mixcloud\.com\/([^/]+\/[^/]+)/;
    exports.MATCH_URL_MIXCLOUD = MATCH_URL_MIXCLOUD;
    var MATCH_URL_VIDYARD = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-_]+)/;
    exports.MATCH_URL_VIDYARD = MATCH_URL_VIDYARD;
    var MATCH_URL_KALTURA = /^https?:\/\/[a-zA-Z]+\.kaltura.(com|org)\/p\/([0-9]+)\/sp\/([0-9]+)00\/embedIframeJs\/uiconf_id\/([0-9]+)\/partner_id\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/;
    exports.MATCH_URL_KALTURA = MATCH_URL_KALTURA;
    var AUDIO_EXTENSIONS = /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
    exports.AUDIO_EXTENSIONS = AUDIO_EXTENSIONS;
    var VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i;
    exports.VIDEO_EXTENSIONS = VIDEO_EXTENSIONS;
    var HLS_EXTENSIONS = /\.(m3u8)($|\?)/i;
    exports.HLS_EXTENSIONS = HLS_EXTENSIONS;
    var DASH_EXTENSIONS = /\.(mpd)($|\?)/i;
    exports.DASH_EXTENSIONS = DASH_EXTENSIONS;
    var FLV_EXTENSIONS = /\.(flv)($|\?)/i;
    exports.FLV_EXTENSIONS = FLV_EXTENSIONS;
    var canPlayFile = function canPlayFile2(url) {
      if (url instanceof Array) {
        var _iterator = _createForOfIteratorHelper(url), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var item = _step.value;
            if (typeof item === "string" && canPlayFile2(item)) {
              return true;
            }
            if (canPlayFile2(item.src)) {
              return true;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return false;
      }
      if ((0, _utils.isMediaStream)(url) || (0, _utils.isBlobUrl)(url)) {
        return true;
      }
      return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);
    };
    var canPlay = {
      youtube: function youtube(url) {
        if (url instanceof Array) {
          return url.every(function(item) {
            return MATCH_URL_YOUTUBE.test(item);
          });
        }
        return MATCH_URL_YOUTUBE.test(url);
      },
      soundcloud: function soundcloud(url) {
        return MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url);
      },
      vimeo: function vimeo(url) {
        return MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url);
      },
      facebook: function facebook(url) {
        return MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url);
      },
      streamable: function streamable(url) {
        return MATCH_URL_STREAMABLE.test(url);
      },
      wistia: function wistia(url) {
        return MATCH_URL_WISTIA.test(url);
      },
      twitch: function twitch(url) {
        return MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url);
      },
      dailymotion: function dailymotion(url) {
        return MATCH_URL_DAILYMOTION.test(url);
      },
      mixcloud: function mixcloud(url) {
        return MATCH_URL_MIXCLOUD.test(url);
      },
      vidyard: function vidyard(url) {
        return MATCH_URL_VIDYARD.test(url);
      },
      kaltura: function kaltura(url) {
        return MATCH_URL_KALTURA.test(url);
      },
      file: canPlayFile
    };
    exports.canPlay = canPlay;
  }
});

// node_modules/react-player/lib/players/YouTube.js
var require_YouTube = __commonJS({
  "node_modules/react-player/lib/players/YouTube.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _slicedToArray3(arr, i) {
      return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
    }
    function _nonIterableRest3() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray3(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray3(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray3(o, minLen);
    }
    function _arrayLikeToArray3(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit3(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles3(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://www.youtube.com/iframe_api";
    var SDK_GLOBAL = "YT";
    var SDK_GLOBAL_READY = "onYouTubeIframeAPIReady";
    var MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;
    var MATCH_USER_UPLOADS = /user\/([a-zA-Z0-9_-]+)\/?/;
    var MATCH_NOCOOKIE = /youtube-nocookie\.com/;
    var NOCOOKIE_HOST = "https://www.youtube-nocookie.com";
    var YouTube = function(_Component) {
      _inherits(YouTube2, _Component);
      var _super = _createSuper(YouTube2);
      function YouTube2() {
        var _this;
        _classCallCheck(this, YouTube2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "parsePlaylist", function(url) {
          if (url instanceof Array) {
            return {
              listType: "playlist",
              playlist: url.map(_this.getID).join(",")
            };
          }
          if (MATCH_PLAYLIST.test(url)) {
            var _url$match = url.match(MATCH_PLAYLIST), _url$match2 = _slicedToArray3(_url$match, 2), playlistId = _url$match2[1];
            return {
              listType: "playlist",
              list: playlistId.replace(/^UC/, "UU")
            };
          }
          if (MATCH_USER_UPLOADS.test(url)) {
            var _url$match3 = url.match(MATCH_USER_UPLOADS), _url$match4 = _slicedToArray3(_url$match3, 2), username = _url$match4[1];
            return {
              listType: "user_uploads",
              list: username
            };
          }
          return {};
        });
        _defineProperty3(_assertThisInitialized(_this), "onStateChange", function(event) {
          var data = event.data;
          var _this$props = _this.props, onPlay = _this$props.onPlay, onPause = _this$props.onPause, onBuffer = _this$props.onBuffer, onBufferEnd = _this$props.onBufferEnd, onEnded = _this$props.onEnded, onReady = _this$props.onReady, loop = _this$props.loop, _this$props$config = _this$props.config, playerVars = _this$props$config.playerVars, onUnstarted = _this$props$config.onUnstarted;
          var _window$SDK_GLOBAL$Pl = window[SDK_GLOBAL].PlayerState, UNSTARTED = _window$SDK_GLOBAL$Pl.UNSTARTED, PLAYING = _window$SDK_GLOBAL$Pl.PLAYING, PAUSED = _window$SDK_GLOBAL$Pl.PAUSED, BUFFERING = _window$SDK_GLOBAL$Pl.BUFFERING, ENDED = _window$SDK_GLOBAL$Pl.ENDED, CUED = _window$SDK_GLOBAL$Pl.CUED;
          if (data === UNSTARTED)
            onUnstarted();
          if (data === PLAYING) {
            onPlay();
            onBufferEnd();
          }
          if (data === PAUSED)
            onPause();
          if (data === BUFFERING)
            onBuffer();
          if (data === ENDED) {
            var isPlaylist = !!_this.callPlayer("getPlaylist");
            if (loop && !isPlaylist) {
              if (playerVars.start) {
                _this.seekTo(playerVars.start);
              } else {
                _this.play();
              }
            }
            onEnded();
          }
          if (data === CUED)
            onReady();
        });
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("mute");
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("unMute");
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(container) {
          _this.container = container;
        });
        return _this;
      }
      _createClass(YouTube2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "getID",
        value: function getID(url) {
          if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {
            return null;
          }
          return url.match(_patterns.MATCH_URL_YOUTUBE)[1];
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;
          var _this$props2 = this.props, playing = _this$props2.playing, muted = _this$props2.muted, playsinline = _this$props2.playsinline, controls = _this$props2.controls, loop = _this$props2.loop, config = _this$props2.config, _onError = _this$props2.onError;
          var playerVars = config.playerVars, embedOptions = config.embedOptions;
          var id = this.getID(url);
          if (isReady) {
            if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {
              this.player.loadPlaylist(this.parsePlaylist(url));
              return;
            }
            this.player.cueVideoById({
              videoId: id,
              startSeconds: (0, _utils.parseStartTime)(url) || playerVars.start,
              endSeconds: (0, _utils.parseEndTime)(url) || playerVars.end
            });
            return;
          }
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function(YT) {
            return YT.loaded;
          }).then(function(YT) {
            if (!_this2.container)
              return;
            _this2.player = new YT.Player(_this2.container, _objectSpread3({
              width: "100%",
              height: "100%",
              videoId: id,
              playerVars: _objectSpread3(_objectSpread3({
                autoplay: playing ? 1 : 0,
                mute: muted ? 1 : 0,
                controls: controls ? 1 : 0,
                start: (0, _utils.parseStartTime)(url),
                end: (0, _utils.parseEndTime)(url),
                origin: window.location.origin,
                playsinline: playsinline ? 1 : 0
              }, _this2.parsePlaylist(url)), playerVars),
              events: {
                onReady: function onReady() {
                  if (loop) {
                    _this2.player.setLoop(true);
                  }
                  _this2.props.onReady();
                },
                onPlaybackRateChange: function onPlaybackRateChange(event) {
                  return _this2.props.onPlaybackRateChange(event.data);
                },
                onStateChange: _this2.onStateChange,
                onError: function onError2(event) {
                  return _onError(event.data);
                }
              },
              host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0
            }, embedOptions));
          }, _onError);
          if (embedOptions.events) {
            console.warn("Using `embedOptions.events` will likely break things. Use ReactPlayer’s callback props instead, eg onReady, onPlay, onPause");
          }
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("playVideo");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pauseVideo");
        }
      }, {
        key: "stop",
        value: function stop() {
          if (!document.body.contains(this.callPlayer("getIframe")))
            return;
          this.callPlayer("stopVideo");
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount) {
          this.callPlayer("seekTo", amount);
          if (!this.props.playing) {
            this.pause();
          }
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction * 100);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer("setPlaybackRate", rate);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer("setLoop", loop);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer("getDuration");
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer("getCurrentTime");
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.callPlayer("getVideoLoadedFraction") * this.getDuration();
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: "100%",
            height: "100%",
            display
          };
          return _react["default"].createElement("div", {
            style
          }, _react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);
      return YouTube2;
    }(_react.Component);
    exports["default"] = YouTube;
    _defineProperty3(YouTube, "displayName", "YouTube");
    _defineProperty3(YouTube, "canPlay", _patterns.canPlay.youtube);
  }
});

// node_modules/react-player/lib/players/SoundCloud.js
var require_SoundCloud = __commonJS({
  "node_modules/react-player/lib/players/SoundCloud.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://w.soundcloud.com/player/api.js";
    var SDK_GLOBAL = "SC";
    var SoundCloud = function(_Component) {
      _inherits(SoundCloud2, _Component);
      var _super = _createSuper(SoundCloud2);
      function SoundCloud2() {
        var _this;
        _classCallCheck(this, SoundCloud2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "duration", null);
        _defineProperty3(_assertThisInitialized(_this), "currentTime", null);
        _defineProperty3(_assertThisInitialized(_this), "fractionLoaded", null);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.setVolume(0);
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(iframe) {
          _this.iframe = iframe;
        });
        return _this;
      }
      _createClass(SoundCloud2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(SC) {
            if (!_this2.iframe)
              return;
            var _SC$Widget$Events = SC.Widget.Events, PLAY = _SC$Widget$Events.PLAY, PLAY_PROGRESS = _SC$Widget$Events.PLAY_PROGRESS, PAUSE = _SC$Widget$Events.PAUSE, FINISH = _SC$Widget$Events.FINISH, ERROR = _SC$Widget$Events.ERROR;
            if (!isReady) {
              _this2.player = SC.Widget(_this2.iframe);
              _this2.player.bind(PLAY, _this2.props.onPlay);
              _this2.player.bind(PAUSE, function() {
                var remaining = _this2.duration - _this2.currentTime;
                if (remaining < 0.05) {
                  return;
                }
                _this2.props.onPause();
              });
              _this2.player.bind(PLAY_PROGRESS, function(e) {
                _this2.currentTime = e.currentPosition / 1e3;
                _this2.fractionLoaded = e.loadedProgress;
              });
              _this2.player.bind(FINISH, function() {
                return _this2.props.onEnded();
              });
              _this2.player.bind(ERROR, function(e) {
                return _this2.props.onError(e);
              });
            }
            _this2.player.load(url, _objectSpread3(_objectSpread3({}, _this2.props.config.options), {}, {
              callback: function callback() {
                _this2.player.getDuration(function(duration) {
                  _this2.duration = duration / 1e3;
                  _this2.props.onReady();
                });
              }
            }));
          });
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("seekTo", seconds * 1e3);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction * 100);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.fractionLoaded * this.duration;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: "100%",
            height: "100%",
            display
          };
          return _react["default"].createElement("iframe", {
            ref: this.ref,
            src: "https://w.soundcloud.com/player/?url=".concat(encodeURIComponent(this.props.url)),
            style,
            frameBorder: 0,
            allow: "autoplay"
          });
        }
      }]);
      return SoundCloud2;
    }(_react.Component);
    exports["default"] = SoundCloud;
    _defineProperty3(SoundCloud, "displayName", "SoundCloud");
    _defineProperty3(SoundCloud, "canPlay", _patterns.canPlay.soundcloud);
    _defineProperty3(SoundCloud, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/Vimeo.js
var require_Vimeo = __commonJS({
  "node_modules/react-player/lib/players/Vimeo.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://player.vimeo.com/api/player.js";
    var SDK_GLOBAL = "Vimeo";
    var Vimeo = function(_Component) {
      _inherits(Vimeo2, _Component);
      var _super = _createSuper(Vimeo2);
      function Vimeo2() {
        var _this;
        _classCallCheck(this, Vimeo2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "duration", null);
        _defineProperty3(_assertThisInitialized(_this), "currentTime", null);
        _defineProperty3(_assertThisInitialized(_this), "secondsLoaded", null);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.setVolume(0);
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(container) {
          _this.container = container;
        });
        return _this;
      }
      _createClass(Vimeo2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          this.duration = null;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Vimeo3) {
            if (!_this2.container)
              return;
            var _this2$props$config = _this2.props.config, playerOptions = _this2$props$config.playerOptions, title = _this2$props$config.title;
            _this2.player = new Vimeo3.Player(_this2.container, _objectSpread3({
              url,
              autoplay: _this2.props.playing,
              muted: _this2.props.muted,
              loop: _this2.props.loop,
              playsinline: _this2.props.playsinline,
              controls: _this2.props.controls
            }, playerOptions));
            _this2.player.ready().then(function() {
              var iframe = _this2.container.querySelector("iframe");
              iframe.style.width = "100%";
              iframe.style.height = "100%";
              if (title) {
                iframe.title = title;
              }
            })["catch"](_this2.props.onError);
            _this2.player.on("loaded", function() {
              _this2.props.onReady();
              _this2.refreshDuration();
            });
            _this2.player.on("play", function() {
              _this2.props.onPlay();
              _this2.refreshDuration();
            });
            _this2.player.on("pause", _this2.props.onPause);
            _this2.player.on("seeked", function(e) {
              return _this2.props.onSeek(e.seconds);
            });
            _this2.player.on("ended", _this2.props.onEnded);
            _this2.player.on("error", _this2.props.onError);
            _this2.player.on("timeupdate", function(_ref) {
              var seconds = _ref.seconds;
              _this2.currentTime = seconds;
            });
            _this2.player.on("progress", function(_ref2) {
              var seconds = _ref2.seconds;
              _this2.secondsLoaded = seconds;
            });
            _this2.player.on("bufferstart", _this2.props.onBuffer);
            _this2.player.on("bufferend", _this2.props.onBufferEnd);
          }, this.props.onError);
        }
      }, {
        key: "refreshDuration",
        value: function refreshDuration() {
          var _this3 = this;
          this.player.getDuration().then(function(duration) {
            _this3.duration = duration;
          });
        }
      }, {
        key: "play",
        value: function play() {
          var promise = this.callPlayer("play");
          if (promise) {
            promise["catch"](this.props.onError);
          }
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
          this.callPlayer("unload");
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("setCurrentTime", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer("setLoop", loop);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer("setPlaybackRate", rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.secondsLoaded;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: "100%",
            height: "100%",
            overflow: "hidden",
            display
          };
          return _react["default"].createElement("div", {
            key: this.props.url,
            ref: this.ref,
            style
          });
        }
      }]);
      return Vimeo2;
    }(_react.Component);
    exports["default"] = Vimeo;
    _defineProperty3(Vimeo, "displayName", "Vimeo");
    _defineProperty3(Vimeo, "canPlay", _patterns.canPlay.vimeo);
    _defineProperty3(Vimeo, "forceLoad", true);
  }
});

// node_modules/react-player/lib/players/Facebook.js
var require_Facebook = __commonJS({
  "node_modules/react-player/lib/players/Facebook.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://connect.facebook.net/en_US/sdk.js";
    var SDK_GLOBAL = "FB";
    var SDK_GLOBAL_READY = "fbAsyncInit";
    var PLAYER_ID_PREFIX = "facebook-player-";
    var Facebook = function(_Component) {
      _inherits(Facebook2, _Component);
      var _super = _createSuper(Facebook2);
      function Facebook2() {
        var _this;
        _classCallCheck(this, Facebook2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("mute");
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("unmute");
        });
        return _this;
      }
      _createClass(Facebook2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;
          if (isReady) {
            (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(FB) {
              return FB.XFBML.parse();
            });
            return;
          }
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(FB) {
            FB.init({
              appId: _this2.props.config.appId,
              xfbml: true,
              version: _this2.props.config.version
            });
            FB.Event.subscribe("xfbml.render", function(msg) {
              _this2.props.onLoaded();
            });
            FB.Event.subscribe("xfbml.ready", function(msg) {
              if (msg.type === "video" && msg.id === _this2.playerID) {
                _this2.player = msg.instance;
                _this2.player.subscribe("startedPlaying", _this2.props.onPlay);
                _this2.player.subscribe("paused", _this2.props.onPause);
                _this2.player.subscribe("finishedPlaying", _this2.props.onEnded);
                _this2.player.subscribe("startedBuffering", _this2.props.onBuffer);
                _this2.player.subscribe("finishedBuffering", _this2.props.onBufferEnd);
                _this2.player.subscribe("error", _this2.props.onError);
                if (_this2.props.muted) {
                  _this2.callPlayer("mute");
                } else {
                  _this2.callPlayer("unmute");
                }
                _this2.props.onReady();
                document.getElementById(_this2.playerID).querySelector("iframe").style.visibility = "visible";
              }
            });
          });
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("seek", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer("getDuration");
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer("getCurrentPosition");
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var attributes = this.props.config.attributes;
          var style = {
            width: "100%",
            height: "100%"
          };
          return _react["default"].createElement("div", _extends2({
            style,
            id: this.playerID,
            className: "fb-video",
            "data-href": this.props.url,
            "data-autoplay": this.props.playing ? "true" : "false",
            "data-allowfullscreen": "true",
            "data-controls": this.props.controls ? "true" : "false"
          }, attributes));
        }
      }]);
      return Facebook2;
    }(_react.Component);
    exports["default"] = Facebook;
    _defineProperty3(Facebook, "displayName", "Facebook");
    _defineProperty3(Facebook, "canPlay", _patterns.canPlay.facebook);
    _defineProperty3(Facebook, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/Streamable.js
var require_Streamable = __commonJS({
  "node_modules/react-player/lib/players/Streamable.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://cdn.embed.ly/player-0.1.0.min.js";
    var SDK_GLOBAL = "playerjs";
    var Streamable = function(_Component) {
      _inherits(Streamable2, _Component);
      var _super = _createSuper(Streamable2);
      function Streamable2() {
        var _this;
        _classCallCheck(this, Streamable2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "duration", null);
        _defineProperty3(_assertThisInitialized(_this), "currentTime", null);
        _defineProperty3(_assertThisInitialized(_this), "secondsLoaded", null);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("mute");
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("unmute");
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(iframe) {
          _this.iframe = iframe;
        });
        return _this;
      }
      _createClass(Streamable2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(playerjs) {
            if (!_this2.iframe)
              return;
            _this2.player = new playerjs.Player(_this2.iframe);
            _this2.player.setLoop(_this2.props.loop);
            _this2.player.on("ready", _this2.props.onReady);
            _this2.player.on("play", _this2.props.onPlay);
            _this2.player.on("pause", _this2.props.onPause);
            _this2.player.on("seeked", _this2.props.onSeek);
            _this2.player.on("ended", _this2.props.onEnded);
            _this2.player.on("error", _this2.props.onError);
            _this2.player.on("timeupdate", function(_ref) {
              var duration = _ref.duration, seconds = _ref.seconds;
              _this2.duration = duration;
              _this2.currentTime = seconds;
            });
            _this2.player.on("buffered", function(_ref2) {
              var percent = _ref2.percent;
              if (_this2.duration) {
                _this2.secondsLoaded = _this2.duration * percent;
              }
            });
            if (_this2.props.muted) {
              _this2.player.mute();
            }
          }, this.props.onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("setCurrentTime", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction * 100);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer("setLoop", loop);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.secondsLoaded;
        }
      }, {
        key: "render",
        value: function render() {
          var id = this.props.url.match(_patterns.MATCH_URL_STREAMABLE)[1];
          var style = {
            width: "100%",
            height: "100%"
          };
          return _react["default"].createElement("iframe", {
            ref: this.ref,
            src: "https://streamable.com/o/".concat(id),
            frameBorder: "0",
            scrolling: "no",
            style,
            allow: "encrypted-media; autoplay; fullscreen;"
          });
        }
      }]);
      return Streamable2;
    }(_react.Component);
    exports["default"] = Streamable;
    _defineProperty3(Streamable, "displayName", "Streamable");
    _defineProperty3(Streamable, "canPlay", _patterns.canPlay.streamable);
  }
});

// node_modules/react-player/lib/players/Wistia.js
var require_Wistia = __commonJS({
  "node_modules/react-player/lib/players/Wistia.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://fast.wistia.com/assets/external/E-v1.js";
    var SDK_GLOBAL = "Wistia";
    var PLAYER_ID_PREFIX = "wistia-player-";
    var Wistia = function(_Component) {
      _inherits(Wistia2, _Component);
      var _super = _createSuper(Wistia2);
      function Wistia2() {
        var _this;
        _classCallCheck(this, Wistia2);
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(_args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
        _defineProperty3(_assertThisInitialized(_this), "onPlay", function() {
          var _this$props;
          return (_this$props = _this.props).onPlay.apply(_this$props, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onPause", function() {
          var _this$props2;
          return (_this$props2 = _this.props).onPause.apply(_this$props2, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onSeek", function() {
          var _this$props3;
          return (_this$props3 = _this.props).onSeek.apply(_this$props3, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onEnded", function() {
          var _this$props4;
          return (_this$props4 = _this.props).onEnded.apply(_this$props4, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onPlaybackRateChange", function() {
          var _this$props5;
          return (_this$props5 = _this.props).onPlaybackRateChange.apply(_this$props5, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("mute");
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("unmute");
        });
        return _this;
      }
      _createClass(Wistia2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          var _this$props6 = this.props, playing = _this$props6.playing, muted = _this$props6.muted, controls = _this$props6.controls, _onReady = _this$props6.onReady, config = _this$props6.config, onError2 = _this$props6.onError;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Wistia3) {
            if (config.customControls) {
              config.customControls.forEach(function(control) {
                return Wistia3.defineControl(control);
              });
            }
            window._wq = window._wq || [];
            window._wq.push({
              id: _this2.playerID,
              options: _objectSpread3({
                autoPlay: playing,
                silentAutoPlay: "allow",
                muted,
                controlsVisibleOnLoad: controls,
                fullscreenButton: controls,
                playbar: controls,
                playbackRateControl: controls,
                qualityControl: controls,
                volumeControl: controls,
                settingsControl: controls,
                smallPlayButton: controls
              }, config.options),
              onReady: function onReady(player) {
                _this2.player = player;
                _this2.unbind();
                _this2.player.bind("play", _this2.onPlay);
                _this2.player.bind("pause", _this2.onPause);
                _this2.player.bind("seek", _this2.onSeek);
                _this2.player.bind("end", _this2.onEnded);
                _this2.player.bind("playbackratechange", _this2.onPlaybackRateChange);
                _onReady();
              }
            });
          }, onError2);
        }
      }, {
        key: "unbind",
        value: function unbind() {
          this.player.unbind("play", this.onPlay);
          this.player.unbind("pause", this.onPause);
          this.player.unbind("seek", this.onSeek);
          this.player.unbind("end", this.onEnded);
          this.player.unbind("playbackratechange", this.onPlaybackRateChange);
        }
        // Proxy methods to prevent listener leaks
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
          this.unbind();
          this.callPlayer("remove");
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("time", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("volume", fraction);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer("playbackRate", rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer("duration");
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer("time");
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var url = this.props.url;
          var videoID = url && url.match(_patterns.MATCH_URL_WISTIA)[1];
          var className = "wistia_embed wistia_async_".concat(videoID);
          var style = {
            width: "100%",
            height: "100%"
          };
          return _react["default"].createElement("div", {
            id: this.playerID,
            key: videoID,
            className,
            style
          });
        }
      }]);
      return Wistia2;
    }(_react.Component);
    exports["default"] = Wistia;
    _defineProperty3(Wistia, "displayName", "Wistia");
    _defineProperty3(Wistia, "canPlay", _patterns.canPlay.wistia);
    _defineProperty3(Wistia, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/Twitch.js
var require_Twitch = __commonJS({
  "node_modules/react-player/lib/players/Twitch.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://player.twitch.tv/js/embed/v1.js";
    var SDK_GLOBAL = "Twitch";
    var PLAYER_ID_PREFIX = "twitch-player-";
    var Twitch = function(_Component) {
      _inherits(Twitch2, _Component);
      var _super = _createSuper(Twitch2);
      function Twitch2() {
        var _this;
        _classCallCheck(this, Twitch2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("setMuted", true);
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("setMuted", false);
        });
        return _this;
      }
      _createClass(Twitch2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url, isReady) {
          var _this2 = this;
          var _this$props = this.props, playsinline = _this$props.playsinline, onError2 = _this$props.onError, config = _this$props.config, controls = _this$props.controls;
          var isChannel2 = _patterns.MATCH_URL_TWITCH_CHANNEL.test(url);
          var id = isChannel2 ? url.match(_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(_patterns.MATCH_URL_TWITCH_VIDEO)[1];
          if (isReady) {
            if (isChannel2) {
              this.player.setChannel(id);
            } else {
              this.player.setVideo("v" + id);
            }
            return;
          }
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Twitch3) {
            _this2.player = new Twitch3.Player(_this2.playerID, _objectSpread3({
              video: isChannel2 ? "" : id,
              channel: isChannel2 ? id : "",
              height: "100%",
              width: "100%",
              playsinline,
              autoplay: _this2.props.playing,
              muted: _this2.props.muted,
              // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859
              controls: isChannel2 ? true : controls,
              time: (0, _utils.parseStartTime)(url)
            }, config.options));
            var _Twitch$Player = Twitch3.Player, READY = _Twitch$Player.READY, PLAYING = _Twitch$Player.PLAYING, PAUSE = _Twitch$Player.PAUSE, ENDED = _Twitch$Player.ENDED, ONLINE = _Twitch$Player.ONLINE, OFFLINE = _Twitch$Player.OFFLINE, SEEK = _Twitch$Player.SEEK;
            _this2.player.addEventListener(READY, _this2.props.onReady);
            _this2.player.addEventListener(PLAYING, _this2.props.onPlay);
            _this2.player.addEventListener(PAUSE, _this2.props.onPause);
            _this2.player.addEventListener(ENDED, _this2.props.onEnded);
            _this2.player.addEventListener(SEEK, _this2.props.onSeek);
            _this2.player.addEventListener(ONLINE, _this2.props.onLoaded);
            _this2.player.addEventListener(OFFLINE, _this2.props.onLoaded);
          }, onError2);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
          this.callPlayer("pause");
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("seek", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.callPlayer("getDuration");
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer("getCurrentTime");
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var style = {
            width: "100%",
            height: "100%"
          };
          return _react["default"].createElement("div", {
            style,
            id: this.playerID
          });
        }
      }]);
      return Twitch2;
    }(_react.Component);
    exports["default"] = Twitch;
    _defineProperty3(Twitch, "displayName", "Twitch");
    _defineProperty3(Twitch, "canPlay", _patterns.canPlay.twitch);
    _defineProperty3(Twitch, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/DailyMotion.js
var require_DailyMotion = __commonJS({
  "node_modules/react-player/lib/players/DailyMotion.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _slicedToArray3(arr, i) {
      return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
    }
    function _nonIterableRest3() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray3(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray3(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray3(o, minLen);
    }
    function _arrayLikeToArray3(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit3(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles3(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://api.dmcdn.net/all.js";
    var SDK_GLOBAL = "DM";
    var SDK_GLOBAL_READY = "dmAsyncInit";
    var DailyMotion = function(_Component) {
      _inherits(DailyMotion2, _Component);
      var _super = _createSuper(DailyMotion2);
      function DailyMotion2() {
        var _this;
        _classCallCheck(this, DailyMotion2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "onDurationChange", function() {
          var duration = _this.getDuration();
          _this.props.onDuration(duration);
        });
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("setMuted", true);
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("setMuted", false);
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(container) {
          _this.container = container;
        });
        return _this;
      }
      _createClass(DailyMotion2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          var _this$props = this.props, controls = _this$props.controls, config = _this$props.config, onError2 = _this$props.onError, playing = _this$props.playing;
          var _url$match = url.match(_patterns.MATCH_URL_DAILYMOTION), _url$match2 = _slicedToArray3(_url$match, 2), id = _url$match2[1];
          if (this.player) {
            this.player.load(id, {
              start: (0, _utils.parseStartTime)(url),
              autoplay: playing
            });
            return;
          }
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function(DM) {
            return DM.player;
          }).then(function(DM) {
            if (!_this2.container)
              return;
            var Player = DM.player;
            _this2.player = new Player(_this2.container, {
              width: "100%",
              height: "100%",
              video: id,
              params: _objectSpread3({
                controls,
                autoplay: _this2.props.playing,
                mute: _this2.props.muted,
                start: (0, _utils.parseStartTime)(url),
                origin: window.location.origin
              }, config.params),
              events: {
                apiready: _this2.props.onReady,
                seeked: function seeked() {
                  return _this2.props.onSeek(_this2.player.currentTime);
                },
                video_end: _this2.props.onEnded,
                durationchange: _this2.onDurationChange,
                pause: _this2.props.onPause,
                playing: _this2.props.onPlay,
                waiting: _this2.props.onBuffer,
                error: function error(event) {
                  return onError2(event);
                }
              }
            });
          }, onError2);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("seek", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.player.duration || null;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.player.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.player.bufferedTime;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: "100%",
            height: "100%",
            display
          };
          return _react["default"].createElement("div", {
            style
          }, _react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);
      return DailyMotion2;
    }(_react.Component);
    exports["default"] = DailyMotion;
    _defineProperty3(DailyMotion, "displayName", "DailyMotion");
    _defineProperty3(DailyMotion, "canPlay", _patterns.canPlay.dailymotion);
    _defineProperty3(DailyMotion, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/Mixcloud.js
var require_Mixcloud = __commonJS({
  "node_modules/react-player/lib/players/Mixcloud.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://widget.mixcloud.com/media/js/widgetApi.js";
    var SDK_GLOBAL = "Mixcloud";
    var Mixcloud = function(_Component) {
      _inherits(Mixcloud2, _Component);
      var _super = _createSuper(Mixcloud2);
      function Mixcloud2() {
        var _this;
        _classCallCheck(this, Mixcloud2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "duration", null);
        _defineProperty3(_assertThisInitialized(_this), "currentTime", null);
        _defineProperty3(_assertThisInitialized(_this), "secondsLoaded", null);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(iframe) {
          _this.iframe = iframe;
        });
        return _this;
      }
      _createClass(Mixcloud2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Mixcloud3) {
            _this2.player = Mixcloud3.PlayerWidget(_this2.iframe);
            _this2.player.ready.then(function() {
              _this2.player.events.play.on(_this2.props.onPlay);
              _this2.player.events.pause.on(_this2.props.onPause);
              _this2.player.events.ended.on(_this2.props.onEnded);
              _this2.player.events.error.on(_this2.props.error);
              _this2.player.events.progress.on(function(seconds, duration) {
                _this2.currentTime = seconds;
                _this2.duration = duration;
              });
              _this2.props.onReady();
            });
          }, this.props.onError);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("seek", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, url = _this$props.url, config = _this$props.config;
          var id = url.match(_patterns.MATCH_URL_MIXCLOUD)[1];
          var style = {
            width: "100%",
            height: "100%"
          };
          var query = (0, _utils.queryString)(_objectSpread3(_objectSpread3({}, config.options), {}, {
            feed: "/".concat(id, "/")
          }));
          return _react["default"].createElement("iframe", {
            key: id,
            ref: this.ref,
            style,
            src: "https://www.mixcloud.com/widget/iframe/?".concat(query),
            frameBorder: "0"
          });
        }
      }]);
      return Mixcloud2;
    }(_react.Component);
    exports["default"] = Mixcloud;
    _defineProperty3(Mixcloud, "displayName", "Mixcloud");
    _defineProperty3(Mixcloud, "canPlay", _patterns.canPlay.mixcloud);
    _defineProperty3(Mixcloud, "loopOnEnded", true);
  }
});

// node_modules/react-player/lib/players/Vidyard.js
var require_Vidyard = __commonJS({
  "node_modules/react-player/lib/players/Vidyard.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://play.vidyard.com/embed/v4.js";
    var SDK_GLOBAL = "VidyardV4";
    var SDK_GLOBAL_READY = "onVidyardAPI";
    var Vidyard = function(_Component) {
      _inherits(Vidyard2, _Component);
      var _super = _createSuper(Vidyard2);
      function Vidyard2() {
        var _this;
        _classCallCheck(this, Vidyard2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.setVolume(0);
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          if (_this.props.volume !== null) {
            _this.setVolume(_this.props.volume);
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(container) {
          _this.container = container;
        });
        return _this;
      }
      _createClass(Vidyard2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          var _this$props = this.props, playing = _this$props.playing, config = _this$props.config, onError2 = _this$props.onError, onDuration = _this$props.onDuration;
          var id = url && url.match(_patterns.MATCH_URL_VIDYARD)[1];
          if (this.player) {
            this.stop();
          }
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(Vidyard3) {
            if (!_this2.container)
              return;
            Vidyard3.api.addReadyListener(function(data, player) {
              if (_this2.player) {
                return;
              }
              _this2.player = player;
              _this2.player.on("ready", _this2.props.onReady);
              _this2.player.on("play", _this2.props.onPlay);
              _this2.player.on("pause", _this2.props.onPause);
              _this2.player.on("seek", _this2.props.onSeek);
              _this2.player.on("playerComplete", _this2.props.onEnded);
            }, id);
            Vidyard3.api.renderPlayer(_objectSpread3({
              uuid: id,
              container: _this2.container,
              autoplay: playing ? 1 : 0
            }, config.options));
            Vidyard3.api.getPlayerMetadata(id).then(function(meta) {
              _this2.duration = meta.length_in_seconds;
              onDuration(meta.length_in_seconds);
            });
          }, onError2);
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
          window.VidyardV4.api.destroyPlayer(this.player);
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount) {
          this.callPlayer("seek", amount);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          this.callPlayer("setPlaybackSpeed", rate);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.callPlayer("currentTime");
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return null;
        }
      }, {
        key: "render",
        value: function render() {
          var display = this.props.display;
          var style = {
            width: "100%",
            height: "100%",
            display
          };
          return _react["default"].createElement("div", {
            style
          }, _react["default"].createElement("div", {
            ref: this.ref
          }));
        }
      }]);
      return Vidyard2;
    }(_react.Component);
    exports["default"] = Vidyard;
    _defineProperty3(Vidyard, "displayName", "Vidyard");
    _defineProperty3(Vidyard, "canPlay", _patterns.canPlay.vidyard);
  }
});

// node_modules/react-player/lib/players/Kaltura.js
var require_Kaltura = __commonJS({
  "node_modules/react-player/lib/players/Kaltura.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SDK_URL = "https://cdn.embed.ly/player-0.1.0.min.js";
    var SDK_GLOBAL = "playerjs";
    var Kaltura = function(_Component) {
      _inherits(Kaltura2, _Component);
      var _super = _createSuper(Kaltura2);
      function Kaltura2() {
        var _this;
        _classCallCheck(this, Kaltura2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
        _defineProperty3(_assertThisInitialized(_this), "duration", null);
        _defineProperty3(_assertThisInitialized(_this), "currentTime", null);
        _defineProperty3(_assertThisInitialized(_this), "secondsLoaded", null);
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.callPlayer("mute");
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.callPlayer("unmute");
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(iframe) {
          _this.iframe = iframe;
        });
        return _this;
      }
      _createClass(Kaltura2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(playerjs) {
            if (!_this2.iframe)
              return;
            _this2.player = new playerjs.Player(_this2.iframe);
            _this2.player.on("ready", function() {
              setTimeout(function() {
                _this2.player.isReady = true;
                _this2.player.setLoop(_this2.props.loop);
                if (_this2.props.muted) {
                  _this2.player.mute();
                }
                _this2.addListeners(_this2.player, _this2.props);
                _this2.props.onReady();
              }, 500);
            });
          }, this.props.onError);
        }
      }, {
        key: "addListeners",
        value: function addListeners(player, props) {
          var _this3 = this;
          player.on("play", props.onPlay);
          player.on("pause", props.onPause);
          player.on("ended", props.onEnded);
          player.on("error", props.onError);
          player.on("timeupdate", function(_ref) {
            var duration = _ref.duration, seconds = _ref.seconds;
            _this3.duration = duration;
            _this3.currentTime = seconds;
          });
        }
      }, {
        key: "play",
        value: function play() {
          this.callPlayer("play");
        }
      }, {
        key: "pause",
        value: function pause() {
          this.callPlayer("pause");
        }
      }, {
        key: "stop",
        value: function stop() {
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.callPlayer("setCurrentTime", seconds);
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.callPlayer("setVolume", fraction);
        }
      }, {
        key: "setLoop",
        value: function setLoop(loop) {
          this.callPlayer("setLoop", loop);
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          return this.duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          return this.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          return this.secondsLoaded;
        }
      }, {
        key: "render",
        value: function render() {
          var style = {
            width: "100%",
            height: "100%"
          };
          return _react["default"].createElement("iframe", {
            ref: this.ref,
            src: this.props.url,
            frameBorder: "0",
            scrolling: "no",
            style,
            allow: "encrypted-media; autoplay; fullscreen;",
            referrerPolicy: "no-referrer-when-downgrade"
          });
        }
      }]);
      return Kaltura2;
    }(_react.Component);
    exports["default"] = Kaltura;
    _defineProperty3(Kaltura, "displayName", "Kaltura");
    _defineProperty3(Kaltura, "canPlay", _patterns.canPlay.kaltura);
  }
});

// node_modules/react-player/lib/players/FilePlayer.js
var require_FilePlayer = __commonJS({
  "node_modules/react-player/lib/players/FilePlayer.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var HAS_NAVIGATOR = typeof navigator !== "undefined";
    var IS_IPAD_PRO = HAS_NAVIGATOR && navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1;
    var IS_IOS = HAS_NAVIGATOR && (/iPad|iPhone|iPod/.test(navigator.userAgent) || IS_IPAD_PRO) && !window.MSStream;
    var HLS_SDK_URL = "https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js";
    var HLS_GLOBAL = "Hls";
    var DASH_SDK_URL = "https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js";
    var DASH_GLOBAL = "dashjs";
    var FLV_SDK_URL = "https://cdn.jsdelivr.net/npm/flv.js@VERSION/dist/flv.min.js";
    var FLV_GLOBAL = "flvjs";
    var MATCH_DROPBOX_URL = /www\.dropbox\.com\/.+/;
    var MATCH_CLOUDFLARE_STREAM = /https:\/\/watch\.cloudflarestream\.com\/([a-z0-9]+)/;
    var REPLACE_CLOUDFLARE_STREAM = "https://videodelivery.net/{id}/manifest/video.m3u8";
    var FilePlayer = function(_Component) {
      _inherits(FilePlayer2, _Component);
      var _super = _createSuper(FilePlayer2);
      function FilePlayer2() {
        var _this;
        _classCallCheck(this, FilePlayer2);
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(_args));
        _defineProperty3(_assertThisInitialized(_this), "onReady", function() {
          var _this$props;
          return (_this$props = _this.props).onReady.apply(_this$props, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onPlay", function() {
          var _this$props2;
          return (_this$props2 = _this.props).onPlay.apply(_this$props2, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onBuffer", function() {
          var _this$props3;
          return (_this$props3 = _this.props).onBuffer.apply(_this$props3, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onBufferEnd", function() {
          var _this$props4;
          return (_this$props4 = _this.props).onBufferEnd.apply(_this$props4, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onPause", function() {
          var _this$props5;
          return (_this$props5 = _this.props).onPause.apply(_this$props5, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onEnded", function() {
          var _this$props6;
          return (_this$props6 = _this.props).onEnded.apply(_this$props6, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onError", function() {
          var _this$props7;
          return (_this$props7 = _this.props).onError.apply(_this$props7, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onPlayBackRateChange", function(event) {
          return _this.props.onPlaybackRateChange(event.target.playbackRate);
        });
        _defineProperty3(_assertThisInitialized(_this), "onEnablePIP", function() {
          var _this$props8;
          return (_this$props8 = _this.props).onEnablePIP.apply(_this$props8, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "onDisablePIP", function(e) {
          var _this$props9 = _this.props, onDisablePIP = _this$props9.onDisablePIP, playing = _this$props9.playing;
          onDisablePIP(e);
          if (playing) {
            _this.play();
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "onPresentationModeChange", function(e) {
          if (_this.player && (0, _utils.supportsWebKitPresentationMode)(_this.player)) {
            var webkitPresentationMode = _this.player.webkitPresentationMode;
            if (webkitPresentationMode === "picture-in-picture") {
              _this.onEnablePIP(e);
            } else if (webkitPresentationMode === "inline") {
              _this.onDisablePIP(e);
            }
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "onSeek", function(e) {
          _this.props.onSeek(e.target.currentTime);
        });
        _defineProperty3(_assertThisInitialized(_this), "mute", function() {
          _this.player.muted = true;
        });
        _defineProperty3(_assertThisInitialized(_this), "unmute", function() {
          _this.player.muted = false;
        });
        _defineProperty3(_assertThisInitialized(_this), "renderSourceElement", function(source, index5) {
          if (typeof source === "string") {
            return _react["default"].createElement("source", {
              key: index5,
              src: source
            });
          }
          return _react["default"].createElement("source", _extends2({
            key: index5
          }, source));
        });
        _defineProperty3(_assertThisInitialized(_this), "renderTrack", function(track2, index5) {
          return _react["default"].createElement("track", _extends2({
            key: index5
          }, track2));
        });
        _defineProperty3(_assertThisInitialized(_this), "ref", function(player) {
          if (_this.player) {
            _this.prevPlayer = _this.player;
          }
          _this.player = player;
        });
        return _this;
      }
      _createClass(FilePlayer2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.onMount && this.props.onMount(this);
          this.addListeners(this.player);
          if (IS_IOS) {
            this.player.load();
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {
            this.removeListeners(this.prevPlayer, prevProps.url);
            this.addListeners(this.player);
          }
          if (this.props.url !== prevProps.url && !(0, _utils.isMediaStream)(this.props.url)) {
            this.player.srcObject = null;
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.removeListeners(this.player);
          if (this.hls) {
            this.hls.destroy();
          }
        }
      }, {
        key: "addListeners",
        value: function addListeners(player) {
          var _this$props10 = this.props, url = _this$props10.url, playsinline = _this$props10.playsinline;
          player.addEventListener("play", this.onPlay);
          player.addEventListener("waiting", this.onBuffer);
          player.addEventListener("playing", this.onBufferEnd);
          player.addEventListener("pause", this.onPause);
          player.addEventListener("seeked", this.onSeek);
          player.addEventListener("ended", this.onEnded);
          player.addEventListener("error", this.onError);
          player.addEventListener("ratechange", this.onPlayBackRateChange);
          player.addEventListener("enterpictureinpicture", this.onEnablePIP);
          player.addEventListener("leavepictureinpicture", this.onDisablePIP);
          player.addEventListener("webkitpresentationmodechanged", this.onPresentationModeChange);
          if (!this.shouldUseHLS(url)) {
            player.addEventListener("canplay", this.onReady);
          }
          if (playsinline) {
            player.setAttribute("playsinline", "");
            player.setAttribute("webkit-playsinline", "");
            player.setAttribute("x5-playsinline", "");
          }
        }
      }, {
        key: "removeListeners",
        value: function removeListeners(player, url) {
          player.removeEventListener("canplay", this.onReady);
          player.removeEventListener("play", this.onPlay);
          player.removeEventListener("waiting", this.onBuffer);
          player.removeEventListener("playing", this.onBufferEnd);
          player.removeEventListener("pause", this.onPause);
          player.removeEventListener("seeked", this.onSeek);
          player.removeEventListener("ended", this.onEnded);
          player.removeEventListener("error", this.onError);
          player.removeEventListener("ratechange", this.onPlayBackRateChange);
          player.removeEventListener("enterpictureinpicture", this.onEnablePIP);
          player.removeEventListener("leavepictureinpicture", this.onDisablePIP);
          player.removeEventListener("webkitpresentationmodechanged", this.onPresentationModeChange);
          if (!this.shouldUseHLS(url)) {
            player.removeEventListener("canplay", this.onReady);
          }
        }
        // Proxy methods to prevent listener leaks
      }, {
        key: "shouldUseAudio",
        value: function shouldUseAudio(props) {
          if (props.config.forceVideo) {
            return false;
          }
          if (props.config.attributes.poster) {
            return false;
          }
          return _patterns.AUDIO_EXTENSIONS.test(props.url) || props.config.forceAudio;
        }
      }, {
        key: "shouldUseHLS",
        value: function shouldUseHLS(url) {
          if (this.props.config.forceHLS) {
            return true;
          }
          if (IS_IOS) {
            return false;
          }
          return _patterns.HLS_EXTENSIONS.test(url) || MATCH_CLOUDFLARE_STREAM.test(url);
        }
      }, {
        key: "shouldUseDASH",
        value: function shouldUseDASH(url) {
          return _patterns.DASH_EXTENSIONS.test(url) || this.props.config.forceDASH;
        }
      }, {
        key: "shouldUseFLV",
        value: function shouldUseFLV(url) {
          return _patterns.FLV_EXTENSIONS.test(url) || this.props.config.forceFLV;
        }
      }, {
        key: "load",
        value: function load(url) {
          var _this2 = this;
          var _this$props$config = this.props.config, hlsVersion = _this$props$config.hlsVersion, hlsOptions = _this$props$config.hlsOptions, dashVersion = _this$props$config.dashVersion, flvVersion = _this$props$config.flvVersion;
          if (this.hls) {
            this.hls.destroy();
          }
          if (this.dash) {
            this.dash.reset();
          }
          if (this.shouldUseHLS(url)) {
            (0, _utils.getSDK)(HLS_SDK_URL.replace("VERSION", hlsVersion), HLS_GLOBAL).then(function(Hls) {
              _this2.hls = new Hls(hlsOptions);
              _this2.hls.on(Hls.Events.MANIFEST_PARSED, function() {
                _this2.props.onReady();
              });
              _this2.hls.on(Hls.Events.ERROR, function(e, data) {
                _this2.props.onError(e, data, _this2.hls, Hls);
              });
              if (MATCH_CLOUDFLARE_STREAM.test(url)) {
                var id = url.match(MATCH_CLOUDFLARE_STREAM)[1];
                _this2.hls.loadSource(REPLACE_CLOUDFLARE_STREAM.replace("{id}", id));
              } else {
                _this2.hls.loadSource(url);
              }
              _this2.hls.attachMedia(_this2.player);
              _this2.props.onLoaded();
            });
          }
          if (this.shouldUseDASH(url)) {
            (0, _utils.getSDK)(DASH_SDK_URL.replace("VERSION", dashVersion), DASH_GLOBAL).then(function(dashjs) {
              _this2.dash = dashjs.MediaPlayer().create();
              _this2.dash.initialize(_this2.player, url, _this2.props.playing);
              _this2.dash.on("error", _this2.props.onError);
              if (parseInt(dashVersion) < 3) {
                _this2.dash.getDebug().setLogToBrowserConsole(false);
              } else {
                _this2.dash.updateSettings({
                  debug: {
                    logLevel: dashjs.Debug.LOG_LEVEL_NONE
                  }
                });
              }
              _this2.props.onLoaded();
            });
          }
          if (this.shouldUseFLV(url)) {
            (0, _utils.getSDK)(FLV_SDK_URL.replace("VERSION", flvVersion), FLV_GLOBAL).then(function(flvjs) {
              _this2.flv = flvjs.createPlayer({
                type: "flv",
                url
              });
              _this2.flv.attachMediaElement(_this2.player);
              _this2.flv.on(flvjs.Events.ERROR, function(e, data) {
                _this2.props.onError(e, data, _this2.flv, flvjs);
              });
              _this2.flv.load();
              _this2.props.onLoaded();
            });
          }
          if (url instanceof Array) {
            this.player.load();
          } else if ((0, _utils.isMediaStream)(url)) {
            try {
              this.player.srcObject = url;
            } catch (e) {
              this.player.src = window.URL.createObjectURL(url);
            }
          }
        }
      }, {
        key: "play",
        value: function play() {
          var promise = this.player.play();
          if (promise) {
            promise["catch"](this.props.onError);
          }
        }
      }, {
        key: "pause",
        value: function pause() {
          this.player.pause();
        }
      }, {
        key: "stop",
        value: function stop() {
          this.player.removeAttribute("src");
          if (this.dash) {
            this.dash.reset();
          }
        }
      }, {
        key: "seekTo",
        value: function seekTo(seconds) {
          this.player.currentTime = seconds;
        }
      }, {
        key: "setVolume",
        value: function setVolume(fraction) {
          this.player.volume = fraction;
        }
      }, {
        key: "enablePIP",
        value: function enablePIP() {
          if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {
            this.player.requestPictureInPicture();
          } else if ((0, _utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== "picture-in-picture") {
            this.player.webkitSetPresentationMode("picture-in-picture");
          }
        }
      }, {
        key: "disablePIP",
        value: function disablePIP() {
          if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {
            document.exitPictureInPicture();
          } else if ((0, _utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== "inline") {
            this.player.webkitSetPresentationMode("inline");
          }
        }
      }, {
        key: "setPlaybackRate",
        value: function setPlaybackRate(rate) {
          try {
            this.player.playbackRate = rate;
          } catch (error) {
            this.props.onError(error);
          }
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          if (!this.player)
            return null;
          var _this$player = this.player, duration = _this$player.duration, seekable = _this$player.seekable;
          if (duration === Infinity && seekable.length > 0) {
            return seekable.end(seekable.length - 1);
          }
          return duration;
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          if (!this.player)
            return null;
          return this.player.currentTime;
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          if (!this.player)
            return null;
          var buffered = this.player.buffered;
          if (buffered.length === 0) {
            return 0;
          }
          var end2 = buffered.end(buffered.length - 1);
          var duration = this.getDuration();
          if (end2 > duration) {
            return duration;
          }
          return end2;
        }
      }, {
        key: "getSource",
        value: function getSource(url) {
          var useHLS = this.shouldUseHLS(url);
          var useDASH = this.shouldUseDASH(url);
          var useFLV = this.shouldUseFLV(url);
          if (url instanceof Array || (0, _utils.isMediaStream)(url) || useHLS || useDASH || useFLV) {
            return void 0;
          }
          if (MATCH_DROPBOX_URL.test(url)) {
            return url.replace("www.dropbox.com", "dl.dropboxusercontent.com");
          }
          return url;
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props11 = this.props, url = _this$props11.url, playing = _this$props11.playing, loop = _this$props11.loop, controls = _this$props11.controls, muted = _this$props11.muted, config = _this$props11.config, width = _this$props11.width, height = _this$props11.height;
          var useAudio = this.shouldUseAudio(this.props);
          var Element2 = useAudio ? "audio" : "video";
          var style = {
            width: width === "auto" ? width : "100%",
            height: height === "auto" ? height : "100%"
          };
          return _react["default"].createElement(Element2, _extends2({
            ref: this.ref,
            src: this.getSource(url),
            style,
            preload: "auto",
            autoPlay: playing || void 0,
            controls,
            muted,
            loop
          }, config.attributes), url instanceof Array && url.map(this.renderSourceElement), config.tracks.map(this.renderTrack));
        }
      }]);
      return FilePlayer2;
    }(_react.Component);
    exports["default"] = FilePlayer;
    _defineProperty3(FilePlayer, "displayName", "FilePlayer");
    _defineProperty3(FilePlayer, "canPlay", _patterns.canPlay.file);
  }
});

// node_modules/react-player/lib/players/index.js
var require_players = __commonJS({
  "node_modules/react-player/lib/players/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = require_react();
    var _utils = require_utils();
    var _patterns = require_patterns();
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var _default = [{
      key: "youtube",
      name: "YouTube",
      canPlay: _patterns.canPlay.youtube,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_YouTube());
        });
      })
    }, {
      key: "soundcloud",
      name: "SoundCloud",
      canPlay: _patterns.canPlay.soundcloud,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_SoundCloud());
        });
      })
    }, {
      key: "vimeo",
      name: "Vimeo",
      canPlay: _patterns.canPlay.vimeo,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Vimeo());
        });
      })
    }, {
      key: "facebook",
      name: "Facebook",
      canPlay: _patterns.canPlay.facebook,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Facebook());
        });
      })
    }, {
      key: "streamable",
      name: "Streamable",
      canPlay: _patterns.canPlay.streamable,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Streamable());
        });
      })
    }, {
      key: "wistia",
      name: "Wistia",
      canPlay: _patterns.canPlay.wistia,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Wistia());
        });
      })
    }, {
      key: "twitch",
      name: "Twitch",
      canPlay: _patterns.canPlay.twitch,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Twitch());
        });
      })
    }, {
      key: "dailymotion",
      name: "DailyMotion",
      canPlay: _patterns.canPlay.dailymotion,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_DailyMotion());
        });
      })
    }, {
      key: "mixcloud",
      name: "Mixcloud",
      canPlay: _patterns.canPlay.mixcloud,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Mixcloud());
        });
      })
    }, {
      key: "vidyard",
      name: "Vidyard",
      canPlay: _patterns.canPlay.vidyard,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Vidyard());
        });
      })
    }, {
      key: "kaltura",
      name: "Kaltura",
      canPlay: _patterns.canPlay.kaltura,
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_Kaltura());
        });
      })
    }, {
      key: "file",
      name: "FilePlayer",
      canPlay: _patterns.canPlay.file,
      canEnablePIP: function canEnablePIP(url) {
        return _patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, _utils.supportsWebKitPresentationMode)()) && !_patterns.AUDIO_EXTENSIONS.test(url);
      },
      lazyPlayer: (0, _react.lazy)(function() {
        return Promise.resolve().then(function() {
          return _interopRequireWildcard(require_FilePlayer());
        });
      })
    }];
    exports["default"] = _default;
  }
});

// node_modules/react-player/node_modules/memoize-one/dist/memoize-one.esm.js
var memoize_one_esm_exports = {};
__export(memoize_one_esm_exports, {
  default: () => memoize_one_esm_default
});
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual3) {
  if (isEqual3 === void 0) {
    isEqual3 = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual3(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var safeIsNaN, memoize_one_esm_default;
var init_memoize_one_esm = __esm({
  "node_modules/react-player/node_modules/memoize-one/dist/memoize-one.esm.js"() {
    safeIsNaN = Number.isNaN || function ponyfill(value) {
      return typeof value === "number" && value !== value;
    };
    memoize_one_esm_default = memoizeOne;
  }
});

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i, keys2;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function")
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function")
          return a.toString() === b.toString();
        keys2 = Object.keys(a);
        length = keys2.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys2[i]))
            return false;
        if (hasElementType && a instanceof Element)
          return false;
        for (i = length; i-- !== 0; ) {
          if ((keys2[i] === "_owner" || keys2[i] === "__v" || keys2[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys2[i]], b[keys2[i]]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module.exports = function isEqual3(a, b) {
      try {
        return equal(a, b);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// node_modules/react-player/lib/props.js
var require_props = __commonJS({
  "node_modules/react-player/lib/props.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultProps = exports.propTypes = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var string3 = _propTypes["default"].string;
    var bool = _propTypes["default"].bool;
    var number2 = _propTypes["default"].number;
    var array = _propTypes["default"].array;
    var oneOfType = _propTypes["default"].oneOfType;
    var shape = _propTypes["default"].shape;
    var object = _propTypes["default"].object;
    var func = _propTypes["default"].func;
    var node2 = _propTypes["default"].node;
    var propTypes = {
      url: oneOfType([string3, array, object]),
      playing: bool,
      loop: bool,
      controls: bool,
      volume: number2,
      muted: bool,
      playbackRate: number2,
      width: oneOfType([string3, number2]),
      height: oneOfType([string3, number2]),
      style: object,
      progressInterval: number2,
      playsinline: bool,
      pip: bool,
      stopOnUnmount: bool,
      light: oneOfType([bool, string3]),
      playIcon: node2,
      previewTabIndex: number2,
      fallback: node2,
      oEmbedUrl: string3,
      wrapper: oneOfType([string3, func, shape({
        render: func.isRequired
      })]),
      config: shape({
        soundcloud: shape({
          options: object
        }),
        youtube: shape({
          playerVars: object,
          embedOptions: object,
          onUnstarted: func
        }),
        facebook: shape({
          appId: string3,
          version: string3,
          playerId: string3,
          attributes: object
        }),
        dailymotion: shape({
          params: object
        }),
        vimeo: shape({
          playerOptions: object,
          title: string3
        }),
        file: shape({
          attributes: object,
          tracks: array,
          forceVideo: bool,
          forceAudio: bool,
          forceHLS: bool,
          forceDASH: bool,
          forceFLV: bool,
          hlsOptions: object,
          hlsVersion: string3,
          dashVersion: string3,
          flvVersion: string3
        }),
        wistia: shape({
          options: object,
          playerId: string3,
          customControls: array
        }),
        mixcloud: shape({
          options: object
        }),
        twitch: shape({
          options: object,
          playerId: string3
        }),
        vidyard: shape({
          options: object
        })
      }),
      onReady: func,
      onStart: func,
      onPlay: func,
      onPause: func,
      onBuffer: func,
      onBufferEnd: func,
      onEnded: func,
      onError: func,
      onDuration: func,
      onSeek: func,
      onPlaybackRateChange: func,
      onProgress: func,
      onClickPreview: func,
      onEnablePIP: func,
      onDisablePIP: func
    };
    exports.propTypes = propTypes;
    var noop5 = function noop6() {
    };
    var defaultProps2 = {
      playing: false,
      loop: false,
      controls: false,
      volume: null,
      muted: false,
      playbackRate: 1,
      width: "640px",
      height: "360px",
      style: {},
      progressInterval: 1e3,
      playsinline: false,
      pip: false,
      stopOnUnmount: true,
      light: false,
      fallback: null,
      wrapper: "div",
      previewTabIndex: 0,
      oEmbedUrl: "https://noembed.com/embed?url={url}",
      config: {
        soundcloud: {
          options: {
            visual: true,
            // Undocumented, but makes player fill container and look better
            buying: false,
            liking: false,
            download: false,
            sharing: false,
            show_comments: false,
            show_playcount: false
          }
        },
        youtube: {
          playerVars: {
            playsinline: 1,
            showinfo: 0,
            rel: 0,
            iv_load_policy: 3,
            modestbranding: 1
          },
          embedOptions: {},
          onUnstarted: noop5
        },
        facebook: {
          appId: "1309697205772819",
          version: "v3.3",
          playerId: null,
          attributes: {}
        },
        dailymotion: {
          params: {
            api: 1,
            "endscreen-enable": false
          }
        },
        vimeo: {
          playerOptions: {
            autopause: false,
            byline: false,
            portrait: false,
            title: false
          },
          title: null
        },
        file: {
          attributes: {},
          tracks: [],
          forceVideo: false,
          forceAudio: false,
          forceHLS: false,
          forceDASH: false,
          forceFLV: false,
          hlsOptions: {},
          hlsVersion: "1.1.4",
          dashVersion: "3.1.3",
          flvVersion: "1.5.0"
        },
        wistia: {
          options: {},
          playerId: null,
          customControls: null
        },
        mixcloud: {
          options: {
            hide_cover: 1
          }
        },
        twitch: {
          options: {},
          playerId: null
        },
        vidyard: {
          options: {}
        }
      },
      onReady: noop5,
      onStart: noop5,
      onPlay: noop5,
      onPause: noop5,
      onBuffer: noop5,
      onBufferEnd: noop5,
      onEnded: noop5,
      onError: noop5,
      onDuration: noop5,
      onSeek: noop5,
      onPlaybackRateChange: noop5,
      onProgress: noop5,
      onClickPreview: noop5,
      onEnablePIP: noop5,
      onDisablePIP: noop5
    };
    exports.defaultProps = defaultProps2;
  }
});

// node_modules/react-player/lib/Player.js
var require_Player = __commonJS({
  "node_modules/react-player/lib/Player.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactFastCompare = _interopRequireDefault(require_react_fast_compare());
    var _props = require_props();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SEEK_ON_PLAY_EXPIRY = 5e3;
    var Player = function(_Component) {
      _inherits(Player2, _Component);
      var _super = _createSuper(Player2);
      function Player2() {
        var _this;
        _classCallCheck(this, Player2);
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(_args));
        _defineProperty3(_assertThisInitialized(_this), "mounted", false);
        _defineProperty3(_assertThisInitialized(_this), "isReady", false);
        _defineProperty3(_assertThisInitialized(_this), "isPlaying", false);
        _defineProperty3(_assertThisInitialized(_this), "isLoading", true);
        _defineProperty3(_assertThisInitialized(_this), "loadOnReady", null);
        _defineProperty3(_assertThisInitialized(_this), "startOnPlay", true);
        _defineProperty3(_assertThisInitialized(_this), "seekOnPlay", null);
        _defineProperty3(_assertThisInitialized(_this), "onDurationCalled", false);
        _defineProperty3(_assertThisInitialized(_this), "handlePlayerMount", function(player) {
          if (_this.player)
            return;
          _this.player = player;
          _this.player.load(_this.props.url);
          _this.progress();
        });
        _defineProperty3(_assertThisInitialized(_this), "getInternalPlayer", function(key) {
          if (!_this.player)
            return null;
          return _this.player[key];
        });
        _defineProperty3(_assertThisInitialized(_this), "progress", function() {
          if (_this.props.url && _this.player && _this.isReady) {
            var playedSeconds = _this.getCurrentTime() || 0;
            var loadedSeconds = _this.getSecondsLoaded();
            var duration = _this.getDuration();
            if (duration) {
              var progress = {
                playedSeconds,
                played: playedSeconds / duration
              };
              if (loadedSeconds !== null) {
                progress.loadedSeconds = loadedSeconds;
                progress.loaded = loadedSeconds / duration;
              }
              if (progress.playedSeconds !== _this.prevPlayed || progress.loadedSeconds !== _this.prevLoaded) {
                _this.props.onProgress(progress);
              }
              _this.prevPlayed = progress.playedSeconds;
              _this.prevLoaded = progress.loadedSeconds;
            }
          }
          _this.progressTimeout = setTimeout(_this.progress, _this.props.progressFrequency || _this.props.progressInterval);
        });
        _defineProperty3(_assertThisInitialized(_this), "handleReady", function() {
          if (!_this.mounted)
            return;
          _this.isReady = true;
          _this.isLoading = false;
          var _this$props = _this.props, onReady = _this$props.onReady, playing = _this$props.playing, volume = _this$props.volume, muted = _this$props.muted;
          onReady();
          if (!muted && volume !== null) {
            _this.player.setVolume(volume);
          }
          if (_this.loadOnReady) {
            _this.player.load(_this.loadOnReady, true);
            _this.loadOnReady = null;
          } else if (playing) {
            _this.player.play();
          }
          _this.handleDurationCheck();
        });
        _defineProperty3(_assertThisInitialized(_this), "handlePlay", function() {
          _this.isPlaying = true;
          _this.isLoading = false;
          var _this$props2 = _this.props, onStart = _this$props2.onStart, onPlay = _this$props2.onPlay, playbackRate = _this$props2.playbackRate;
          if (_this.startOnPlay) {
            if (_this.player.setPlaybackRate && playbackRate !== 1) {
              _this.player.setPlaybackRate(playbackRate);
            }
            onStart();
            _this.startOnPlay = false;
          }
          onPlay();
          if (_this.seekOnPlay) {
            _this.seekTo(_this.seekOnPlay);
            _this.seekOnPlay = null;
          }
          _this.handleDurationCheck();
        });
        _defineProperty3(_assertThisInitialized(_this), "handlePause", function(e) {
          _this.isPlaying = false;
          if (!_this.isLoading) {
            _this.props.onPause(e);
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "handleEnded", function() {
          var _this$props3 = _this.props, activePlayer = _this$props3.activePlayer, loop = _this$props3.loop, onEnded = _this$props3.onEnded;
          if (activePlayer.loopOnEnded && loop) {
            _this.seekTo(0);
          }
          if (!loop) {
            _this.isPlaying = false;
            onEnded();
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "handleError", function() {
          var _this$props4;
          _this.isLoading = false;
          (_this$props4 = _this.props).onError.apply(_this$props4, arguments);
        });
        _defineProperty3(_assertThisInitialized(_this), "handleDurationCheck", function() {
          clearTimeout(_this.durationCheckTimeout);
          var duration = _this.getDuration();
          if (duration) {
            if (!_this.onDurationCalled) {
              _this.props.onDuration(duration);
              _this.onDurationCalled = true;
            }
          } else {
            _this.durationCheckTimeout = setTimeout(_this.handleDurationCheck, 100);
          }
        });
        _defineProperty3(_assertThisInitialized(_this), "handleLoaded", function() {
          _this.isLoading = false;
        });
        return _this;
      }
      _createClass(Player2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.mounted = true;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          clearTimeout(this.progressTimeout);
          clearTimeout(this.durationCheckTimeout);
          if (this.isReady && this.props.stopOnUnmount) {
            this.player.stop();
            if (this.player.disablePIP) {
              this.player.disablePIP();
            }
          }
          this.mounted = false;
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var _this2 = this;
          if (!this.player) {
            return;
          }
          var _this$props5 = this.props, url = _this$props5.url, playing = _this$props5.playing, volume = _this$props5.volume, muted = _this$props5.muted, playbackRate = _this$props5.playbackRate, pip = _this$props5.pip, loop = _this$props5.loop, activePlayer = _this$props5.activePlayer, disableDeferredLoading = _this$props5.disableDeferredLoading;
          if (!(0, _reactFastCompare["default"])(prevProps.url, url)) {
            if (this.isLoading && !activePlayer.forceLoad && !disableDeferredLoading && !(0, _utils.isMediaStream)(url)) {
              console.warn("ReactPlayer: the attempt to load ".concat(url, " is being deferred until the player has loaded"));
              this.loadOnReady = url;
              return;
            }
            this.isLoading = true;
            this.startOnPlay = true;
            this.onDurationCalled = false;
            this.player.load(url, this.isReady);
          }
          if (!prevProps.playing && playing && !this.isPlaying) {
            this.player.play();
          }
          if (prevProps.playing && !playing && this.isPlaying) {
            this.player.pause();
          }
          if (!prevProps.pip && pip && this.player.enablePIP) {
            this.player.enablePIP();
          }
          if (prevProps.pip && !pip && this.player.disablePIP) {
            this.player.disablePIP();
          }
          if (prevProps.volume !== volume && volume !== null) {
            this.player.setVolume(volume);
          }
          if (prevProps.muted !== muted) {
            if (muted) {
              this.player.mute();
            } else {
              this.player.unmute();
              if (volume !== null) {
                setTimeout(function() {
                  return _this2.player.setVolume(volume);
                });
              }
            }
          }
          if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {
            this.player.setPlaybackRate(playbackRate);
          }
          if (prevProps.loop !== loop && this.player.setLoop) {
            this.player.setLoop(loop);
          }
        }
      }, {
        key: "getDuration",
        value: function getDuration() {
          if (!this.isReady)
            return null;
          return this.player.getDuration();
        }
      }, {
        key: "getCurrentTime",
        value: function getCurrentTime() {
          if (!this.isReady)
            return null;
          return this.player.getCurrentTime();
        }
      }, {
        key: "getSecondsLoaded",
        value: function getSecondsLoaded() {
          if (!this.isReady)
            return null;
          return this.player.getSecondsLoaded();
        }
      }, {
        key: "seekTo",
        value: function seekTo(amount, type) {
          var _this3 = this;
          if (!this.isReady) {
            if (amount !== 0) {
              this.seekOnPlay = amount;
              setTimeout(function() {
                _this3.seekOnPlay = null;
              }, SEEK_ON_PLAY_EXPIRY);
            }
            return;
          }
          var isFraction = !type ? amount > 0 && amount < 1 : type === "fraction";
          if (isFraction) {
            var duration = this.player.getDuration();
            if (!duration) {
              console.warn("ReactPlayer: could not seek using fraction – duration not yet available");
              return;
            }
            this.player.seekTo(duration * amount);
            return;
          }
          this.player.seekTo(amount);
        }
      }, {
        key: "render",
        value: function render() {
          var Player3 = this.props.activePlayer;
          if (!Player3) {
            return null;
          }
          return _react["default"].createElement(Player3, _extends2({}, this.props, {
            onMount: this.handlePlayerMount,
            onReady: this.handleReady,
            onPlay: this.handlePlay,
            onPause: this.handlePause,
            onEnded: this.handleEnded,
            onLoaded: this.handleLoaded,
            onError: this.handleError
          }));
        }
      }]);
      return Player2;
    }(_react.Component);
    exports["default"] = Player;
    _defineProperty3(Player, "displayName", "Player");
    _defineProperty3(Player, "propTypes", _props.propTypes);
    _defineProperty3(Player, "defaultProps", _props.defaultProps);
  }
});

// node_modules/react-player/lib/Preview.js
var require_Preview = __commonJS({
  "node_modules/react-player/lib/Preview.js"(exports) {
    "use strict";
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ICON_SIZE = "64px";
    var cache = {};
    var Preview = function(_Component) {
      _inherits(Preview2, _Component);
      var _super = _createSuper(Preview2);
      function Preview2() {
        var _this;
        _classCallCheck(this, Preview2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty3(_assertThisInitialized(_this), "mounted", false);
        _defineProperty3(_assertThisInitialized(_this), "state", {
          image: null
        });
        _defineProperty3(_assertThisInitialized(_this), "handleKeyPress", function(e) {
          if (e.key === "Enter" || e.key === " ") {
            _this.props.onClick();
          }
        });
        return _this;
      }
      _createClass(Preview2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.mounted = true;
          this.fetchImage(this.props);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var _this$props = this.props, url = _this$props.url, light = _this$props.light;
          if (prevProps.url !== url || prevProps.light !== light) {
            this.fetchImage(this.props);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.mounted = false;
        }
      }, {
        key: "fetchImage",
        value: function fetchImage(_ref) {
          var _this2 = this;
          var url = _ref.url, light = _ref.light, oEmbedUrl = _ref.oEmbedUrl;
          if (typeof light === "string") {
            this.setState({
              image: light
            });
            return;
          }
          if (cache[url]) {
            this.setState({
              image: cache[url]
            });
            return;
          }
          this.setState({
            image: null
          });
          return window.fetch(oEmbedUrl.replace("{url}", url)).then(function(response) {
            return response.json();
          }).then(function(data) {
            if (data.thumbnail_url && _this2.mounted) {
              var image2 = data.thumbnail_url.replace("height=100", "height=480");
              _this2.setState({
                image: image2
              });
              cache[url] = image2;
            }
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, onClick = _this$props2.onClick, playIcon = _this$props2.playIcon, previewTabIndex = _this$props2.previewTabIndex;
          var image2 = this.state.image;
          var flexCenter = {
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
          };
          var styles = {
            preview: _objectSpread3({
              width: "100%",
              height: "100%",
              backgroundImage: image2 ? "url(".concat(image2, ")") : void 0,
              backgroundSize: "cover",
              backgroundPosition: "center",
              cursor: "pointer"
            }, flexCenter),
            shadow: _objectSpread3({
              background: "radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)",
              borderRadius: ICON_SIZE,
              width: ICON_SIZE,
              height: ICON_SIZE
            }, flexCenter),
            playIcon: {
              borderStyle: "solid",
              borderWidth: "16px 0 16px 26px",
              borderColor: "transparent transparent transparent white",
              marginLeft: "7px"
            }
          };
          var defaultPlayIcon = _react["default"].createElement("div", {
            style: styles.shadow,
            className: "react-player__shadow"
          }, _react["default"].createElement("div", {
            style: styles.playIcon,
            className: "react-player__play-icon"
          }));
          return _react["default"].createElement("div", {
            style: styles.preview,
            className: "react-player__preview",
            onClick,
            tabIndex: previewTabIndex,
            onKeyPress: this.handleKeyPress
          }, playIcon || defaultPlayIcon);
        }
      }]);
      return Preview2;
    }(_react.Component);
    exports["default"] = Preview;
  }
});

// node_modules/react-player/lib/ReactPlayer.js
var require_ReactPlayer = __commonJS({
  "node_modules/react-player/lib/ReactPlayer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createReactPlayer = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _deepmerge = _interopRequireDefault(require_cjs());
    var _memoizeOne = _interopRequireDefault((init_memoize_one_esm(), __toCommonJS(memoize_one_esm_exports)));
    var _reactFastCompare = _interopRequireDefault(require_react_fast_compare());
    var _props = require_props();
    var _utils = require_utils();
    var _Player3 = _interopRequireDefault(require_Player());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    function ownKeys3(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread3(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys3(Object(source), true).forEach(function(key) {
            _defineProperty3(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _toConsumableArray3(arr) {
      return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread3();
    }
    function _nonIterableSpread3() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray3(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray3(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray3(o, minLen);
    }
    function _iterableToArray3(iter) {
      if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
        return Array.from(iter);
    }
    function _arrayWithoutHoles3(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray3(arr);
    }
    function _arrayLikeToArray3(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof2(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache = /* @__PURE__ */ new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache;
      };
      return cache;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache();
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var Preview = (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Preview());
      });
    });
    var IS_BROWSER = typeof window !== "undefined" && window.document;
    var IS_GLOBAL = typeof global !== "undefined" && global.window && global.window.document;
    var SUPPORTED_PROPS = Object.keys(_props.propTypes);
    var UniversalSuspense = IS_BROWSER || IS_GLOBAL ? _react.Suspense : function() {
      return null;
    };
    var customPlayers = [];
    var createReactPlayer = function createReactPlayer2(players, fallback) {
      var _class, _temp;
      return _temp = _class = function(_Component) {
        _inherits(ReactPlayer4, _Component);
        var _super = _createSuper(ReactPlayer4);
        function ReactPlayer4() {
          var _this;
          _classCallCheck(this, ReactPlayer4);
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _super.call.apply(_super, [this].concat(args));
          _defineProperty3(_assertThisInitialized(_this), "state", {
            showPreview: !!_this.props.light
          });
          _defineProperty3(_assertThisInitialized(_this), "references", {
            wrapper: function wrapper(_wrapper) {
              _this.wrapper = _wrapper;
            },
            player: function player(_player) {
              _this.player = _player;
            }
          });
          _defineProperty3(_assertThisInitialized(_this), "handleClickPreview", function(e) {
            _this.setState({
              showPreview: false
            });
            _this.props.onClickPreview(e);
          });
          _defineProperty3(_assertThisInitialized(_this), "showPreview", function() {
            _this.setState({
              showPreview: true
            });
          });
          _defineProperty3(_assertThisInitialized(_this), "getDuration", function() {
            if (!_this.player)
              return null;
            return _this.player.getDuration();
          });
          _defineProperty3(_assertThisInitialized(_this), "getCurrentTime", function() {
            if (!_this.player)
              return null;
            return _this.player.getCurrentTime();
          });
          _defineProperty3(_assertThisInitialized(_this), "getSecondsLoaded", function() {
            if (!_this.player)
              return null;
            return _this.player.getSecondsLoaded();
          });
          _defineProperty3(_assertThisInitialized(_this), "getInternalPlayer", function() {
            var key = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "player";
            if (!_this.player)
              return null;
            return _this.player.getInternalPlayer(key);
          });
          _defineProperty3(_assertThisInitialized(_this), "seekTo", function(fraction, type) {
            if (!_this.player)
              return null;
            _this.player.seekTo(fraction, type);
          });
          _defineProperty3(_assertThisInitialized(_this), "handleReady", function() {
            _this.props.onReady(_assertThisInitialized(_this));
          });
          _defineProperty3(_assertThisInitialized(_this), "getActivePlayer", (0, _memoizeOne["default"])(function(url) {
            for (var _i = 0, _arr = [].concat(customPlayers, _toConsumableArray3(players)); _i < _arr.length; _i++) {
              var player = _arr[_i];
              if (player.canPlay(url)) {
                return player;
              }
            }
            if (fallback) {
              return fallback;
            }
            return null;
          }));
          _defineProperty3(_assertThisInitialized(_this), "getConfig", (0, _memoizeOne["default"])(function(url, key) {
            var config = _this.props.config;
            return _deepmerge["default"].all([_props.defaultProps.config, _props.defaultProps.config[key] || {}, config, config[key] || {}]);
          }));
          _defineProperty3(_assertThisInitialized(_this), "getAttributes", (0, _memoizeOne["default"])(function(url) {
            return (0, _utils.omit)(_this.props, SUPPORTED_PROPS);
          }));
          _defineProperty3(_assertThisInitialized(_this), "renderActivePlayer", function(url) {
            if (!url)
              return null;
            var player = _this.getActivePlayer(url);
            if (!player)
              return null;
            var config = _this.getConfig(url, player.key);
            return _react["default"].createElement(_Player3["default"], _extends2({}, _this.props, {
              key: player.key,
              ref: _this.references.player,
              config,
              activePlayer: player.lazyPlayer || player,
              onReady: _this.handleReady
            }));
          });
          return _this;
        }
        _createClass(ReactPlayer4, [{
          key: "shouldComponentUpdate",
          value: function shouldComponentUpdate(nextProps, nextState) {
            return !(0, _reactFastCompare["default"])(this.props, nextProps) || !(0, _reactFastCompare["default"])(this.state, nextState);
          }
        }, {
          key: "componentDidUpdate",
          value: function componentDidUpdate(prevProps) {
            var light = this.props.light;
            if (!prevProps.light && light) {
              this.setState({
                showPreview: true
              });
            }
            if (prevProps.light && !light) {
              this.setState({
                showPreview: false
              });
            }
          }
        }, {
          key: "renderPreview",
          value: function renderPreview(url) {
            if (!url)
              return null;
            var _this$props = this.props, light = _this$props.light, playIcon = _this$props.playIcon, previewTabIndex = _this$props.previewTabIndex, oEmbedUrl = _this$props.oEmbedUrl;
            return _react["default"].createElement(Preview, {
              url,
              light,
              playIcon,
              previewTabIndex,
              oEmbedUrl,
              onClick: this.handleClickPreview
            });
          }
        }, {
          key: "render",
          value: function render() {
            var _this$props2 = this.props, url = _this$props2.url, style = _this$props2.style, width = _this$props2.width, height = _this$props2.height, fallback2 = _this$props2.fallback, Wrapper = _this$props2.wrapper;
            var showPreview = this.state.showPreview;
            var attributes = this.getAttributes(url);
            return _react["default"].createElement(Wrapper, _extends2({
              ref: this.references.wrapper,
              style: _objectSpread3(_objectSpread3({}, style), {}, {
                width,
                height
              })
            }, attributes), _react["default"].createElement(UniversalSuspense, {
              fallback: fallback2
            }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));
          }
        }]);
        return ReactPlayer4;
      }(_react.Component), _defineProperty3(_class, "displayName", "ReactPlayer"), _defineProperty3(_class, "propTypes", _props.propTypes), _defineProperty3(_class, "defaultProps", _props.defaultProps), _defineProperty3(_class, "addCustomPlayer", function(player) {
        customPlayers.push(player);
      }), _defineProperty3(_class, "removeCustomPlayers", function() {
        customPlayers.length = 0;
      }), _defineProperty3(_class, "canPlay", function(url) {
        for (var _i2 = 0, _arr2 = [].concat(customPlayers, _toConsumableArray3(players)); _i2 < _arr2.length; _i2++) {
          var _Player = _arr2[_i2];
          if (_Player.canPlay(url)) {
            return true;
          }
        }
        return false;
      }), _defineProperty3(_class, "canEnablePIP", function(url) {
        for (var _i3 = 0, _arr3 = [].concat(customPlayers, _toConsumableArray3(players)); _i3 < _arr3.length; _i3++) {
          var _Player2 = _arr3[_i3];
          if (_Player2.canEnablePIP && _Player2.canEnablePIP(url)) {
            return true;
          }
        }
        return false;
      }), _temp;
    };
    exports.createReactPlayer = createReactPlayer;
  }
});

// node_modules/react-player/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-player/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _players = _interopRequireDefault(require_players());
    var _ReactPlayer = require_ReactPlayer();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var fallback = _players["default"][_players["default"].length - 1];
    var _default = (0, _ReactPlayer.createReactPlayer)(_players["default"], fallback);
    exports["default"] = _default;
  }
});

// node_modules/pretty-bytes/index.js
var require_pretty_bytes = __commonJS({
  "node_modules/pretty-bytes/index.js"(exports, module) {
    "use strict";
    var BYTE_UNITS = [
      "B",
      "kB",
      "MB",
      "GB",
      "TB",
      "PB",
      "EB",
      "ZB",
      "YB"
    ];
    var BIBYTE_UNITS = [
      "B",
      "kiB",
      "MiB",
      "GiB",
      "TiB",
      "PiB",
      "EiB",
      "ZiB",
      "YiB"
    ];
    var BIT_UNITS = [
      "b",
      "kbit",
      "Mbit",
      "Gbit",
      "Tbit",
      "Pbit",
      "Ebit",
      "Zbit",
      "Ybit"
    ];
    var BIBIT_UNITS = [
      "b",
      "kibit",
      "Mibit",
      "Gibit",
      "Tibit",
      "Pibit",
      "Eibit",
      "Zibit",
      "Yibit"
    ];
    var toLocaleString = (number2, locale, options2) => {
      let result = number2;
      if (typeof locale === "string" || Array.isArray(locale)) {
        result = number2.toLocaleString(locale, options2);
      } else if (locale === true || options2 !== void 0) {
        result = number2.toLocaleString(void 0, options2);
      }
      return result;
    };
    module.exports = (number2, options2) => {
      if (!Number.isFinite(number2)) {
        throw new TypeError(`Expected a finite number, got ${typeof number2}: ${number2}`);
      }
      options2 = Object.assign({ bits: false, binary: false }, options2);
      const UNITS = options2.bits ? options2.binary ? BIBIT_UNITS : BIT_UNITS : options2.binary ? BIBYTE_UNITS : BYTE_UNITS;
      if (options2.signed && number2 === 0) {
        return ` 0 ${UNITS[0]}`;
      }
      const isNegative = number2 < 0;
      const prefix = isNegative ? "-" : options2.signed ? "+" : "";
      if (isNegative) {
        number2 = -number2;
      }
      let localeOptions;
      if (options2.minimumFractionDigits !== void 0) {
        localeOptions = { minimumFractionDigits: options2.minimumFractionDigits };
      }
      if (options2.maximumFractionDigits !== void 0) {
        localeOptions = Object.assign({ maximumFractionDigits: options2.maximumFractionDigits }, localeOptions);
      }
      if (number2 < 1) {
        const numberString2 = toLocaleString(number2, options2.locale, localeOptions);
        return prefix + numberString2 + " " + UNITS[0];
      }
      const exponent = Math.min(Math.floor(options2.binary ? Math.log(number2) / Math.log(1024) : Math.log10(number2) / 3), UNITS.length - 1);
      number2 /= Math.pow(options2.binary ? 1024 : 1e3, exponent);
      if (!localeOptions) {
        number2 = number2.toPrecision(3);
      }
      const numberString = toLocaleString(Number(number2), options2.locale, localeOptions);
      const unit = UNITS[exponent];
      return prefix + numberString + " " + unit;
    };
  }
});

// node_modules/react-image-gallery/build/image-gallery.js
var require_image_gallery = __commonJS({
  "node_modules/react-image-gallery/build/image-gallery.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t(require_react()) : "function" == typeof define && define.amd ? define(["react"], t) : "object" == typeof exports ? exports.ImageGallery = t(require_react()) : e.ImageGallery = t(e.React);
    }(exports, function(e) {
      return (() => {
        var t = { 703: (e2, t2, n2) => {
          "use strict";
          var i2 = n2(414);
          function r3() {
          }
          function a() {
          }
          a.resetWarningCache = r3, e2.exports = function() {
            function e3(e4, t4, n4, r4, a2, s) {
              if (s !== i2) {
                var o = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                throw o.name = "Invariant Violation", o;
              }
            }
            function t3() {
              return e3;
            }
            e3.isRequired = e3;
            var n3 = { array: e3, bool: e3, func: e3, number: e3, object: e3, string: e3, symbol: e3, any: e3, arrayOf: t3, element: e3, elementType: e3, instanceOf: t3, node: e3, objectOf: t3, oneOf: t3, oneOfType: t3, shape: t3, exact: t3, checkPropTypes: a, resetWarningCache: r3 };
            return n3.PropTypes = n3, n3;
          };
        }, 697: (e2, t2, n2) => {
          e2.exports = n2(703)();
        }, 414: (e2) => {
          "use strict";
          e2.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        }, 590: (e2) => {
          var t2 = "undefined" != typeof Element, n2 = "function" == typeof Map, i2 = "function" == typeof Set, r3 = "function" == typeof ArrayBuffer && !!ArrayBuffer.isView;
          function a(e3, s) {
            if (e3 === s)
              return true;
            if (e3 && s && "object" == typeof e3 && "object" == typeof s) {
              if (e3.constructor !== s.constructor)
                return false;
              var o, l, u2, c;
              if (Array.isArray(e3)) {
                if ((o = e3.length) != s.length)
                  return false;
                for (l = o; 0 != l--; )
                  if (!a(e3[l], s[l]))
                    return false;
                return true;
              }
              if (n2 && e3 instanceof Map && s instanceof Map) {
                if (e3.size !== s.size)
                  return false;
                for (c = e3.entries(); !(l = c.next()).done; )
                  if (!s.has(l.value[0]))
                    return false;
                for (c = e3.entries(); !(l = c.next()).done; )
                  if (!a(l.value[1], s.get(l.value[0])))
                    return false;
                return true;
              }
              if (i2 && e3 instanceof Set && s instanceof Set) {
                if (e3.size !== s.size)
                  return false;
                for (c = e3.entries(); !(l = c.next()).done; )
                  if (!s.has(l.value[0]))
                    return false;
                return true;
              }
              if (r3 && ArrayBuffer.isView(e3) && ArrayBuffer.isView(s)) {
                if ((o = e3.length) != s.length)
                  return false;
                for (l = o; 0 != l--; )
                  if (e3[l] !== s[l])
                    return false;
                return true;
              }
              if (e3.constructor === RegExp)
                return e3.source === s.source && e3.flags === s.flags;
              if (e3.valueOf !== Object.prototype.valueOf)
                return e3.valueOf() === s.valueOf();
              if (e3.toString !== Object.prototype.toString)
                return e3.toString() === s.toString();
              if ((o = (u2 = Object.keys(e3)).length) !== Object.keys(s).length)
                return false;
              for (l = o; 0 != l--; )
                if (!Object.prototype.hasOwnProperty.call(s, u2[l]))
                  return false;
              if (t2 && e3 instanceof Element)
                return false;
              for (l = o; 0 != l--; )
                if (("_owner" !== u2[l] && "__v" !== u2[l] && "__o" !== u2[l] || !e3.$$typeof) && !a(e3[u2[l]], s[u2[l]]))
                  return false;
              return true;
            }
            return e3 != e3 && s != s;
          }
          e2.exports = function(e3, t3) {
            try {
              return a(e3, t3);
            } catch (e4) {
              if ((e4.message || "").match(/stack|recursion/i))
                return console.warn("react-fast-compare cannot handle circular refs"), false;
              throw e4;
            }
          };
        }, 37: function(e2, t2, n2) {
          !function(e3, t3) {
            function n3() {
              return n3 = Object.assign || function(e4) {
                for (var t4 = 1; t4 < arguments.length; t4++) {
                  var n4 = arguments[t4];
                  for (var i3 in n4)
                    Object.prototype.hasOwnProperty.call(n4, i3) && (e4[i3] = n4[i3]);
                }
                return e4;
              }, n3.apply(this, arguments);
            }
            var i2 = "Left", r3 = "Right", a = "Down", s = { delta: 10, preventDefaultTouchmoveEvent: false, rotationAngle: 0, trackMouse: false, trackTouch: true }, o = { first: true, initial: [0, 0], start: 0, swiping: false, xy: [0, 0] }, l = "mousemove", u2 = "mouseup";
            function c(e4, t4) {
              if (0 === t4)
                return e4;
              var n4 = Math.PI / 180 * t4;
              return [e4[0] * Math.cos(n4) + e4[1] * Math.sin(n4), e4[1] * Math.cos(n4) - e4[0] * Math.sin(n4)];
            }
            function h(e4, t4) {
              var s2 = function(t5) {
                t5 && "touches" in t5 && t5.touches.length > 1 || e4(function(e5, i3) {
                  i3.trackMouse && (document.addEventListener(l, h2), document.addEventListener(u2, f));
                  var r4 = "touches" in t5 ? t5.touches[0] : t5, a2 = c([r4.clientX, r4.clientY], i3.rotationAngle);
                  return n3({}, e5, o, { initial: [].concat(a2), xy: a2, start: t5.timeStamp || 0 });
                });
              }, h2 = function(t5) {
                e4(function(e5, s3) {
                  if ("touches" in t5 && t5.touches.length > 1)
                    return e5;
                  var o2 = "touches" in t5 ? t5.touches[0] : t5, l2 = c([o2.clientX, o2.clientY], s3.rotationAngle), u3 = l2[0], h3 = l2[1], d2 = u3 - e5.xy[0], f2 = h3 - e5.xy[1], p2 = Math.abs(d2), m2 = Math.abs(f2), g = (t5.timeStamp || 0) - e5.start, v = Math.sqrt(p2 * p2 + m2 * m2) / (g || 1), b = [d2 / (g || 1), f2 / (g || 1)];
                  if (p2 < s3.delta && m2 < s3.delta && !e5.swiping)
                    return e5;
                  var y = function(e6, t6, n4, s4) {
                    return e6 > t6 ? n4 > 0 ? r3 : i2 : s4 > 0 ? a : "Up";
                  }(p2, m2, d2, f2), w = { absX: p2, absY: m2, deltaX: d2, deltaY: f2, dir: y, event: t5, first: e5.first, initial: e5.initial, velocity: v, vxvy: b };
                  s3.onSwiping && s3.onSwiping(w);
                  var T = false;
                  return (s3.onSwiping || s3.onSwiped || "onSwiped" + y in s3) && (T = true), T && s3.preventDefaultTouchmoveEvent && s3.trackTouch && t5.cancelable && t5.preventDefault(), n3({}, e5, { first: false, eventData: w, swiping: true });
                });
              }, d = function(t5) {
                e4(function(e5, i3) {
                  var r4;
                  if (e5.swiping && e5.eventData) {
                    r4 = n3({}, e5.eventData, { event: t5 }), i3.onSwiped && i3.onSwiped(r4);
                    var a2 = "onSwiped" + r4.dir;
                    a2 in i3 && i3[a2](r4);
                  } else
                    i3.onTap && i3.onTap({ event: t5 });
                  return n3({}, e5, o, { eventData: r4 });
                });
              }, f = function(e5) {
                document.removeEventListener(l, h2), document.removeEventListener(u2, f), d(e5);
              }, p = function(e5, t5) {
                var n4 = function() {
                };
                if (e5 && e5.addEventListener) {
                  var i3 = [["touchstart", s2], ["touchmove", h2], ["touchend", d]];
                  i3.forEach(function(n5) {
                    var i4 = n5[0], r4 = n5[1];
                    return e5.addEventListener(i4, r4, { passive: t5 });
                  }), n4 = function() {
                    return i3.forEach(function(t6) {
                      var n5 = t6[0], i4 = t6[1];
                      return e5.removeEventListener(n5, i4);
                    });
                  };
                }
                return n4;
              }, m = { ref: function(t5) {
                null !== t5 && e4(function(e5, i3) {
                  if (e5.el === t5)
                    return e5;
                  var r4 = {};
                  return e5.el && e5.el !== t5 && e5.cleanUpTouch && (e5.cleanUpTouch(), r4.cleanUpTouch = void 0), i3.trackTouch && t5 && (r4.cleanUpTouch = p(t5, !i3.preventDefaultTouchmoveEvent)), n3({}, e5, { el: t5 }, r4);
                });
              } };
              return t4.trackMouse && (m.onMouseDown = s2), [m, p];
            }
            e3.DOWN = a, e3.LEFT = i2, e3.RIGHT = r3, e3.UP = "Up", e3.useSwipeable = function(e4) {
              var i3 = e4.trackMouse, r4 = t3.useRef(n3({}, o)), a2 = t3.useRef(n3({}, s));
              a2.current = n3({}, s, e4);
              var l2 = t3.useMemo(function() {
                return h(function(e5) {
                  return r4.current = e5(r4.current, a2.current);
                }, { trackMouse: i3 });
              }, [i3]), u3 = l2[0], c2 = l2[1];
              return r4.current = function(e5, t4, i4) {
                var r5 = {};
                return !t4.trackTouch && e5.cleanUpTouch ? (e5.cleanUpTouch(), r5.cleanUpTouch = void 0) : t4.trackTouch && !e5.cleanUpTouch && e5.el && (r5.cleanUpTouch = i4(e5.el, !t4.preventDefaultTouchmoveEvent)), n3({}, e5, r5);
              }(r4.current, a2.current, c2), u3;
            };
          }(t2, n2(888));
        }, 888: (t2) => {
          "use strict";
          t2.exports = e;
        } }, n = {};
        function i(e2) {
          var r3 = n[e2];
          if (void 0 !== r3)
            return r3.exports;
          var a = n[e2] = { exports: {} };
          return t[e2].call(a.exports, a, a.exports, i), a.exports;
        }
        i.n = (e2) => {
          var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
          return i.d(t2, { a: t2 }), t2;
        }, i.d = (e2, t2) => {
          for (var n2 in t2)
            i.o(t2, n2) && !i.o(e2, n2) && Object.defineProperty(e2, n2, { enumerable: true, get: t2[n2] });
        }, i.g = function() {
          if ("object" == typeof globalThis)
            return globalThis;
          try {
            return this || new Function("return this")();
          } catch (e2) {
            if ("object" == typeof window)
              return window;
          }
        }(), i.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), i.r = (e2) => {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
        };
        var r2 = {};
        return (() => {
          "use strict";
          function e2(t3) {
            var n3, i2, r3 = "";
            if ("string" == typeof t3 || "number" == typeof t3)
              r3 += t3;
            else if ("object" == typeof t3)
              if (Array.isArray(t3))
                for (n3 = 0; n3 < t3.length; n3++)
                  t3[n3] && (i2 = e2(t3[n3])) && (r3 && (r3 += " "), r3 += i2);
              else
                for (n3 in t3)
                  t3[n3] && (r3 && (r3 += " "), r3 += n3);
            return r3;
          }
          function t2() {
            for (var t3, n3, i2 = 0, r3 = ""; i2 < arguments.length; )
              (t3 = arguments[i2++]) && (n3 = e2(t3)) && (r3 && (r3 += " "), r3 += n3);
            return r3;
          }
          i.r(r2), i.d(r2, { default: () => Pe });
          var n2 = i(888), a = i.n(n2);
          const s = function(e3) {
            var t3 = typeof e3;
            return null != e3 && ("object" == t3 || "function" == t3);
          }, o = "object" == typeof global && global && global.Object === Object && global;
          var l = "object" == typeof self && self && self.Object === Object && self;
          const u2 = o || l || Function("return this")(), c = function() {
            return u2.Date.now();
          };
          var h = /\s/;
          var d = /^\s+/;
          const f = function(e3) {
            return e3 ? e3.slice(0, function(e4) {
              for (var t3 = e4.length; t3-- && h.test(e4.charAt(t3)); )
                ;
              return t3;
            }(e3) + 1).replace(d, "") : e3;
          }, p = u2.Symbol;
          var m = Object.prototype, g = m.hasOwnProperty, v = m.toString, b = p ? p.toStringTag : void 0;
          var y = Object.prototype.toString;
          var w = p ? p.toStringTag : void 0;
          const T = function(e3) {
            return null == e3 ? void 0 === e3 ? "[object Undefined]" : "[object Null]" : w && w in Object(e3) ? function(e4) {
              var t3 = g.call(e4, b), n3 = e4[b];
              try {
                e4[b] = void 0;
                var i2 = true;
              } catch (e5) {
              }
              var r3 = v.call(e4);
              return i2 && (t3 ? e4[b] = n3 : delete e4[b]), r3;
            }(e3) : function(e4) {
              return y.call(e4);
            }(e3);
          };
          var S = /^[-+]0x[0-9a-f]+$/i, O = /^0b[01]+$/i, E = /^0o[0-7]+$/i, k = parseInt;
          const I = function(e3) {
            if ("number" == typeof e3)
              return e3;
            if (function(e4) {
              return "symbol" == typeof e4 || function(e5) {
                return null != e5 && "object" == typeof e5;
              }(e4) && "[object Symbol]" == T(e4);
            }(e3))
              return NaN;
            if (s(e3)) {
              var t3 = "function" == typeof e3.valueOf ? e3.valueOf() : e3;
              e3 = s(t3) ? t3 + "" : t3;
            }
            if ("string" != typeof e3)
              return 0 === e3 ? e3 : +e3;
            e3 = f(e3);
            var n3 = O.test(e3);
            return n3 || E.test(e3) ? k(e3.slice(2), n3 ? 2 : 8) : S.test(e3) ? NaN : +e3;
          };
          var x = Math.max, _ = Math.min;
          const R = function(e3, t3, n3) {
            var i2, r3, a2, o2, l2, u3, h2 = 0, d2 = false, f2 = false, p2 = true;
            if ("function" != typeof e3)
              throw new TypeError("Expected a function");
            function m2(t4) {
              var n4 = i2, a3 = r3;
              return i2 = r3 = void 0, h2 = t4, o2 = e3.apply(a3, n4);
            }
            function g2(e4) {
              return h2 = e4, l2 = setTimeout(b2, t3), d2 ? m2(e4) : o2;
            }
            function v2(e4) {
              var n4 = e4 - u3;
              return void 0 === u3 || n4 >= t3 || n4 < 0 || f2 && e4 - h2 >= a2;
            }
            function b2() {
              var e4 = c();
              if (v2(e4))
                return y2(e4);
              l2 = setTimeout(b2, function(e5) {
                var n4 = t3 - (e5 - u3);
                return f2 ? _(n4, a2 - (e5 - h2)) : n4;
              }(e4));
            }
            function y2(e4) {
              return l2 = void 0, p2 && i2 ? m2(e4) : (i2 = r3 = void 0, o2);
            }
            function w2() {
              var e4 = c(), n4 = v2(e4);
              if (i2 = arguments, r3 = this, u3 = e4, n4) {
                if (void 0 === l2)
                  return g2(u3);
                if (f2)
                  return clearTimeout(l2), l2 = setTimeout(b2, t3), m2(u3);
              }
              return void 0 === l2 && (l2 = setTimeout(b2, t3)), o2;
            }
            return t3 = I(t3) || 0, s(n3) && (d2 = !!n3.leading, a2 = (f2 = "maxWait" in n3) ? x(I(n3.maxWait) || 0, t3) : a2, p2 = "trailing" in n3 ? !!n3.trailing : p2), w2.cancel = function() {
              void 0 !== l2 && clearTimeout(l2), h2 = 0, i2 = u3 = r3 = l2 = void 0;
            }, w2.flush = function() {
              return void 0 === l2 ? o2 : y2(c());
            }, w2;
          }, L = function(e3, t3, n3) {
            var i2 = true, r3 = true;
            if ("function" != typeof e3)
              throw new TypeError("Expected a function");
            return s(n3) && (i2 = "leading" in n3 ? !!n3.leading : i2, r3 = "trailing" in n3 ? !!n3.trailing : r3), R(e3, t3, { leading: i2, maxWait: t3, trailing: r3 });
          };
          var P = i(590), M = i.n(P), W = function() {
            if ("undefined" != typeof Map)
              return Map;
            function e3(e4, t3) {
              var n3 = -1;
              return e4.some(function(e5, i2) {
                return e5[0] === t3 && (n3 = i2, true);
              }), n3;
            }
            return function() {
              function t3() {
                this.__entries__ = [];
              }
              return Object.defineProperty(t3.prototype, "size", { get: function() {
                return this.__entries__.length;
              }, enumerable: true, configurable: true }), t3.prototype.get = function(t4) {
                var n3 = e3(this.__entries__, t4), i2 = this.__entries__[n3];
                return i2 && i2[1];
              }, t3.prototype.set = function(t4, n3) {
                var i2 = e3(this.__entries__, t4);
                ~i2 ? this.__entries__[i2][1] = n3 : this.__entries__.push([t4, n3]);
              }, t3.prototype.delete = function(t4) {
                var n3 = this.__entries__, i2 = e3(n3, t4);
                ~i2 && n3.splice(i2, 1);
              }, t3.prototype.has = function(t4) {
                return !!~e3(this.__entries__, t4);
              }, t3.prototype.clear = function() {
                this.__entries__.splice(0);
              }, t3.prototype.forEach = function(e4, t4) {
                void 0 === t4 && (t4 = null);
                for (var n3 = 0, i2 = this.__entries__; n3 < i2.length; n3++) {
                  var r3 = i2[n3];
                  e4.call(t4, r3[1], r3[0]);
                }
              }, t3;
            }();
          }(), D = "undefined" != typeof window && "undefined" != typeof document && window.document === document, F = void 0 !== i.g && i.g.Math === Math ? i.g : "undefined" != typeof self && self.Math === Math ? self : "undefined" != typeof window && window.Math === Math ? window : Function("return this")(), C = "function" == typeof requestAnimationFrame ? requestAnimationFrame.bind(F) : function(e3) {
            return setTimeout(function() {
              return e3(Date.now());
            }, 1e3 / 60);
          }, N = ["top", "right", "bottom", "left", "width", "height", "size", "weight"], z = "undefined" != typeof MutationObserver, j = function() {
            function e3() {
              this.connected_ = false, this.mutationEventsAdded_ = false, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = function(e4, t3) {
                var n3 = false, i2 = false, r3 = 0;
                function a2() {
                  n3 && (n3 = false, e4()), i2 && o2();
                }
                function s2() {
                  C(a2);
                }
                function o2() {
                  var e5 = Date.now();
                  if (n3) {
                    if (e5 - r3 < 2)
                      return;
                    i2 = true;
                  } else
                    n3 = true, i2 = false, setTimeout(s2, 20);
                  r3 = e5;
                }
                return o2;
              }(this.refresh.bind(this));
            }
            return e3.prototype.addObserver = function(e4) {
              ~this.observers_.indexOf(e4) || this.observers_.push(e4), this.connected_ || this.connect_();
            }, e3.prototype.removeObserver = function(e4) {
              var t3 = this.observers_, n3 = t3.indexOf(e4);
              ~n3 && t3.splice(n3, 1), !t3.length && this.connected_ && this.disconnect_();
            }, e3.prototype.refresh = function() {
              this.updateObservers_() && this.refresh();
            }, e3.prototype.updateObservers_ = function() {
              var e4 = this.observers_.filter(function(e5) {
                return e5.gatherActive(), e5.hasActive();
              });
              return e4.forEach(function(e5) {
                return e5.broadcastActive();
              }), e4.length > 0;
            }, e3.prototype.connect_ = function() {
              D && !this.connected_ && (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), z ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, { attributes: true, childList: true, characterData: true, subtree: true })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = true), this.connected_ = true);
            }, e3.prototype.disconnect_ = function() {
              D && this.connected_ && (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = false, this.connected_ = false);
            }, e3.prototype.onTransitionEnd_ = function(e4) {
              var t3 = e4.propertyName, n3 = void 0 === t3 ? "" : t3;
              N.some(function(e5) {
                return !!~n3.indexOf(e5);
              }) && this.refresh();
            }, e3.getInstance = function() {
              return this.instance_ || (this.instance_ = new e3()), this.instance_;
            }, e3.instance_ = null, e3;
          }(), B = function(e3, t3) {
            for (var n3 = 0, i2 = Object.keys(t3); n3 < i2.length; n3++) {
              var r3 = i2[n3];
              Object.defineProperty(e3, r3, { value: t3[r3], enumerable: false, writable: false, configurable: true });
            }
            return e3;
          }, A = function(e3) {
            return e3 && e3.ownerDocument && e3.ownerDocument.defaultView || F;
          }, G = V(0, 0, 0, 0);
          function U(e3) {
            return parseFloat(e3) || 0;
          }
          function H(e3) {
            for (var t3 = [], n3 = 1; n3 < arguments.length; n3++)
              t3[n3 - 1] = arguments[n3];
            return t3.reduce(function(t4, n4) {
              return t4 + U(e3["border-" + n4 + "-width"]);
            }, 0);
          }
          var q = "undefined" != typeof SVGGraphicsElement ? function(e3) {
            return e3 instanceof A(e3).SVGGraphicsElement;
          } : function(e3) {
            return e3 instanceof A(e3).SVGElement && "function" == typeof e3.getBBox;
          };
          function K(e3) {
            return D ? q(e3) ? function(e4) {
              var t3 = e4.getBBox();
              return V(0, 0, t3.width, t3.height);
            }(e3) : function(e4) {
              var t3 = e4.clientWidth, n3 = e4.clientHeight;
              if (!t3 && !n3)
                return G;
              var i2 = A(e4).getComputedStyle(e4), r3 = function(e5) {
                for (var t4 = {}, n4 = 0, i3 = ["top", "right", "bottom", "left"]; n4 < i3.length; n4++) {
                  var r4 = i3[n4], a3 = e5["padding-" + r4];
                  t4[r4] = U(a3);
                }
                return t4;
              }(i2), a2 = r3.left + r3.right, s2 = r3.top + r3.bottom, o2 = U(i2.width), l2 = U(i2.height);
              if ("border-box" === i2.boxSizing && (Math.round(o2 + a2) !== t3 && (o2 -= H(i2, "left", "right") + a2), Math.round(l2 + s2) !== n3 && (l2 -= H(i2, "top", "bottom") + s2)), !function(e5) {
                return e5 === A(e5).document.documentElement;
              }(e4)) {
                var u3 = Math.round(o2 + a2) - t3, c2 = Math.round(l2 + s2) - n3;
                1 !== Math.abs(u3) && (o2 -= u3), 1 !== Math.abs(c2) && (l2 -= c2);
              }
              return V(r3.left, r3.top, o2, l2);
            }(e3) : G;
          }
          function V(e3, t3, n3, i2) {
            return { x: e3, y: t3, width: n3, height: i2 };
          }
          var X = function() {
            function e3(e4) {
              this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = V(0, 0, 0, 0), this.target = e4;
            }
            return e3.prototype.isActive = function() {
              var e4 = K(this.target);
              return this.contentRect_ = e4, e4.width !== this.broadcastWidth || e4.height !== this.broadcastHeight;
            }, e3.prototype.broadcastRect = function() {
              var e4 = this.contentRect_;
              return this.broadcastWidth = e4.width, this.broadcastHeight = e4.height, e4;
            }, e3;
          }(), Y = function(e3, t3) {
            var n3, i2, r3, a2, s2, o2, l2, u3 = (i2 = (n3 = t3).x, r3 = n3.y, a2 = n3.width, s2 = n3.height, o2 = "undefined" != typeof DOMRectReadOnly ? DOMRectReadOnly : Object, l2 = Object.create(o2.prototype), B(l2, { x: i2, y: r3, width: a2, height: s2, top: r3, right: i2 + a2, bottom: s2 + r3, left: i2 }), l2);
            B(this, { target: e3, contentRect: u3 });
          }, $2 = function() {
            function e3(e4, t3, n3) {
              if (this.activeObservations_ = [], this.observations_ = new W(), "function" != typeof e4)
                throw new TypeError("The callback provided as parameter 1 is not a function.");
              this.callback_ = e4, this.controller_ = t3, this.callbackCtx_ = n3;
            }
            return e3.prototype.observe = function(e4) {
              if (!arguments.length)
                throw new TypeError("1 argument required, but only 0 present.");
              if ("undefined" != typeof Element && Element instanceof Object) {
                if (!(e4 instanceof A(e4).Element))
                  throw new TypeError('parameter 1 is not of type "Element".');
                var t3 = this.observations_;
                t3.has(e4) || (t3.set(e4, new X(e4)), this.controller_.addObserver(this), this.controller_.refresh());
              }
            }, e3.prototype.unobserve = function(e4) {
              if (!arguments.length)
                throw new TypeError("1 argument required, but only 0 present.");
              if ("undefined" != typeof Element && Element instanceof Object) {
                if (!(e4 instanceof A(e4).Element))
                  throw new TypeError('parameter 1 is not of type "Element".');
                var t3 = this.observations_;
                t3.has(e4) && (t3.delete(e4), t3.size || this.controller_.removeObserver(this));
              }
            }, e3.prototype.disconnect = function() {
              this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
            }, e3.prototype.gatherActive = function() {
              var e4 = this;
              this.clearActive(), this.observations_.forEach(function(t3) {
                t3.isActive() && e4.activeObservations_.push(t3);
              });
            }, e3.prototype.broadcastActive = function() {
              if (this.hasActive()) {
                var e4 = this.callbackCtx_, t3 = this.activeObservations_.map(function(e5) {
                  return new Y(e5.target, e5.broadcastRect());
                });
                this.callback_.call(e4, t3, e4), this.clearActive();
              }
            }, e3.prototype.clearActive = function() {
              this.activeObservations_.splice(0);
            }, e3.prototype.hasActive = function() {
              return this.activeObservations_.length > 0;
            }, e3;
          }(), J = "undefined" != typeof WeakMap ? /* @__PURE__ */ new WeakMap() : new W(), Q = function e3(t3) {
            if (!(this instanceof e3))
              throw new TypeError("Cannot call a class as a function.");
            if (!arguments.length)
              throw new TypeError("1 argument required, but only 0 present.");
            var n3 = j.getInstance(), i2 = new $2(t3, n3, this);
            J.set(this, i2);
          };
          ["observe", "unobserve", "disconnect"].forEach(function(e3) {
            Q.prototype[e3] = function() {
              var t3;
              return (t3 = J.get(this))[e3].apply(t3, arguments);
            };
          });
          const Z = void 0 !== F.ResizeObserver ? F.ResizeObserver : Q;
          var ee = i(37), te = i(697), ne = a().memo(function(e3) {
            var t3 = e3.description, n3 = e3.fullscreen, i2 = e3.handleImageLoaded, r3 = e3.isFullscreen, s2 = e3.onImageError, o2 = e3.original, l2 = e3.originalAlt, u3 = e3.originalHeight, c2 = e3.originalWidth, h2 = e3.originalTitle, d2 = e3.sizes, f2 = e3.srcSet, p2 = e3.loading, m2 = r3 && n3 || o2;
            return a().createElement(a().Fragment, null, a().createElement("img", { className: "image-gallery-image", src: m2, alt: l2, srcSet: f2, height: u3, width: c2, sizes: d2, title: h2, onLoad: function(e4) {
              return i2(e4, o2);
            }, onError: s2, loading: p2 }), t3 && a().createElement("span", { className: "image-gallery-description" }, t3));
          });
          ne.displayName = "Item", ne.propTypes = { description: te.string, fullscreen: te.string, handleImageLoaded: te.func.isRequired, isFullscreen: te.bool, onImageError: te.func.isRequired, original: te.string.isRequired, originalAlt: te.string, originalHeight: te.string, originalWidth: te.string, originalTitle: te.string, sizes: te.string, srcSet: te.string, loading: te.string }, ne.defaultProps = { description: "", fullscreen: "", isFullscreen: false, originalAlt: "", originalHeight: "", originalWidth: "", originalTitle: "", sizes: "", srcSet: "", loading: "eager" };
          const ie = ne;
          var re = { left: a().createElement("polyline", { points: "15 18 9 12 15 6" }), right: a().createElement("polyline", { points: "9 18 15 12 9 6" }), maximize: a().createElement("path", { d: "M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3" }), minimize: a().createElement("path", { d: "M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3" }), play: a().createElement("polygon", { points: "5 3 19 12 5 21 5 3" }), pause: a().createElement(a().Fragment, null, a().createElement("rect", { x: "6", y: "4", width: "4", height: "16" }), a().createElement("rect", { x: "14", y: "4", width: "4", height: "16" })) }, ae = function(e3) {
            var t3 = e3.strokeWidth, n3 = e3.viewBox, i2 = e3.icon;
            return a().createElement("svg", { className: "image-gallery-svg", xmlns: "http://www.w3.org/2000/svg", viewBox: n3, fill: "none", stroke: "currentColor", strokeWidth: t3, strokeLinecap: "round", strokeLinejoin: "round" }, re[i2]);
          };
          ae.propTypes = { strokeWidth: te.number, viewBox: te.string, icon: (0, te.oneOf)(["left", "right", "maximize", "minimize", "play", "pause"]).isRequired }, ae.defaultProps = { strokeWidth: 1, viewBox: "0 0 24 24" };
          const se = ae;
          var oe = a().memo(function(e3) {
            var t3 = e3.isFullscreen, n3 = e3.onClick;
            return a().createElement("button", { type: "button", className: "image-gallery-icon image-gallery-fullscreen-button", onClick: n3, "aria-label": "Open Fullscreen" }, a().createElement(se, { strokeWidth: 2, icon: t3 ? "minimize" : "maximize" }));
          });
          oe.displayName = "Fullscreen", oe.propTypes = { isFullscreen: te.bool.isRequired, onClick: te.func.isRequired };
          const le = oe;
          var ue = a().memo(function(e3) {
            var t3 = e3.disabled, n3 = e3.onClick;
            return a().createElement("button", { type: "button", className: "image-gallery-icon image-gallery-left-nav", disabled: t3, onClick: n3, "aria-label": "Previous Slide" }, a().createElement(se, { icon: "left", viewBox: "6 0 12 24" }));
          });
          ue.displayName = "LeftNav", ue.propTypes = { disabled: te.bool.isRequired, onClick: te.func.isRequired };
          const ce = ue;
          var he = a().memo(function(e3) {
            var t3 = e3.disabled, n3 = e3.onClick;
            return a().createElement("button", { type: "button", className: "image-gallery-icon image-gallery-right-nav", disabled: t3, onClick: n3, "aria-label": "Next Slide" }, a().createElement(se, { icon: "right", viewBox: "6 0 12 24" }));
          });
          he.displayName = "RightNav", he.propTypes = { disabled: te.bool.isRequired, onClick: te.func.isRequired };
          const de = he;
          var fe = a().memo(function(e3) {
            var t3 = e3.isPlaying, n3 = e3.onClick;
            return a().createElement("button", { type: "button", className: "image-gallery-icon image-gallery-play-button", onClick: n3, "aria-label": "Play or Pause Slideshow" }, a().createElement(se, { strokeWidth: 2, icon: t3 ? "pause" : "play" }));
          });
          fe.displayName = "PlayPause", fe.propTypes = { isPlaying: te.bool.isRequired, onClick: te.func.isRequired };
          const pe = fe;
          function me() {
            return me = Object.assign || function(e3) {
              for (var t3 = 1; t3 < arguments.length; t3++) {
                var n3 = arguments[t3];
                for (var i2 in n3)
                  Object.prototype.hasOwnProperty.call(n3, i2) && (e3[i2] = n3[i2]);
              }
              return e3;
            }, me.apply(this, arguments);
          }
          var ge = function(e3) {
            var t3 = e3.children, n3 = e3.className, i2 = e3.delta, r3 = e3.onSwiping, s2 = e3.onSwiped, o2 = (0, ee.useSwipeable)({ delta: i2, onSwiping: r3, onSwiped: s2 });
            return a().createElement("div", me({}, o2, { className: n3 }), t3);
          };
          ge.propTypes = { children: te.node.isRequired, className: te.string, delta: te.number, onSwiped: te.func, onSwiping: te.func }, ge.defaultProps = { className: "", delta: 0, onSwiping: function() {
          }, onSwiped: function() {
          } };
          const ve = ge;
          function be(e3) {
            return be = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
              return typeof e4;
            } : function(e4) {
              return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
            }, be(e3);
          }
          function ye(e3, t3) {
            var n3 = Object.keys(e3);
            if (Object.getOwnPropertySymbols) {
              var i2 = Object.getOwnPropertySymbols(e3);
              t3 && (i2 = i2.filter(function(t4) {
                return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
              })), n3.push.apply(n3, i2);
            }
            return n3;
          }
          function we(e3) {
            for (var t3 = 1; t3 < arguments.length; t3++) {
              var n3 = null != arguments[t3] ? arguments[t3] : {};
              t3 % 2 ? ye(Object(n3), true).forEach(function(t4) {
                Te(e3, t4, n3[t4]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(n3)) : ye(Object(n3)).forEach(function(t4) {
                Object.defineProperty(e3, t4, Object.getOwnPropertyDescriptor(n3, t4));
              });
            }
            return e3;
          }
          function Te(e3, t3, n3) {
            return t3 in e3 ? Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }) : e3[t3] = n3, e3;
          }
          function Se(e3, t3) {
            for (var n3 = 0; n3 < t3.length; n3++) {
              var i2 = t3[n3];
              i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(e3, i2.key, i2);
            }
          }
          function Oe(e3, t3) {
            return Oe = Object.setPrototypeOf || function(e4, t4) {
              return e4.__proto__ = t4, e4;
            }, Oe(e3, t3);
          }
          function Ee(e3, t3) {
            return !t3 || "object" !== be(t3) && "function" != typeof t3 ? ke(e3) : t3;
          }
          function ke(e3) {
            if (void 0 === e3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e3;
          }
          function Ie(e3) {
            return Ie = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
              return e4.__proto__ || Object.getPrototypeOf(e4);
            }, Ie(e3);
          }
          var xe = ["fullscreenchange", "MSFullscreenChange", "mozfullscreenchange", "webkitfullscreenchange"], _e = (0, te.arrayOf)((0, te.shape)({ srcSet: te.string, media: te.string }));
          function Re(e3) {
            var t3 = parseInt(e3.keyCode || e3.which || 0, 10);
            return 66 === t3 || 62 === t3;
          }
          var Le = function(e3) {
            !function(e4, t3) {
              if ("function" != typeof t3 && null !== t3)
                throw new TypeError("Super expression must either be null or a function");
              e4.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e4, writable: true, configurable: true } }), t3 && Oe(e4, t3);
            }(l2, e3);
            var n3, i2, r3, s2, o2 = (r3 = l2, s2 = function() {
              if ("undefined" == typeof Reflect || !Reflect.construct)
                return false;
              if (Reflect.construct.sham)
                return false;
              if ("function" == typeof Proxy)
                return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch (e4) {
                return false;
              }
            }(), function() {
              var e4, t3 = Ie(r3);
              if (s2) {
                var n4 = Ie(this).constructor;
                e4 = Reflect.construct(t3, arguments, n4);
              } else
                e4 = t3.apply(this, arguments);
              return Ee(this, e4);
            });
            function l2(e4) {
              var t3;
              return function(e5, t4) {
                if (!(e5 instanceof t4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, l2), (t3 = o2.call(this, e4)).state = { currentIndex: e4.startIndex, thumbsTranslate: 0, thumbsSwipedTranslate: 0, currentSlideOffset: 0, galleryWidth: 0, thumbnailsWrapperWidth: 0, thumbnailsWrapperHeight: 0, thumbsStyle: { transition: "all ".concat(e4.slideDuration, "ms ease-out") }, isFullscreen: false, isSwipingThumbnail: false, isPlaying: false }, t3.loadedImages = {}, t3.imageGallery = a().createRef(), t3.thumbnailsWrapper = a().createRef(), t3.thumbnails = a().createRef(), t3.imageGallerySlideWrapper = a().createRef(), t3.handleImageLoaded = t3.handleImageLoaded.bind(ke(t3)), t3.handleKeyDown = t3.handleKeyDown.bind(ke(t3)), t3.handleMouseDown = t3.handleMouseDown.bind(ke(t3)), t3.handleResize = t3.handleResize.bind(ke(t3)), t3.handleTouchMove = t3.handleTouchMove.bind(ke(t3)), t3.handleOnSwiped = t3.handleOnSwiped.bind(ke(t3)), t3.handleScreenChange = t3.handleScreenChange.bind(ke(t3)), t3.handleSwiping = t3.handleSwiping.bind(ke(t3)), t3.handleThumbnailSwiping = t3.handleThumbnailSwiping.bind(ke(t3)), t3.handleOnThumbnailSwiped = t3.handleOnThumbnailSwiped.bind(ke(t3)), t3.onThumbnailMouseLeave = t3.onThumbnailMouseLeave.bind(ke(t3)), t3.handleImageError = t3.handleImageError.bind(ke(t3)), t3.pauseOrPlay = t3.pauseOrPlay.bind(ke(t3)), t3.renderThumbInner = t3.renderThumbInner.bind(ke(t3)), t3.renderItem = t3.renderItem.bind(ke(t3)), t3.slideLeft = t3.slideLeft.bind(ke(t3)), t3.slideRight = t3.slideRight.bind(ke(t3)), t3.toggleFullScreen = t3.toggleFullScreen.bind(ke(t3)), t3.togglePlay = t3.togglePlay.bind(ke(t3)), t3.unthrottledSlideToIndex = t3.slideToIndex, t3.slideToIndex = L(t3.unthrottledSlideToIndex, e4.slideDuration, { trailing: false }), e4.lazyLoad && (t3.lazyLoaded = []), t3;
            }
            return n3 = l2, i2 = [{ key: "componentDidMount", value: function() {
              var e4 = this.props, t3 = e4.autoPlay, n4 = e4.useWindowKeyDown;
              t3 && this.play(), n4 ? window.addEventListener("keydown", this.handleKeyDown) : this.imageGallery.current.addEventListener("keydown", this.handleKeyDown), window.addEventListener("mousedown", this.handleMouseDown), window.addEventListener("touchmove", this.handleTouchMove, { passive: false }), this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper), this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper), this.addScreenChangeEvent();
            } }, { key: "componentDidUpdate", value: function(e4, t3) {
              var n4 = this.props, i3 = n4.items, r4 = n4.lazyLoad, a2 = n4.slideDuration, s3 = n4.slideInterval, o3 = n4.startIndex, l3 = n4.thumbnailPosition, u3 = n4.showThumbnails, c2 = n4.useWindowKeyDown, h2 = this.state, d2 = h2.currentIndex, f2 = h2.isPlaying, p2 = e4.items.length !== i3.length, m2 = !M()(e4.items, i3), g2 = e4.startIndex !== o3, v2 = e4.thumbnailPosition !== l3, b2 = e4.showThumbnails !== u3;
              s3 === e4.slideInterval && a2 === e4.slideDuration || f2 && (this.pause(), this.play()), v2 && (this.removeResizeObserver(), this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper), this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper)), b2 && u3 && this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper), b2 && !u3 && this.removeThumbnailsResizeObserver(), (p2 || b2) && this.handleResize(), t3.currentIndex !== d2 && this.slideThumbnailBar(), e4.slideDuration !== a2 && (this.slideToIndex = L(this.unthrottledSlideToIndex, a2, { trailing: false })), !r4 || e4.lazyLoad && !m2 || (this.lazyLoaded = []), c2 !== e4.useWindowKeyDown && (c2 ? (this.imageGallery.current.removeEventListener("keydown", this.handleKeyDown), window.addEventListener("keydown", this.handleKeyDown)) : (window.removeEventListener("keydown", this.handleKeyDown), this.imageGallery.current.addEventListener("keydown", this.handleKeyDown))), (g2 || m2) && this.setState({ currentIndex: o3, slideStyle: { transition: "none" } });
            } }, { key: "componentWillUnmount", value: function() {
              var e4 = this.props.useWindowKeyDown;
              window.removeEventListener("mousedown", this.handleMouseDown), window.removeEventListener("touchmove", this.handleTouchMove), this.removeScreenChangeEvent(), this.removeResizeObserver(), this.playPauseIntervalId && (window.clearInterval(this.playPauseIntervalId), this.playPauseIntervalId = null), this.transitionTimer && window.clearTimeout(this.transitionTimer), e4 ? window.removeEventListener("keydown", this.handleKeyDown) : this.imageGallery.current.removeEventListener("keydown", this.handleKeyDown);
            } }, { key: "onSliding", value: function() {
              var e4 = this, t3 = this.state, n4 = t3.currentIndex, i3 = t3.isTransitioning, r4 = this.props, a2 = r4.onSlide, s3 = r4.slideDuration;
              this.transitionTimer = window.setTimeout(function() {
                i3 && (e4.setState({ isTransitioning: !i3, isSwipingThumbnail: false }), a2 && a2(n4));
              }, s3 + 50);
            } }, { key: "onThumbnailClick", value: function(e4, t3) {
              var n4 = this.props.onThumbnailClick;
              e4.target.parentNode.parentNode.blur(), this.slideToIndex(t3, e4), n4 && n4(e4, t3);
            } }, { key: "onThumbnailMouseOver", value: function(e4, t3) {
              var n4 = this;
              this.thumbnailMouseOverTimer && (window.clearTimeout(this.thumbnailMouseOverTimer), this.thumbnailMouseOverTimer = null), this.thumbnailMouseOverTimer = window.setTimeout(function() {
                n4.slideToIndex(t3), n4.pause();
              }, 300);
            } }, { key: "onThumbnailMouseLeave", value: function() {
              if (this.thumbnailMouseOverTimer) {
                var e4 = this.props.autoPlay;
                window.clearTimeout(this.thumbnailMouseOverTimer), this.thumbnailMouseOverTimer = null, e4 && this.play();
              }
            } }, { key: "setThumbsTranslate", value: function(e4) {
              this.setState({ thumbsTranslate: e4 });
            } }, { key: "setModalFullscreen", value: function(e4) {
              var t3 = this.props.onScreenChange;
              this.setState({ modalFullscreen: e4 }), t3 && t3(e4);
            } }, { key: "getThumbsTranslate", value: function(e4) {
              var t3, n4 = this.props, i3 = n4.disableThumbnailScroll, r4 = n4.items, a2 = this.state, s3 = a2.thumbnailsWrapperWidth, o3 = a2.thumbnailsWrapperHeight, l3 = this.thumbnails && this.thumbnails.current;
              if (i3)
                return 0;
              if (l3) {
                if (this.isThumbnailVertical()) {
                  if (l3.scrollHeight <= o3)
                    return 0;
                  t3 = l3.scrollHeight - o3;
                } else {
                  if (l3.scrollWidth <= s3 || s3 <= 0)
                    return 0;
                  t3 = l3.scrollWidth - s3;
                }
                return e4 * (t3 / (r4.length - 1));
              }
              return 0;
            } }, { key: "getThumbnailPositionClassName", value: function(e4) {
              switch (e4) {
                case "left":
                  e4 = " ".concat("image-gallery-thumbnails-left");
                  break;
                case "right":
                  e4 = " ".concat("image-gallery-thumbnails-right");
                  break;
                case "bottom":
                  e4 = " ".concat("image-gallery-thumbnails-bottom");
                  break;
                case "top":
                  e4 = " ".concat("image-gallery-thumbnails-top");
              }
              return e4;
            } }, { key: "getAlignmentClassName", value: function(e4) {
              var t3 = this.state.currentIndex, n4 = this.props, i3 = n4.infinite, r4 = n4.items, a2 = "", s3 = "image-gallery-left", o3 = "image-gallery-right";
              switch (e4) {
                case t3 - 1:
                  a2 = " ".concat(s3);
                  break;
                case t3:
                  a2 = " ".concat("image-gallery-center");
                  break;
                case t3 + 1:
                  a2 = " ".concat(o3);
              }
              return r4.length >= 3 && i3 && (0 === e4 && t3 === r4.length - 1 ? a2 = " ".concat(o3) : e4 === r4.length - 1 && 0 === t3 && (a2 = " ".concat(s3))), a2;
            } }, { key: "getTranslateXForTwoSlide", value: function(e4) {
              var t3 = this.state, n4 = t3.currentIndex, i3 = t3.currentSlideOffset, r4 = t3.previousIndex, a2 = n4 !== r4, s3 = 0 === e4 && 0 === r4, o3 = 1 === e4 && 1 === r4, l3 = 0 === e4 && 1 === n4, u3 = 1 === e4 && 0 === n4, c2 = 0 === i3, h2 = -100 * n4 + 100 * e4 + i3;
              return i3 > 0 ? this.direction = "left" : i3 < 0 && (this.direction = "right"), u3 && i3 > 0 && (h2 = -100 + i3), l3 && i3 < 0 && (h2 = 100 + i3), a2 ? s3 && c2 && "left" === this.direction ? h2 = 100 : o3 && c2 && "right" === this.direction && (h2 = -100) : (u3 && c2 && "left" === this.direction && (h2 = -100), l3 && c2 && "right" === this.direction && (h2 = 100)), h2;
            } }, { key: "getThumbnailBarHeight", value: function() {
              return this.isThumbnailVertical() ? { height: this.state.gallerySlideWrapperHeight } : {};
            } }, { key: "getSlideStyle", value: function(e4) {
              var t3 = this.state, n4 = t3.currentIndex, i3 = t3.currentSlideOffset, r4 = t3.slideStyle, a2 = this.props, s3 = a2.infinite, o3 = a2.items, l3 = a2.useTranslate3D, u3 = a2.isRTL, c2 = -100 * n4, h2 = o3.length - 1, d2 = (c2 + 100 * e4) * (u3 ? -1 : 1) + i3;
              s3 && o3.length > 2 && (0 === n4 && e4 === h2 ? d2 = -100 * (u3 ? -1 : 1) + i3 : n4 === h2 && 0 === e4 && (d2 = 100 * (u3 ? -1 : 1) + i3)), s3 && 2 === o3.length && (d2 = this.getTranslateXForTwoSlide(e4));
              var f2 = "translate(".concat(d2, "%, 0)");
              return l3 && (f2 = "translate3d(".concat(d2, "%, 0, 0)")), we({ display: this.isSlideVisible(e4) ? "inherit" : "none", WebkitTransform: f2, MozTransform: f2, msTransform: f2, OTransform: f2, transform: f2 }, r4);
            } }, { key: "getCurrentIndex", value: function() {
              return this.state.currentIndex;
            } }, { key: "getThumbnailStyle", value: function() {
              var e4, t3 = this.props, n4 = t3.useTranslate3D, i3 = t3.isRTL, r4 = this.state, a2 = r4.thumbsTranslate, s3 = r4.thumbsStyle, o3 = i3 ? -1 * a2 : a2;
              return this.isThumbnailVertical() ? (e4 = "translate(0, ".concat(a2, "px)"), n4 && (e4 = "translate3d(0, ".concat(a2, "px, 0)"))) : (e4 = "translate(".concat(o3, "px, 0)"), n4 && (e4 = "translate3d(".concat(o3, "px, 0, 0)"))), we({ WebkitTransform: e4, MozTransform: e4, msTransform: e4, OTransform: e4, transform: e4 }, s3);
            } }, { key: "getSlideItems", value: function() {
              var e4 = this, n4 = this.state.currentIndex, i3 = this.props, r4 = i3.items, s3 = i3.slideOnThumbnailOver, o3 = i3.onClick, l3 = i3.lazyLoad, u3 = i3.onTouchMove, c2 = i3.onTouchEnd, h2 = i3.onTouchStart, d2 = i3.onMouseOver, f2 = i3.onMouseLeave, p2 = i3.renderItem, m2 = i3.renderThumbInner, g2 = i3.showThumbnails, v2 = i3.showBullets, b2 = [], y2 = [], w2 = [];
              return r4.forEach(function(i4, r5) {
                var T2 = e4.getAlignmentClassName(r5), S2 = i4.originalClass ? " ".concat(i4.originalClass) : "", O2 = i4.thumbnailClass ? " ".concat(i4.thumbnailClass) : "", E2 = i4.renderItem || p2 || e4.renderItem, k2 = i4.renderThumbInner || m2 || e4.renderThumbInner, I2 = !l3 || T2 || e4.lazyLoaded[r5];
                I2 && l3 && !e4.lazyLoaded[r5] && (e4.lazyLoaded[r5] = true);
                var x2 = e4.getSlideStyle(r5), _2 = a().createElement("div", { "aria-label": "Go to Slide ".concat(r5 + 1), key: "slide-".concat(r5), tabIndex: "-1", className: "image-gallery-slide ".concat(T2, " ").concat(S2), style: x2, onClick: o3, onKeyUp: e4.handleSlideKeyUp, onTouchMove: u3, onTouchEnd: c2, onTouchStart: h2, onMouseOver: d2, onFocus: d2, onMouseLeave: f2, role: "button" }, I2 ? E2(i4) : a().createElement("div", { style: { height: "100%" } }));
                if (b2.push(_2), g2 && i4.thumbnail) {
                  var R2 = t2("image-gallery-thumbnail", O2, { active: n4 === r5 });
                  y2.push(a().createElement("button", { key: "thumbnail-".concat(r5), type: "button", tabIndex: "0", "aria-pressed": n4 === r5 ? "true" : "false", "aria-label": "Go to Slide ".concat(r5 + 1), className: R2, onMouseLeave: s3 ? e4.onThumbnailMouseLeave : null, onMouseOver: function(t3) {
                    return e4.handleThumbnailMouseOver(t3, r5);
                  }, onFocus: function(t3) {
                    return e4.handleThumbnailMouseOver(t3, r5);
                  }, onKeyUp: function(t3) {
                    return e4.handleThumbnailKeyUp(t3, r5);
                  }, onClick: function(t3) {
                    return e4.onThumbnailClick(t3, r5);
                  } }, k2(i4)));
                }
                if (v2) {
                  var L2 = t2("image-gallery-bullet", i4.bulletClass, { active: n4 === r5 });
                  w2.push(a().createElement("button", { type: "button", key: "bullet-".concat(r5), className: L2, onClick: function(t3) {
                    return i4.bulletOnClick && i4.bulletOnClick({ item: i4, itemIndex: r5, currentIndex: n4 }), t3.target.blur(), e4.slideToIndex.call(e4, r5, t3);
                  }, "aria-pressed": n4 === r5 ? "true" : "false", "aria-label": "Go to Slide ".concat(r5 + 1) }));
                }
              }), { slides: b2, thumbnails: y2, bullets: w2 };
            } }, { key: "ignoreIsTransitioning", value: function() {
              var e4 = this.props.items, t3 = this.state, n4 = t3.previousIndex, i3 = t3.currentIndex, r4 = e4.length - 1;
              return Math.abs(n4 - i3) > 1 && !(0 === n4 && i3 === r4) && !(n4 === r4 && 0 === i3);
            } }, { key: "isFirstOrLastSlide", value: function(e4) {
              return e4 === this.props.items.length - 1 || 0 === e4;
            } }, { key: "slideIsTransitioning", value: function(e4) {
              var t3 = this.state, n4 = t3.isTransitioning, i3 = t3.previousIndex, r4 = t3.currentIndex;
              return n4 && !(e4 === i3 || e4 === r4);
            } }, { key: "isSlideVisible", value: function(e4) {
              return !this.slideIsTransitioning(e4) || this.ignoreIsTransitioning() && !this.isFirstOrLastSlide(e4);
            } }, { key: "slideThumbnailBar", value: function() {
              var e4 = this.state, t3 = e4.currentIndex, n4 = e4.isSwipingThumbnail, i3 = -this.getThumbsTranslate(t3);
              n4 || (0 === t3 ? this.setState({ thumbsTranslate: 0, thumbsSwipedTranslate: 0 }) : this.setState({ thumbsTranslate: i3, thumbsSwipedTranslate: i3 }));
            } }, { key: "canSlide", value: function() {
              return this.props.items.length >= 2;
            } }, { key: "canSlideLeft", value: function() {
              var e4 = this.props, t3 = e4.infinite, n4 = e4.isRTL;
              return t3 || (n4 ? this.canSlideNext() : this.canSlidePrevious());
            } }, { key: "canSlideRight", value: function() {
              var e4 = this.props, t3 = e4.infinite, n4 = e4.isRTL;
              return t3 || (n4 ? this.canSlidePrevious() : this.canSlideNext());
            } }, { key: "canSlidePrevious", value: function() {
              return this.state.currentIndex > 0;
            } }, { key: "canSlideNext", value: function() {
              return this.state.currentIndex < this.props.items.length - 1;
            } }, { key: "handleSwiping", value: function(e4) {
              var t3 = e4.event, n4 = e4.absX, i3 = e4.dir, r4 = this.props, a2 = r4.disableSwipe, s3 = r4.stopPropagation, o3 = this.state, l3 = o3.galleryWidth, u3 = o3.isTransitioning, c2 = o3.swipingUpDown, h2 = o3.swipingLeftRight;
              if (i3 !== ee.UP && i3 !== ee.DOWN && !c2 || h2) {
                if (i3 !== ee.LEFT && i3 !== ee.RIGHT || h2 || this.setState({ swipingLeftRight: true }), !a2) {
                  var d2 = this.props.swipingTransitionDuration;
                  if (s3 && t3.preventDefault(), u3)
                    this.setState({ currentSlideOffset: 0 });
                  else {
                    var f2 = i3 === ee.RIGHT ? 1 : -1, p2 = n4 / l3 * 100;
                    Math.abs(p2) >= 100 && (p2 = 100);
                    var m2 = { transition: "transform ".concat(d2, "ms ease-out") };
                    this.setState({ currentSlideOffset: f2 * p2, slideStyle: m2 });
                  }
                }
              } else
                c2 || this.setState({ swipingUpDown: true });
            } }, { key: "handleThumbnailSwiping", value: function(e4) {
              var t3 = e4.event, n4 = e4.absX, i3 = e4.absY, r4 = e4.dir, a2 = this.props, s3 = a2.stopPropagation, o3 = a2.swipingThumbnailTransitionDuration, l3 = this.state, u3 = l3.thumbsSwipedTranslate, c2 = l3.thumbnailsWrapperHeight, h2 = l3.thumbnailsWrapperWidth, d2 = l3.swipingUpDown, f2 = l3.swipingLeftRight;
              if (this.isThumbnailVertical()) {
                if ((r4 === ee.LEFT || r4 === ee.RIGHT || f2) && !d2)
                  return void (f2 || this.setState({ swipingLeftRight: true }));
                r4 !== ee.UP && r4 !== ee.DOWN || d2 || this.setState({ swipingUpDown: true });
              } else {
                if ((r4 === ee.UP || r4 === ee.DOWN || d2) && !f2)
                  return void (d2 || this.setState({ swipingUpDown: true }));
                r4 !== ee.LEFT && r4 !== ee.RIGHT || f2 || this.setState({ swipingLeftRight: true });
              }
              var p2, m2, g2, v2, b2, y2 = this.thumbnails && this.thumbnails.current;
              if (this.isThumbnailVertical() ? (p2 = u3 + (r4 === ee.DOWN ? i3 : -i3), m2 = y2.scrollHeight - c2 + 20, g2 = Math.abs(p2) > m2, v2 = p2 > 20, b2 = y2.scrollHeight <= c2) : (p2 = u3 + (r4 === ee.RIGHT ? n4 : -n4), m2 = y2.scrollWidth - h2 + 20, g2 = Math.abs(p2) > m2, v2 = p2 > 20, b2 = y2.scrollWidth <= h2), !b2 && (r4 !== ee.LEFT && r4 !== ee.UP || !g2) && (r4 !== ee.RIGHT && r4 !== ee.DOWN || !v2)) {
                s3 && t3.stopPropagation();
                var w2 = { transition: "transform ".concat(o3, "ms ease-out") };
                this.setState({ thumbsTranslate: p2, thumbsStyle: w2 });
              }
            } }, { key: "handleOnThumbnailSwiped", value: function() {
              var e4 = this.state.thumbsTranslate, t3 = this.props.slideDuration;
              this.resetSwipingDirection(), this.setState({ isSwipingThumbnail: true, thumbsSwipedTranslate: e4, thumbsStyle: { transition: "all ".concat(t3, "ms ease-out") } });
            } }, { key: "sufficientSwipe", value: function() {
              var e4 = this.state.currentSlideOffset, t3 = this.props.swipeThreshold;
              return Math.abs(e4) > t3;
            } }, { key: "resetSwipingDirection", value: function() {
              var e4 = this.state, t3 = e4.swipingUpDown, n4 = e4.swipingLeftRight;
              t3 && this.setState({ swipingUpDown: false }), n4 && this.setState({ swipingLeftRight: false });
            } }, { key: "handleOnSwiped", value: function(e4) {
              var t3 = e4.event, n4 = e4.dir, i3 = e4.velocity, r4 = this.props, a2 = r4.disableSwipe, s3 = r4.stopPropagation, o3 = r4.flickThreshold;
              if (!a2) {
                var l3 = this.props.isRTL;
                s3 && t3.stopPropagation(), this.resetSwipingDirection();
                var u3 = (n4 === ee.LEFT ? 1 : -1) * (l3 ? -1 : 1), c2 = n4 === ee.UP || n4 === ee.DOWN, h2 = i3 > o3 && !c2;
                this.handleOnSwipedTo(u3, h2);
              }
            } }, { key: "handleOnSwipedTo", value: function(e4, t3) {
              var n4 = this.state, i3 = n4.currentIndex, r4 = n4.isTransitioning, a2 = i3;
              !this.sufficientSwipe() && !t3 || r4 || (a2 += e4), (-1 === e4 && !this.canSlideLeft() || 1 === e4 && !this.canSlideRight()) && (a2 = i3), this.unthrottledSlideToIndex(a2);
            } }, { key: "handleTouchMove", value: function(e4) {
              this.state.swipingLeftRight && e4.preventDefault();
            } }, { key: "handleMouseDown", value: function() {
              this.imageGallery.current.classList.add("image-gallery-using-mouse");
            } }, { key: "handleKeyDown", value: function(e4) {
              var t3 = this.props, n4 = t3.disableKeyDown, i3 = t3.useBrowserFullscreen, r4 = this.state.isFullscreen;
              if (this.imageGallery.current.classList.remove("image-gallery-using-mouse"), !n4)
                switch (parseInt(e4.keyCode || e4.which || 0, 10)) {
                  case 37:
                    this.canSlideLeft() && !this.playPauseIntervalId && this.slideLeft(e4);
                    break;
                  case 39:
                    this.canSlideRight() && !this.playPauseIntervalId && this.slideRight(e4);
                    break;
                  case 27:
                    r4 && !i3 && this.exitFullScreen();
                }
            } }, { key: "handleImageError", value: function(e4) {
              var t3 = this.props.onErrorImageURL;
              t3 && -1 === e4.target.src.indexOf(t3) && (e4.target.src = t3);
            } }, { key: "removeThumbnailsResizeObserver", value: function() {
              this.resizeThumbnailWrapperObserver && this.thumbnailsWrapper && this.thumbnailsWrapper.current && (this.resizeThumbnailWrapperObserver.unobserve(this.thumbnailsWrapper.current), this.resizeThumbnailWrapperObserver = null);
            } }, { key: "removeResizeObserver", value: function() {
              this.resizeSlideWrapperObserver && this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current && (this.resizeSlideWrapperObserver.unobserve(this.imageGallerySlideWrapper.current), this.resizeSlideWrapperObserver = null), this.removeThumbnailsResizeObserver();
            } }, { key: "handleResize", value: function() {
              var e4 = this.state.currentIndex;
              this.imageGallery && (this.imageGallery && this.imageGallery.current && this.setState({ galleryWidth: this.imageGallery.current.offsetWidth }), this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current && this.setState({ gallerySlideWrapperHeight: this.imageGallerySlideWrapper.current.offsetHeight }), this.setThumbsTranslate(-this.getThumbsTranslate(e4)));
            } }, { key: "initSlideWrapperResizeObserver", value: function(e4) {
              var t3 = this;
              e4 && !e4.current || (this.resizeSlideWrapperObserver = new Z(R(function(e5) {
                e5 && e5.forEach(function(e6) {
                  t3.setState({ thumbnailsWrapperWidth: e6.contentRect.width }, t3.handleResize);
                });
              }, 50)), this.resizeSlideWrapperObserver.observe(e4.current));
            } }, { key: "initThumbnailWrapperResizeObserver", value: function(e4) {
              var t3 = this;
              e4 && !e4.current || (this.resizeThumbnailWrapperObserver = new Z(R(function(e5) {
                e5 && e5.forEach(function(e6) {
                  t3.setState({ thumbnailsWrapperHeight: e6.contentRect.height }, t3.handleResize);
                });
              }, 50)), this.resizeThumbnailWrapperObserver.observe(e4.current));
            } }, { key: "toggleFullScreen", value: function() {
              this.state.isFullscreen ? this.exitFullScreen() : this.fullScreen();
            } }, { key: "togglePlay", value: function() {
              this.playPauseIntervalId ? this.pause() : this.play();
            } }, { key: "handleScreenChange", value: function() {
              var e4 = this.props, t3 = e4.onScreenChange, n4 = e4.useBrowserFullscreen, i3 = document.fullscreenElement || document.msFullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement, r4 = this.imageGallery.current === i3;
              t3 && t3(r4), n4 && this.setState({ isFullscreen: r4 });
            } }, { key: "slideToIndex", value: function(e4, t3) {
              var n4 = this.state, i3 = n4.currentIndex, r4 = n4.isTransitioning, a2 = this.props, s3 = a2.items, o3 = a2.slideDuration, l3 = a2.onBeforeSlide;
              if (!r4) {
                t3 && this.playPauseIntervalId && (this.pause(false), this.play(false));
                var u3 = s3.length - 1, c2 = e4;
                e4 < 0 ? c2 = u3 : e4 > u3 && (c2 = 0), l3 && c2 !== i3 && l3(c2), this.setState({ previousIndex: i3, currentIndex: c2, isTransitioning: c2 !== i3, currentSlideOffset: 0, slideStyle: { transition: "all ".concat(o3, "ms ease-out") } }, this.onSliding);
              }
            } }, { key: "slideLeft", value: function(e4) {
              var t3 = this.props.isRTL;
              this.slideTo(e4, t3 ? "right" : "left");
            } }, { key: "slideRight", value: function(e4) {
              var t3 = this.props.isRTL;
              this.slideTo(e4, t3 ? "left" : "right");
            } }, { key: "slideTo", value: function(e4, t3) {
              var n4 = this, i3 = this.state, r4 = i3.currentIndex, a2 = i3.currentSlideOffset, s3 = i3.isTransitioning, o3 = this.props.items, l3 = r4 + ("left" === t3 ? -1 : 1);
              s3 || (2 === o3.length ? this.setState({ currentSlideOffset: a2 + ("left" === t3 ? 1e-3 : -1e-3), slideStyle: { transition: "none" } }, function() {
                window.setTimeout(function() {
                  return n4.slideToIndex(l3, e4);
                }, 25);
              }) : this.slideToIndex(l3, e4));
            } }, { key: "handleThumbnailMouseOver", value: function(e4, t3) {
              this.props.slideOnThumbnailOver && this.onThumbnailMouseOver(e4, t3);
            } }, { key: "handleThumbnailKeyUp", value: function(e4, t3) {
              Re(e4) && this.onThumbnailClick(e4, t3);
            } }, { key: "handleSlideKeyUp", value: function(e4) {
              Re(e4) && (0, this.props.onClick)(e4);
            } }, { key: "isThumbnailVertical", value: function() {
              var e4 = this.props.thumbnailPosition;
              return "left" === e4 || "right" === e4;
            } }, { key: "addScreenChangeEvent", value: function() {
              var e4 = this;
              xe.forEach(function(t3) {
                document.addEventListener(t3, e4.handleScreenChange);
              });
            } }, { key: "removeScreenChangeEvent", value: function() {
              var e4 = this;
              xe.forEach(function(t3) {
                document.removeEventListener(t3, e4.handleScreenChange);
              });
            } }, { key: "fullScreen", value: function() {
              var e4 = this.props.useBrowserFullscreen, t3 = this.imageGallery.current;
              e4 ? t3.requestFullscreen ? t3.requestFullscreen() : t3.msRequestFullscreen ? t3.msRequestFullscreen() : t3.mozRequestFullScreen ? t3.mozRequestFullScreen() : t3.webkitRequestFullscreen ? t3.webkitRequestFullscreen() : this.setModalFullscreen(true) : this.setModalFullscreen(true), this.setState({ isFullscreen: true });
            } }, { key: "exitFullScreen", value: function() {
              var e4 = this.state.isFullscreen, t3 = this.props.useBrowserFullscreen;
              e4 && (t3 ? document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : this.setModalFullscreen(false) : this.setModalFullscreen(false), this.setState({ isFullscreen: false }));
            } }, { key: "pauseOrPlay", value: function() {
              var e4 = this.props.infinite, t3 = this.state.currentIndex;
              e4 || this.canSlideRight() ? this.slideToIndex(t3 + 1) : this.pause();
            } }, { key: "play", value: function() {
              var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = this.props, n4 = t3.onPlay, i3 = t3.slideInterval, r4 = t3.slideDuration, a2 = this.state.currentIndex;
              this.playPauseIntervalId || (this.setState({ isPlaying: true }), this.playPauseIntervalId = window.setInterval(this.pauseOrPlay, Math.max(i3, r4)), n4 && e4 && n4(a2));
            } }, { key: "pause", value: function() {
              var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = this.props.onPause, n4 = this.state.currentIndex;
              this.playPauseIntervalId && (window.clearInterval(this.playPauseIntervalId), this.playPauseIntervalId = null, this.setState({ isPlaying: false }), t3 && e4 && t3(n4));
            } }, { key: "isImageLoaded", value: function(e4) {
              return !!this.loadedImages[e4.original] || (this.loadedImages[e4.original] = true, false);
            } }, { key: "handleImageLoaded", value: function(e4, t3) {
              var n4 = this.props.onImageLoad;
              !this.loadedImages[t3] && n4 && (this.loadedImages[t3] = true, n4(e4));
            } }, { key: "renderItem", value: function(e4) {
              var t3 = this.state.isFullscreen, n4 = this.props.onImageError || this.handleImageError;
              return a().createElement(ie, { description: e4.description, fullscreen: e4.fullscreen, handleImageLoaded: this.handleImageLoaded, isFullscreen: t3, onImageError: n4, original: e4.original, originalAlt: e4.originalAlt, originalHeight: e4.originalHeight, originalWidth: e4.originalWidth, originalTitle: e4.originalTitle, sizes: e4.sizes, loading: e4.loading, srcSet: e4.srcSet });
            } }, { key: "renderThumbInner", value: function(e4) {
              var t3 = this.props.onThumbnailError || this.handleImageError;
              return a().createElement("span", { className: "image-gallery-thumbnail-inner" }, a().createElement("img", { className: "image-gallery-thumbnail-image", src: e4.thumbnail, height: e4.thumbnailHeight, width: e4.thumbnailWidth, alt: e4.thumbnailAlt, title: e4.thumbnailTitle, loading: e4.thumbnailLoading, onError: t3 }), e4.thumbnailLabel && a().createElement("div", { className: "image-gallery-thumbnail-label" }, e4.thumbnailLabel));
            } }, { key: "render", value: function() {
              var e4 = this.state, n4 = e4.currentIndex, i3 = e4.isFullscreen, r4 = e4.modalFullscreen, s3 = e4.isPlaying, o3 = this.props, l3 = o3.additionalClass, u3 = o3.disableThumbnailSwipe, c2 = o3.indexSeparator, h2 = o3.isRTL, d2 = o3.items, f2 = o3.thumbnailPosition, p2 = o3.renderFullscreenButton, m2 = o3.renderCustomControls, g2 = o3.renderLeftNav, v2 = o3.renderRightNav, b2 = o3.showBullets, y2 = o3.showFullscreenButton, w2 = o3.showIndex, T2 = o3.showThumbnails, S2 = o3.showNav, O2 = o3.showPlayButton, E2 = o3.renderPlayPauseButton, k2 = this.getThumbnailStyle(), I2 = this.getSlideItems(), x2 = I2.slides, _2 = I2.thumbnails, R2 = I2.bullets, L2 = t2("image-gallery-slide-wrapper", this.getThumbnailPositionClassName(f2), { "image-gallery-rtl": h2 }), P2 = a().createElement("div", { ref: this.imageGallerySlideWrapper, className: L2 }, m2 && m2(), this.canSlide() ? a().createElement(a().Fragment, null, S2 && a().createElement(a().Fragment, null, g2(this.slideLeft, !this.canSlideLeft()), v2(this.slideRight, !this.canSlideRight())), a().createElement(ve, { className: "image-gallery-swipe", delta: 0, onSwiping: this.handleSwiping, onSwiped: this.handleOnSwiped }, a().createElement("div", { className: "image-gallery-slides" }, x2))) : a().createElement("div", { className: "image-gallery-slides" }, x2), O2 && E2(this.togglePlay, s3), b2 && a().createElement("div", { className: "image-gallery-bullets" }, a().createElement("div", { className: "image-gallery-bullets-container", role: "navigation", "aria-label": "Bullet Navigation" }, R2)), y2 && p2(this.toggleFullScreen, i3), w2 && a().createElement("div", { className: "image-gallery-index" }, a().createElement("span", { className: "image-gallery-index-current" }, n4 + 1), a().createElement("span", { className: "image-gallery-index-separator" }, c2), a().createElement("span", { className: "image-gallery-index-total" }, d2.length))), M2 = t2("image-gallery", l3, { "fullscreen-modal": r4 }), W2 = t2("image-gallery-content", this.getThumbnailPositionClassName(f2), { fullscreen: i3 }), D2 = t2("image-gallery-thumbnails-wrapper", this.getThumbnailPositionClassName(f2), { "thumbnails-wrapper-rtl": !this.isThumbnailVertical() && h2 }, { "thumbnails-swipe-horizontal": !this.isThumbnailVertical() && !u3 }, { "thumbnails-swipe-vertical": this.isThumbnailVertical() && !u3 });
              return a().createElement("div", { ref: this.imageGallery, className: M2, "aria-live": "polite" }, a().createElement("div", { className: W2 }, ("bottom" === f2 || "right" === f2) && P2, T2 && _2.length > 0 ? a().createElement(ve, { className: D2, delta: 0, onSwiping: !u3 && this.handleThumbnailSwiping, onSwiped: !u3 && this.handleOnThumbnailSwiped }, a().createElement("div", { className: "image-gallery-thumbnails", ref: this.thumbnailsWrapper, style: this.getThumbnailBarHeight() }, a().createElement("nav", { ref: this.thumbnails, className: "image-gallery-thumbnails-container", style: k2, "aria-label": "Thumbnail Navigation" }, _2))) : null, ("top" === f2 || "left" === f2) && P2));
            } }], i2 && Se(n3.prototype, i2), l2;
          }(a().Component);
          Le.propTypes = { flickThreshold: te.number, items: (0, te.arrayOf)((0, te.shape)({ bulletClass: te.string, bulletOnClick: te.func, description: te.string, original: te.string, originalHeight: te.number, originalWidth: te.number, loading: te.string, thumbnailHeight: te.number, thumbnailWidth: te.number, thumbnailLoading: te.string, fullscreen: te.string, originalAlt: te.string, originalTitle: te.string, thumbnail: te.string, thumbnailAlt: te.string, thumbnailLabel: te.string, thumbnailTitle: te.string, originalClass: te.string, thumbnailClass: te.string, renderItem: te.func, renderThumbInner: te.func, imageSet: _e, srcSet: te.string, sizes: te.string })).isRequired, showNav: te.bool, autoPlay: te.bool, lazyLoad: te.bool, infinite: te.bool, showIndex: te.bool, showBullets: te.bool, showThumbnails: te.bool, showPlayButton: te.bool, showFullscreenButton: te.bool, disableThumbnailScroll: te.bool, disableKeyDown: te.bool, disableSwipe: te.bool, disableThumbnailSwipe: te.bool, useBrowserFullscreen: te.bool, onErrorImageURL: te.string, indexSeparator: te.string, thumbnailPosition: (0, te.oneOf)(["top", "bottom", "left", "right"]), startIndex: te.number, slideDuration: te.number, slideInterval: te.number, slideOnThumbnailOver: te.bool, swipeThreshold: te.number, swipingTransitionDuration: te.number, swipingThumbnailTransitionDuration: te.number, onSlide: te.func, onBeforeSlide: te.func, onScreenChange: te.func, onPause: te.func, onPlay: te.func, onClick: te.func, onImageLoad: te.func, onImageError: te.func, onTouchMove: te.func, onTouchEnd: te.func, onTouchStart: te.func, onMouseOver: te.func, onMouseLeave: te.func, onThumbnailError: te.func, onThumbnailClick: te.func, renderCustomControls: te.func, renderLeftNav: te.func, renderRightNav: te.func, renderPlayPauseButton: te.func, renderFullscreenButton: te.func, renderItem: te.func, renderThumbInner: te.func, stopPropagation: te.bool, additionalClass: te.string, useTranslate3D: te.bool, isRTL: te.bool, useWindowKeyDown: te.bool }, Le.defaultProps = { onErrorImageURL: "", additionalClass: "", showNav: true, autoPlay: false, lazyLoad: false, infinite: true, showIndex: false, showBullets: false, showThumbnails: true, showPlayButton: true, showFullscreenButton: true, disableThumbnailScroll: false, disableKeyDown: false, disableSwipe: false, disableThumbnailSwipe: false, useTranslate3D: true, isRTL: false, useBrowserFullscreen: true, flickThreshold: 0.4, stopPropagation: false, indexSeparator: " / ", thumbnailPosition: "bottom", startIndex: 0, slideDuration: 450, swipingTransitionDuration: 0, swipingThumbnailTransitionDuration: 0, onSlide: null, onBeforeSlide: null, onScreenChange: null, onPause: null, onPlay: null, onClick: null, onImageLoad: null, onImageError: null, onTouchMove: null, onTouchEnd: null, onTouchStart: null, onMouseOver: null, onMouseLeave: null, onThumbnailError: null, onThumbnailClick: null, renderCustomControls: null, renderThumbInner: null, renderItem: null, slideInterval: 3e3, slideOnThumbnailOver: false, swipeThreshold: 30, renderLeftNav: function(e3, t3) {
            return a().createElement(ce, { onClick: e3, disabled: t3 });
          }, renderRightNav: function(e3, t3) {
            return a().createElement(de, { onClick: e3, disabled: t3 });
          }, renderPlayPauseButton: function(e3, t3) {
            return a().createElement(pe, { onClick: e3, isPlaying: t3 });
          }, renderFullscreenButton: function(e3, t3) {
            return a().createElement(le, { onClick: e3, isFullscreen: t3 });
          }, useWindowKeyDown: true };
          const Pe = Le;
        })(), r2;
      })();
    });
  }
});

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        if (acceptedFilesArray.length === 0) {
          return true;
        }
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/stream-chat-react/node_modules/emoji-regex/index.js
var require_emoji_regex = __commonJS({
  "node_modules/stream-chat-react/node_modules/emoji-regex/index.js"(exports, module) {
    "use strict";
    module.exports = function() {
      return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
    };
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports, module) {
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module.exports = function(val, options2) {
      options2 = options2 || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse2(val);
      } else if (type === "number" && isFinite(val)) {
        return options2.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse2(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports, module) {
    function setup(env) {
      createDebug2.debug = createDebug2;
      createDebug2.default = createDebug2;
      createDebug2.coerce = coerce;
      createDebug2.disable = disable2;
      createDebug2.enable = enable;
      createDebug2.enabled = enabled;
      createDebug2.humanize = require_ms();
      createDebug2.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug2[key] = env[key];
      });
      createDebug2.names = [];
      createDebug2.skips = [];
      createDebug2.formatters = {};
      function selectColor2(namespace) {
        let hash3 = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash3 = (hash3 << 5) - hash3 + namespace.charCodeAt(i);
          hash3 |= 0;
        }
        return createDebug2.colors[Math.abs(hash3) % createDebug2.colors.length];
      }
      createDebug2.selectColor = selectColor2;
      function createDebug2(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug2(...args) {
          if (!debug2.enabled) {
            return;
          }
          const self2 = debug2;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug2.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index5 = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
            if (match === "%%") {
              return "%";
            }
            index5++;
            const formatter = createDebug2.formatters[format];
            if (typeof formatter === "function") {
              const val = args[index5];
              match = formatter.call(self2, val);
              args.splice(index5, 1);
              index5--;
            }
            return match;
          });
          createDebug2.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug2.log;
          logFn.apply(self2, args);
        }
        debug2.namespace = namespace;
        debug2.useColors = createDebug2.useColors();
        debug2.color = createDebug2.selectColor(namespace);
        debug2.extend = extend2;
        debug2.destroy = createDebug2.destroy;
        Object.defineProperty(debug2, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug2.namespaces) {
              namespacesCache = createDebug2.namespaces;
              enabledCache = createDebug2.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug2.init === "function") {
          createDebug2.init(debug2);
        }
        return debug2;
      }
      function extend2(namespace, delimiter) {
        const newDebug = createDebug2(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug2.save(namespaces);
        createDebug2.namespaces = namespaces;
        createDebug2.names = [];
        createDebug2.skips = [];
        const split = (typeof namespaces === "string" ? namespaces : "").trim().replace(" ", ",").split(",").filter(Boolean);
        for (const ns of split) {
          if (ns[0] === "-") {
            createDebug2.skips.push(ns.slice(1));
          } else {
            createDebug2.names.push(ns);
          }
        }
      }
      function matchesTemplate(search2, template) {
        let searchIndex = 0;
        let templateIndex = 0;
        let starIndex = -1;
        let matchIndex = 0;
        while (searchIndex < search2.length) {
          if (templateIndex < template.length && (template[templateIndex] === search2[searchIndex] || template[templateIndex] === "*")) {
            if (template[templateIndex] === "*") {
              starIndex = templateIndex;
              matchIndex = searchIndex;
              templateIndex++;
            } else {
              searchIndex++;
              templateIndex++;
            }
          } else if (starIndex !== -1) {
            templateIndex = starIndex + 1;
            matchIndex++;
            searchIndex = matchIndex;
          } else {
            return false;
          }
        }
        while (templateIndex < template.length && template[templateIndex] === "*") {
          templateIndex++;
        }
        return templateIndex === template.length;
      }
      function disable2() {
        const namespaces = [
          ...createDebug2.names,
          ...createDebug2.skips.map((namespace) => "-" + namespace)
        ].join(",");
        createDebug2.enable("");
        return namespaces;
      }
      function enabled(name) {
        for (const skip of createDebug2.skips) {
          if (matchesTemplate(name, skip)) {
            return false;
          }
        }
        for (const ns of createDebug2.names) {
          if (matchesTemplate(name, ns)) {
            return true;
          }
        }
        return false;
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug2.enable(createDebug2.load());
      return createDebug2;
    }
    module.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/debug/src/browser.js"(exports, module) {
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      let m;
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index5 = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index5++;
        if (match === "%c") {
          lastC = index5;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports.storage.setItem("debug", namespaces);
        } else {
          exports.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r2;
      try {
        r2 = exports.storage.getItem("debug");
      } catch (error) {
      }
      if (!r2 && typeof process !== "undefined" && "env" in process) {
        r2 = process.env.DEBUG;
      }
      return r2;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module.exports = require_common()(exports);
    var { formatters } = module.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// node_modules/react-markdown/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-markdown/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType3(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment2 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense6 = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment2;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense6;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType3;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-markdown/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-markdown/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/inline-style-parser/index.js
var require_inline_style_parser = __commonJS({
  "node_modules/inline-style-parser/index.js"(exports, module) {
    var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
    var NEWLINE_REGEX = /\n/g;
    var WHITESPACE_REGEX = /^\s*/;
    var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
    var COLON_REGEX = /^:\s*/;
    var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
    var SEMICOLON_REGEX = /^[;\s]*/;
    var TRIM_REGEX = /^\s+|\s+$/g;
    var NEWLINE = "\n";
    var FORWARD_SLASH = "/";
    var ASTERISK2 = "*";
    var EMPTY_STRING = "";
    var TYPE_COMMENT = "comment";
    var TYPE_DECLARATION = "declaration";
    module.exports = function(style, options2) {
      if (typeof style !== "string") {
        throw new TypeError("First argument must be a string");
      }
      if (!style)
        return [];
      options2 = options2 || {};
      var lineno = 1;
      var column = 1;
      function updatePosition(str) {
        var lines2 = str.match(NEWLINE_REGEX);
        if (lines2)
          lineno += lines2.length;
        var i = str.lastIndexOf(NEWLINE);
        column = ~i ? str.length - i : column + str.length;
      }
      function position4() {
        var start2 = { line: lineno, column };
        return function(node2) {
          node2.position = new Position(start2);
          whitespace3();
          return node2;
        };
      }
      function Position(start2) {
        this.start = start2;
        this.end = { line: lineno, column };
        this.source = options2.source;
      }
      Position.prototype.content = style;
      var errorsList = [];
      function error(msg) {
        var err = new Error(
          options2.source + ":" + lineno + ":" + column + ": " + msg
        );
        err.reason = msg;
        err.filename = options2.source;
        err.line = lineno;
        err.column = column;
        err.source = style;
        if (options2.silent) {
          errorsList.push(err);
        } else {
          throw err;
        }
      }
      function match(re) {
        var m = re.exec(style);
        if (!m)
          return;
        var str = m[0];
        updatePosition(str);
        style = style.slice(str.length);
        return m;
      }
      function whitespace3() {
        match(WHITESPACE_REGEX);
      }
      function comments(rules) {
        var c;
        rules = rules || [];
        while (c = comment()) {
          if (c !== false) {
            rules.push(c);
          }
        }
        return rules;
      }
      function comment() {
        var pos = position4();
        if (FORWARD_SLASH != style.charAt(0) || ASTERISK2 != style.charAt(1))
          return;
        var i = 2;
        while (EMPTY_STRING != style.charAt(i) && (ASTERISK2 != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {
          ++i;
        }
        i += 2;
        if (EMPTY_STRING === style.charAt(i - 1)) {
          return error("End of comment missing");
        }
        var str = style.slice(2, i - 2);
        column += 2;
        updatePosition(str);
        style = style.slice(i);
        column += 2;
        return pos({
          type: TYPE_COMMENT,
          comment: str
        });
      }
      function declaration() {
        var pos = position4();
        var prop = match(PROPERTY_REGEX);
        if (!prop)
          return;
        comment();
        if (!match(COLON_REGEX))
          return error("property missing ':'");
        var val = match(VALUE_REGEX);
        var ret = pos({
          type: TYPE_DECLARATION,
          property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
          value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
        });
        match(SEMICOLON_REGEX);
        return ret;
      }
      function declarations() {
        var decls = [];
        comments(decls);
        var decl;
        while (decl = declaration()) {
          if (decl !== false) {
            decls.push(decl);
            comments(decls);
          }
        }
        return decls;
      }
      whitespace3();
      return declarations();
    };
    function trim(str) {
      return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
    }
  }
});

// node_modules/style-to-object/index.js
var require_style_to_object = __commonJS({
  "node_modules/style-to-object/index.js"(exports, module) {
    var parse2 = require_inline_style_parser();
    function StyleToObject2(style, iterator) {
      var output = null;
      if (!style || typeof style !== "string") {
        return output;
      }
      var declaration;
      var declarations = parse2(style);
      var hasIterator = typeof iterator === "function";
      var property;
      var value;
      for (var i = 0, len = declarations.length; i < len; i++) {
        declaration = declarations[i];
        property = declaration.property;
        value = declaration.value;
        if (hasIterator) {
          iterator(property, value, declaration);
        } else if (value) {
          output || (output = {});
          output[property] = value;
        }
      }
      return output;
    }
    module.exports = StyleToObject2;
    module.exports.default = StyleToObject2;
  }
});

// node_modules/lodash.uniqby/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.uniqby/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var FUNC_ERROR_TEXT = "Expected a function";
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var UNORDERED_COMPARE_FLAG = 1;
    var PARTIAL_COMPARE_FLAG = 2;
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    var reLeadingDot = /^\./;
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reEscapeChar = /\\(\\)?/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayIncludes(array, value) {
      var length = array ? array.length : 0;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    function arrayIncludesWith(array, value, comparator) {
      var index5 = -1, length = array ? array.length : 0;
      while (++index5 < length) {
        if (comparator(value, array[index5])) {
          return true;
        }
      }
      return false;
    }
    function arraySome(array, predicate) {
      var index5 = -1, length = array ? array.length : 0;
      while (++index5 < length) {
        if (predicate(array[index5], index5, array)) {
          return true;
        }
      }
      return false;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index5 = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index5-- : ++index5 < length) {
        if (predicate(array[index5], index5, array)) {
          return index5;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index5 = fromIndex - 1, length = array.length;
      while (++index5 < length) {
        if (array[index5] === value) {
          return index5;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    function baseTimes(n, iteratee) {
      var index5 = -1, result = Array(n);
      while (++index5 < n) {
        result[index5] = iteratee(index5);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function mapToArray(map2) {
      var index5 = -1, result = Array(map2.size);
      map2.forEach(function(value, key) {
        result[++index5] = [key, value];
      });
      return result;
    }
    function overArg(func, transform3) {
      return function(arg) {
        return func(transform3(arg));
      };
    }
    function setToArray(set) {
      var index5 = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index5] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root2["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Symbol2 = root2.Symbol;
    var Uint8Array2 = root2.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice2 = arrayProto.splice;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root2, "DataView");
    var Map2 = getNative(root2, "Map");
    var Promise2 = getNative(root2, "Promise");
    var Set2 = getNative(root2, "Set");
    var WeakMap2 = getNative(root2, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function Hash(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key) {
      var data = this.__data__, index5 = assocIndexOf(data, key);
      if (index5 < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index5 == lastIndex) {
        data.pop();
      } else {
        splice2.call(data, index5, 1);
      }
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index5 = assocIndexOf(data, key);
      return index5 < 0 ? void 0 : data[index5][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index5 = assocIndexOf(data, key);
      if (index5 < 0) {
        data.push([key, value]);
      } else {
        data[index5][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      return getMapData(this, key)["delete"](key);
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values2) {
      var index5 = -1, length = values2 ? values2.length : 0;
      this.__data__ = new MapCache();
      while (++index5 < length) {
        this.add(values2[index5]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      this.__data__ = new ListCache(entries);
    }
    function stackClear() {
      this.__data__ = new ListCache();
    }
    function stackDelete(key) {
      return this.__data__["delete"](key);
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var cache = this.__data__;
      if (cache instanceof ListCache) {
        var pairs = cache.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          return this;
        }
        cache = this.__data__ = new MapCache(pairs);
      }
      cache.set(key, value);
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key in value) {
        if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseGet(object, path3) {
      path3 = isKey(path3, object) ? [path3] : castPath(path3);
      var index5 = 0, length = path3.length;
      while (object != null && index5 < length) {
        object = object[toKey(path3[index5++])];
      }
      return index5 && index5 == length ? object : void 0;
    }
    function baseGetTag(value) {
      return objectToString.call(value);
    }
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    function baseIsEqual(value, other, customizer, bitmask, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObject2(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
    }
    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = arrayTag, othTag = arrayTag;
      if (!objIsArr) {
        objTag = getTag(object);
        objTag = objTag == argsTag ? objectTag : objTag;
      }
      if (!othIsArr) {
        othTag = getTag(other);
        othTag = othTag == argsTag ? objectTag : othTag;
      }
      var objIsObj = objTag == objectTag && !isHostObject(object), othIsObj = othTag == objectTag && !isHostObject(other), isSameTag = objTag == othTag;
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
      }
      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
    }
    function baseIsMatch(object, source, matchData, customizer) {
      var index5 = matchData.length, length = index5, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index5--) {
        var data = matchData[index5];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index5 < length) {
        data = matchData[index5];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    function baseIsNative(value) {
      if (!isObject2(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
    }
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty2.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    function baseMatchesProperty(path3, srcValue) {
      if (isKey(path3) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path3), srcValue);
      }
      return function(object) {
        var objValue = get(object, path3);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path3) : baseIsEqual(srcValue, objValue, void 0, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
      };
    }
    function basePropertyDeep(path3) {
      return function(object) {
        return baseGet(object, path3);
      };
    }
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function baseUniq(array, iteratee, comparator) {
      var index5 = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index5 < length) {
          var value = array[index5], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    function castPath(value) {
      return isArray(value) ? value : stringToPath(value);
    }
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop5 : function(values2) {
      return new Set2(values2);
    };
    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index5 = -1, result = true, seen = bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index5 < arrLength) {
        var arrValue = array[index5], othValue = other[index5];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index5, other, array, stack) : customizer(arrValue, othValue, index5, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!seen.has(othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, customizer, bitmask, stack))) {
              return seen.add(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert2 = mapToArray;
        case setTag:
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
          convert2 || (convert2 = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= UNORDERED_COMPARE_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert2(object), convert2(other), equalFunc, customizer, bitmask, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG, objProps = keys2(object), objLength = objProps.length, othProps = keys2(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index5 = objLength;
      while (index5--) {
        var key = objProps[index5];
        if (!(isPartial ? key in other : hasOwnProperty2.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index5 < objLength) {
        key = objProps[index5];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getMapData(map2, key) {
      var data = map2.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getMatchData(object) {
      var result = keys2(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : void 0;
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function hasPath(object, path3, hasFunc) {
      path3 = isKey(path3, object) ? [path3] : castPath(path3);
      var result, index5 = -1, length = path3.length;
      while (++index5 < length) {
        var key = toKey(path3[index5]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result) {
        return result;
      }
      var length = object ? object.length : 0;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function isStrictComparable(value) {
      return value === value && !isObject2(value);
    }
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    var stringToPath = memoize(function(string3) {
      string3 = toString2(string3);
      var result = [];
      if (reLeadingDot.test(string3)) {
        result.push("");
      }
      string3.replace(rePropName, function(match, number2, quote, string4) {
        result.push(quote ? string4.replace(reEscapeChar, "$1") : number2 || match);
      });
      return result;
    });
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function uniqBy9(array, iteratee) {
      return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }
    function memoize(func, resolver2) {
      if (typeof func != "function" || resolver2 && typeof resolver2 != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty2.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction(value) {
      var tag = isObject2(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function toString2(value) {
      return value == null ? "" : baseToString(value);
    }
    function get(object, path3, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path3);
      return result === void 0 ? defaultValue : result;
    }
    function hasIn(object, path3) {
      return object != null && hasPath(object, path3, baseHasIn);
    }
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function identity(value) {
      return value;
    }
    function noop5() {
    }
    function property(path3) {
      return isKey(path3) ? baseProperty(toKey(path3)) : basePropertyDeep(path3);
    }
    module.exports = uniqBy9;
  }
});

// node_modules/textarea-caret/index.js
var require_textarea_caret = __commonJS({
  "node_modules/textarea-caret/index.js"(exports, module) {
    (function() {
      var properties = [
        "direction",
        // RTL support
        "boxSizing",
        "width",
        // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does
        "height",
        "overflowX",
        "overflowY",
        // copy the scrollbar for IE
        "borderTopWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "borderLeftWidth",
        "borderStyle",
        "paddingTop",
        "paddingRight",
        "paddingBottom",
        "paddingLeft",
        // https://developer.mozilla.org/en-US/docs/Web/CSS/font
        "fontStyle",
        "fontVariant",
        "fontWeight",
        "fontStretch",
        "fontSize",
        "fontSizeAdjust",
        "lineHeight",
        "fontFamily",
        "textAlign",
        "textTransform",
        "textIndent",
        "textDecoration",
        // might not make a difference, but better be safe
        "letterSpacing",
        "wordSpacing",
        "tabSize",
        "MozTabSize"
      ];
      var isBrowser = typeof window !== "undefined";
      var isFirefox = isBrowser && window.mozInnerScreenX != null;
      function getCaretCoordinates2(element3, position4, options2) {
        if (!isBrowser) {
          throw new Error("textarea-caret-position#getCaretCoordinates should only be called in a browser");
        }
        var debug2 = options2 && options2.debug || false;
        if (debug2) {
          var el = document.querySelector("#input-textarea-caret-position-mirror-div");
          if (el)
            el.parentNode.removeChild(el);
        }
        var div = document.createElement("div");
        div.id = "input-textarea-caret-position-mirror-div";
        document.body.appendChild(div);
        var style = div.style;
        var computed = window.getComputedStyle ? window.getComputedStyle(element3) : element3.currentStyle;
        var isInput = element3.nodeName === "INPUT";
        style.whiteSpace = "pre-wrap";
        if (!isInput)
          style.wordWrap = "break-word";
        style.position = "absolute";
        if (!debug2)
          style.visibility = "hidden";
        properties.forEach(function(prop) {
          if (isInput && prop === "lineHeight") {
            style.lineHeight = computed.height;
          } else {
            style[prop] = computed[prop];
          }
        });
        if (isFirefox) {
          if (element3.scrollHeight > parseInt(computed.height))
            style.overflowY = "scroll";
        } else {
          style.overflow = "hidden";
        }
        div.textContent = element3.value.substring(0, position4);
        if (isInput)
          div.textContent = div.textContent.replace(/\s/g, " ");
        var span = document.createElement("span");
        span.textContent = element3.value.substring(position4) || ".";
        div.appendChild(span);
        var coordinates = {
          top: span.offsetTop + parseInt(computed["borderTopWidth"]),
          left: span.offsetLeft + parseInt(computed["borderLeftWidth"]),
          height: parseInt(computed["lineHeight"])
        };
        if (debug2) {
          span.style.backgroundColor = "#aaa";
        } else {
          document.body.removeChild(div);
        }
        return coordinates;
      }
      if (typeof module != "undefined" && typeof module.exports != "undefined") {
        module.exports = getCaretCoordinates2;
      } else if (isBrowser) {
        window.getCaretCoordinates = getCaretCoordinates2;
      }
    })();
  }
});

// node_modules/stream-chat-react/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/stream-chat-react/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType3(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment2 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense6 = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment2;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense6;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType3;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/stream-chat-react/node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/stream-chat-react/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/lodash.debounce/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root2.Date.now();
    };
    function debounce5(func, wait, options2) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options2)) {
        leading = !!options2.leading;
        maxing = "maxWait" in options2;
        maxWait = maxing ? nativeMax(toNumber(options2.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options2 ? !!options2.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject2(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject2(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = debounce5;
  }
});

// node_modules/lodash.throttle/index.js
var require_lodash3 = __commonJS({
  "node_modules/lodash.throttle/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root2.Date.now();
    };
    function debounce5(func, wait, options2) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options2)) {
        leading = !!options2.leading;
        maxing = "maxWait" in options2;
        maxWait = maxing ? nativeMax(toNumber(options2.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options2 ? !!options2.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function throttle4(func, wait, options2) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject2(options2)) {
        leading = "leading" in options2 ? !!options2.leading : leading;
        trailing = "trailing" in options2 ? !!options2.trailing : trailing;
      }
      return debounce5(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject2(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject2(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = throttle4;
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning2 = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning2;
  }
});

// node_modules/stream-chat-react/dist/components/Attachment/Attachment.js
var import_react39 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Attachment/utils.js
var import_react36 = __toESM(require_react());
var import_react_player2 = __toESM(require_lib());

// node_modules/clsx/dist/clsx.mjs
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e)) {
      var o = e.length;
      for (t = 0; t < o; t++)
        e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    } else
      for (f in e)
        e[f] && (n && (n += " "), n += f);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = "", o = arguments.length; f < o; f++)
    (e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_default = clsx;

// node_modules/stream-chat-react/dist/components/Attachment/AttachmentActions.js
var import_react = __toESM(require_react());
var UnMemoizedAttachmentActions = function(props) {
  var actionHandler = props.actionHandler, actions = props.actions, id = props.id, text5 = props.text;
  var t = useTranslationContext("UnMemoizedAttachmentActions").t;
  var handleActionClick = function(event, name, value) {
    return actionHandler === null || actionHandler === void 0 ? void 0 : actionHandler(name, value, event);
  };
  return import_react.default.createElement(
    "div",
    { className: "str-chat__message-attachment-actions" },
    import_react.default.createElement(
      "div",
      { className: "str-chat__message-attachment-actions-form" },
      import_react.default.createElement("span", null, text5),
      actions.map(function(action) {
        return import_react.default.createElement("button", { className: "str-chat__message-attachment-actions-button str-chat__message-attachment-actions-button--".concat(action.style), "data-testid": "".concat(action.name), "data-value": action.value, key: "".concat(id, "-").concat(action.value), onClick: function(event) {
          return handleActionClick(event, action.name, action.value);
        } }, action.text ? t(action.text) : null);
      })
    )
  );
};
var AttachmentActions = import_react.default.memo(UnMemoizedAttachmentActions);

// node_modules/stream-chat-react/dist/components/Attachment/Audio.js
var import_react7 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Attachment/icons.js
var import_react2 = __toESM(require_react());
var DownloadIcon = function(_a) {
  var className = _a.className;
  return import_react2.default.createElement(
    "svg",
    { className, "data-testid": "download", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react2.default.createElement("path", { d: "M19.35 10.04C18.67 6.59 15.64 4 12 4C9.11 4 6.6 5.64 5.35 8.04C2.34 8.36 0 10.91 0 14C0 17.31 2.69 20 6 20H19C21.76 20 24 17.76 24 15C24 12.36 21.95 10.22 19.35 10.04ZM19 18H6C3.79 18 2 16.21 2 14C2 11.95 3.53 10.24 5.56 10.03L6.63 9.92L7.13 8.97C8.08 7.14 9.94 6 12 6C14.62 6 16.88 7.86 17.39 10.43L17.69 11.93L19.22 12.04C20.78 12.14 22 13.45 22 15C22 16.65 20.65 18 19 18ZM13.45 10H10.55V13H8L12 17L16 13H13.45V10Z", fill: "black" })
  );
};
var PlayTriangleIcon = function() {
  return import_react2.default.createElement(
    "svg",
    { fill: "none", viewBox: "0 0 12 14", xmlns: "http://www.w3.org/2000/svg" },
    import_react2.default.createElement("path", { d: "M0.5 0V14L11.5 7L0.5 0Z", fill: "#080707" })
  );
};
var PauseIcon = function() {
  return import_react2.default.createElement(
    "svg",
    { fill: "none", viewBox: "0 0 12 14", xmlns: "http://www.w3.org/2000/svg" },
    import_react2.default.createElement("path", { d: "M0 14H4V0H0V14ZM8 0V14H12V0H8Z", fill: "#080707" })
  );
};

// node_modules/stream-chat-react/dist/components/Attachment/FileSizeIndicator.js
var import_react3 = __toESM(require_react());
var import_pretty_bytes = __toESM(require_pretty_bytes());
var FileSizeIndicator = function(_a) {
  var fileSize = _a.fileSize;
  if (!(fileSize && Number.isFinite(Number(fileSize))))
    return null;
  return import_react3.default.createElement("span", { className: "str-chat__message-attachment-file--item-size" }, (0, import_pretty_bytes.default)(fileSize));
};

// node_modules/stream-chat-react/dist/components/Attachment/DownloadButton.js
var import_react5 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/SafeAnchor/SafeAnchor.js
var import_react4 = __toESM(require_react());
var import_sanitize_url = __toESM(require_dist());
var UnMemoizedSafeAnchor = function(props) {
  var children = props.children, className = props.className, download = props.download, href = props.href, rel = props.rel, target = props.target;
  if (!href)
    return null;
  var sanitized = (0, import_sanitize_url.sanitizeUrl)(href);
  return import_react4.default.createElement("a", { "aria-label": "Attachment", className, download, href: sanitized, rel, target }, children);
};
var SafeAnchor = import_react4.default.memo(UnMemoizedSafeAnchor);

// node_modules/stream-chat-react/dist/components/Attachment/DownloadButton.js
var DownloadButton = function(_a) {
  var assetUrl = _a.assetUrl;
  return import_react5.default.createElement(
    SafeAnchor,
    { className: "str-chat__message-attachment-file--item-download", download: true, href: assetUrl, target: "_blank" },
    import_react5.default.createElement(DownloadIcon, { className: "str-chat__message-attachment-download-icon" })
  );
};

// node_modules/stream-chat-react/dist/components/Attachment/hooks/useAudioController.js
var import_react6 = __toESM(require_react());
var PROGRESS_UPDATE_INTERVAL = 100;
var useAudioController = function() {
  var _a = (0, import_react6.useState)(false), isPlaying = _a[0], setIsPlaying = _a[1];
  var _b = (0, import_react6.useState)(0), progress = _b[0], setProgress = _b[1];
  var audioRef = (0, import_react6.useRef)(null);
  var togglePlay = (0, import_react6.useCallback)(function() {
    setIsPlaying(function(playing) {
      return !playing;
    });
  }, []);
  var seek = (0, import_react6.useCallback)(function(_a2) {
    var clientX = _a2.clientX, currentTarget = _a2.currentTarget;
    if (!audioRef.current)
      return;
    var _b2 = currentTarget.getBoundingClientRect(), width = _b2.width, x = _b2.x;
    var ratio = (clientX - x) / width;
    if (!isPlaying)
      setProgress(ratio * 100);
    audioRef.current.currentTime = ratio * audioRef.current.duration;
  }, [isPlaying]);
  (0, import_react6.useEffect)(function() {
    if (!audioRef.current || !isPlaying)
      return;
    var interval = window.setInterval(function() {
      if (!audioRef.current)
        return;
      var _a2 = audioRef.current, currentTime = _a2.currentTime, duration = _a2.duration;
      setProgress(currentTime / duration * 100);
      if (currentTime === duration)
        setIsPlaying(false);
    }, PROGRESS_UPDATE_INTERVAL);
    audioRef.current.play();
    return function() {
      var _a2;
      (_a2 = audioRef.current) === null || _a2 === void 0 ? void 0 : _a2.pause();
      window.clearInterval(interval);
    };
  }, [isPlaying]);
  return {
    audioRef,
    isPlaying,
    progress,
    seek,
    togglePlay
  };
};

// node_modules/stream-chat-react/dist/components/Attachment/Audio.js
var AudioV1 = function(_a) {
  var og = _a.og;
  var asset_url = og.asset_url, description = og.description, image_url = og.image_url, text5 = og.text, title = og.title;
  var _b = useAudioController(), audioRef = _b.audioRef, isPlaying = _b.isPlaying, progress = _b.progress, togglePlay = _b.togglePlay;
  return import_react7.default.createElement(
    "div",
    { className: "str-chat__audio" },
    import_react7.default.createElement(
      "div",
      { className: "str-chat__audio__wrapper" },
      import_react7.default.createElement(
        "audio",
        { ref: audioRef },
        import_react7.default.createElement("source", { "data-testid": "audio-source", src: asset_url, type: "audio/mp3" })
      ),
      import_react7.default.createElement(
        "div",
        { className: "str-chat__audio__image" },
        import_react7.default.createElement("div", { className: "str-chat__audio__image--overlay" }, !isPlaying ? import_react7.default.createElement(
          "button",
          { className: "str-chat__audio__image--button", "data-testid": "play-audio", onClick: togglePlay },
          import_react7.default.createElement(
            "svg",
            { height: "40", viewBox: "0 0 64 64", width: "40", xmlns: "http://www.w3.org/2000/svg" },
            import_react7.default.createElement("path", { d: "M32 58c14.36 0 26-11.64 26-26S46.36 6 32 6 6 17.64 6 32s11.64 26 26 26zm0 6C14.327 64 0 49.673 0 32 0 14.327 14.327 0 32 0c17.673 0 32 14.327 32 32 0 17.673-14.327 32-32 32zm13.237-28.412L26.135 45.625a3.27 3.27 0 0 1-4.426-1.4 3.319 3.319 0 0 1-.372-1.47L21 23.36c-.032-1.823 1.41-3.327 3.222-3.358a3.263 3.263 0 0 1 1.473.322l19.438 9.36a3.311 3.311 0 0 1 .103 5.905z", fillRule: "nonzero" })
          )
        ) : import_react7.default.createElement(
          "button",
          { className: "str-chat__audio__image--button", "data-testid": "pause-audio", onClick: togglePlay },
          import_react7.default.createElement(
            "svg",
            { height: "40", viewBox: "0 0 64 64", width: "40", xmlns: "http://www.w3.org/2000/svg" },
            import_react7.default.createElement("path", { d: "M32 58.215c14.478 0 26.215-11.737 26.215-26.215S46.478 5.785 32 5.785 5.785 17.522 5.785 32 17.522 58.215 32 58.215zM32 64C14.327 64 0 49.673 0 32 0 14.327 14.327 0 32 0c17.673 0 32 14.327 32 32 0 17.673-14.327 32-32 32zm-7.412-45.56h2.892a2.17 2.17 0 0 1 2.17 2.17v23.865a2.17 2.17 0 0 1-2.17 2.17h-2.892a2.17 2.17 0 0 1-2.17-2.17V20.61a2.17 2.17 0 0 1 2.17-2.17zm12.293 0h2.893a2.17 2.17 0 0 1 2.17 2.17v23.865a2.17 2.17 0 0 1-2.17 2.17h-2.893a2.17 2.17 0 0 1-2.17-2.17V20.61a2.17 2.17 0 0 1 2.17-2.17z", fillRule: "nonzero" })
          )
        )),
        image_url && import_react7.default.createElement("img", { alt: "".concat(description), src: image_url })
      ),
      import_react7.default.createElement(
        "div",
        { className: "str-chat__audio__content" },
        import_react7.default.createElement(
          "span",
          { className: "str-chat__audio__content--title" },
          import_react7.default.createElement("strong", null, title)
        ),
        import_react7.default.createElement("span", { className: "str-chat__audio__content--subtitle" }, text5),
        import_react7.default.createElement(
          "div",
          { className: "str-chat__audio__content--progress" },
          import_react7.default.createElement("div", { "data-progress": progress, "data-testid": "audio-progress", role: "progressbar", style: { width: "".concat(progress, "%") } })
        )
      )
    )
  );
};
var PlayButton = function(_a) {
  var isPlaying = _a.isPlaying, onClick = _a.onClick;
  return import_react7.default.createElement("button", { className: "str-chat__message-attachment-audio-widget--play-button", "data-testid": isPlaying ? "pause-audio" : "play-audio", onClick }, isPlaying ? import_react7.default.createElement(PauseIcon, null) : import_react7.default.createElement(PlayTriangleIcon, null));
};
var ProgressBar = function(_a) {
  var onClick = _a.onClick, progress = _a.progress;
  return import_react7.default.createElement(
    "div",
    { className: "str-chat__message-attachment-audio-widget--progress-track", "data-progress": progress, "data-testid": "audio-progress", onClick, role: "progressbar", style: {
      background: "linear-gradient(\n		 to right,\n		 var(--str-chat__primary-color),\n		 var(--str-chat__primary-color) ".concat(progress, "%,\n		 var(--str-chat__disabled-color) ").concat(progress, "%,\n		 var(--str-chat__disabled-color)\n	  )")
    } },
    import_react7.default.createElement("div", { className: "str-chat__message-attachment-audio-widget--progress-slider", style: { left: "".concat(progress, "px") } })
  );
};
var AudioV2 = function(_a) {
  var og = _a.og;
  var asset_url = og.asset_url, file_size = og.file_size, title = og.title;
  var _b = useAudioController(), audioRef = _b.audioRef, isPlaying = _b.isPlaying, progress = _b.progress, seek = _b.seek, togglePlay = _b.togglePlay;
  if (!asset_url)
    return null;
  var dataTestId = "audio-widget";
  var rootClassName = "str-chat__message-attachment-audio-widget";
  return import_react7.default.createElement(
    "div",
    { className: rootClassName, "data-testid": dataTestId },
    import_react7.default.createElement(
      "audio",
      { ref: audioRef },
      import_react7.default.createElement("source", { "data-testid": "audio-source", src: asset_url, type: "audio/mp3" })
    ),
    import_react7.default.createElement(
      "div",
      { className: "str-chat__message-attachment-audio-widget--play-controls" },
      import_react7.default.createElement(PlayButton, { isPlaying, onClick: togglePlay })
    ),
    import_react7.default.createElement(
      "div",
      { className: "str-chat__message-attachment-audio-widget--text" },
      import_react7.default.createElement(
        "div",
        { className: "str-chat__message-attachment-audio-widget--text-first-row" },
        import_react7.default.createElement("div", { className: "str-chat__message-attachment-audio-widget--title" }, title),
        import_react7.default.createElement(DownloadButton, { assetUrl: asset_url })
      ),
      import_react7.default.createElement(
        "div",
        { className: "str-chat__message-attachment-audio-widget--text-second-row" },
        import_react7.default.createElement(FileSizeIndicator, { fileSize: file_size }),
        import_react7.default.createElement(ProgressBar, { onClick: seek, progress })
      )
    )
  );
};
var UnMemoizedAudio = function(props) {
  var themeVersion = useChatContext("Audio").themeVersion;
  return themeVersion === "1" ? import_react7.default.createElement(AudioV1, __assign({}, props)) : import_react7.default.createElement(AudioV2, __assign({}, props));
};
var Audio = import_react7.default.memo(UnMemoizedAudio);

// node_modules/stream-chat-react/dist/components/Attachment/Card.js
var import_react14 = __toESM(require_react());
var import_react_player = __toESM(require_lib());

// node_modules/stream-chat-react/dist/components/Gallery/BaseImage.js
var import_react8 = __toESM(require_react());
var BaseImage = (0, import_react8.forwardRef)(function BaseImage2(_a, ref) {
  var props = __rest(_a, []);
  var propsClassName = props.className, propsOnError = props.onError;
  var _b = (0, import_react8.useState)(false), error = _b[0], setError = _b[1];
  (0, import_react8.useEffect)(function() {
    return function() {
      setError(false);
    };
  }, [props.src]);
  return import_react8.default.createElement(
    import_react8.default.Fragment,
    null,
    import_react8.default.createElement("img", __assign({ "data-testid": "str-chat__base-image" }, props, { className: clsx_default(propsClassName, "str-chat__base-image", {
      "str-chat__base-image--load-failed": error
    }), onError: function(e) {
      setError(true);
      propsOnError === null || propsOnError === void 0 ? void 0 : propsOnError(e);
    }, ref })),
    error && import_react8.default.createElement(DownloadButton, { assetUrl: props.src })
  );
});

// node_modules/stream-chat-react/dist/components/Gallery/Gallery.js
var import_react12 = __toESM(require_react());
var import_sanitize_url2 = __toESM(require_dist());

// node_modules/stream-chat-react/dist/components/Modal/Modal.js
var import_react10 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Modal/icons.js
var import_react9 = __toESM(require_react());
var CloseIconRound = function() {
  return import_react9.default.createElement(
    "svg",
    { "data-testid": "close-icon-round", fill: "none", height: "28", viewBox: "0 0 28 28", width: "28", xmlns: "http://www.w3.org/2000/svg" },
    import_react9.default.createElement("rect", { fill: "#72767E", height: "28", rx: "14", width: "28" }),
    import_react9.default.createElement("circle", { cx: "14", cy: "14", fill: "#72767E", r: "12" }),
    import_react9.default.createElement("path", { clipRule: "evenodd", d: "M28 14C28 21.732 21.732 28 14 28C6.26801 28 0 21.732 0 14C0 6.26801 6.26801 0 14 0C21.732 0 28 6.26801 28 14ZM26 14C26 20.6274 20.6274 26 14 26C7.37258 26 2 20.6274 2 14C2 7.37258 7.37258 2 14 2C20.6274 2 26 7.37258 26 14ZM19.59 7L21 8.41L15.41 14L21 19.59L19.59 21L14 15.41L8.41 21L7 19.59L12.59 14L7 8.41L8.41 7L14 12.59L19.59 7Z", fill: "white", fillRule: "evenodd" })
  );
};

// node_modules/stream-chat-react/dist/components/Modal/Modal.js
var Modal = function(_a) {
  var children = _a.children, onClose = _a.onClose, open = _a.open;
  var t = useTranslationContext("Modal").t;
  var themeVersion = useChatContext("Modal").themeVersion;
  var innerRef = (0, import_react10.useRef)(null);
  var closeRef = (0, import_react10.useRef)(null);
  var handleClick = function(event) {
    var target = event.target;
    if (!innerRef.current || !closeRef.current)
      return;
    if (!innerRef.current.contains(target) || closeRef.current.contains(target))
      onClose === null || onClose === void 0 ? void 0 : onClose(event);
  };
  (0, import_react10.useEffect)(function() {
    if (!open)
      return;
    var handleKeyDown = function(event) {
      if (event.key === "Escape")
        onClose === null || onClose === void 0 ? void 0 : onClose(event);
    };
    document.addEventListener("keydown", handleKeyDown);
    return function() {
      return document.removeEventListener("keydown", handleKeyDown);
    };
  }, [onClose, open]);
  if (!open)
    return null;
  return import_react10.default.createElement(
    "div",
    { className: "str-chat__modal str-chat__modal--open", onClick: handleClick },
    import_react10.default.createElement(
      "button",
      { className: "str-chat__modal__close-button", ref: closeRef, title: t("Close") },
      themeVersion === "2" && import_react10.default.createElement(CloseIconRound, null),
      themeVersion === "1" && import_react10.default.createElement(
        import_react10.default.Fragment,
        null,
        t("Close"),
        import_react10.default.createElement(
          "svg",
          { height: "10", width: "10", xmlns: "http://www.w3.org/2000/svg" },
          import_react10.default.createElement("path", { d: "M9.916 1.027L8.973.084 5 4.058 1.027.084l-.943.943L4.058 5 .084 8.973l.943.943L5 5.942l3.973 3.974.943-.943L5.942 5z", fillRule: "evenodd" })
        )
      )
    ),
    import_react10.default.createElement("div", { className: "str-chat__modal__inner str-chat-react__modal__inner", ref: innerRef }, children)
  );
};

// node_modules/stream-chat-react/dist/components/Gallery/ModalGallery.js
var import_react11 = __toESM(require_react());
var import_react_image_gallery = __toESM(require_image_gallery());
var onError = function(e) {
  e.target.alt = "";
};
var renderItem = function(_a) {
  var original = _a.original, originalAlt = _a.originalAlt;
  return import_react11.default.createElement(BaseImage, { alt: originalAlt, className: "image-gallery-image", onError, src: original });
};
var ModalGallery = function(props) {
  var images = props.images, index5 = props.index;
  var t = useTranslationContext("ModalGallery").t;
  var formattedArray = (0, import_react11.useMemo)(function() {
    return images.map(function(image2) {
      var imageSrc = image2.image_url || image2.thumb_url || "";
      return {
        original: imageSrc,
        originalAlt: t("User uploaded content"),
        source: imageSrc
      };
    });
  }, [images]);
  return import_react11.default.createElement(import_react_image_gallery.default, { items: formattedArray, renderItem, showIndex: true, showPlayButton: false, showThumbnails: false, startIndex: index5 });
};

// node_modules/stream-chat-react/dist/components/Gallery/Gallery.js
var UnMemoizedGallery = function(props) {
  var images = props.images, innerRefs = props.innerRefs;
  var _a = (0, import_react12.useState)(0), index5 = _a[0], setIndex = _a[1];
  var _b = (0, import_react12.useState)(false), modalOpen = _b[0], setModalOpen = _b[1];
  var _c = useComponentContext("Gallery"), _d = _c.BaseImage, BaseImage3 = _d === void 0 ? BaseImage : _d, _e = _c.ModalGallery, ModalGallery2 = _e === void 0 ? ModalGallery : _e;
  var t = useTranslationContext("Gallery").t;
  var imageFallbackTitle = t("User uploaded content");
  var countImagesDisplayedInPreview = 4;
  var lastImageIndexInPreview = countImagesDisplayedInPreview - 1;
  var toggleModal = function(selectedIndex) {
    if (modalOpen) {
      setModalOpen(false);
    } else {
      setIndex(selectedIndex);
      setModalOpen(true);
    }
  };
  var renderImages = images.slice(0, countImagesDisplayedInPreview).map(function(image2, i) {
    return i === lastImageIndexInPreview && images.length > countImagesDisplayedInPreview ? import_react12.default.createElement(
      "button",
      __assign({ className: "str-chat__gallery-placeholder", "data-testid": "gallery-image-last", key: "gallery-image-".concat(i), onClick: function() {
        return toggleModal(i);
      }, style: __assign({ backgroundImage: "url(".concat(images[lastImageIndexInPreview].previewUrl || images[lastImageIndexInPreview].image_url || images[lastImageIndexInPreview].thumb_url, ")") }, image2.style) }, (innerRefs === null || innerRefs === void 0 ? void 0 : innerRefs.current) && { ref: function(r2) {
        return innerRefs.current[i] = r2;
      } }),
      import_react12.default.createElement("p", null, t("{{ imageCount }} more", {
        imageCount: images.length - countImagesDisplayedInPreview
      }))
    ) : import_react12.default.createElement(
      "button",
      { className: "str-chat__gallery-image", "data-testid": "gallery-image", key: "gallery-image-".concat(i), onClick: function() {
        return toggleModal(i);
      } },
      import_react12.default.createElement(BaseImage3, __assign({ alt: (image2 === null || image2 === void 0 ? void 0 : image2.fallback) || imageFallbackTitle, src: (0, import_sanitize_url2.sanitizeUrl)(image2.previewUrl || image2.image_url || image2.thumb_url), style: image2.style, title: (image2 === null || image2 === void 0 ? void 0 : image2.fallback) || imageFallbackTitle }, (innerRefs === null || innerRefs === void 0 ? void 0 : innerRefs.current) && { ref: function(r2) {
        return innerRefs.current[i] = r2;
      } }))
    );
  });
  var className = clsx_default("str-chat__gallery", {
    "str-chat__gallery--square": images.length > lastImageIndexInPreview,
    "str-chat__gallery-two-rows": images.length > 2
  });
  return import_react12.default.createElement(
    "div",
    { className },
    renderImages,
    import_react12.default.createElement(
      Modal,
      { onClose: function() {
        return setModalOpen(function(modalOpen2) {
          return !modalOpen2;
        });
      }, open: modalOpen },
      import_react12.default.createElement(ModalGallery2, { images, index: index5 })
    )
  );
};
var Gallery = import_react12.default.memo(UnMemoizedGallery);

// node_modules/stream-chat-react/dist/components/Gallery/Image.js
var import_react13 = __toESM(require_react());
var import_sanitize_url3 = __toESM(require_dist());
var ImageComponent = function(props) {
  var _a = props.dimensions, dimensions = _a === void 0 ? {} : _a, fallback = props.fallback, image_url = props.image_url, thumb_url = props.thumb_url, innerRef = props.innerRef, previewUrl = props.previewUrl, style = props.style;
  var _b = (0, import_react13.useState)(false), modalIsOpen = _b[0], setModalIsOpen = _b[1];
  var _c = useComponentContext("ImageComponent"), _d = _c.BaseImage, BaseImage3 = _d === void 0 ? BaseImage : _d, _e = _c.ModalGallery, ModalGallery2 = _e === void 0 ? ModalGallery : _e;
  var imageSrc = (0, import_sanitize_url3.sanitizeUrl)(previewUrl || image_url || thumb_url);
  var toggleModal = function() {
    return setModalIsOpen(function(modalIsOpen2) {
      return !modalIsOpen2;
    });
  };
  return import_react13.default.createElement(
    import_react13.default.Fragment,
    null,
    import_react13.default.createElement(BaseImage3, __assign({ alt: fallback, className: "str-chat__message-attachment--img", "data-testid": "image-test", onClick: toggleModal, src: imageSrc, style, tabIndex: 0, title: fallback }, dimensions, innerRef && { ref: innerRef })),
    import_react13.default.createElement(
      Modal,
      { onClose: toggleModal, open: modalIsOpen },
      import_react13.default.createElement(ModalGallery2, { images: [props], index: 0 })
    )
  );
};

// node_modules/stream-chat-react/dist/components/Attachment/Card.js
var getHostFromURL = function(url) {
  if (url !== void 0 && url !== null) {
    var trimmedUrl = url.replace(/^(?:https?:\/\/)?(?:www\.)?/i, "").split("/")[0];
    return trimmedUrl;
  }
  return null;
};
var UnableToRenderCard = function(_a) {
  var _b;
  var type = _a.type;
  var t = useTranslationContext("Card").t;
  return import_react14.default.createElement(
    "div",
    { className: clsx_default("str-chat__message-attachment-card", (_b = {}, _b["str-chat__message-attachment-card--".concat(type)] = type, _b)) },
    import_react14.default.createElement(
      "div",
      { className: "str-chat__message-attachment-card--content" },
      import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--text" }, t("this content could not be displayed"))
    )
  );
};
var CardV1 = function(props) {
  var asset_url = props.asset_url, giphy = props.giphy, image_url = props.image_url, og_scrape_url = props.og_scrape_url, text5 = props.text, thumb_url = props.thumb_url, title = props.title, title_link = props.title_link, type = props.type;
  var giphyVersionName = useChannelStateContext("Card").giphyVersion;
  var image2 = thumb_url || image_url;
  var dimensions = {};
  if (type === "giphy" && typeof giphy !== "undefined") {
    var giphyVersion = giphy[giphyVersionName];
    image2 = giphyVersion.url;
    dimensions.height = giphyVersion.height;
    dimensions.width = giphyVersion.width;
  }
  if (!title && !title_link && !asset_url && !image2) {
    return import_react14.default.createElement(UnableToRenderCard, { type });
  }
  if (!title_link && !og_scrape_url) {
    return null;
  }
  return import_react14.default.createElement(
    "div",
    { className: "str-chat__message-attachment-card str-chat__message-attachment-card--".concat(type) },
    import_react14.default.createElement(CardHeader, __assign({}, props, { dimensions, image: image2 })),
    type !== "video" && import_react14.default.createElement(
      "div",
      { className: "str-chat__message-attachment-card--content" },
      import_react14.default.createElement(
        "div",
        { className: "str-chat__message-attachment-card--flex" },
        title && import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--title" }, title),
        text5 && import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--text" }, text5),
        (title_link || og_scrape_url) && import_react14.default.createElement(SafeAnchor, { className: "str-chat__message-attachment-card--url", href: title_link || og_scrape_url, rel: "noopener noreferrer", target: "_blank" }, getHostFromURL(title_link || og_scrape_url))
      )
    )
  );
};
var SourceLink = function(_a) {
  var author_name = _a.author_name, url = _a.url;
  return import_react14.default.createElement(
    "div",
    { className: "str-chat__message-attachment-card--source-link", "data-testid": "card-source-link" },
    import_react14.default.createElement(SafeAnchor, { className: "str-chat__message-attachment-card--url", href: url, rel: "noopener noreferrer", target: "_blank" }, author_name || getHostFromURL(url))
  );
};
var CardHeader = function(props) {
  var asset_url = props.asset_url, dimensions = props.dimensions, image2 = props.image, image_url = props.image_url, thumb_url = props.thumb_url, title = props.title, type = props.type;
  var visual = null;
  if (asset_url && type === "video") {
    visual = import_react14.default.createElement(import_react_player.default, { className: "react-player", controls: true, height: "100%", url: asset_url, width: "100%" });
  } else if (image2) {
    visual = import_react14.default.createElement(ImageComponent, { dimensions, fallback: title || image2, image_url, thumb_url });
  }
  return visual ? import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--header str-chat__message-attachment-card-react--header", "data-testid": "card-header" }, visual) : null;
};
var CardContent = function(props) {
  var author_name = props.author_name, og_scrape_url = props.og_scrape_url, text5 = props.text, title = props.title, title_link = props.title_link, type = props.type;
  var url = title_link || og_scrape_url;
  return import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--content" }, type === "audio" ? import_react14.default.createElement(CardAudio, { og: props }) : import_react14.default.createElement(
    "div",
    { className: "str-chat__message-attachment-card--flex" },
    url && import_react14.default.createElement(SourceLink, { author_name, url }),
    title && import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--title" }, title),
    text5 && import_react14.default.createElement("div", { className: "str-chat__message-attachment-card--text" }, text5)
  ));
};
var CardV2 = function(props) {
  var asset_url = props.asset_url, giphy = props.giphy, image_url = props.image_url, thumb_url = props.thumb_url, title = props.title, title_link = props.title_link, type = props.type;
  var giphyVersionName = useChannelStateContext("CardHeader").giphyVersion;
  var image2 = thumb_url || image_url;
  var dimensions = {};
  if (type === "giphy" && typeof giphy !== "undefined") {
    var giphyVersion = giphy[giphyVersionName];
    image2 = giphyVersion.url;
    dimensions.height = giphyVersion.height;
    dimensions.width = giphyVersion.width;
  }
  if (!title && !title_link && !asset_url && !image2) {
    return import_react14.default.createElement(UnableToRenderCard, null);
  }
  return import_react14.default.createElement(
    "div",
    { className: "str-chat__message-attachment-card str-chat__message-attachment-card--".concat(type) },
    import_react14.default.createElement(CardHeader, __assign({}, props, { dimensions, image: image2 })),
    import_react14.default.createElement(CardContent, __assign({}, props))
  );
};
var CardAudio = function(_a) {
  var _b = _a.og, asset_url = _b.asset_url, author_name = _b.author_name, og_scrape_url = _b.og_scrape_url, text5 = _b.text, title = _b.title, title_link = _b.title_link;
  var _c = useAudioController(), audioRef = _c.audioRef, isPlaying = _c.isPlaying, progress = _c.progress, seek = _c.seek, togglePlay = _c.togglePlay;
  var url = title_link || og_scrape_url;
  var dataTestId = "card-audio-widget";
  var rootClassName = "str-chat__message-attachment-card-audio-widget";
  return import_react14.default.createElement(
    "div",
    { className: rootClassName, "data-testid": dataTestId },
    asset_url && import_react14.default.createElement(
      import_react14.default.Fragment,
      null,
      import_react14.default.createElement(
        "audio",
        { ref: audioRef },
        import_react14.default.createElement("source", { "data-testid": "audio-source", src: asset_url, type: "audio/mp3" })
      ),
      import_react14.default.createElement(
        "div",
        { className: "str-chat__message-attachment-card-audio-widget--first-row" },
        import_react14.default.createElement(
          "div",
          { className: "str-chat__message-attachment-audio-widget--play-controls" },
          import_react14.default.createElement(PlayButton, { isPlaying, onClick: togglePlay })
        ),
        import_react14.default.createElement(ProgressBar, { onClick: seek, progress })
      )
    ),
    import_react14.default.createElement(
      "div",
      { className: "str-chat__message-attachment-audio-widget--second-row" },
      url && import_react14.default.createElement(SourceLink, { author_name, url }),
      title && import_react14.default.createElement("div", { className: "str-chat__message-attachment-audio-widget--title" }, title),
      text5 && import_react14.default.createElement("div", { className: "str-chat__message-attachment-audio-widget--description" }, text5)
    )
  );
};
var UnMemoizedCard = function(props) {
  var themeVersion = useChatContext("Card").themeVersion;
  return themeVersion === "2" ? import_react14.default.createElement(CardV2, __assign({}, props)) : import_react14.default.createElement(CardV1, __assign({}, props));
};
var Card = import_react14.default.memo(UnMemoizedCard);

// node_modules/stream-chat-react/dist/components/Attachment/FileAttachment.js
var import_react35 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/FileIcon.js
var import_react17 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/FileIconSet/v1.js
var import_react15 = __toESM(require_react());
var DEFAULT_SIZE = 20;
var FilePdfIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-pdf", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z", fill: "#f82903" })
  );
};
var FileWordIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-word", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z", fill: "#2c599d" })
  );
};
var FilePowerPointIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-powerpoint", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z", fill: "#cb4a32" })
  );
};
var FileExcelIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-excel", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z", fill: "#207245" })
  );
};
var FileArchiveIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-archive", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M128.3 160v32h32v-32zm64-96h-32v32h32zm-64 32v32h32V96zm64 32h-32v32h32zm177.6-30.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h79.7v16h32V48H208v104c0 13.3 10.7 24 24 24h104zM194.2 265.7c-1.1-5.6-6-9.7-11.8-9.7h-22.1v-32h-32v32l-19.7 97.1C102 385.6 126.8 416 160 416c33.1 0 57.9-30.2 51.5-62.6zm-33.9 124.4c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zm32-198.1h-32v32h32z", fill: "#414D54" })
  );
};
var FileCodeIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-code", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z", fill: "#414D54" })
  );
};
var FileAudioIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-audio", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm144-76.024c0 10.691-12.926 16.045-20.485 8.485L136 360.486h-28c-6.627 0-12-5.373-12-12v-56c0-6.627 5.373-12 12-12h28l35.515-36.947c7.56-7.56 20.485-2.206 20.485 8.485v135.952zm41.201-47.13c9.051-9.297 9.06-24.133.001-33.439-22.149-22.752 12.235-56.246 34.395-33.481 27.198 27.94 27.212 72.444.001 100.401-21.793 22.386-56.947-10.315-34.397-33.481z", fill: "#414D54" })
  );
};
var FileVideoIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-video", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm228.687-211.303L224 305.374V268c0-11.046-8.954-20-20-20H100c-11.046 0-20 8.954-20 20v104c0 11.046 8.954 20 20 20h104c11.046 0 20-8.954 20-20v-37.374l52.687 52.674C286.704 397.318 304 390.28 304 375.986V264.011c0-14.311-17.309-21.319-27.313-11.314z", fill: "#414D54" })
  );
};
var FileImageIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-image", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z", fill: "#414D54" })
  );
};
var FileAltIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-alt", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z", fill: "#414D54" })
  );
};
var FileFallbackIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? DEFAULT_SIZE : _b, props = __rest(_a, ["size"]);
  return import_react15.default.createElement(
    "svg",
    __assign({ className: "rfu-file-icon--small fa-file-fallback", height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react15.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48z", fill: "#414D54" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/FileIconSet/v2.js
var import_react16 = __toESM(require_react());
var DEFAULT_SIZE2 = 40;
var FilePdfIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-pdf ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#E71A01" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M16.39 8.90641C16.215 8.27341 15.787 7.95841 15.426 8.00441C14.99 8.06141 14.526 8.32041 14.34 8.72941C13.854 9.82141 14.768 12.8934 15.028 13.7674L15.073 13.9194C14.015 17.1134 10.394 23.4264 8.62002 23.8534C8.58302 23.4364 8.80602 22.2294 11.146 20.7244C11.266 20.5944 11.406 20.4374 11.471 20.3344C9.49302 21.3004 6.93108 22.8514 8.47102 24.0114C8.55602 24.0774 8.68502 24.1314 8.83402 24.1874C10.014 24.6244 11.666 23.1954 13.327 19.9544C15.157 19.3504 16.633 18.8964 18.722 18.5804C21.005 20.1304 22.538 20.4464 23.578 20.0474C23.866 19.9354 24.32 19.5734 24.45 19.1004C24.515 18.8774 24.608 18.5154 24.432 18.2274C23.842 17.2664 21.452 17.5954 20.032 17.7904C19.779 17.8254 19.557 17.8564 19.381 17.8744C17.552 16.7704 16.289 14.8014 15.778 13.3804C15.857 13.0784 15.936 12.7894 16.012 12.5124C16.397 11.1124 16.701 10.0064 16.392 8.90641H16.39ZM24.45 19.1004C23.605 20.1404 21.628 19.4164 20.05 18.4224C21.507 18.2644 23.01 18.1724 23.661 18.3764C24.488 18.6364 24.459 19.0444 24.451 19.1004H24.45ZM15.601 12.7404C15.296 11.6544 14.868 9.24041 15.555 8.46041C16.701 9.11641 16.266 10.5384 15.825 11.9834C15.748 12.2364 15.671 12.4894 15.601 12.7404ZM13.439 19.5834C15.156 18.9054 16.354 18.4494 18.118 18.1254C16.818 16.9554 16.028 15.6834 15.378 14.3834C14.915 16.0554 13.948 18.5894 13.438 19.5834H13.439Z", fill: "#E71A01", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M13.1719 33.0127V37.4219H12.1875V32.3018H13.1001L13.1719 33.0127ZM15.5132 34.1099V34.1816C15.5132 34.4505 15.4813 34.7 15.4175 34.9302C15.356 35.1603 15.2648 35.3608 15.144 35.5317C15.0233 35.7004 14.8729 35.8325 14.6929 35.9282C14.5151 36.0216 14.3101 36.0684 14.0776 36.0684C13.8521 36.0684 13.6561 36.0228 13.4897 35.9316C13.3234 35.8405 13.1833 35.7129 13.0693 35.5488C12.9577 35.3825 12.8677 35.1899 12.7993 34.9712C12.731 34.7524 12.6785 34.5177 12.6421 34.2671V34.0791C12.6785 33.8102 12.731 33.5641 12.7993 33.3408C12.8677 33.1152 12.9577 32.9204 13.0693 32.7563C13.1833 32.59 13.3223 32.4613 13.4863 32.3701C13.6527 32.279 13.8475 32.2334 14.0708 32.2334C14.3055 32.2334 14.5117 32.2778 14.6895 32.3667C14.8695 32.4556 15.0199 32.5832 15.1406 32.7495C15.2637 32.9159 15.356 33.1141 15.4175 33.3442C15.4813 33.5744 15.5132 33.8296 15.5132 34.1099ZM14.5254 34.1816V34.1099C14.5254 33.9526 14.5117 33.8079 14.4844 33.6758C14.4593 33.5413 14.4183 33.424 14.3613 33.3237C14.3066 33.2235 14.2337 33.146 14.1426 33.0913C14.0537 33.0343 13.9455 33.0059 13.8179 33.0059C13.6834 33.0059 13.5684 33.0275 13.4727 33.0708C13.3792 33.1141 13.3029 33.1768 13.2437 33.2588C13.1844 33.3408 13.14 33.4388 13.1104 33.5527C13.0807 33.6667 13.0625 33.7954 13.0557 33.939V34.4141C13.0671 34.5827 13.099 34.7342 13.1514 34.8687C13.2038 35.0008 13.2847 35.1056 13.394 35.1831C13.5034 35.2606 13.647 35.2993 13.8247 35.2993C13.9546 35.2993 14.064 35.2708 14.1528 35.2139C14.2417 35.1546 14.3135 35.0737 14.3682 34.9712C14.4251 34.8687 14.465 34.7502 14.4878 34.6157C14.5129 34.4813 14.5254 34.3366 14.5254 34.1816ZM18.3091 35.1934V30.75H19.3003V36H18.4082L18.3091 35.1934ZM15.9712 34.1953V34.1235C15.9712 33.841 16.0031 33.5846 16.0669 33.3545C16.1307 33.1221 16.2241 32.9227 16.3472 32.7563C16.4702 32.59 16.6217 32.4613 16.8018 32.3701C16.9818 32.279 17.1868 32.2334 17.417 32.2334C17.6335 32.2334 17.8226 32.279 17.9844 32.3701C18.1484 32.4613 18.2874 32.5911 18.4014 32.7598C18.5176 32.9261 18.611 33.1232 18.6816 33.3511C18.7523 33.5767 18.8035 33.8239 18.8354 34.0928V34.25C18.8035 34.5075 18.7523 34.7467 18.6816 34.9678C18.611 35.1888 18.5176 35.3825 18.4014 35.5488C18.2874 35.7129 18.1484 35.8405 17.9844 35.9316C17.8203 36.0228 17.6289 36.0684 17.4102 36.0684C17.18 36.0684 16.9749 36.0216 16.7949 35.9282C16.6172 35.8348 16.4668 35.7038 16.3438 35.5352C16.223 35.3665 16.1307 35.1683 16.0669 34.9404C16.0031 34.7126 15.9712 34.4642 15.9712 34.1953ZM16.9556 34.1235V34.1953C16.9556 34.348 16.967 34.4904 16.9897 34.6226C17.0148 34.7547 17.0547 34.8721 17.1094 34.9746C17.1663 35.0749 17.2393 35.1535 17.3281 35.2104C17.4193 35.2651 17.5298 35.2925 17.6597 35.2925C17.8283 35.2925 17.9673 35.2549 18.0767 35.1797C18.186 35.1022 18.2692 34.9963 18.3262 34.8618C18.3854 34.7274 18.4196 34.5724 18.4287 34.397V33.9492C18.4219 33.8057 18.4014 33.6769 18.3672 33.563C18.3353 33.4468 18.2874 33.3477 18.2236 33.2656C18.1621 33.1836 18.0846 33.1198 17.9912 33.0742C17.9001 33.0286 17.7918 33.0059 17.6665 33.0059C17.5389 33.0059 17.4295 33.0355 17.3384 33.0947C17.2472 33.1517 17.1732 33.2303 17.1162 33.3306C17.0615 33.4308 17.0205 33.5493 16.9932 33.686C16.9681 33.8205 16.9556 33.9663 16.9556 34.1235ZM21.3237 36H20.3325V31.9736C20.3325 31.6934 20.3872 31.4575 20.4966 31.2661C20.6082 31.0724 20.7643 30.9266 20.9648 30.8286C21.1676 30.7284 21.408 30.6782 21.686 30.6782C21.7772 30.6782 21.8649 30.6851 21.9492 30.6987C22.0335 30.7101 22.1156 30.7249 22.1953 30.7432L22.1851 31.4849C22.1418 31.4735 22.0962 31.4655 22.0483 31.4609C22.0005 31.4564 21.9447 31.4541 21.8809 31.4541C21.7624 31.4541 21.661 31.4746 21.5767 31.5156C21.4946 31.5544 21.432 31.6125 21.3887 31.6899C21.3454 31.7674 21.3237 31.862 21.3237 31.9736V36ZM22.062 32.3018V32.999H19.7822V32.3018H22.062Z", fill: "white" })
  );
};
var FileWordIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-word ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#4285F4" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 13H23V15H8V13Z", fill: "#4285F4", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 17H18V19H8V17Z", fill: "#4285F4", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 21H23V23H8V21Z", fill: "#4285F4", fillRule: "evenodd" })
  );
};
var FileWordIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-word-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11084_64)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#3670D3" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 13H23V15H8V13Z", fill: "#C1D8FF", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 17H18V19H8V17Z", fill: "#C1D8FF", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 21H23V23H8V21Z", fill: "#C1D8FF", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11084_64", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#79A4F2" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#3375E2" })
      )
    )
  );
};
var FilePowerPointIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-powerpoint ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M17.7168 33.172C18.2348 33.172 18.4238 33.655 18.4238 34.18C18.4238 34.642 18.2978 35.195 17.7168 35.195C17.1708 35.195 16.9888 34.642 16.9888 34.145C16.9888 33.683 17.1708 33.172 17.7168 33.172ZM19.5718 31.002H18.3818V32.7589H18.3678C18.1228 32.43 17.7798 32.262 17.3318 32.262C16.3028 32.262 15.7988 33.158 15.7988 34.103C15.7988 35.125 16.2818 36.1049 17.4228 36.1049C17.8428 36.1049 18.1928 35.923 18.4238 35.58H18.4378V36H19.5718V31.002ZM12.7095 34.1872C12.7095 33.7252 12.8775 33.1722 13.4305 33.1722C13.9835 33.1722 14.1585 33.7252 14.1585 34.1872C14.1585 34.6492 13.9835 35.1952 13.4305 35.1952C12.8775 35.1952 12.7095 34.6492 12.7095 34.1872ZM11.5195 34.1872C11.5195 35.2792 12.3035 36.1052 13.4305 36.1052C14.5575 36.1052 15.3485 35.2792 15.3485 34.1872C15.3485 33.0952 14.5575 32.2622 13.4305 32.2622C12.3035 32.2622 11.5195 33.0952 11.5195 34.1872ZM21.839 32.3671H22.574V33.1371H21.839V34.7891C21.839 35.0761 22.007 35.1391 22.266 35.1391C22.3142 35.1391 22.364 35.1357 22.4147 35.1323C22.4672 35.1287 22.5206 35.1251 22.574 35.1251V36.0001C22.481 36.0031 22.388 36.0099 22.295 36.0168C22.171 36.0259 22.047 36.0351 21.923 36.0351C20.908 36.0351 20.649 35.7411 20.649 34.7541V33.1371H20.047V32.3671H20.649V31.2681H21.839V32.3671Z", fill: "white", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#D65537" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M7 12C7 10.8954 7.89543 10 9 10H19C20.1046 10 21 10.8954 21 12V18C21 19.1046 20.1046 20 19 20H9C7.89543 20 7 19.1046 7 18V12ZM9 12H19V18H9V12ZM25 22C25 23.1046 24.1046 24 23 24H11V22H23V15H25V22Z", fill: "#D65537", fillRule: "evenodd" })
  );
};
var FilePowerPointIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-powerpoint-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11084_76)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#AB381D" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M7 12C7 10.8954 7.89543 10 9 10H19C20.1046 10 21 10.8954 21 12V18C21 19.1046 20.1046 20 19 20H9C7.89543 20 7 19.1046 7 18V12ZM9 12H19V18H9V12ZM25 22C25 23.1046 24.1046 24 23 24H11V22H23V15H25V22Z", fill: "#FFB3A0", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11084_76", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#DC7259" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#D14423" })
      )
    )
  );
};
var FileExcelIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-excel ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M17.7168 33.172C18.2348 33.172 18.4238 33.655 18.4238 34.18C18.4238 34.642 18.2978 35.195 17.7168 35.195C17.1708 35.195 16.9888 34.642 16.9888 34.145C16.9888 33.683 17.1708 33.172 17.7168 33.172ZM19.5718 31.002H18.3818V32.7589H18.3678C18.1228 32.43 17.7798 32.262 17.3318 32.262C16.3028 32.262 15.7988 33.158 15.7988 34.103C15.7988 35.125 16.2818 36.1049 17.4228 36.1049C17.8428 36.1049 18.1928 35.923 18.4238 35.58H18.4378V36H19.5718V31.002ZM12.7095 34.1872C12.7095 33.7252 12.8775 33.1722 13.4305 33.1722C13.9835 33.1722 14.1585 33.7252 14.1585 34.1872C14.1585 34.6492 13.9835 35.1952 13.4305 35.1952C12.8775 35.1952 12.7095 34.6492 12.7095 34.1872ZM11.5195 34.1872C11.5195 35.2792 12.3035 36.1052 13.4305 36.1052C14.5575 36.1052 15.3485 35.2792 15.3485 34.1872C15.3485 33.0952 14.5575 32.2622 13.4305 32.2622C12.3035 32.2622 11.5195 33.0952 11.5195 34.1872ZM21.839 32.3671H22.574V33.1371H21.839V34.7891C21.839 35.0761 22.007 35.1391 22.266 35.1391C22.3142 35.1391 22.364 35.1357 22.4147 35.1323C22.4672 35.1287 22.5206 35.1251 22.574 35.1251V36.0001C22.481 36.0031 22.388 36.0099 22.295 36.0168C22.171 36.0259 22.047 36.0351 21.923 36.0351C20.908 36.0351 20.649 35.7411 20.649 34.7541V33.1371H20.047V32.3671H20.649V31.2681H21.839V32.3671Z", fill: "white", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#0F9D58" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M12 13H7V15H12V13ZM12 17H7V19H12V17ZM7 21H12V23H7V21ZM23 13H14V15H23V13ZM14 17H23V19H14V17ZM23 21H14V23H23V21Z", fill: "#0F9D58", fillRule: "evenodd" })
  );
};
var FileExcelIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-excel-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11084_326)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#0C864B" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M12 13H7V15H12V13ZM12 17H7V19H12V17ZM7 21H12V23H7V21ZM23 13H14V15H23V13ZM14 17H23V19H14V17ZM23 21H14V23H23V21Z", fill: "#A8E7C9", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11084_326", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#64AD8A" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#0C864B" })
      )
    )
  );
};
var FileArchiveIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-archive ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M17.7168 33.172C18.2348 33.172 18.4238 33.655 18.4238 34.18C18.4238 34.642 18.2978 35.195 17.7168 35.195C17.1708 35.195 16.9888 34.642 16.9888 34.145C16.9888 33.683 17.1708 33.172 17.7168 33.172ZM19.5718 31.002H18.3818V32.7589H18.3678C18.1228 32.43 17.7798 32.262 17.3318 32.262C16.3028 32.262 15.7988 33.158 15.7988 34.103C15.7988 35.125 16.2818 36.1049 17.4228 36.1049C17.8428 36.1049 18.1928 35.923 18.4238 35.58H18.4378V36H19.5718V31.002ZM12.7095 34.1872C12.7095 33.7252 12.8775 33.1722 13.4305 33.1722C13.9835 33.1722 14.1585 33.7252 14.1585 34.1872C14.1585 34.6492 13.9835 35.1952 13.4305 35.1952C12.8775 35.1952 12.7095 34.6492 12.7095 34.1872ZM11.5195 34.1872C11.5195 35.2792 12.3035 36.1052 13.4305 36.1052C14.5575 36.1052 15.3485 35.2792 15.3485 34.1872C15.3485 33.0952 14.5575 32.2622 13.4305 32.2622C12.3035 32.2622 11.5195 33.0952 11.5195 34.1872ZM21.839 32.3671H22.574V33.1371H21.839V34.7891C21.839 35.0761 22.007 35.1391 22.266 35.1391C22.3142 35.1391 22.364 35.1357 22.4147 35.1323C22.4672 35.1287 22.5206 35.1251 22.574 35.1251V36.0001C22.481 36.0031 22.388 36.0099 22.295 36.0168C22.171 36.0259 22.047 36.0351 21.923 36.0351C20.908 36.0351 20.649 35.7411 20.649 34.7541V33.1371H20.047V32.3671H20.649V31.2681H21.839V32.3671Z", fill: "white", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#F8B859" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M10 0H8V2H10V4H8V6H10V8H8V10H10V12H8V14H10V12H12V10H10V8H12V6H10V4H12V2H10V0ZM8 17C8 16.4477 8.44771 16 9 16H11C11.5523 16 12 16.4477 12 17V23C12 23.5523 11.5523 24 11 24H9C8.44771 24 8 23.5523 8 23V17ZM9 23V20H11V23H9Z", fill: "#F8B859", fillRule: "evenodd" })
  );
};
var FileArchiveIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-archive-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11086_246)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#B67A24" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M10 0H8V2H10V4H8V6H10V8H8V10H10V12H8V14H10V12H12V10H10V8H12V6H10V4H12V2H10V0ZM8 17C8 16.4477 8.44771 16 9 16H11C11.5523 16 12 16.4477 12 17V23C12 23.5523 11.5523 24 11 24H9C8.44771 24 8 23.5523 8 23V17ZM9 23V20H11V23H9Z", fill: "#FFE9C8", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11086_246", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#FFC775" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#E69E34" })
      )
    )
  );
};
var FileCodeIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-code ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#00ACA1" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M15 21V18.984L11.5 18L15 17V15L9 17V19L15 21ZM19 15V17.016L22.5 18L19 19V21L25 19V17L19 15Z", fill: "#00ACA1", fillRule: "evenodd" })
  );
};
var FileCodeIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-code-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11086_611)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#00ACA1" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M15 21V18.984L11.5 18L15 17V15L9 17V19L15 21ZM19 15V17.016L22.5 18L19 19V21L25 19V17L19 15Z", fill: "#A3DCD8", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11086_611", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#7FC4BD" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#00ACA1" })
      )
    )
  );
};
var FileAudioIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-audio ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M17.7168 33.172C18.2348 33.172 18.4238 33.655 18.4238 34.18C18.4238 34.642 18.2978 35.195 17.7168 35.195C17.1708 35.195 16.9888 34.642 16.9888 34.145C16.9888 33.683 17.1708 33.172 17.7168 33.172ZM19.5718 31.002H18.3818V32.7589H18.3678C18.1228 32.43 17.7798 32.262 17.3318 32.262C16.3028 32.262 15.7988 33.158 15.7988 34.103C15.7988 35.125 16.2818 36.1049 17.4228 36.1049C17.8428 36.1049 18.1928 35.923 18.4238 35.58H18.4378V36H19.5718V31.002ZM12.7095 34.1872C12.7095 33.7252 12.8775 33.1722 13.4305 33.1722C13.9835 33.1722 14.1585 33.7252 14.1585 34.1872C14.1585 34.6492 13.9835 35.1952 13.4305 35.1952C12.8775 35.1952 12.7095 34.6492 12.7095 34.1872ZM11.5195 34.1872C11.5195 35.2792 12.3035 36.1052 13.4305 36.1052C14.5575 36.1052 15.3485 35.2792 15.3485 34.1872C15.3485 33.0952 14.5575 32.2622 13.4305 32.2622C12.3035 32.2622 11.5195 33.0952 11.5195 34.1872ZM21.839 32.3671H22.574V33.1371H21.839V34.7891C21.839 35.0761 22.007 35.1391 22.266 35.1391C22.3142 35.1391 22.364 35.1357 22.4147 35.1323C22.4672 35.1287 22.5206 35.1251 22.574 35.1251V36.0001C22.481 36.0031 22.388 36.0099 22.295 36.0168C22.171 36.0259 22.047 36.0351 21.923 36.0351C20.908 36.0351 20.649 35.7411 20.649 34.7541V33.1371H20.047V32.3671H20.649V31.2681H21.839V32.3671Z", fill: "white", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#2727B0" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8.87912 21.941H12.298L16.9521 24.7493C17.0307 24.8138 17.1293 24.849 17.2311 24.849C17.4738 24.8488 17.6705 24.6519 17.6703 24.4092V12.4399C17.6704 12.3381 17.6352 12.2396 17.5707 12.1609C17.4168 11.9732 17.1398 11.9457 16.9521 12.0996L12.298 14.908H8.87912C8.3936 14.908 8 15.3016 8 15.7871V21.0619C8 21.5474 8.3936 21.941 8.87912 21.941ZM12.9258 16.6664L15.9122 15.2224V21.6268L12.9258 20.1829H9.7583V16.6664H12.9258ZM19.8511 16.3517C19.474 16.4092 19.2397 16.6637 19.3283 16.9191L19.3262 16.92C19.5295 17.4995 19.6305 18.098 19.6284 18.6953C19.6305 19.2975 19.5237 19.9014 19.3196 20.4909C19.229 20.7462 19.4682 20.9996 19.8474 21.06C19.9008 21.0683 19.9542 21.072 20.0076 21.072C20.3259 21.072 20.6156 20.9234 20.6922 20.7057C20.9194 20.0451 21.0337 19.37 21.0374 18.6953C21.0349 18.0251 20.9211 17.3575 20.6955 16.7035C20.6053 16.4477 20.229 16.2908 19.8511 16.3517ZM22.1605 14.6028C22.5252 14.5163 22.9259 14.6454 23.055 14.8938C23.6891 16.1157 24 17.4042 24 18.6923C24.0004 19.9895 23.6796 21.2839 23.0521 22.5153C22.9503 22.7123 22.6763 22.8344 22.3828 22.8344C22.3071 22.8344 22.2301 22.8261 22.1543 22.8092C21.7863 22.7251 21.5914 22.4536 21.7185 22.2077C22.2988 21.0761 22.5922 19.8836 22.5931 18.6919C22.5931 17.5056 22.3054 16.3222 21.7276 15.2025C21.6001 14.9563 21.795 14.686 22.1605 14.6028Z", fill: "#2727B0", fillRule: "evenodd" })
  );
};
var FileAudioIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-audio-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_11086_420)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#1919A5" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8.87912 21.941H12.298L16.9521 24.7493C17.0307 24.8138 17.1293 24.849 17.2311 24.849C17.4738 24.8488 17.6705 24.6519 17.6703 24.4092V12.4399C17.6704 12.3381 17.6352 12.2396 17.5707 12.1609C17.4168 11.9732 17.1398 11.9457 16.9521 12.0996L12.298 14.908H8.87912C8.3936 14.908 8 15.3016 8 15.7871V21.0619C8 21.5474 8.3936 21.941 8.87912 21.941ZM12.9258 16.6664L15.9122 15.2224V21.6268L12.9258 20.1829H9.7583V16.6664H12.9258ZM19.8511 16.3517C19.474 16.4092 19.2397 16.6637 19.3283 16.9191L19.3262 16.92C19.5295 17.4995 19.6305 18.098 19.6284 18.6953C19.6305 19.2975 19.5237 19.9014 19.3196 20.4909C19.229 20.7462 19.4682 20.9996 19.8474 21.06C19.9008 21.0683 19.9542 21.072 20.0076 21.072C20.3259 21.072 20.6156 20.9234 20.6922 20.7057C20.9194 20.0451 21.0337 19.37 21.0374 18.6953C21.0349 18.0251 20.9211 17.3575 20.6955 16.7035C20.6053 16.4477 20.229 16.2908 19.8511 16.3517ZM22.1605 14.6028C22.5252 14.5163 22.9259 14.6454 23.055 14.8938C23.6891 16.1157 24 17.4042 24 18.6923C24.0004 19.9895 23.6796 21.2839 23.0521 22.5153C22.9503 22.7123 22.6763 22.8344 22.3828 22.8344C22.3071 22.8344 22.2301 22.8261 22.1543 22.8092C21.7863 22.7251 21.5914 22.4536 21.7185 22.2077C22.2988 21.0761 22.5922 19.8836 22.5931 18.6919C22.5931 17.5056 22.3054 16.3222 21.7276 15.2025C21.6001 14.9563 21.795 14.686 22.1605 14.6028Z", fill: "#AAAAFF", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_11086_420", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#4A4AB8" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#2727B0" })
      )
    )
  );
};
var FileVideoIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-video ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M17.7168 33.172C18.2348 33.172 18.4238 33.655 18.4238 34.18C18.4238 34.642 18.2978 35.195 17.7168 35.195C17.1708 35.195 16.9888 34.642 16.9888 34.145C16.9888 33.683 17.1708 33.172 17.7168 33.172ZM19.5718 31.002H18.3818V32.7589H18.3678C18.1228 32.43 17.7798 32.262 17.3318 32.262C16.3028 32.262 15.7988 33.158 15.7988 34.103C15.7988 35.125 16.2818 36.1049 17.4228 36.1049C17.8428 36.1049 18.1928 35.923 18.4238 35.58H18.4378V36H19.5718V31.002ZM12.7095 34.1872C12.7095 33.7252 12.8775 33.1722 13.4305 33.1722C13.9835 33.1722 14.1585 33.7252 14.1585 34.1872C14.1585 34.6492 13.9835 35.1952 13.4305 35.1952C12.8775 35.1952 12.7095 34.6492 12.7095 34.1872ZM11.5195 34.1872C11.5195 35.2792 12.3035 36.1052 13.4305 36.1052C14.5575 36.1052 15.3485 35.2792 15.3485 34.1872C15.3485 33.0952 14.5575 32.2622 13.4305 32.2622C12.3035 32.2622 11.5195 33.0952 11.5195 34.1872ZM21.839 32.3671H22.574V33.1371H21.839V34.7891C21.839 35.0761 22.007 35.1391 22.266 35.1391C22.3142 35.1391 22.364 35.1357 22.4147 35.1323C22.4672 35.1287 22.5206 35.1251 22.574 35.1251V36.0001C22.481 36.0031 22.388 36.0099 22.295 36.0168C22.171 36.0259 22.047 36.0351 21.923 36.0351C20.908 36.0351 20.649 35.7411 20.649 34.7541V33.1371H20.047V32.3671H20.649V31.2681H21.839V32.3671Z", fill: "white", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { d: "M0 28H34V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V28Z", fill: "#9D27B0" }),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V28H0V3Z", fill: "#F5F5F5" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { d: "M9 17H25V24H9V17ZM27 14C27 12.8954 26.1046 12 25 12H22L24 15H21L19 12H17L19 15H16L14 12H12L14 15H11L9 12C7.9 12 7.01 12.9 7.01 14L7 24C7 25.1 7.9 26 9 26H25C26.1 26 27 25.1 27 24V14Z", fill: "#9D27B0" })
  );
};
var FileVideoIconAlt = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-video-alt ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear_18604_164254)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#7A1589" }),
    import_react16.default.createElement("path", { d: "M9 17H25V24H9V17ZM27 14C27 12.8954 26.1046 12 25 12H22L24 15H21L19 12H17L19 15H16L14 12H12L14 15H11L9 12C7.9 12 7.01 12.9 7.01 14L7 24C7 25.1 7.9 26 9 26H25C26.1 26 27 25.1 27 24V14Z", fill: "#F3A8FF" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear_18604_164254", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "#A94AB8" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#9D27B0" })
      )
    )
  );
};
var FileFallbackIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-fallback ".concat(className).trim(), fill: "none", height: size, viewBox: "0 0 34 40", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M0 3C0 1.34315 1.34315 0 3 0H23L34 11V37C34 38.6569 32.6569 40 31 40H3C1.34315 40 0 38.6569 0 37V3Z", fill: "url(#paint0_linear)" }),
    import_react16.default.createElement("path", { d: "M34 11L26 11C24.3431 11 23 9.65685 23 8V0L34 11Z", fill: "#DBDBDB" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 13H23V15H8V13Z", fill: "#CFCFCF", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 17H18V19H8V17Z", fill: "#CFCFCF", fillRule: "evenodd" }),
    import_react16.default.createElement("path", { clipRule: "evenodd", d: "M8 21H23V23H8V21Z", fill: "#CFCFCF", fillRule: "evenodd" }),
    import_react16.default.createElement(
      "defs",
      null,
      import_react16.default.createElement(
        "linearGradient",
        { gradientUnits: "userSpaceOnUse", id: "paint0_linear", x1: "0", x2: "0", y1: "0", y2: "40" },
        import_react16.default.createElement("stop", { stopColor: "white" }),
        import_react16.default.createElement("stop", { offset: "1", stopColor: "#DBDBDB" })
      )
    )
  );
};
var FileImageIcon2 = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b, _c = _a.size, size = _c === void 0 ? DEFAULT_SIZE2 : _c, props = __rest(_a, ["className", "size"]);
  return import_react16.default.createElement(
    "svg",
    __assign({ className: "rfu-file-image  ".concat(className).trim(), height: size, viewBox: "0 0 384 512", width: size, xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react16.default.createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z", fill: "#414D54" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/mimeTypes.js
var wordMimeTypes = [
  // Microsoft Word
  // .doc .dot
  "application/msword",
  // .doc .dot
  "application/msword-template",
  // .docx
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
  // .dotx (no test)
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template",
  // .docm
  "application/vnd.ms-word.document.macroEnabled.12",
  // .dotm (no test)
  "application/vnd.ms-word.template.macroEnabled.12",
  // LibreOffice/OpenOffice Writer
  // .odt
  "application/vnd.oasis.opendocument.text",
  // .ott
  "application/vnd.oasis.opendocument.text-template",
  // .fodt
  "application/vnd.oasis.opendocument.text-flat-xml"
  // .uot
  // NOTE: firefox doesn't know mimetype so maybe ignore
];
var excelMimeTypes = [
  // .csv
  "text/csv",
  // TODO: maybe more data files
  // Microsoft Excel
  // .xls .xlt .xla (no test for .xla)
  "application/vnd.ms-excel",
  // .xlsx
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
  // .xltx (no test)
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template",
  // .xlsm
  "application/vnd.ms-excel.sheet.macroEnabled.12",
  // .xltm (no test)
  "application/vnd.ms-excel.template.macroEnabled.12",
  // .xlam (no test)
  "application/vnd.ms-excel.addin.macroEnabled.12",
  // .xlsb (no test)
  "application/vnd.ms-excel.addin.macroEnabled.12",
  // LibreOffice/OpenOffice Calc
  // .ods
  "application/vnd.oasis.opendocument.spreadsheet",
  // .ots
  "application/vnd.oasis.opendocument.spreadsheet-template",
  // .fods
  "application/vnd.oasis.opendocument.spreadsheet-flat-xml"
  // .uos
  // NOTE: firefox doesn't know mimetype so maybe ignore
];
var powerpointMimeTypes = [
  // Microsoft Word
  // .ppt .pot .pps .ppa (no test for .ppa)
  "application/vnd.ms-powerpoint",
  // .pptx
  "application/vnd.openxmlformats-officedocument.presentationml.presentation",
  // .potx (no test)
  "application/vnd.openxmlformats-officedocument.presentationml.template",
  // .ppsx
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow",
  // .ppam
  "application/vnd.ms-powerpoint.addin.macroEnabled.12",
  // .pptm
  "application/vnd.ms-powerpoint.presentation.macroEnabled.12",
  // .potm
  "application/vnd.ms-powerpoint.template.macroEnabled.12",
  // .ppsm
  "application/vnd.ms-powerpoint.slideshow.macroEnabled.12",
  // LibreOffice/OpenOffice Writer
  // .odp
  "application/vnd.oasis.opendocument.presentation",
  // .otp
  "application/vnd.oasis.opendocument.presentation-template",
  // .fodp
  "application/vnd.oasis.opendocument.presentation-flat-xml"
  // .uop
  // NOTE: firefox doesn't know mimetype so maybe ignore
];
var archiveFileTypes = [
  // .zip
  "application/zip",
  // .z7
  "application/x-7z-compressed",
  // .ar
  "application/x-archive",
  // .tar
  "application/x-tar",
  // .tar.gz
  "application/gzip",
  // .tar.Z
  "application/x-compress",
  // .tar.bz2
  "application/x-bzip",
  // .tar.lz
  "application/x-lzip",
  // .tar.lz4
  "application/x-lz4",
  // .tar.lzma
  "application/x-lzma",
  // .tar.lzo (no test)
  "application/x-lzop",
  // .tar.xz
  "application/x-xz",
  // .war
  "application/x-webarchive",
  // .rar
  "application/vnd.rar"
];
var codeFileTypes = [
  // .html .htm
  "text/html",
  // .css
  "text/css",
  // .js
  "application/x-javascript",
  "text/javascript",
  // .json
  "application/json",
  // .py
  "text/x-python",
  // .go
  "text/x-go",
  // .c
  "text/x-csrc",
  // .cpp
  "text/x-c++src",
  // .rb
  "application/x-ruby",
  // .rust
  "text/rust",
  // .java
  "text/x-java",
  // .php
  "application/x-php",
  // .cs
  "text/x-csharp",
  // .scala
  "text/x-scala",
  // .erl
  "text/x-erlang",
  // .sh
  "application/x-shellscript"
];

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/iconMap.js
function generateMimeTypeToIconMap(_a) {
  var FileArchiveIcon3 = _a.FileArchiveIcon, FileCodeIcon3 = _a.FileCodeIcon, FileExcelIcon3 = _a.FileExcelIcon, FilePdfIcon3 = _a.FilePdfIcon, FilePowerPointIcon3 = _a.FilePowerPointIcon, FileWordIcon3 = _a.FileWordIcon;
  var mimeTypeToIconMap = {
    "application/pdf": FilePdfIcon3
  };
  for (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {
    var type = wordMimeTypes_1[_i];
    mimeTypeToIconMap[type] = FileWordIcon3;
  }
  for (var _b = 0, excelMimeTypes_1 = excelMimeTypes; _b < excelMimeTypes_1.length; _b++) {
    var type = excelMimeTypes_1[_b];
    mimeTypeToIconMap[type] = FileExcelIcon3;
  }
  for (var _c = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _c < powerpointMimeTypes_1.length; _c++) {
    var type = powerpointMimeTypes_1[_c];
    mimeTypeToIconMap[type] = FilePowerPointIcon3;
  }
  for (var _d = 0, archiveFileTypes_1 = archiveFileTypes; _d < archiveFileTypes_1.length; _d++) {
    var type = archiveFileTypes_1[_d];
    mimeTypeToIconMap[type] = FileArchiveIcon3;
  }
  for (var _e = 0, codeFileTypes_1 = codeFileTypes; _e < codeFileTypes_1.length; _e++) {
    var type = codeFileTypes_1[_e];
    mimeTypeToIconMap[type] = FileCodeIcon3;
  }
  return mimeTypeToIconMap;
}
function generateGeneralTypeToIconMap(_a) {
  var FileAltIcon2 = _a.FileAltIcon, FileAudioIcon3 = _a.FileAudioIcon, FileImageIcon3 = _a.FileImageIcon, FileVideoIcon3 = _a.FileVideoIcon;
  return {
    "audio/": FileAudioIcon3,
    "image/": FileImageIcon3,
    "text/": FileAltIcon2,
    "video/": FileVideoIcon3
  };
}
var iconMap = {
  "1": {
    alt: {},
    standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
      FileArchiveIcon,
      FileCodeIcon,
      FileExcelIcon,
      FilePdfIcon,
      FilePowerPointIcon,
      FileWordIcon
    })), generateGeneralTypeToIconMap({
      FileAltIcon,
      FileAudioIcon,
      FileImageIcon,
      FileVideoIcon
    })), { fallback: FileFallbackIcon })
  },
  "2": {
    alt: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
      FileArchiveIcon: FileArchiveIconAlt,
      FileCodeIcon: FileCodeIconAlt,
      FileExcelIcon: FileExcelIconAlt,
      FilePdfIcon: FilePdfIcon2,
      FilePowerPointIcon: FilePowerPointIconAlt,
      FileWordIcon: FileWordIconAlt
    })), generateGeneralTypeToIconMap({
      FileAltIcon: FileFallbackIcon2,
      FileAudioIcon: FileAudioIconAlt,
      FileImageIcon: FileImageIcon2,
      FileVideoIcon: FileVideoIconAlt
    })), { fallback: FileFallbackIcon2 }),
    standard: __assign(__assign(__assign({}, generateMimeTypeToIconMap({
      FileArchiveIcon: FileArchiveIcon2,
      FileCodeIcon: FileCodeIcon2,
      FileExcelIcon: FileExcelIcon2,
      FilePdfIcon: FilePdfIcon2,
      FilePowerPointIcon: FilePowerPointIcon2,
      FileWordIcon: FileWordIcon2
    })), generateGeneralTypeToIconMap({
      FileAltIcon: FileFallbackIcon2,
      FileAudioIcon: FileAudioIcon2,
      FileImageIcon: FileImageIcon2,
      FileVideoIcon: FileVideoIcon2
    })), { fallback: FileFallbackIcon2 })
  }
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/FileIcon.js
function mimeTypeToIcon(type, version2, mimeType) {
  var _a;
  if (type === void 0) {
    type = "standard";
  }
  if (version2 === void 0) {
    version2 = "1";
  }
  var theMap = ((_a = iconMap[version2]) === null || _a === void 0 ? void 0 : _a[type]) || iconMap[version2]["standard"];
  if (!mimeType)
    return theMap.fallback;
  var icon = theMap[mimeType];
  if (icon)
    return icon;
  if (mimeType.startsWith("audio/"))
    return theMap["audio/"];
  if (mimeType.startsWith("video/"))
    return theMap["video/"];
  if (mimeType.startsWith("image/"))
    return theMap["image/"];
  if (mimeType.startsWith("text/"))
    return theMap["text/"];
  return theMap.fallback;
}
var FileIcon = function(props) {
  var _a = props.big, big = _a === void 0 ? false : _a, mimeType = props.mimeType, _b = props.size, size = _b === void 0 ? 50 : _b, _c = props.sizeSmall, sizeSmall = _c === void 0 ? 20 : _c, _d = props.type, type = _d === void 0 ? "standard" : _d, _e = props.version, version2 = _e === void 0 ? "1" : _e, rest = __rest(props, ["big", "mimeType", "size", "sizeSmall", "type", "version"]);
  var Icon = mimeTypeToIcon(type, version2, mimeType);
  return import_react17.default.createElement(Icon, __assign({}, rest, { size: big ? size : sizeSmall }));
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FilePreviewer.js
var import_react19 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/LoadingIndicator.js
var import_react18 = __toESM(require_react());
var LoadingIndicator = function(_a) {
  var backgroundColor = _a.backgroundColor, color2 = _a.color, _b = _a.size, size = _b === void 0 ? 20 : _b, _c = _a.width, width = _c === void 0 ? 2 : _c;
  return import_react18.default.createElement("div", { className: "rfu-loading-indicator__spinner", style: {
    borderColor: backgroundColor ? backgroundColor : "",
    borderTopColor: color2 ? color2 : "",
    borderWidth: width ? width : "",
    height: size ? size : "",
    margin: "0 auto",
    width: size ? size : ""
  } });
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FilePreviewer.js
var FilePreviewer = function(_a) {
  var _b = _a.fileIconProps, fileIconProps = _b === void 0 ? {} : _b, uploads = _a.uploads, handleRemove = _a.handleRemove, handleRetry = _a.handleRetry;
  return import_react19.default.createElement(
    "div",
    { className: "rfu-file-previewer" },
    import_react19.default.createElement("ol", null, uploads === null || uploads === void 0 ? void 0 : uploads.map(function(upload) {
      return import_react19.default.createElement(
        "li",
        { className: "rfu-file-previewer__file ".concat(upload.state === "uploading" ? "rfu-file-previewer__file--uploading" : "", " ").concat(upload.state === "failed" ? "rfu-file-previewer__file--failed" : ""), key: upload.id },
        import_react19.default.createElement(FileIcon, __assign({ mimeType: upload.file.type }, fileIconProps)),
        import_react19.default.createElement(
          "a",
          { download: true, href: upload.url },
          upload.file.name,
          upload.state === "failed" && import_react19.default.createElement(
            import_react19.default.Fragment,
            null,
            import_react19.default.createElement("div", { className: "rfu-file-previewer__failed", onClick: function() {
              return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(upload.id);
            } }, "failed"),
            import_react19.default.createElement("div", { className: "rfu-file-previewer__retry", onClick: function() {
              return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(upload.id);
            } }, "retry")
          )
        ),
        import_react19.default.createElement("span", { className: "rfu-file-previewer__close-button", onClick: handleRemove && function() {
          return handleRemove(upload.id);
        } }, "✘"),
        upload.state === "uploading" && import_react19.default.createElement(
          "div",
          { className: "rfu-file-previewer__loading-indicator" },
          import_react19.default.createElement(LoadingIndicator, null)
        )
      );
    }))
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileUploadButton.js
var import_react27 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/icons/AttachmentIcon.js
var import_react20 = __toESM(require_react());
var AttachmentIcon = function() {
  return import_react20.default.createElement(
    "svg",
    { height: "20", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react20.default.createElement("path", { d: "M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 0 1 5 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 0 0 5 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z" }),
    import_react20.default.createElement("path", { d: "M0 0h24v24H0z", fill: "none" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/icons/CloseIcon.js
var import_react21 = __toESM(require_react());
var CloseIcon = function() {
  return import_react21.default.createElement(
    "svg",
    { height: "28", viewBox: "0 0 28 28", width: "28", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink" },
    import_react21.default.createElement(
      "defs",
      null,
      import_react21.default.createElement("path", { d: "M465 5c5.53 0 10 4.47 10 10s-4.47 10-10 10-10-4.47-10-10 4.47-10 10-10zm3.59 5L465 13.59 461.41 10 460 11.41l3.59 3.59-3.59 3.59 1.41 1.41 3.59-3.59 3.59 3.59 1.41-1.41-3.59-3.59 3.59-3.59-1.41-1.41z", id: "b" }),
      import_react21.default.createElement(
        "filter",
        { filterUnits: "objectBoundingBox", height: "160%", id: "a", width: "160%", x: "-30%", y: "-30%" },
        import_react21.default.createElement("feOffset", { in: "SourceAlpha", result: "shadowOffsetOuter1" }),
        import_react21.default.createElement("feGaussianBlur", { in: "shadowOffsetOuter1", result: "shadowBlurOuter1", stdDeviation: "2" }),
        import_react21.default.createElement("feColorMatrix", { in: "shadowBlurOuter1", values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0" })
      )
    ),
    import_react21.default.createElement(
      "g",
      { fill: "none", fillRule: "nonzero", transform: "translate(-451 -1)" },
      import_react21.default.createElement("use", { fill: "#000", filter: "url(#a)", xlinkHref: "#b" }),
      import_react21.default.createElement("use", { fill: "#FFF", fillRule: "evenodd", xlinkHref: "#b" })
    )
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/icons/FilePlaceholderIcon.js
var import_react22 = __toESM(require_react());
var FilePlaceholderIcon = function(props) {
  return import_react22.default.createElement(
    "svg",
    __assign({ role: "img", viewBox: "0 0 400 400", xmlns: "http://www.w3.org/2000/svg" }, props),
    import_react22.default.createElement(
      "g",
      null,
      import_react22.default.createElement("path", { d: "M0.000 200.000 L 0.000 400.000 200.000 400.000 L 400.000 400.000 400.000 200.000 L 400.000 0.000 200.000 0.000 L 0.000 0.000 0.000 200.000 M243.085 68.180 C 251.168 72.240,252.758 82.164,246.332 88.456 C 242.609 92.102,249.072 91.774,176.600 92.000 L 112.600 92.200 111.000 93.165 C 107.620 95.203,105.382 98.131,104.780 101.304 C 104.548 102.526,104.400 132.258,104.400 177.461 C 104.400 261.065,104.646 254.561,101.340 258.340 C 95.134 265.435,84.540 263.898,80.562 255.326 L 79.600 253.251 79.600 170.356 L 79.600 87.460 80.613 84.526 C 83.246 76.897,91.469 68.511,96.439 68.386 C 96.747 68.378,97.450 68.114,98.000 67.800 C 98.856 67.311,109.214 67.226,170.067 67.214 L 241.134 67.200 243.085 68.180 M230.400 116.002 C 236.845 117.273,237.603 117.566,242.024 120.500 C 243.269 121.327,256.977 134.788,274.002 151.902 C 299.664 177.700,305.143 183.306,307.142 185.815 C 307.838 186.688,309.600 190.497,309.602 191.133 C 309.604 191.500,309.919 192.340,310.302 193.000 C 310.956 194.125,311.007 197.998,311.108 254.600 L 311.215 315.000 310.241 318.000 C 307.327 326.967,302.400 332.072,293.800 335.031 L 291.000 335.994 219.630 335.997 L 148.260 336.000 145.430 335.018 C 140.319 333.244,139.684 332.841,134.862 328.318 C 132.616 326.212,129.907 321.565,129.427 318.997 C 129.263 318.118,128.920 317.147,128.664 316.839 C 128.315 316.416,128.200 294.170,128.200 227.039 L 128.200 137.800 129.067 134.600 C 129.543 132.840,130.393 130.590,130.954 129.600 C 131.515 128.610,132.247 127.320,132.580 126.733 C 134.155 123.961,138.478 120.313,143.000 117.940 C 144.003 117.414,146.644 116.725,151.000 115.853 C 152.661 115.520,228.681 115.664,230.400 116.002 M226.250 137.650 C 225.849 139.656,225.987 187.508,226.403 190.713 C 227.174 196.647,230.700 200.107,237.136 201.245 C 239.519 201.666,290.972 201.562,291.398 201.135 C 291.727 200.807,227.629 136.400,226.974 136.400 C 226.713 136.400,226.388 136.963,226.250 137.650", fill: "#fcfcfc", fillRule: "evenodd", stroke: "none" }),
      import_react22.default.createElement("path", { d: "M98.000 67.800 C 97.450 68.114,96.747 68.378,96.439 68.386 C 91.469 68.511,83.246 76.897,80.613 84.526 L 79.600 87.460 79.600 170.356 L 79.600 253.251 80.562 255.326 C 84.540 263.898,95.134 265.435,101.340 258.340 C 104.646 254.561,104.400 261.065,104.400 177.461 C 104.400 132.258,104.548 102.526,104.780 101.304 C 105.382 98.131,107.620 95.203,111.000 93.165 L 112.600 92.200 176.600 92.000 C 249.072 91.774,242.609 92.102,246.332 88.456 C 252.758 82.164,251.168 72.240,243.085 68.180 L 241.134 67.200 170.067 67.214 C 109.214 67.226,98.856 67.311,98.000 67.800 M151.000 115.853 C 146.644 116.725,144.003 117.414,143.000 117.940 C 138.478 120.313,134.155 123.961,132.580 126.733 C 132.247 127.320,131.515 128.610,130.954 129.600 C 130.393 130.590,129.543 132.840,129.067 134.600 L 128.200 137.800 128.200 227.039 C 128.200 294.170,128.315 316.416,128.664 316.839 C 128.920 317.147,129.263 318.118,129.427 318.997 C 129.907 321.565,132.616 326.212,134.862 328.318 C 139.684 332.841,140.319 333.244,145.430 335.018 L 148.260 336.000 219.630 335.997 L 291.000 335.994 293.800 335.031 C 302.400 332.072,307.327 326.967,310.241 318.000 L 311.215 315.000 311.108 254.600 C 311.007 197.998,310.956 194.125,310.302 193.000 C 309.919 192.340,309.604 191.500,309.602 191.133 C 309.600 190.497,307.838 186.688,307.142 185.815 C 305.143 183.306,299.664 177.700,274.002 151.902 C 238.906 116.622,240.594 118.012,230.400 116.002 C 228.681 115.664,152.661 115.520,151.000 115.853 M259.556 168.635 C 277.215 186.364,291.544 200.989,291.398 201.135 C 290.972 201.562,239.519 201.666,237.136 201.245 C 230.700 200.107,227.174 196.647,226.403 190.713 C 225.460 183.450,225.955 136.400,226.974 136.400 C 227.235 136.400,241.897 150.906,259.556 168.635", fill: "#e4e4e4", fillRule: "evenodd", stroke: "none" })
    )
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/icons/PictureIcon.js
var import_react23 = __toESM(require_react());
var PictureIcon = function() {
  return import_react23.default.createElement(
    "svg",
    { height: "20", viewBox: "0 0 20 20", width: "20", xmlns: "http://www.w3.org/2000/svg" },
    import_react23.default.createElement("path", { d: "M2 0h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm3 2a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM2 16v2h16v-6l-3-3-6 6-3-3-4 4z", fillRule: "nonzero" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/icons/RetryIcon.js
var import_react24 = __toESM(require_react());
var RetryIcon = function() {
  return import_react24.default.createElement(
    "svg",
    { height: "20", viewBox: "0 0 22 20", width: "22", xmlns: "http://www.w3.org/2000/svg" },
    import_react24.default.createElement("path", { d: "M20 5.535V2a1 1 0 0 1 2 0v6a1 1 0 0 1-1 1h-6a1 1 0 0 1 0-2h3.638l-2.975-2.653a8 8 0 1 0 1.884 8.32 1 1 0 1 1 1.886.666A10 10 0 1 1 5.175 1.245c3.901-2.15 8.754-1.462 11.88 1.667L20 5.535z", fill: "#FFF", fillRule: "nonzero" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/UploadButton.js
var import_react26 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/utils.js
var import_react25 = __toESM(require_react());
var useHandleFileChangeWrapper = function(resetOnChange, handler) {
  if (resetOnChange === void 0) {
    resetOnChange = false;
  }
  return (0, import_react25.useCallback)(function(_a) {
    var currentTarget = _a.currentTarget;
    var files = currentTarget.files;
    if (!files)
      return;
    try {
      handler === null || handler === void 0 ? void 0 : handler(Array.from(files));
    } catch (error) {
      console.error(error);
    }
    if (resetOnChange)
      currentTarget.value = "";
  }, [handler, resetOnChange]);
};
function dataTransferItemsHaveFiles(items) {
  if (!items || !items.length) {
    return false;
  }
  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
    var item = items_1[_i];
    if (item.kind === "file" || item.type === "text/html") {
      return true;
    }
  }
  return false;
}
function dataTransferItemsToFiles(items) {
  return __awaiter(this, void 0, void 0, function() {
    var fileLikes, blobPromises, _loop_1, _i, items_2, item;
    var _this = this;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!items || !items.length) {
            return [2, []];
          }
          fileLikes = getFileLikes(items);
          if (fileLikes.length) {
            return [2, fileLikes];
          }
          blobPromises = [];
          _loop_1 = function(item2) {
            if (item2.type === "text/html") {
              blobPromises.push(new Promise(function(accept) {
                item2.getAsString(function(s) {
                  return __awaiter(_this, void 0, void 0, function() {
                    var imagePromises;
                    return __generator(this, function(_a2) {
                      switch (_a2.label) {
                        case 0:
                          imagePromises = extractImageSources(s).map(function(src) {
                            return getImageSource(fileLikes, src);
                          });
                          return [4, Promise.all(imagePromises)];
                        case 1:
                          _a2.sent();
                          accept();
                          return [
                            2
                            /*return*/
                          ];
                      }
                    });
                  });
                });
              }));
            }
          };
          for (_i = 0, items_2 = items; _i < items_2.length; _i++) {
            item = items_2[_i];
            _loop_1(item);
          }
          return [4, Promise.all(blobPromises)];
        case 1:
          _a.sent();
          return [2, fileLikes];
      }
    });
  });
}
function getFileLikes(items) {
  var fileLikes = [];
  for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {
    var item = items_3[_i];
    if (item.kind === "file") {
      var file = item.getAsFile();
      if (file) {
        fileLikes.push(file);
      }
    }
  }
  return fileLikes;
}
function getImageSource(fileLikes, src) {
  return __awaiter(this, void 0, void 0, function() {
    var res, e_1, contentType, buf, blob;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 2, , 3]);
          return [4, fetch(src)];
        case 1:
          res = _a.sent();
          return [3, 3];
        case 2:
          e_1 = _a.sent();
          return [
            2
            /*return*/
          ];
        case 3:
          contentType = res.headers.get("Content-type") || "application/octet-stream";
          return [4, res.arrayBuffer()];
        case 4:
          buf = _a.sent();
          blob = new Blob([buf], { type: contentType });
          fileLikes.push(blob);
          return [
            2
            /*return*/
          ];
      }
    });
  });
}
var extractImageSources = function(s) {
  var imageTags = new DOMParser().parseFromString(s, "text/html").getElementsByTagName("img");
  return Array.from(imageTags, function(tag) {
    return tag.src;
  }).filter(function(tag) {
    return tag;
  });
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/UploadButton.js
var UploadButton = function(_a) {
  var onFileChange = _a.onFileChange, _b = _a.resetOnChange, resetOnChange = _b === void 0 ? true : _b, rest = __rest(_a, ["onFileChange", "resetOnChange"]);
  var handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);
  return import_react26.default.createElement("input", __assign({ onChange: handleInputChange, type: "file" }, rest));
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileUploadButton.js
var FileUploadButton = function(_a) {
  var _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.multiple, multiple = _c === void 0 ? false : _c, _d = _a.children, children = _d === void 0 ? import_react27.default.createElement(AttachmentIcon, null) : _d, handleFiles = _a.handleFiles, accepts2 = _a.accepts, _e = _a.resetOnChange, resetOnChange = _e === void 0 ? true : _e;
  var className = "rfu-file-upload-button";
  if (disabled) {
    className = "".concat(className, " rfu-file-upload-button--disabled");
  }
  return import_react27.default.createElement(
    "div",
    { className },
    import_react27.default.createElement(
      "label",
      null,
      import_react27.default.createElement(UploadButton, { accept: Array.isArray(accepts2) ? accepts2.join(",") : accepts2, "aria-label": "File input", className: "rfu-file-input", disabled, multiple, onFileChange: handleFiles, resetOnChange }),
      children
    )
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ImageDropzone.js
var import_react29 = __toESM(require_react());

// node_modules/react-dropzone/dist/es/index.js
var import_react28 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/file-selector/dist/es2015/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  // https://github.com/guzzle/psr7/blob/2d9260799e713f1c475d3c5fdc3d6561ff7441b2/src/MimeType.php
  ["1km", "application/vnd.1000minds.decision-model+xml"],
  ["3dml", "text/vnd.in3d.3dml"],
  ["3ds", "image/x-3ds"],
  ["3g2", "video/3gpp2"],
  ["3gp", "video/3gp"],
  ["3gpp", "video/3gpp"],
  ["3mf", "model/3mf"],
  ["7z", "application/x-7z-compressed"],
  ["7zip", "application/x-7z-compressed"],
  ["123", "application/vnd.lotus-1-2-3"],
  ["aab", "application/x-authorware-bin"],
  ["aac", "audio/x-acc"],
  ["aam", "application/x-authorware-map"],
  ["aas", "application/x-authorware-seg"],
  ["abw", "application/x-abiword"],
  ["ac", "application/vnd.nokia.n-gage.ac+xml"],
  ["ac3", "audio/ac3"],
  ["acc", "application/vnd.americandynamics.acc"],
  ["ace", "application/x-ace-compressed"],
  ["acu", "application/vnd.acucobol"],
  ["acutc", "application/vnd.acucorp"],
  ["adp", "audio/adpcm"],
  ["aep", "application/vnd.audiograph"],
  ["afm", "application/x-font-type1"],
  ["afp", "application/vnd.ibm.modcap"],
  ["ahead", "application/vnd.ahead.space"],
  ["ai", "application/pdf"],
  ["aif", "audio/x-aiff"],
  ["aifc", "audio/x-aiff"],
  ["aiff", "audio/x-aiff"],
  ["air", "application/vnd.adobe.air-application-installer-package+zip"],
  ["ait", "application/vnd.dvb.ait"],
  ["ami", "application/vnd.amiga.ami"],
  ["amr", "audio/amr"],
  ["apk", "application/vnd.android.package-archive"],
  ["apng", "image/apng"],
  ["appcache", "text/cache-manifest"],
  ["application", "application/x-ms-application"],
  ["apr", "application/vnd.lotus-approach"],
  ["arc", "application/x-freearc"],
  ["arj", "application/x-arj"],
  ["asc", "application/pgp-signature"],
  ["asf", "video/x-ms-asf"],
  ["asm", "text/x-asm"],
  ["aso", "application/vnd.accpac.simply.aso"],
  ["asx", "video/x-ms-asf"],
  ["atc", "application/vnd.acucorp"],
  ["atom", "application/atom+xml"],
  ["atomcat", "application/atomcat+xml"],
  ["atomdeleted", "application/atomdeleted+xml"],
  ["atomsvc", "application/atomsvc+xml"],
  ["atx", "application/vnd.antix.game-component"],
  ["au", "audio/x-au"],
  ["avi", "video/x-msvideo"],
  ["avif", "image/avif"],
  ["aw", "application/applixware"],
  ["azf", "application/vnd.airzip.filesecure.azf"],
  ["azs", "application/vnd.airzip.filesecure.azs"],
  ["azv", "image/vnd.airzip.accelerator.azv"],
  ["azw", "application/vnd.amazon.ebook"],
  ["b16", "image/vnd.pco.b16"],
  ["bat", "application/x-msdownload"],
  ["bcpio", "application/x-bcpio"],
  ["bdf", "application/x-font-bdf"],
  ["bdm", "application/vnd.syncml.dm+wbxml"],
  ["bdoc", "application/x-bdoc"],
  ["bed", "application/vnd.realvnc.bed"],
  ["bh2", "application/vnd.fujitsu.oasysprs"],
  ["bin", "application/octet-stream"],
  ["blb", "application/x-blorb"],
  ["blorb", "application/x-blorb"],
  ["bmi", "application/vnd.bmi"],
  ["bmml", "application/vnd.balsamiq.bmml+xml"],
  ["bmp", "image/bmp"],
  ["book", "application/vnd.framemaker"],
  ["box", "application/vnd.previewsystems.box"],
  ["boz", "application/x-bzip2"],
  ["bpk", "application/octet-stream"],
  ["bpmn", "application/octet-stream"],
  ["bsp", "model/vnd.valve.source.compiled-map"],
  ["btif", "image/prs.btif"],
  ["buffer", "application/octet-stream"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["c", "text/x-c"],
  ["c4d", "application/vnd.clonk.c4group"],
  ["c4f", "application/vnd.clonk.c4group"],
  ["c4g", "application/vnd.clonk.c4group"],
  ["c4p", "application/vnd.clonk.c4group"],
  ["c4u", "application/vnd.clonk.c4group"],
  ["c11amc", "application/vnd.cluetrust.cartomobile-config"],
  ["c11amz", "application/vnd.cluetrust.cartomobile-config-pkg"],
  ["cab", "application/vnd.ms-cab-compressed"],
  ["caf", "audio/x-caf"],
  ["cap", "application/vnd.tcpdump.pcap"],
  ["car", "application/vnd.curl.car"],
  ["cat", "application/vnd.ms-pki.seccat"],
  ["cb7", "application/x-cbr"],
  ["cba", "application/x-cbr"],
  ["cbr", "application/x-cbr"],
  ["cbt", "application/x-cbr"],
  ["cbz", "application/x-cbr"],
  ["cc", "text/x-c"],
  ["cco", "application/x-cocoa"],
  ["cct", "application/x-director"],
  ["ccxml", "application/ccxml+xml"],
  ["cdbcmsg", "application/vnd.contact.cmsg"],
  ["cda", "application/x-cdf"],
  ["cdf", "application/x-netcdf"],
  ["cdfx", "application/cdfx+xml"],
  ["cdkey", "application/vnd.mediastation.cdkey"],
  ["cdmia", "application/cdmi-capability"],
  ["cdmic", "application/cdmi-container"],
  ["cdmid", "application/cdmi-domain"],
  ["cdmio", "application/cdmi-object"],
  ["cdmiq", "application/cdmi-queue"],
  ["cdr", "application/cdr"],
  ["cdx", "chemical/x-cdx"],
  ["cdxml", "application/vnd.chemdraw+xml"],
  ["cdy", "application/vnd.cinderella"],
  ["cer", "application/pkix-cert"],
  ["cfs", "application/x-cfs-compressed"],
  ["cgm", "image/cgm"],
  ["chat", "application/x-chat"],
  ["chm", "application/vnd.ms-htmlhelp"],
  ["chrt", "application/vnd.kde.kchart"],
  ["cif", "chemical/x-cif"],
  ["cii", "application/vnd.anser-web-certificate-issue-initiation"],
  ["cil", "application/vnd.ms-artgalry"],
  ["cjs", "application/node"],
  ["cla", "application/vnd.claymore"],
  ["class", "application/octet-stream"],
  ["clkk", "application/vnd.crick.clicker.keyboard"],
  ["clkp", "application/vnd.crick.clicker.palette"],
  ["clkt", "application/vnd.crick.clicker.template"],
  ["clkw", "application/vnd.crick.clicker.wordbank"],
  ["clkx", "application/vnd.crick.clicker"],
  ["clp", "application/x-msclip"],
  ["cmc", "application/vnd.cosmocaller"],
  ["cmdf", "chemical/x-cmdf"],
  ["cml", "chemical/x-cml"],
  ["cmp", "application/vnd.yellowriver-custom-menu"],
  ["cmx", "image/x-cmx"],
  ["cod", "application/vnd.rim.cod"],
  ["coffee", "text/coffeescript"],
  ["com", "application/x-msdownload"],
  ["conf", "text/plain"],
  ["cpio", "application/x-cpio"],
  ["cpp", "text/x-c"],
  ["cpt", "application/mac-compactpro"],
  ["crd", "application/x-mscardfile"],
  ["crl", "application/pkix-crl"],
  ["crt", "application/x-x509-ca-cert"],
  ["crx", "application/x-chrome-extension"],
  ["cryptonote", "application/vnd.rig.cryptonote"],
  ["csh", "application/x-csh"],
  ["csl", "application/vnd.citationstyles.style+xml"],
  ["csml", "chemical/x-csml"],
  ["csp", "application/vnd.commonspace"],
  ["csr", "application/octet-stream"],
  ["css", "text/css"],
  ["cst", "application/x-director"],
  ["csv", "text/csv"],
  ["cu", "application/cu-seeme"],
  ["curl", "text/vnd.curl"],
  ["cww", "application/prs.cww"],
  ["cxt", "application/x-director"],
  ["cxx", "text/x-c"],
  ["dae", "model/vnd.collada+xml"],
  ["daf", "application/vnd.mobius.daf"],
  ["dart", "application/vnd.dart"],
  ["dataless", "application/vnd.fdsn.seed"],
  ["davmount", "application/davmount+xml"],
  ["dbf", "application/vnd.dbf"],
  ["dbk", "application/docbook+xml"],
  ["dcr", "application/x-director"],
  ["dcurl", "text/vnd.curl.dcurl"],
  ["dd2", "application/vnd.oma.dd2+xml"],
  ["ddd", "application/vnd.fujixerox.ddd"],
  ["ddf", "application/vnd.syncml.dmddf+xml"],
  ["dds", "image/vnd.ms-dds"],
  ["deb", "application/x-debian-package"],
  ["def", "text/plain"],
  ["deploy", "application/octet-stream"],
  ["der", "application/x-x509-ca-cert"],
  ["dfac", "application/vnd.dreamfactory"],
  ["dgc", "application/x-dgc-compressed"],
  ["dic", "text/x-c"],
  ["dir", "application/x-director"],
  ["dis", "application/vnd.mobius.dis"],
  ["disposition-notification", "message/disposition-notification"],
  ["dist", "application/octet-stream"],
  ["distz", "application/octet-stream"],
  ["djv", "image/vnd.djvu"],
  ["djvu", "image/vnd.djvu"],
  ["dll", "application/octet-stream"],
  ["dmg", "application/x-apple-diskimage"],
  ["dmn", "application/octet-stream"],
  ["dmp", "application/vnd.tcpdump.pcap"],
  ["dms", "application/octet-stream"],
  ["dna", "application/vnd.dna"],
  ["doc", "application/msword"],
  ["docm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["dot", "application/msword"],
  ["dotm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"],
  ["dp", "application/vnd.osgi.dp"],
  ["dpg", "application/vnd.dpgraph"],
  ["dra", "audio/vnd.dra"],
  ["drle", "image/dicom-rle"],
  ["dsc", "text/prs.lines.tag"],
  ["dssc", "application/dssc+der"],
  ["dtb", "application/x-dtbook+xml"],
  ["dtd", "application/xml-dtd"],
  ["dts", "audio/vnd.dts"],
  ["dtshd", "audio/vnd.dts.hd"],
  ["dump", "application/octet-stream"],
  ["dvb", "video/vnd.dvb.file"],
  ["dvi", "application/x-dvi"],
  ["dwd", "application/atsc-dwd+xml"],
  ["dwf", "model/vnd.dwf"],
  ["dwg", "image/vnd.dwg"],
  ["dxf", "image/vnd.dxf"],
  ["dxp", "application/vnd.spotfire.dxp"],
  ["dxr", "application/x-director"],
  ["ear", "application/java-archive"],
  ["ecelp4800", "audio/vnd.nuera.ecelp4800"],
  ["ecelp7470", "audio/vnd.nuera.ecelp7470"],
  ["ecelp9600", "audio/vnd.nuera.ecelp9600"],
  ["ecma", "application/ecmascript"],
  ["edm", "application/vnd.novadigm.edm"],
  ["edx", "application/vnd.novadigm.edx"],
  ["efif", "application/vnd.picsel"],
  ["ei6", "application/vnd.pg.osasli"],
  ["elc", "application/octet-stream"],
  ["emf", "image/emf"],
  ["eml", "message/rfc822"],
  ["emma", "application/emma+xml"],
  ["emotionml", "application/emotionml+xml"],
  ["emz", "application/x-msmetafile"],
  ["eol", "audio/vnd.digital-winds"],
  ["eot", "application/vnd.ms-fontobject"],
  ["eps", "application/postscript"],
  ["epub", "application/epub+zip"],
  ["es", "application/ecmascript"],
  ["es3", "application/vnd.eszigno3+xml"],
  ["esa", "application/vnd.osgi.subsystem"],
  ["esf", "application/vnd.epson.esf"],
  ["et3", "application/vnd.eszigno3+xml"],
  ["etx", "text/x-setext"],
  ["eva", "application/x-eva"],
  ["evy", "application/x-envoy"],
  ["exe", "application/octet-stream"],
  ["exi", "application/exi"],
  ["exp", "application/express"],
  ["exr", "image/aces"],
  ["ext", "application/vnd.novadigm.ext"],
  ["ez", "application/andrew-inset"],
  ["ez2", "application/vnd.ezpix-album"],
  ["ez3", "application/vnd.ezpix-package"],
  ["f", "text/x-fortran"],
  ["f4v", "video/mp4"],
  ["f77", "text/x-fortran"],
  ["f90", "text/x-fortran"],
  ["fbs", "image/vnd.fastbidsheet"],
  ["fcdt", "application/vnd.adobe.formscentral.fcdt"],
  ["fcs", "application/vnd.isac.fcs"],
  ["fdf", "application/vnd.fdf"],
  ["fdt", "application/fdt+xml"],
  ["fe_launch", "application/vnd.denovo.fcselayout-link"],
  ["fg5", "application/vnd.fujitsu.oasysgp"],
  ["fgd", "application/x-director"],
  ["fh", "image/x-freehand"],
  ["fh4", "image/x-freehand"],
  ["fh5", "image/x-freehand"],
  ["fh7", "image/x-freehand"],
  ["fhc", "image/x-freehand"],
  ["fig", "application/x-xfig"],
  ["fits", "image/fits"],
  ["flac", "audio/x-flac"],
  ["fli", "video/x-fli"],
  ["flo", "application/vnd.micrografx.flo"],
  ["flv", "video/x-flv"],
  ["flw", "application/vnd.kde.kivio"],
  ["flx", "text/vnd.fmi.flexstor"],
  ["fly", "text/vnd.fly"],
  ["fm", "application/vnd.framemaker"],
  ["fnc", "application/vnd.frogans.fnc"],
  ["fo", "application/vnd.software602.filler.form+xml"],
  ["for", "text/x-fortran"],
  ["fpx", "image/vnd.fpx"],
  ["frame", "application/vnd.framemaker"],
  ["fsc", "application/vnd.fsc.weblaunch"],
  ["fst", "image/vnd.fst"],
  ["ftc", "application/vnd.fluxtime.clip"],
  ["fti", "application/vnd.anser-web-funds-transfer-initiation"],
  ["fvt", "video/vnd.fvt"],
  ["fxp", "application/vnd.adobe.fxp"],
  ["fxpl", "application/vnd.adobe.fxp"],
  ["fzs", "application/vnd.fuzzysheet"],
  ["g2w", "application/vnd.geoplan"],
  ["g3", "image/g3fax"],
  ["g3w", "application/vnd.geospace"],
  ["gac", "application/vnd.groove-account"],
  ["gam", "application/x-tads"],
  ["gbr", "application/rpki-ghostbusters"],
  ["gca", "application/x-gca-compressed"],
  ["gdl", "model/vnd.gdl"],
  ["gdoc", "application/vnd.google-apps.document"],
  ["geo", "application/vnd.dynageo"],
  ["geojson", "application/geo+json"],
  ["gex", "application/vnd.geometry-explorer"],
  ["ggb", "application/vnd.geogebra.file"],
  ["ggt", "application/vnd.geogebra.tool"],
  ["ghf", "application/vnd.groove-help"],
  ["gif", "image/gif"],
  ["gim", "application/vnd.groove-identity-message"],
  ["glb", "model/gltf-binary"],
  ["gltf", "model/gltf+json"],
  ["gml", "application/gml+xml"],
  ["gmx", "application/vnd.gmx"],
  ["gnumeric", "application/x-gnumeric"],
  ["gpg", "application/gpg-keys"],
  ["gph", "application/vnd.flographit"],
  ["gpx", "application/gpx+xml"],
  ["gqf", "application/vnd.grafeq"],
  ["gqs", "application/vnd.grafeq"],
  ["gram", "application/srgs"],
  ["gramps", "application/x-gramps-xml"],
  ["gre", "application/vnd.geometry-explorer"],
  ["grv", "application/vnd.groove-injector"],
  ["grxml", "application/srgs+xml"],
  ["gsf", "application/x-font-ghostscript"],
  ["gsheet", "application/vnd.google-apps.spreadsheet"],
  ["gslides", "application/vnd.google-apps.presentation"],
  ["gtar", "application/x-gtar"],
  ["gtm", "application/vnd.groove-tool-message"],
  ["gtw", "model/vnd.gtw"],
  ["gv", "text/vnd.graphviz"],
  ["gxf", "application/gxf"],
  ["gxt", "application/vnd.geonext"],
  ["gz", "application/gzip"],
  ["gzip", "application/gzip"],
  ["h", "text/x-c"],
  ["h261", "video/h261"],
  ["h263", "video/h263"],
  ["h264", "video/h264"],
  ["hal", "application/vnd.hal+xml"],
  ["hbci", "application/vnd.hbci"],
  ["hbs", "text/x-handlebars-template"],
  ["hdd", "application/x-virtualbox-hdd"],
  ["hdf", "application/x-hdf"],
  ["heic", "image/heic"],
  ["heics", "image/heic-sequence"],
  ["heif", "image/heif"],
  ["heifs", "image/heif-sequence"],
  ["hej2", "image/hej2k"],
  ["held", "application/atsc-held+xml"],
  ["hh", "text/x-c"],
  ["hjson", "application/hjson"],
  ["hlp", "application/winhlp"],
  ["hpgl", "application/vnd.hp-hpgl"],
  ["hpid", "application/vnd.hp-hpid"],
  ["hps", "application/vnd.hp-hps"],
  ["hqx", "application/mac-binhex40"],
  ["hsj2", "image/hsj2"],
  ["htc", "text/x-component"],
  ["htke", "application/vnd.kenameaapp"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["hvd", "application/vnd.yamaha.hv-dic"],
  ["hvp", "application/vnd.yamaha.hv-voice"],
  ["hvs", "application/vnd.yamaha.hv-script"],
  ["i2g", "application/vnd.intergeo"],
  ["icc", "application/vnd.iccprofile"],
  ["ice", "x-conference/x-cooltalk"],
  ["icm", "application/vnd.iccprofile"],
  ["ico", "image/x-icon"],
  ["ics", "text/calendar"],
  ["ief", "image/ief"],
  ["ifb", "text/calendar"],
  ["ifm", "application/vnd.shana.informed.formdata"],
  ["iges", "model/iges"],
  ["igl", "application/vnd.igloader"],
  ["igm", "application/vnd.insors.igm"],
  ["igs", "model/iges"],
  ["igx", "application/vnd.micrografx.igx"],
  ["iif", "application/vnd.shana.informed.interchange"],
  ["img", "application/octet-stream"],
  ["imp", "application/vnd.accpac.simply.imp"],
  ["ims", "application/vnd.ms-ims"],
  ["in", "text/plain"],
  ["ini", "text/plain"],
  ["ink", "application/inkml+xml"],
  ["inkml", "application/inkml+xml"],
  ["install", "application/x-install-instructions"],
  ["iota", "application/vnd.astraea-software.iota"],
  ["ipfix", "application/ipfix"],
  ["ipk", "application/vnd.shana.informed.package"],
  ["irm", "application/vnd.ibm.rights-management"],
  ["irp", "application/vnd.irepository.package+xml"],
  ["iso", "application/x-iso9660-image"],
  ["itp", "application/vnd.shana.informed.formtemplate"],
  ["its", "application/its+xml"],
  ["ivp", "application/vnd.immervision-ivp"],
  ["ivu", "application/vnd.immervision-ivu"],
  ["jad", "text/vnd.sun.j2me.app-descriptor"],
  ["jade", "text/jade"],
  ["jam", "application/vnd.jam"],
  ["jar", "application/java-archive"],
  ["jardiff", "application/x-java-archive-diff"],
  ["java", "text/x-java-source"],
  ["jhc", "image/jphc"],
  ["jisp", "application/vnd.jisp"],
  ["jls", "image/jls"],
  ["jlt", "application/vnd.hp-jlyt"],
  ["jng", "image/x-jng"],
  ["jnlp", "application/x-java-jnlp-file"],
  ["joda", "application/vnd.joost.joda-archive"],
  ["jp2", "image/jp2"],
  ["jpe", "image/jpeg"],
  ["jpeg", "image/jpeg"],
  ["jpf", "image/jpx"],
  ["jpg", "image/jpeg"],
  ["jpg2", "image/jp2"],
  ["jpgm", "video/jpm"],
  ["jpgv", "video/jpeg"],
  ["jph", "image/jph"],
  ["jpm", "video/jpm"],
  ["jpx", "image/jpx"],
  ["js", "application/javascript"],
  ["json", "application/json"],
  ["json5", "application/json5"],
  ["jsonld", "application/ld+json"],
  // https://jsonlines.org/
  ["jsonl", "application/jsonl"],
  ["jsonml", "application/jsonml+json"],
  ["jsx", "text/jsx"],
  ["jxr", "image/jxr"],
  ["jxra", "image/jxra"],
  ["jxrs", "image/jxrs"],
  ["jxs", "image/jxs"],
  ["jxsc", "image/jxsc"],
  ["jxsi", "image/jxsi"],
  ["jxss", "image/jxss"],
  ["kar", "audio/midi"],
  ["karbon", "application/vnd.kde.karbon"],
  ["kdb", "application/octet-stream"],
  ["kdbx", "application/x-keepass2"],
  ["key", "application/x-iwork-keynote-sffkey"],
  ["kfo", "application/vnd.kde.kformula"],
  ["kia", "application/vnd.kidspiration"],
  ["kml", "application/vnd.google-earth.kml+xml"],
  ["kmz", "application/vnd.google-earth.kmz"],
  ["kne", "application/vnd.kinar"],
  ["knp", "application/vnd.kinar"],
  ["kon", "application/vnd.kde.kontour"],
  ["kpr", "application/vnd.kde.kpresenter"],
  ["kpt", "application/vnd.kde.kpresenter"],
  ["kpxx", "application/vnd.ds-keypoint"],
  ["ksp", "application/vnd.kde.kspread"],
  ["ktr", "application/vnd.kahootz"],
  ["ktx", "image/ktx"],
  ["ktx2", "image/ktx2"],
  ["ktz", "application/vnd.kahootz"],
  ["kwd", "application/vnd.kde.kword"],
  ["kwt", "application/vnd.kde.kword"],
  ["lasxml", "application/vnd.las.las+xml"],
  ["latex", "application/x-latex"],
  ["lbd", "application/vnd.llamagraphics.life-balance.desktop"],
  ["lbe", "application/vnd.llamagraphics.life-balance.exchange+xml"],
  ["les", "application/vnd.hhe.lesson-player"],
  ["less", "text/less"],
  ["lgr", "application/lgr+xml"],
  ["lha", "application/octet-stream"],
  ["link66", "application/vnd.route66.link66+xml"],
  ["list", "text/plain"],
  ["list3820", "application/vnd.ibm.modcap"],
  ["listafp", "application/vnd.ibm.modcap"],
  ["litcoffee", "text/coffeescript"],
  ["lnk", "application/x-ms-shortcut"],
  ["log", "text/plain"],
  ["lostxml", "application/lost+xml"],
  ["lrf", "application/octet-stream"],
  ["lrm", "application/vnd.ms-lrm"],
  ["ltf", "application/vnd.frogans.ltf"],
  ["lua", "text/x-lua"],
  ["luac", "application/x-lua-bytecode"],
  ["lvp", "audio/vnd.lucent.voice"],
  ["lwp", "application/vnd.lotus-wordpro"],
  ["lzh", "application/octet-stream"],
  ["m1v", "video/mpeg"],
  ["m2a", "audio/mpeg"],
  ["m2v", "video/mpeg"],
  ["m3a", "audio/mpeg"],
  ["m3u", "text/plain"],
  ["m3u8", "application/vnd.apple.mpegurl"],
  ["m4a", "audio/x-m4a"],
  ["m4p", "application/mp4"],
  ["m4s", "video/iso.segment"],
  ["m4u", "application/vnd.mpegurl"],
  ["m4v", "video/x-m4v"],
  ["m13", "application/x-msmediaview"],
  ["m14", "application/x-msmediaview"],
  ["m21", "application/mp21"],
  ["ma", "application/mathematica"],
  ["mads", "application/mads+xml"],
  ["maei", "application/mmt-aei+xml"],
  ["mag", "application/vnd.ecowin.chart"],
  ["maker", "application/vnd.framemaker"],
  ["man", "text/troff"],
  ["manifest", "text/cache-manifest"],
  ["map", "application/json"],
  ["mar", "application/octet-stream"],
  ["markdown", "text/markdown"],
  ["mathml", "application/mathml+xml"],
  ["mb", "application/mathematica"],
  ["mbk", "application/vnd.mobius.mbk"],
  ["mbox", "application/mbox"],
  ["mc1", "application/vnd.medcalcdata"],
  ["mcd", "application/vnd.mcd"],
  ["mcurl", "text/vnd.curl.mcurl"],
  ["md", "text/markdown"],
  ["mdb", "application/x-msaccess"],
  ["mdi", "image/vnd.ms-modi"],
  ["mdx", "text/mdx"],
  ["me", "text/troff"],
  ["mesh", "model/mesh"],
  ["meta4", "application/metalink4+xml"],
  ["metalink", "application/metalink+xml"],
  ["mets", "application/mets+xml"],
  ["mfm", "application/vnd.mfmp"],
  ["mft", "application/rpki-manifest"],
  ["mgp", "application/vnd.osgeo.mapguide.package"],
  ["mgz", "application/vnd.proteus.magazine"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mie", "application/x-mie"],
  ["mif", "application/vnd.mif"],
  ["mime", "message/rfc822"],
  ["mj2", "video/mj2"],
  ["mjp2", "video/mj2"],
  ["mjs", "application/javascript"],
  ["mk3d", "video/x-matroska"],
  ["mka", "audio/x-matroska"],
  ["mkd", "text/x-markdown"],
  ["mks", "video/x-matroska"],
  ["mkv", "video/x-matroska"],
  ["mlp", "application/vnd.dolby.mlp"],
  ["mmd", "application/vnd.chipnuts.karaoke-mmd"],
  ["mmf", "application/vnd.smaf"],
  ["mml", "text/mathml"],
  ["mmr", "image/vnd.fujixerox.edmics-mmr"],
  ["mng", "video/x-mng"],
  ["mny", "application/x-msmoney"],
  ["mobi", "application/x-mobipocket-ebook"],
  ["mods", "application/mods+xml"],
  ["mov", "video/quicktime"],
  ["movie", "video/x-sgi-movie"],
  ["mp2", "audio/mpeg"],
  ["mp2a", "audio/mpeg"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mp4a", "audio/mp4"],
  ["mp4s", "application/mp4"],
  ["mp4v", "video/mp4"],
  ["mp21", "application/mp21"],
  ["mpc", "application/vnd.mophun.certificate"],
  ["mpd", "application/dash+xml"],
  ["mpe", "video/mpeg"],
  ["mpeg", "video/mpeg"],
  ["mpg", "video/mpeg"],
  ["mpg4", "video/mp4"],
  ["mpga", "audio/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["mpm", "application/vnd.blueice.multipass"],
  ["mpn", "application/vnd.mophun.application"],
  ["mpp", "application/vnd.ms-project"],
  ["mpt", "application/vnd.ms-project"],
  ["mpy", "application/vnd.ibm.minipay"],
  ["mqy", "application/vnd.mobius.mqy"],
  ["mrc", "application/marc"],
  ["mrcx", "application/marcxml+xml"],
  ["ms", "text/troff"],
  ["mscml", "application/mediaservercontrol+xml"],
  ["mseed", "application/vnd.fdsn.mseed"],
  ["mseq", "application/vnd.mseq"],
  ["msf", "application/vnd.epson.msf"],
  ["msg", "application/vnd.ms-outlook"],
  ["msh", "model/mesh"],
  ["msi", "application/x-msdownload"],
  ["msl", "application/vnd.mobius.msl"],
  ["msm", "application/octet-stream"],
  ["msp", "application/octet-stream"],
  ["msty", "application/vnd.muvee.style"],
  ["mtl", "model/mtl"],
  ["mts", "model/vnd.mts"],
  ["mus", "application/vnd.musician"],
  ["musd", "application/mmt-usd+xml"],
  ["musicxml", "application/vnd.recordare.musicxml+xml"],
  ["mvb", "application/x-msmediaview"],
  ["mvt", "application/vnd.mapbox-vector-tile"],
  ["mwf", "application/vnd.mfer"],
  ["mxf", "application/mxf"],
  ["mxl", "application/vnd.recordare.musicxml"],
  ["mxmf", "audio/mobile-xmf"],
  ["mxml", "application/xv+xml"],
  ["mxs", "application/vnd.triscape.mxs"],
  ["mxu", "video/vnd.mpegurl"],
  ["n-gage", "application/vnd.nokia.n-gage.symbian.install"],
  ["n3", "text/n3"],
  ["nb", "application/mathematica"],
  ["nbp", "application/vnd.wolfram.player"],
  ["nc", "application/x-netcdf"],
  ["ncx", "application/x-dtbncx+xml"],
  ["nfo", "text/x-nfo"],
  ["ngdat", "application/vnd.nokia.n-gage.data"],
  ["nitf", "application/vnd.nitf"],
  ["nlu", "application/vnd.neurolanguage.nlu"],
  ["nml", "application/vnd.enliven"],
  ["nnd", "application/vnd.noblenet-directory"],
  ["nns", "application/vnd.noblenet-sealer"],
  ["nnw", "application/vnd.noblenet-web"],
  ["npx", "image/vnd.net-fpx"],
  ["nq", "application/n-quads"],
  ["nsc", "application/x-conference"],
  ["nsf", "application/vnd.lotus-notes"],
  ["nt", "application/n-triples"],
  ["ntf", "application/vnd.nitf"],
  ["numbers", "application/x-iwork-numbers-sffnumbers"],
  ["nzb", "application/x-nzb"],
  ["oa2", "application/vnd.fujitsu.oasys2"],
  ["oa3", "application/vnd.fujitsu.oasys3"],
  ["oas", "application/vnd.fujitsu.oasys"],
  ["obd", "application/x-msbinder"],
  ["obgx", "application/vnd.openblox.game+xml"],
  ["obj", "model/obj"],
  ["oda", "application/oda"],
  ["odb", "application/vnd.oasis.opendocument.database"],
  ["odc", "application/vnd.oasis.opendocument.chart"],
  ["odf", "application/vnd.oasis.opendocument.formula"],
  ["odft", "application/vnd.oasis.opendocument.formula-template"],
  ["odg", "application/vnd.oasis.opendocument.graphics"],
  ["odi", "application/vnd.oasis.opendocument.image"],
  ["odm", "application/vnd.oasis.opendocument.text-master"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogex", "model/vnd.opengex"],
  ["ogg", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["omdoc", "application/omdoc+xml"],
  ["onepkg", "application/onenote"],
  ["onetmp", "application/onenote"],
  ["onetoc", "application/onenote"],
  ["onetoc2", "application/onenote"],
  ["opf", "application/oebps-package+xml"],
  ["opml", "text/x-opml"],
  ["oprc", "application/vnd.palm"],
  ["opus", "audio/ogg"],
  ["org", "text/x-org"],
  ["osf", "application/vnd.yamaha.openscoreformat"],
  ["osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml"],
  ["osm", "application/vnd.openstreetmap.data+xml"],
  ["otc", "application/vnd.oasis.opendocument.chart-template"],
  ["otf", "font/otf"],
  ["otg", "application/vnd.oasis.opendocument.graphics-template"],
  ["oth", "application/vnd.oasis.opendocument.text-web"],
  ["oti", "application/vnd.oasis.opendocument.image-template"],
  ["otp", "application/vnd.oasis.opendocument.presentation-template"],
  ["ots", "application/vnd.oasis.opendocument.spreadsheet-template"],
  ["ott", "application/vnd.oasis.opendocument.text-template"],
  ["ova", "application/x-virtualbox-ova"],
  ["ovf", "application/x-virtualbox-ovf"],
  ["owl", "application/rdf+xml"],
  ["oxps", "application/oxps"],
  ["oxt", "application/vnd.openofficeorg.extension"],
  ["p", "text/x-pascal"],
  ["p7a", "application/x-pkcs7-signature"],
  ["p7b", "application/x-pkcs7-certificates"],
  ["p7c", "application/pkcs7-mime"],
  ["p7m", "application/pkcs7-mime"],
  ["p7r", "application/x-pkcs7-certreqresp"],
  ["p7s", "application/pkcs7-signature"],
  ["p8", "application/pkcs8"],
  ["p10", "application/x-pkcs10"],
  ["p12", "application/x-pkcs12"],
  ["pac", "application/x-ns-proxy-autoconfig"],
  ["pages", "application/x-iwork-pages-sffpages"],
  ["pas", "text/x-pascal"],
  ["paw", "application/vnd.pawaafile"],
  ["pbd", "application/vnd.powerbuilder6"],
  ["pbm", "image/x-portable-bitmap"],
  ["pcap", "application/vnd.tcpdump.pcap"],
  ["pcf", "application/x-font-pcf"],
  ["pcl", "application/vnd.hp-pcl"],
  ["pclxl", "application/vnd.hp-pclxl"],
  ["pct", "image/x-pict"],
  ["pcurl", "application/vnd.curl.pcurl"],
  ["pcx", "image/x-pcx"],
  ["pdb", "application/x-pilot"],
  ["pde", "text/x-processing"],
  ["pdf", "application/pdf"],
  ["pem", "application/x-x509-user-cert"],
  ["pfa", "application/x-font-type1"],
  ["pfb", "application/x-font-type1"],
  ["pfm", "application/x-font-type1"],
  ["pfr", "application/font-tdpfr"],
  ["pfx", "application/x-pkcs12"],
  ["pgm", "image/x-portable-graymap"],
  ["pgn", "application/x-chess-pgn"],
  ["pgp", "application/pgp"],
  ["php", "application/x-httpd-php"],
  ["php3", "application/x-httpd-php"],
  ["php4", "application/x-httpd-php"],
  ["phps", "application/x-httpd-php-source"],
  ["phtml", "application/x-httpd-php"],
  ["pic", "image/x-pict"],
  ["pkg", "application/octet-stream"],
  ["pki", "application/pkixcmp"],
  ["pkipath", "application/pkix-pkipath"],
  ["pkpass", "application/vnd.apple.pkpass"],
  ["pl", "application/x-perl"],
  ["plb", "application/vnd.3gpp.pic-bw-large"],
  ["plc", "application/vnd.mobius.plc"],
  ["plf", "application/vnd.pocketlearn"],
  ["pls", "application/pls+xml"],
  ["pm", "application/x-perl"],
  ["pml", "application/vnd.ctc-posml"],
  ["png", "image/png"],
  ["pnm", "image/x-portable-anymap"],
  ["portpkg", "application/vnd.macports.portpkg"],
  ["pot", "application/vnd.ms-powerpoint"],
  ["potm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["potx", "application/vnd.openxmlformats-officedocument.presentationml.template"],
  ["ppa", "application/vnd.ms-powerpoint"],
  ["ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"],
  ["ppd", "application/vnd.cups-ppd"],
  ["ppm", "image/x-portable-pixmap"],
  ["pps", "application/vnd.ms-powerpoint"],
  ["ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"],
  ["ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"],
  ["ppt", "application/powerpoint"],
  ["pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["pqa", "application/vnd.palm"],
  ["prc", "application/x-pilot"],
  ["pre", "application/vnd.lotus-freelance"],
  ["prf", "application/pics-rules"],
  ["provx", "application/provenance+xml"],
  ["ps", "application/postscript"],
  ["psb", "application/vnd.3gpp.pic-bw-small"],
  ["psd", "application/x-photoshop"],
  ["psf", "application/x-font-linux-psf"],
  ["pskcxml", "application/pskc+xml"],
  ["pti", "image/prs.pti"],
  ["ptid", "application/vnd.pvi.ptid1"],
  ["pub", "application/x-mspublisher"],
  ["pvb", "application/vnd.3gpp.pic-bw-var"],
  ["pwn", "application/vnd.3m.post-it-notes"],
  ["pya", "audio/vnd.ms-playready.media.pya"],
  ["pyv", "video/vnd.ms-playready.media.pyv"],
  ["qam", "application/vnd.epson.quickanime"],
  ["qbo", "application/vnd.intu.qbo"],
  ["qfx", "application/vnd.intu.qfx"],
  ["qps", "application/vnd.publishare-delta-tree"],
  ["qt", "video/quicktime"],
  ["qwd", "application/vnd.quark.quarkxpress"],
  ["qwt", "application/vnd.quark.quarkxpress"],
  ["qxb", "application/vnd.quark.quarkxpress"],
  ["qxd", "application/vnd.quark.quarkxpress"],
  ["qxl", "application/vnd.quark.quarkxpress"],
  ["qxt", "application/vnd.quark.quarkxpress"],
  ["ra", "audio/x-realaudio"],
  ["ram", "audio/x-pn-realaudio"],
  ["raml", "application/raml+yaml"],
  ["rapd", "application/route-apd+xml"],
  ["rar", "application/x-rar"],
  ["ras", "image/x-cmu-raster"],
  ["rcprofile", "application/vnd.ipunplugged.rcprofile"],
  ["rdf", "application/rdf+xml"],
  ["rdz", "application/vnd.data-vision.rdz"],
  ["relo", "application/p2p-overlay+xml"],
  ["rep", "application/vnd.businessobjects"],
  ["res", "application/x-dtbresource+xml"],
  ["rgb", "image/x-rgb"],
  ["rif", "application/reginfo+xml"],
  ["rip", "audio/vnd.rip"],
  ["ris", "application/x-research-info-systems"],
  ["rl", "application/resource-lists+xml"],
  ["rlc", "image/vnd.fujixerox.edmics-rlc"],
  ["rld", "application/resource-lists-diff+xml"],
  ["rm", "audio/x-pn-realaudio"],
  ["rmi", "audio/midi"],
  ["rmp", "audio/x-pn-realaudio-plugin"],
  ["rms", "application/vnd.jcp.javame.midlet-rms"],
  ["rmvb", "application/vnd.rn-realmedia-vbr"],
  ["rnc", "application/relax-ng-compact-syntax"],
  ["rng", "application/xml"],
  ["roa", "application/rpki-roa"],
  ["roff", "text/troff"],
  ["rp9", "application/vnd.cloanto.rp9"],
  ["rpm", "audio/x-pn-realaudio-plugin"],
  ["rpss", "application/vnd.nokia.radio-presets"],
  ["rpst", "application/vnd.nokia.radio-preset"],
  ["rq", "application/sparql-query"],
  ["rs", "application/rls-services+xml"],
  ["rsa", "application/x-pkcs7"],
  ["rsat", "application/atsc-rsat+xml"],
  ["rsd", "application/rsd+xml"],
  ["rsheet", "application/urc-ressheet+xml"],
  ["rss", "application/rss+xml"],
  ["rtf", "text/rtf"],
  ["rtx", "text/richtext"],
  ["run", "application/x-makeself"],
  ["rusd", "application/route-usd+xml"],
  ["rv", "video/vnd.rn-realvideo"],
  ["s", "text/x-asm"],
  ["s3m", "audio/s3m"],
  ["saf", "application/vnd.yamaha.smaf-audio"],
  ["sass", "text/x-sass"],
  ["sbml", "application/sbml+xml"],
  ["sc", "application/vnd.ibm.secure-container"],
  ["scd", "application/x-msschedule"],
  ["scm", "application/vnd.lotus-screencam"],
  ["scq", "application/scvp-cv-request"],
  ["scs", "application/scvp-cv-response"],
  ["scss", "text/x-scss"],
  ["scurl", "text/vnd.curl.scurl"],
  ["sda", "application/vnd.stardivision.draw"],
  ["sdc", "application/vnd.stardivision.calc"],
  ["sdd", "application/vnd.stardivision.impress"],
  ["sdkd", "application/vnd.solent.sdkm+xml"],
  ["sdkm", "application/vnd.solent.sdkm+xml"],
  ["sdp", "application/sdp"],
  ["sdw", "application/vnd.stardivision.writer"],
  ["sea", "application/octet-stream"],
  ["see", "application/vnd.seemail"],
  ["seed", "application/vnd.fdsn.seed"],
  ["sema", "application/vnd.sema"],
  ["semd", "application/vnd.semd"],
  ["semf", "application/vnd.semf"],
  ["senmlx", "application/senml+xml"],
  ["sensmlx", "application/sensml+xml"],
  ["ser", "application/java-serialized-object"],
  ["setpay", "application/set-payment-initiation"],
  ["setreg", "application/set-registration-initiation"],
  ["sfd-hdstx", "application/vnd.hydrostatix.sof-data"],
  ["sfs", "application/vnd.spotfire.sfs"],
  ["sfv", "text/x-sfv"],
  ["sgi", "image/sgi"],
  ["sgl", "application/vnd.stardivision.writer-global"],
  ["sgm", "text/sgml"],
  ["sgml", "text/sgml"],
  ["sh", "application/x-sh"],
  ["shar", "application/x-shar"],
  ["shex", "text/shex"],
  ["shf", "application/shf+xml"],
  ["shtml", "text/html"],
  ["sid", "image/x-mrsid-image"],
  ["sieve", "application/sieve"],
  ["sig", "application/pgp-signature"],
  ["sil", "audio/silk"],
  ["silo", "model/mesh"],
  ["sis", "application/vnd.symbian.install"],
  ["sisx", "application/vnd.symbian.install"],
  ["sit", "application/x-stuffit"],
  ["sitx", "application/x-stuffitx"],
  ["siv", "application/sieve"],
  ["skd", "application/vnd.koan"],
  ["skm", "application/vnd.koan"],
  ["skp", "application/vnd.koan"],
  ["skt", "application/vnd.koan"],
  ["sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12"],
  ["sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"],
  ["slim", "text/slim"],
  ["slm", "text/slim"],
  ["sls", "application/route-s-tsid+xml"],
  ["slt", "application/vnd.epson.salt"],
  ["sm", "application/vnd.stepmania.stepchart"],
  ["smf", "application/vnd.stardivision.math"],
  ["smi", "application/smil"],
  ["smil", "application/smil"],
  ["smv", "video/x-smv"],
  ["smzip", "application/vnd.stepmania.package"],
  ["snd", "audio/basic"],
  ["snf", "application/x-font-snf"],
  ["so", "application/octet-stream"],
  ["spc", "application/x-pkcs7-certificates"],
  ["spdx", "text/spdx"],
  ["spf", "application/vnd.yamaha.smaf-phrase"],
  ["spl", "application/x-futuresplash"],
  ["spot", "text/vnd.in3d.spot"],
  ["spp", "application/scvp-vp-response"],
  ["spq", "application/scvp-vp-request"],
  ["spx", "audio/ogg"],
  ["sql", "application/x-sql"],
  ["src", "application/x-wais-source"],
  ["srt", "application/x-subrip"],
  ["sru", "application/sru+xml"],
  ["srx", "application/sparql-results+xml"],
  ["ssdl", "application/ssdl+xml"],
  ["sse", "application/vnd.kodak-descriptor"],
  ["ssf", "application/vnd.epson.ssf"],
  ["ssml", "application/ssml+xml"],
  ["sst", "application/octet-stream"],
  ["st", "application/vnd.sailingtracker.track"],
  ["stc", "application/vnd.sun.xml.calc.template"],
  ["std", "application/vnd.sun.xml.draw.template"],
  ["stf", "application/vnd.wt.stf"],
  ["sti", "application/vnd.sun.xml.impress.template"],
  ["stk", "application/hyperstudio"],
  ["stl", "model/stl"],
  ["stpx", "model/step+xml"],
  ["stpxz", "model/step-xml+zip"],
  ["stpz", "model/step+zip"],
  ["str", "application/vnd.pg.format"],
  ["stw", "application/vnd.sun.xml.writer.template"],
  ["styl", "text/stylus"],
  ["stylus", "text/stylus"],
  ["sub", "text/vnd.dvb.subtitle"],
  ["sus", "application/vnd.sus-calendar"],
  ["susp", "application/vnd.sus-calendar"],
  ["sv4cpio", "application/x-sv4cpio"],
  ["sv4crc", "application/x-sv4crc"],
  ["svc", "application/vnd.dvb.service"],
  ["svd", "application/vnd.svd"],
  ["svg", "image/svg+xml"],
  ["svgz", "image/svg+xml"],
  ["swa", "application/x-director"],
  ["swf", "application/x-shockwave-flash"],
  ["swi", "application/vnd.aristanetworks.swi"],
  ["swidtag", "application/swid+xml"],
  ["sxc", "application/vnd.sun.xml.calc"],
  ["sxd", "application/vnd.sun.xml.draw"],
  ["sxg", "application/vnd.sun.xml.writer.global"],
  ["sxi", "application/vnd.sun.xml.impress"],
  ["sxm", "application/vnd.sun.xml.math"],
  ["sxw", "application/vnd.sun.xml.writer"],
  ["t", "text/troff"],
  ["t3", "application/x-t3vm-image"],
  ["t38", "image/t38"],
  ["taglet", "application/vnd.mynfc"],
  ["tao", "application/vnd.tao.intent-module-archive"],
  ["tap", "image/vnd.tencent.tap"],
  ["tar", "application/x-tar"],
  ["tcap", "application/vnd.3gpp2.tcap"],
  ["tcl", "application/x-tcl"],
  ["td", "application/urc-targetdesc+xml"],
  ["teacher", "application/vnd.smart.teacher"],
  ["tei", "application/tei+xml"],
  ["teicorpus", "application/tei+xml"],
  ["tex", "application/x-tex"],
  ["texi", "application/x-texinfo"],
  ["texinfo", "application/x-texinfo"],
  ["text", "text/plain"],
  ["tfi", "application/thraud+xml"],
  ["tfm", "application/x-tex-tfm"],
  ["tfx", "image/tiff-fx"],
  ["tga", "image/x-tga"],
  ["tgz", "application/x-tar"],
  ["thmx", "application/vnd.ms-officetheme"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["tk", "application/x-tcl"],
  ["tmo", "application/vnd.tmobile-livetv"],
  ["toml", "application/toml"],
  ["torrent", "application/x-bittorrent"],
  ["tpl", "application/vnd.groove-tool-template"],
  ["tpt", "application/vnd.trid.tpt"],
  ["tr", "text/troff"],
  ["tra", "application/vnd.trueapp"],
  ["trig", "application/trig"],
  ["trm", "application/x-msterminal"],
  ["ts", "video/mp2t"],
  ["tsd", "application/timestamped-data"],
  ["tsv", "text/tab-separated-values"],
  ["ttc", "font/collection"],
  ["ttf", "font/ttf"],
  ["ttl", "text/turtle"],
  ["ttml", "application/ttml+xml"],
  ["twd", "application/vnd.simtech-mindmapper"],
  ["twds", "application/vnd.simtech-mindmapper"],
  ["txd", "application/vnd.genomatix.tuxedo"],
  ["txf", "application/vnd.mobius.txf"],
  ["txt", "text/plain"],
  ["u8dsn", "message/global-delivery-status"],
  ["u8hdr", "message/global-headers"],
  ["u8mdn", "message/global-disposition-notification"],
  ["u8msg", "message/global"],
  ["u32", "application/x-authorware-bin"],
  ["ubj", "application/ubjson"],
  ["udeb", "application/x-debian-package"],
  ["ufd", "application/vnd.ufdl"],
  ["ufdl", "application/vnd.ufdl"],
  ["ulx", "application/x-glulx"],
  ["umj", "application/vnd.umajin"],
  ["unityweb", "application/vnd.unity"],
  ["uoml", "application/vnd.uoml+xml"],
  ["uri", "text/uri-list"],
  ["uris", "text/uri-list"],
  ["urls", "text/uri-list"],
  ["usdz", "model/vnd.usdz+zip"],
  ["ustar", "application/x-ustar"],
  ["utz", "application/vnd.uiq.theme"],
  ["uu", "text/x-uuencode"],
  ["uva", "audio/vnd.dece.audio"],
  ["uvd", "application/vnd.dece.data"],
  ["uvf", "application/vnd.dece.data"],
  ["uvg", "image/vnd.dece.graphic"],
  ["uvh", "video/vnd.dece.hd"],
  ["uvi", "image/vnd.dece.graphic"],
  ["uvm", "video/vnd.dece.mobile"],
  ["uvp", "video/vnd.dece.pd"],
  ["uvs", "video/vnd.dece.sd"],
  ["uvt", "application/vnd.dece.ttml+xml"],
  ["uvu", "video/vnd.uvvu.mp4"],
  ["uvv", "video/vnd.dece.video"],
  ["uvva", "audio/vnd.dece.audio"],
  ["uvvd", "application/vnd.dece.data"],
  ["uvvf", "application/vnd.dece.data"],
  ["uvvg", "image/vnd.dece.graphic"],
  ["uvvh", "video/vnd.dece.hd"],
  ["uvvi", "image/vnd.dece.graphic"],
  ["uvvm", "video/vnd.dece.mobile"],
  ["uvvp", "video/vnd.dece.pd"],
  ["uvvs", "video/vnd.dece.sd"],
  ["uvvt", "application/vnd.dece.ttml+xml"],
  ["uvvu", "video/vnd.uvvu.mp4"],
  ["uvvv", "video/vnd.dece.video"],
  ["uvvx", "application/vnd.dece.unspecified"],
  ["uvvz", "application/vnd.dece.zip"],
  ["uvx", "application/vnd.dece.unspecified"],
  ["uvz", "application/vnd.dece.zip"],
  ["vbox", "application/x-virtualbox-vbox"],
  ["vbox-extpack", "application/x-virtualbox-vbox-extpack"],
  ["vcard", "text/vcard"],
  ["vcd", "application/x-cdlink"],
  ["vcf", "text/x-vcard"],
  ["vcg", "application/vnd.groove-vcard"],
  ["vcs", "text/x-vcalendar"],
  ["vcx", "application/vnd.vcx"],
  ["vdi", "application/x-virtualbox-vdi"],
  ["vds", "model/vnd.sap.vds"],
  ["vhd", "application/x-virtualbox-vhd"],
  ["vis", "application/vnd.visionary"],
  ["viv", "video/vnd.vivo"],
  ["vlc", "application/videolan"],
  ["vmdk", "application/x-virtualbox-vmdk"],
  ["vob", "video/x-ms-vob"],
  ["vor", "application/vnd.stardivision.writer"],
  ["vox", "application/x-authorware-bin"],
  ["vrml", "model/vrml"],
  ["vsd", "application/vnd.visio"],
  ["vsf", "application/vnd.vsf"],
  ["vss", "application/vnd.visio"],
  ["vst", "application/vnd.visio"],
  ["vsw", "application/vnd.visio"],
  ["vtf", "image/vnd.valve.source.texture"],
  ["vtt", "text/vtt"],
  ["vtu", "model/vnd.vtu"],
  ["vxml", "application/voicexml+xml"],
  ["w3d", "application/x-director"],
  ["wad", "application/x-doom"],
  ["wadl", "application/vnd.sun.wadl+xml"],
  ["war", "application/java-archive"],
  ["wasm", "application/wasm"],
  ["wav", "audio/x-wav"],
  ["wax", "audio/x-ms-wax"],
  ["wbmp", "image/vnd.wap.wbmp"],
  ["wbs", "application/vnd.criticaltools.wbs+xml"],
  ["wbxml", "application/wbxml"],
  ["wcm", "application/vnd.ms-works"],
  ["wdb", "application/vnd.ms-works"],
  ["wdp", "image/vnd.ms-photo"],
  ["weba", "audio/webm"],
  ["webapp", "application/x-web-app-manifest+json"],
  ["webm", "video/webm"],
  ["webmanifest", "application/manifest+json"],
  ["webp", "image/webp"],
  ["wg", "application/vnd.pmi.widget"],
  ["wgt", "application/widget"],
  ["wks", "application/vnd.ms-works"],
  ["wm", "video/x-ms-wm"],
  ["wma", "audio/x-ms-wma"],
  ["wmd", "application/x-ms-wmd"],
  ["wmf", "image/wmf"],
  ["wml", "text/vnd.wap.wml"],
  ["wmlc", "application/wmlc"],
  ["wmls", "text/vnd.wap.wmlscript"],
  ["wmlsc", "application/vnd.wap.wmlscriptc"],
  ["wmv", "video/x-ms-wmv"],
  ["wmx", "video/x-ms-wmx"],
  ["wmz", "application/x-msmetafile"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["word", "application/msword"],
  ["wpd", "application/vnd.wordperfect"],
  ["wpl", "application/vnd.ms-wpl"],
  ["wps", "application/vnd.ms-works"],
  ["wqd", "application/vnd.wqd"],
  ["wri", "application/x-mswrite"],
  ["wrl", "model/vrml"],
  ["wsc", "message/vnd.wfa.wsc"],
  ["wsdl", "application/wsdl+xml"],
  ["wspolicy", "application/wspolicy+xml"],
  ["wtb", "application/vnd.webturbo"],
  ["wvx", "video/x-ms-wvx"],
  ["x3d", "model/x3d+xml"],
  ["x3db", "model/x3d+fastinfoset"],
  ["x3dbz", "model/x3d+binary"],
  ["x3dv", "model/x3d-vrml"],
  ["x3dvz", "model/x3d+vrml"],
  ["x3dz", "model/x3d+xml"],
  ["x32", "application/x-authorware-bin"],
  ["x_b", "model/vnd.parasolid.transmit.binary"],
  ["x_t", "model/vnd.parasolid.transmit.text"],
  ["xaml", "application/xaml+xml"],
  ["xap", "application/x-silverlight-app"],
  ["xar", "application/vnd.xara"],
  ["xav", "application/xcap-att+xml"],
  ["xbap", "application/x-ms-xbap"],
  ["xbd", "application/vnd.fujixerox.docuworks.binder"],
  ["xbm", "image/x-xbitmap"],
  ["xca", "application/xcap-caps+xml"],
  ["xcs", "application/calendar+xml"],
  ["xdf", "application/xcap-diff+xml"],
  ["xdm", "application/vnd.syncml.dm+xml"],
  ["xdp", "application/vnd.adobe.xdp+xml"],
  ["xdssc", "application/dssc+xml"],
  ["xdw", "application/vnd.fujixerox.docuworks"],
  ["xel", "application/xcap-el+xml"],
  ["xenc", "application/xenc+xml"],
  ["xer", "application/patch-ops-error+xml"],
  ["xfdf", "application/vnd.adobe.xfdf"],
  ["xfdl", "application/vnd.xfdl"],
  ["xht", "application/xhtml+xml"],
  ["xhtml", "application/xhtml+xml"],
  ["xhvml", "application/xv+xml"],
  ["xif", "image/vnd.xiff"],
  ["xl", "application/excel"],
  ["xla", "application/vnd.ms-excel"],
  ["xlam", "application/vnd.ms-excel.addin.macroEnabled.12"],
  ["xlc", "application/vnd.ms-excel"],
  ["xlf", "application/xliff+xml"],
  ["xlm", "application/vnd.ms-excel"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"],
  ["xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xlt", "application/vnd.ms-excel"],
  ["xltm", "application/vnd.ms-excel.template.macroEnabled.12"],
  ["xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"],
  ["xlw", "application/vnd.ms-excel"],
  ["xm", "audio/xm"],
  ["xml", "application/xml"],
  ["xns", "application/xcap-ns+xml"],
  ["xo", "application/vnd.olpc-sugar"],
  ["xop", "application/xop+xml"],
  ["xpi", "application/x-xpinstall"],
  ["xpl", "application/xproc+xml"],
  ["xpm", "image/x-xpixmap"],
  ["xpr", "application/vnd.is-xpr"],
  ["xps", "application/vnd.ms-xpsdocument"],
  ["xpw", "application/vnd.intercon.formnet"],
  ["xpx", "application/vnd.intercon.formnet"],
  ["xsd", "application/xml"],
  ["xsl", "application/xml"],
  ["xslt", "application/xslt+xml"],
  ["xsm", "application/vnd.syncml+xml"],
  ["xspf", "application/xspf+xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["xvm", "application/xv+xml"],
  ["xvml", "application/xv+xml"],
  ["xwd", "image/x-xwindowdump"],
  ["xyz", "chemical/x-xyz"],
  ["xz", "application/x-xz"],
  ["yaml", "text/yaml"],
  ["yang", "application/yang"],
  ["yin", "application/yin+xml"],
  ["yml", "text/yaml"],
  ["ymp", "text/x-suse-ymp"],
  ["z", "application/x-compress"],
  ["z1", "application/x-zmachine"],
  ["z2", "application/x-zmachine"],
  ["z3", "application/x-zmachine"],
  ["z4", "application/x-zmachine"],
  ["z5", "application/x-zmachine"],
  ["z6", "application/x-zmachine"],
  ["z7", "application/x-zmachine"],
  ["z8", "application/x-zmachine"],
  ["zaz", "application/vnd.zzazz.deck+xml"],
  ["zip", "application/zip"],
  ["zir", "application/vnd.zul"],
  ["zirz", "application/vnd.zul"],
  ["zmm", "application/vnd.handheld-entertainment+xml"],
  ["zsh", "text/x-scriptzsh"]
]);
function toFileWithPath(file, path3, h) {
  const f = withMimeType(file);
  const { webkitRelativePath } = file;
  const p = typeof path3 === "string" ? path3 : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : `./${file.name}`;
  if (typeof f.path !== "string") {
    setObjProp(f, "path", p);
  }
  if (h !== void 0) {
    Object.defineProperty(f, "handle", {
      value: h,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  setObjProp(f, "relativePath", p);
  return f;
}
function withMimeType(file) {
  const { name } = file;
  const hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    const ext = name.split(".").pop().toLowerCase();
    const type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
function setObjProp(f, key, value) {
  Object.defineProperty(f, key, {
    value,
    writable: false,
    configurable: false,
    enumerable: true
  });
}

// node_modules/file-selector/dist/es2015/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  // macOs
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function* () {
    if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {
      return getDataTransferFiles(evt.dataTransfer, evt.type);
    } else if (isChangeEvt(evt)) {
      return getInputFiles(evt);
    } else if (Array.isArray(evt) && evt.every((item) => "getFile" in item && typeof item.getFile === "function")) {
      return getFsHandleFiles(evt);
    }
    return [];
  });
}
function isDataTransfer(value) {
  return isObject(value);
}
function isChangeEvt(value) {
  return isObject(value) && isObject(value.target);
}
function isObject(v) {
  return typeof v === "object" && v !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map((file) => toFileWithPath(file));
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function* () {
    const files = yield Promise.all(handles.map((h) => h.getFile()));
    return files.map((file) => toFileWithPath(file));
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function* () {
    if (dt.items) {
      const items = fromList(dt.items).filter((item) => item.kind === "file");
      if (type !== "drop") {
        return items;
      }
      const files = yield Promise.all(items.map(toFilePromises));
      return noIgnoredFiles(flatten(files));
    }
    return noIgnoredFiles(fromList(dt.files).map((file) => toFileWithPath(file)));
  });
}
function noIgnoredFiles(files) {
  return files.filter((file) => FILES_TO_IGNORE.indexOf(file.name) === -1);
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  const files = [];
  for (let i = 0; i < items.length; i++) {
    const file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  const entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item, entry);
}
function flatten(items) {
  return items.reduce((acc, files) => [
    ...acc,
    ...Array.isArray(files) ? flatten(files) : [files]
  ], []);
}
function fromDataTransferItem(item, entry) {
  return __awaiter(this, void 0, void 0, function* () {
    var _a;
    if (globalThis.isSecureContext && typeof item.getAsFileSystemHandle === "function") {
      const h = yield item.getAsFileSystemHandle();
      if (h === null) {
        throw new Error(`${item} is not a File`);
      }
      if (h !== void 0) {
        const file2 = yield h.getFile();
        file2.handle = h;
        return toFileWithPath(file2);
      }
    }
    const file = item.getAsFile();
    if (!file) {
      throw new Error(`${item} is not a File`);
    }
    const fwp = toFileWithPath(file, (_a = entry === null || entry === void 0 ? void 0 : entry.fullPath) !== null && _a !== void 0 ? _a : void 0);
    return fwp;
  });
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);
  });
}
function fromDirEntry(entry) {
  const reader = entry.createReader();
  return new Promise((resolve, reject) => {
    const entries = [];
    function readEntries() {
      reader.readEntries((batch) => __awaiter(this, void 0, void 0, function* () {
        if (!batch.length) {
          try {
            const files = yield Promise.all(entries);
            resolve(files);
          } catch (err) {
            reject(err);
          }
        } else {
          const items = Promise.all(batch.map(fromEntry));
          entries.push(items);
          readEntries();
        }
      }), (err) => {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return new Promise((resolve, reject) => {
      entry.file((file) => {
        const fwp = toFileWithPath(file, entry.fullPath);
        resolve(fwp);
      }, (err) => {
        reject(err);
      });
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function ownKeys(object, enumerableOnly) {
  var keys2 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var accepts = typeof import_attr_accept.default === "function" ? import_attr_accept.default : import_attr_accept.default.default;
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2() {
  var accept = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var acceptArr = accept.split(",");
  var msg = acceptArr.length > 1 ? "one of ".concat(acceptArr.join(", ")) : acceptArr[0];
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(msg)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || accepts(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles, validator = _ref.validator;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    var customErrors = validator ? validator(file) : null;
    return accepted && sizeMatch && !customErrors;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn2) {
      if (!isPropagationStopped(event) && fn2) {
        fn2.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function pickerOptionsFromAccept(accept) {
  if (isDefined(accept)) {
    var acceptForPicker = Object.entries(accept).filter(function(_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2), mimeType = _ref3[0], ext = _ref3[1];
      var ok3 = true;
      if (!isMIMEType(mimeType)) {
        console.warn('Skipped "'.concat(mimeType, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.'));
        ok3 = false;
      }
      if (!Array.isArray(ext) || !ext.every(isExt)) {
        console.warn('Skipped "'.concat(mimeType, '" because an invalid file extension was provided.'));
        ok3 = false;
      }
      return ok3;
    }).reduce(function(agg, _ref4) {
      var _ref5 = _slicedToArray(_ref4, 2), mimeType = _ref5[0], ext = _ref5[1];
      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, mimeType, ext));
    }, {});
    return [{
      // description is required due to https://crbug.com/1264708
      description: "Files",
      accept: acceptForPicker
    }];
  }
  return accept;
}
function acceptPropAsAcceptAttr(accept) {
  if (isDefined(accept)) {
    return Object.entries(accept).reduce(function(a, _ref6) {
      var _ref7 = _slicedToArray(_ref6, 2), mimeType = _ref7[0], ext = _ref7[1];
      return [].concat(_toConsumableArray(a), [mimeType], _toConsumableArray(ext));
    }, []).filter(function(v) {
      return isMIMEType(v) || isExt(v);
    }).join(",");
  }
  return void 0;
}
function isAbort(v) {
  return v instanceof DOMException && (v.name === "AbortError" || v.code === v.ABORT_ERR);
}
function isSecurityError(v) {
  return v instanceof DOMException && (v.name === "SecurityError" || v.code === v.SECURITY_ERR);
}
function isMIMEType(v) {
  return v === "audio/*" || v === "video/*" || v === "image/*" || v === "text/*" || v === "application/*" || /\w+\/[-+.\w]+/g.test(v);
}
function isExt(v) {
  return /^.*\.[\w]+$/.test(v);
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded = ["children"];
var _excluded2 = ["open"];
var _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys2 = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = (0, import_react28.forwardRef)(function(_ref, ref) {
  var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties(_useDropzone, _excluded2);
  (0, import_react28.useImperativeHandle)(ref, function() {
    return {
      open
    };
  }, [open]);
  return import_react28.default.createElement(import_react28.Fragment, null, children(_objectSpread2(_objectSpread2({}, props), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: false,
  autoFocus: false
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: import_prop_types.default.func,
  /**
   * Set accepted file types.
   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).
   */
  accept: import_prop_types.default.objectOf(import_prop_types.default.arrayOf(import_prop_types.default.string)),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: import_prop_types.default.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: import_prop_types.default.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: import_prop_types.default.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: import_prop_types.default.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: import_prop_types.default.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: import_prop_types.default.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: import_prop_types.default.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: import_prop_types.default.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: import_prop_types.default.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: import_prop_types.default.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: import_prop_types.default.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: import_prop_types.default.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: import_prop_types.default.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: import_prop_types.default.bool,
  /**
   * Set to true to focus the root element on render
   */
  autoFocus: import_prop_types.default.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: import_prop_types.default.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: import_prop_types.default.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: import_prop_types.default.func,
  /**
   * Cb for when there's some error from any of the promises.
   *
   * @param {Error} error
   */
  onError: import_prop_types.default.func,
  /**
   * Custom validation function. It must return null if there's no errors.
   * @param {File} file
   * @returns {FileError|FileError[]|null}
   */
  validator: import_prop_types.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$props = _objectSpread2(_objectSpread2({}, defaultProps), props), accept = _defaultProps$props.accept, disabled = _defaultProps$props.disabled, getFilesFromEvent = _defaultProps$props.getFilesFromEvent, maxSize = _defaultProps$props.maxSize, minSize = _defaultProps$props.minSize, multiple = _defaultProps$props.multiple, maxFiles = _defaultProps$props.maxFiles, onDragEnter = _defaultProps$props.onDragEnter, onDragLeave = _defaultProps$props.onDragLeave, onDragOver = _defaultProps$props.onDragOver, onDrop = _defaultProps$props.onDrop, onDropAccepted = _defaultProps$props.onDropAccepted, onDropRejected = _defaultProps$props.onDropRejected, onFileDialogCancel = _defaultProps$props.onFileDialogCancel, onFileDialogOpen = _defaultProps$props.onFileDialogOpen, useFsAccessApi = _defaultProps$props.useFsAccessApi, autoFocus = _defaultProps$props.autoFocus, preventDropOnDocument = _defaultProps$props.preventDropOnDocument, noClick = _defaultProps$props.noClick, noKeyboard = _defaultProps$props.noKeyboard, noDrag = _defaultProps$props.noDrag, noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling, onError2 = _defaultProps$props.onError, validator = _defaultProps$props.validator;
  var acceptAttr = (0, import_react28.useMemo)(function() {
    return acceptPropAsAcceptAttr(accept);
  }, [accept]);
  var pickerTypes = (0, import_react28.useMemo)(function() {
    return pickerOptionsFromAccept(accept);
  }, [accept]);
  var onFileDialogOpenCb = (0, import_react28.useMemo)(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = (0, import_react28.useMemo)(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop;
  }, [onFileDialogCancel]);
  var rootRef = (0, import_react28.useRef)(null);
  var inputRef = (0, import_react28.useRef)(null);
  var _useReducer = (0, import_react28.useReducer)(reducer, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive;
  var fsAccessApiWorksRef = (0, import_react28.useRef)(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  (0, import_react28.useEffect)(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = (0, import_react28.useRef)([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  (0, import_react28.useEffect)(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  (0, import_react28.useEffect)(function() {
    if (!disabled && autoFocus && rootRef.current) {
      rootRef.current.focus();
    }
    return function() {
    };
  }, [rootRef, autoFocus, disabled]);
  var onErrCb = (0, import_react28.useCallback)(function(e) {
    if (onError2) {
      onError2(e);
    } else {
      console.error(e);
    }
  }, [onError2]);
  var onDragEnterCb = (0, import_react28.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray2(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        var fileCount = files.length;
        var isDragAccept = fileCount > 0 && allFilesAccepted({
          files,
          accept: acceptAttr,
          minSize,
          maxSize,
          multiple,
          maxFiles,
          validator
        });
        var isDragReject = fileCount > 0 && !isDragAccept;
        dispatch({
          isDragAccept,
          isDragReject,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      }).catch(function(e) {
        return onErrCb(e);
      });
    }
  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);
  var onDragOverCb = (0, import_react28.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = (0, import_react28.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      type: "setDraggedFiles",
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = (0, import_react28.useCallback)(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, acceptAttr), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e) {
            return e;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      isDragReject: fileRejections.length > 0,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = (0, import_react28.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      }).catch(function(e) {
        return onErrCb(e);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]);
  var openFileDialog = (0, import_react28.useCallback)(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: pickerTypes
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e) {
        if (isAbort(e)) {
          onFileDialogCancelCb(e);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          } else {
            onErrCb(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."));
          }
        } else {
          onErrCb(e);
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]);
  var onKeyDownCb = (0, import_react28.useCallback)(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = (0, import_react28.useCallback)(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = (0, import_react28.useCallback)(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = (0, import_react28.useCallback)(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn2) {
    return disabled ? null : fn2;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
    return noKeyboard ? null : composeHandler(fn2);
  };
  var composeDragHandler = function composeDragHandler2(fn2) {
    return noDrag ? null : composeHandler(fn2);
  };
  var stopPropagation = function stopPropagation2(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = (0, import_react28.useMemo)(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
      return _objectSpread2(_objectSpread2(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "presentation"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = (0, import_react28.useCallback)(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = (0, import_react28.useMemo)(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
      var inputProps = _defineProperty2({
        accept: acceptAttr,
        multiple,
        type: "file",
        style: {
          border: 0,
          clip: "rect(0, 0, 0, 0)",
          clipPath: "inset(50%)",
          height: "1px",
          margin: "0 -1px -1px 0",
          overflow: "hidden",
          padding: 0,
          position: "absolute",
          width: "1px",
          whiteSpace: "nowrap"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isDragActive: action.isDragActive,
        isDragAccept: action.isDragAccept,
        isDragReject: action.isDragReject
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections,
        isDragReject: action.isDragReject
      });
    case "reset":
      return _objectSpread2({}, initialState);
    default:
      return state;
  }
}
function noop() {
}

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ImageDropzone.js
var ImageDropzone = function(_a) {
  var _b = _a.accept, acceptedFiles = _b === void 0 ? [] : _b, children = _a.children, disabled = _a.disabled, handleFiles = _a.handleFiles, maxNumberOfFiles = _a.maxNumberOfFiles, multiple = _a.multiple;
  var t = useTranslationContext("ImageDropzone").t;
  var handleDrop = (0, import_react29.useCallback)(function(accepted) {
    if (!handleFiles) {
      return;
    }
    if (accepted && accepted.length) {
      handleFiles(accepted);
    }
  }, [handleFiles]);
  var accept = (0, import_react29.useMemo)(function() {
    return (typeof acceptedFiles === "string" ? acceptedFiles.split(",") : acceptedFiles).reduce(function(mediaTypeMap, mediaType) {
      var _a2;
      (_a2 = mediaTypeMap[mediaType]) !== null && _a2 !== void 0 ? _a2 : mediaTypeMap[mediaType] = [];
      return mediaTypeMap;
    }, {});
  }, [acceptedFiles]);
  var _c = useDropzone({
    accept,
    disabled,
    maxFiles: maxNumberOfFiles,
    multiple,
    noClick: true,
    onDrop: handleDrop
  }), getRootProps = _c.getRootProps, isDragAccept = _c.isDragAccept, isDragReject = _c.isDragReject;
  return import_react29.default.createElement(
    "div",
    __assign({}, getRootProps({
      className: clsx_default("rfu-dropzone", {
        "rfu-dropzone--accept": isDragAccept,
        "rfu-dropzone--reject": isDragReject
      }),
      style: { position: "relative" }
    }), { tabIndex: -1 }),
    import_react29.default.createElement(
      "div",
      { className: "rfu-dropzone__notifier" },
      import_react29.default.createElement(
        "div",
        { className: "rfu-dropzone__inner" },
        import_react29.default.createElement(
          "svg",
          { height: "41", viewBox: "0 0 41 41", width: "41", xmlns: "http://www.w3.org/2000/svg" },
          import_react29.default.createElement("path", { d: "M40.517 28.002V3.997c0-2.197-1.808-3.992-4.005-3.992H12.507a4.004 4.004 0 0 0-3.992 3.993v24.004a4.004 4.004 0 0 0 3.992 3.993h24.005c2.197 0 4.005-1.795 4.005-3.993zm-22.002-7.997l4.062 5.42 5.937-7.423 7.998 10H12.507l6.008-7.997zM.517 8.003V36c0 2.198 1.795 4.005 3.993 4.005h27.997V36H4.51V8.002H.517z", fill: "#000", fillRule: "nonzero" })
        ),
        import_react29.default.createElement("p", null, t("Drag your files here to add to your post"))
      )
    ),
    children
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ImagePreviewer.js
var import_react34 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/Thumbnail.js
var import_react31 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/IconButton.js
var import_react30 = __toESM(require_react());
var IconButton = function(_a) {
  var children = _a.children, onClick = _a.onClick;
  return import_react30.default.createElement("button", { "aria-label": "Cancel upload", className: "rfu-icon-button", "data-testid": "cancel-upload-button", onClick, type: "button" }, children);
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/Thumbnail.js
var Thumbnail = function(_a) {
  var alt = _a.alt, handleClose = _a.handleClose, image2 = _a.image, _b = _a.size, size = _b === void 0 ? 100 : _b;
  var onClose = (0, import_react31.useCallback)(function(event) {
    return handleClose === null || handleClose === void 0 ? void 0 : handleClose(event);
  }, [handleClose]);
  return import_react31.default.createElement(
    "div",
    { className: "rfu-thumbnail__wrapper", style: { height: size, width: size } },
    import_react31.default.createElement("div", { className: "rfu-thumbnail__overlay" }, handleClose ? import_react31.default.createElement(
      IconButton,
      { onClick: onClose },
      import_react31.default.createElement(CloseIcon, null)
    ) : null),
    image2 ? import_react31.default.createElement("img", { alt: alt !== null && alt !== void 0 ? alt : "", className: "rfu-thumbnail__image", src: image2 }) : import_react31.default.createElement(FilePlaceholderIcon, { className: "rfu-thumbnail__image", preserveAspectRatio: "xMinYMin slice" })
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ThumbnailPlaceholder.js
var import_react33 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ImageUploadButton.js
var import_react32 = __toESM(require_react());
var ImageUploadButton = function(_a) {
  var _b = _a.multiple, multiple = _b === void 0 ? false : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, handleFiles = _a.handleFiles, _d = _a.children, children = _d === void 0 ? import_react32.default.createElement(PictureIcon, null) : _d, _e = _a.resetOnChange, resetOnChange = _e === void 0 ? false : _e;
  return import_react32.default.createElement(
    "div",
    { className: "rfu-image-upload-button" },
    import_react32.default.createElement(
      "label",
      null,
      import_react32.default.createElement(UploadButton, { accept: "image/*", "aria-label": "Image input", className: "rfu-image-input", disabled, multiple, onFileChange: handleFiles, resetOnChange }),
      children
    )
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ThumbnailPlaceholder.js
var ThumbnailPlaceholder = function(_a) {
  var handleFiles = _a.handleFiles, _b = _a.multiple, multiple = _b === void 0 ? false : _b;
  return import_react33.default.createElement(
    ImageUploadButton,
    { handleFiles, multiple },
    import_react33.default.createElement(
      "div",
      { className: "rfu-thumbnail-placeholder" },
      import_react33.default.createElement(
        "svg",
        { height: "15", viewBox: "0 0 14 15", width: "14", xmlns: "http://www.w3.org/2000/svg" },
        import_react33.default.createElement("path", { d: "M14 8.998H8v6H6v-6H0v-2h6v-6h2v6h6z", fill: "#A0B2B8", fillRule: "nonzero" })
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/ReactFileUtilities/ImagePreviewer.js
var ImagePreviewer = function(_a) {
  var _b = _a.disabled, disabled = _b === void 0 ? false : _b, handleFiles = _a.handleFiles, handleRemove = _a.handleRemove, handleRetry = _a.handleRetry, imageUploads = _a.imageUploads, _c = _a.multiple, multiple = _c === void 0 ? true : _c;
  var onClose = (0, import_react34.useCallback)(function(id, event) {
    if (!id)
      return console.warn(`image.id of closed image was "null", this shouldn't happen`);
    handleRemove === null || handleRemove === void 0 ? void 0 : handleRemove(id, event);
  }, [handleRemove]);
  return import_react34.default.createElement(
    "div",
    { className: "rfu-image-previewer" },
    imageUploads === null || imageUploads === void 0 ? void 0 : imageUploads.map(function(image2) {
      var url = image2.url || image2.previewUri;
      return import_react34.default.createElement(
        "div",
        { className: clsx_default("rfu-image-previewer__image", image2.state === "finished" && "rfu-image-previewer__image--loaded"), key: image2.id },
        image2.state === "failed" && import_react34.default.createElement(
          "button",
          { "aria-label": "Retry upload", className: "rfu-image-previewer__retry", onClick: function(event) {
            return handleRetry === null || handleRetry === void 0 ? void 0 : handleRetry(image2.id, event);
          }, type: "button" },
          import_react34.default.createElement(RetryIcon, null)
        ),
        url && import_react34.default.createElement(Thumbnail, { handleClose: function(event) {
          return onClose(image2.id, event);
        }, image: url }),
        image2.state === "uploading" && import_react34.default.createElement(LoadingIndicator, { backgroundColor: "#ffffff19", color: "#ffffffb2" })
      );
    }),
    handleFiles && !disabled && import_react34.default.createElement(ThumbnailPlaceholder, { handleFiles, multiple })
  );
};

// node_modules/stream-chat-react/dist/components/Attachment/FileAttachment.js
var UnMemoizedFileAttachmentV1 = function(_a) {
  var attachment = _a.attachment;
  return import_react35.default.createElement(
    "div",
    { className: "str-chat__message-attachment-file--item", "data-testid": "attachment-file" },
    import_react35.default.createElement(FileIcon, { big: true, mimeType: attachment.mime_type, size: 30 }),
    import_react35.default.createElement(
      "div",
      { className: "str-chat__message-attachment-file--item-text" },
      import_react35.default.createElement(SafeAnchor, { download: true, href: attachment.asset_url, target: "_blank" }, attachment.title),
      import_react35.default.createElement(FileSizeIndicator, { fileSize: attachment.file_size })
    )
  );
};
var UnMemoizedFileAttachmentV2 = function(_a) {
  var attachment = _a.attachment;
  return import_react35.default.createElement(
    "div",
    { className: "str-chat__message-attachment-file--item", "data-testid": "attachment-file" },
    import_react35.default.createElement(FileIcon, { className: "str-chat__file-icon", mimeType: attachment.mime_type, version: "2" }),
    import_react35.default.createElement(
      "div",
      { className: "str-chat__message-attachment-file--item-text" },
      import_react35.default.createElement(
        "div",
        { className: "str-chat__message-attachment-file--item-first-row" },
        import_react35.default.createElement("div", { className: "str-chat__message-attachment-file--item-name", "data-testid": "file-title" }, attachment.title),
        import_react35.default.createElement(DownloadButton, { assetUrl: attachment.asset_url })
      ),
      import_react35.default.createElement(FileSizeIndicator, { fileSize: attachment.file_size })
    )
  );
};
var UnMemoizedFileAttachment = function(_a) {
  var attachment = _a.attachment;
  var themeVersion = useChatContext("FileAttachment").themeVersion;
  return themeVersion === "2" ? import_react35.default.createElement(UnMemoizedFileAttachmentV2, { attachment }) : import_react35.default.createElement(UnMemoizedFileAttachmentV1, { attachment });
};
var FileAttachment = import_react35.default.memo(UnMemoizedFileAttachment);

// node_modules/stream-chat-react/dist/components/Attachment/utils.js
var SUPPORTED_VIDEO_FORMATS = ["video/mp4", "video/ogg", "video/webm", "video/quicktime"];
var isScrapedContent = function(attachment) {
  return attachment.og_scrape_url || attachment.title_link;
};
var isUploadedImage = function(attachment) {
  return attachment.type === "image" && !isScrapedContent(attachment);
};
var isGalleryAttachmentType = function(output) {
  return Array.isArray(output.images);
};
var isAudioAttachment = function(attachment) {
  return attachment.type === "audio";
};
var isFileAttachment = function(attachment) {
  return attachment.type === "file" || attachment.mime_type && SUPPORTED_VIDEO_FORMATS.indexOf(attachment.mime_type) === -1 && attachment.type !== "video";
};
var isMediaAttachment = function(attachment) {
  return attachment.mime_type && SUPPORTED_VIDEO_FORMATS.indexOf(attachment.mime_type) !== -1 || attachment.type === "video";
};
var isSvgAttachment = function(attachment) {
  var filename = attachment.fallback || "";
  return filename.toLowerCase().endsWith(".svg");
};
var renderAttachmentWithinContainer = function(props) {
  var _a;
  var _b;
  var attachment = props.attachment, children = props.children, componentType = props.componentType;
  var isGAT = isGalleryAttachmentType(attachment);
  var extra = "";
  if (!isGAT) {
    extra = componentType === "card" && !(attachment === null || attachment === void 0 ? void 0 : attachment.image_url) && !(attachment === null || attachment === void 0 ? void 0 : attachment.thumb_url) ? "no-image" : ((_b = attachment === null || attachment === void 0 ? void 0 : attachment.actions) === null || _b === void 0 ? void 0 : _b.length) ? "actions" : "";
  }
  var classNames = clsx_default("str-chat__message-attachment", (_a = {}, _a["str-chat__message-attachment--".concat(componentType)] = componentType, _a["str-chat__message-attachment--".concat(attachment === null || attachment === void 0 ? void 0 : attachment.type)] = attachment === null || attachment === void 0 ? void 0 : attachment.type, _a["str-chat__message-attachment--".concat(componentType, "--").concat(extra)] = componentType && extra, _a["str-chat__message-attachment--svg-image"] = isSvgAttachment(attachment), _a["str-chat__message-attachment-with-actions"] = extra === "actions", _a));
  return import_react36.default.createElement("div", { className: classNames }, children);
};
var renderAttachmentActions = function(props) {
  var _a;
  var actionHandler = props.actionHandler, attachment = props.attachment, _b = props.AttachmentActions, AttachmentActions2 = _b === void 0 ? AttachmentActions : _b;
  if (!((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length))
    return null;
  return import_react36.default.createElement(AttachmentActions2, __assign({}, attachment, { actionHandler: function(event, name, value) {
    return actionHandler === null || actionHandler === void 0 ? void 0 : actionHandler(event, name, value);
  }, actions: attachment.actions, id: attachment.id || "", key: "key-actions-".concat(attachment.id), text: attachment.text || "" }));
};
var renderGallery = function(props) {
  var attachment = props.attachment, _a = props.Gallery, Gallery2 = _a === void 0 ? Gallery : _a;
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(Gallery2, { images: attachment.images || [], key: "gallery" }),
    componentType: "gallery"
  });
};
var renderImage = function(props) {
  var attachment = props.attachment, _a = props.Image, Image = _a === void 0 ? ImageComponent : _a;
  if (attachment.actions && attachment.actions.length) {
    return renderAttachmentWithinContainer({
      attachment,
      children: import_react36.default.createElement(
        "div",
        { className: "str-chat__attachment", key: "key-image-".concat(attachment.id) },
        import_react36.default.createElement(Image, __assign({}, attachment)),
        renderAttachmentActions(props)
      ),
      componentType: "image"
    });
  }
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(Image, __assign({}, attachment, { key: "key-image-".concat(attachment.id) })),
    componentType: "image"
  });
};
var renderCard = function(props) {
  var attachment = props.attachment, _a = props.Card, Card2 = _a === void 0 ? Card : _a;
  if (attachment.actions && attachment.actions.length) {
    return renderAttachmentWithinContainer({
      attachment,
      children: import_react36.default.createElement(
        "div",
        { className: "str-chat__attachment", key: "key-image-".concat(attachment.id) },
        import_react36.default.createElement(Card2, __assign({}, attachment, { key: "key-card-".concat(attachment.id) })),
        renderAttachmentActions(props)
      ),
      componentType: "card"
    });
  }
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(Card2, __assign({}, attachment, { key: "key-card-".concat(attachment.id) })),
    componentType: "card"
  });
};
var renderFile = function(props) {
  var attachment = props.attachment, _a = props.File, File2 = _a === void 0 ? FileAttachment : _a;
  if (!attachment.asset_url)
    return null;
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(File2, { attachment, key: "key-file-".concat(attachment.id) }),
    componentType: "file"
  });
};
var renderAudio = function(props) {
  var attachment = props.attachment, _a = props.Audio, Audio2 = _a === void 0 ? Audio : _a;
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(
      "div",
      { className: "str-chat__attachment", key: "key-video-".concat(attachment.id) },
      import_react36.default.createElement(Audio2, { og: attachment })
    ),
    componentType: "audio"
  });
};
var renderMedia = function(props) {
  var _a;
  var attachment = props.attachment, _b = props.Media, Media = _b === void 0 ? import_react_player2.default : _b;
  if ((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length) {
    return renderAttachmentWithinContainer({
      attachment,
      children: import_react36.default.createElement(
        "div",
        { className: "str-chat__attachment str-chat__attachment-media", key: "key-video-".concat(attachment.id) },
        import_react36.default.createElement(
          "div",
          { className: "str-chat__player-wrapper" },
          import_react36.default.createElement(Media, { className: "react-player", controls: true, height: "100%", url: attachment.asset_url, width: "100%" })
        ),
        renderAttachmentActions(props)
      ),
      componentType: "media"
    });
  }
  return renderAttachmentWithinContainer({
    attachment,
    children: import_react36.default.createElement(
      "div",
      { className: "str-chat__player-wrapper", key: "key-video-".concat(attachment.id) },
      import_react36.default.createElement(Media, { className: "react-player", controls: true, height: "100%", url: attachment.asset_url, width: "100%" })
    ),
    componentType: "media"
  });
};

// node_modules/stream-chat-react/dist/components/Attachment/AttachmentContainer.js
var import_react38 = __toESM(require_react());
var import_react_player3 = __toESM(require_lib());

// node_modules/linkifyjs/dist/linkify.es.js
var encodedTlds = "aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2";
var encodedUtlds = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2";
var assign = (target, properties) => {
  for (const key in properties) {
    target[key] = properties[key];
  }
  return target;
};
var numeric = "numeric";
var ascii = "ascii";
var alpha = "alpha";
var asciinumeric = "asciinumeric";
var alphanumeric = "alphanumeric";
var domain = "domain";
var emoji = "emoji";
var scheme = "scheme";
var slashscheme = "slashscheme";
var whitespace = "whitespace";
function registerGroup(name, groups) {
  if (!(name in groups)) {
    groups[name] = [];
  }
  return groups[name];
}
function addToGroups(t, flags, groups) {
  if (flags[numeric]) {
    flags[asciinumeric] = true;
    flags[alphanumeric] = true;
  }
  if (flags[ascii]) {
    flags[asciinumeric] = true;
    flags[alpha] = true;
  }
  if (flags[asciinumeric]) {
    flags[alphanumeric] = true;
  }
  if (flags[alpha]) {
    flags[alphanumeric] = true;
  }
  if (flags[alphanumeric]) {
    flags[domain] = true;
  }
  if (flags[emoji]) {
    flags[domain] = true;
  }
  for (const k in flags) {
    const group = registerGroup(k, groups);
    if (group.indexOf(t) < 0) {
      group.push(t);
    }
  }
}
function flagsForToken(t, groups) {
  const result = {};
  for (const c in groups) {
    if (groups[c].indexOf(t) >= 0) {
      result[c] = true;
    }
  }
  return result;
}
function State(token = null) {
  this.j = {};
  this.jr = [];
  this.jd = null;
  this.t = token;
}
State.groups = {};
State.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(input) {
    const state = this;
    const nextState = state.j[input];
    if (nextState) {
      return nextState;
    }
    for (let i = 0; i < state.jr.length; i++) {
      const regex = state.jr[i][0];
      const nextState2 = state.jr[i][1];
      if (nextState2 && regex.test(input)) {
        return nextState2;
      }
    }
    return state.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(input, exactOnly = false) {
    return exactOnly ? input in this.j : !!this.go(input);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(inputs, next, flags, groups) {
    for (let i = 0; i < inputs.length; i++) {
      this.tt(inputs[i], next, flags, groups);
    }
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(regexp2, next, flags, groups) {
    groups = groups || State.groups;
    let nextState;
    if (next && next.j) {
      nextState = next;
    } else {
      nextState = new State(next);
      if (flags && groups) {
        addToGroups(next, flags, groups);
      }
    }
    this.jr.push([regexp2, nextState]);
    return nextState;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(input, next, flags, groups) {
    let state = this;
    const len = input.length;
    if (!len) {
      return state;
    }
    for (let i = 0; i < len - 1; i++) {
      state = state.tt(input[i]);
    }
    return state.tt(input[len - 1], next, flags, groups);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(input, next, flags, groups) {
    groups = groups || State.groups;
    const state = this;
    if (next && next.j) {
      state.j[input] = next;
      return next;
    }
    const t = next;
    let nextState, templateState = state.go(input);
    if (templateState) {
      nextState = new State();
      assign(nextState.j, templateState.j);
      nextState.jr.push.apply(nextState.jr, templateState.jr);
      nextState.jd = templateState.jd;
      nextState.t = templateState.t;
    } else {
      nextState = new State();
    }
    if (t) {
      if (groups) {
        if (nextState.t && typeof nextState.t === "string") {
          const allFlags = assign(flagsForToken(nextState.t, groups), flags);
          addToGroups(t, allFlags, groups);
        } else if (flags) {
          addToGroups(t, flags, groups);
        }
      }
      nextState.t = t;
    }
    state.j[input] = nextState;
    return nextState;
  }
};
var ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);
var tr = (state, regexp2, next, flags, groups) => state.tr(regexp2, next, flags, groups);
var ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);
var tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);
var WORD = "WORD";
var UWORD = "UWORD";
var ASCIINUMERICAL = "ASCIINUMERICAL";
var ALPHANUMERICAL = "ALPHANUMERICAL";
var LOCALHOST = "LOCALHOST";
var TLD = "TLD";
var UTLD = "UTLD";
var SCHEME = "SCHEME";
var SLASH_SCHEME = "SLASH_SCHEME";
var NUM = "NUM";
var WS = "WS";
var NL = "NL";
var OPENBRACE = "OPENBRACE";
var CLOSEBRACE = "CLOSEBRACE";
var OPENBRACKET = "OPENBRACKET";
var CLOSEBRACKET = "CLOSEBRACKET";
var OPENPAREN = "OPENPAREN";
var CLOSEPAREN = "CLOSEPAREN";
var OPENANGLEBRACKET = "OPENANGLEBRACKET";
var CLOSEANGLEBRACKET = "CLOSEANGLEBRACKET";
var FULLWIDTHLEFTPAREN = "FULLWIDTHLEFTPAREN";
var FULLWIDTHRIGHTPAREN = "FULLWIDTHRIGHTPAREN";
var LEFTCORNERBRACKET = "LEFTCORNERBRACKET";
var RIGHTCORNERBRACKET = "RIGHTCORNERBRACKET";
var LEFTWHITECORNERBRACKET = "LEFTWHITECORNERBRACKET";
var RIGHTWHITECORNERBRACKET = "RIGHTWHITECORNERBRACKET";
var FULLWIDTHLESSTHAN = "FULLWIDTHLESSTHAN";
var FULLWIDTHGREATERTHAN = "FULLWIDTHGREATERTHAN";
var AMPERSAND = "AMPERSAND";
var APOSTROPHE = "APOSTROPHE";
var ASTERISK = "ASTERISK";
var AT = "AT";
var BACKSLASH = "BACKSLASH";
var BACKTICK = "BACKTICK";
var CARET = "CARET";
var COLON = "COLON";
var COMMA = "COMMA";
var DOLLAR = "DOLLAR";
var DOT = "DOT";
var EQUALS = "EQUALS";
var EXCLAMATION = "EXCLAMATION";
var HYPHEN = "HYPHEN";
var PERCENT = "PERCENT";
var PIPE = "PIPE";
var PLUS = "PLUS";
var POUND = "POUND";
var QUERY = "QUERY";
var QUOTE = "QUOTE";
var FULLWIDTHMIDDLEDOT = "FULLWIDTHMIDDLEDOT";
var SEMI = "SEMI";
var SLASH = "SLASH";
var TILDE = "TILDE";
var UNDERSCORE = "UNDERSCORE";
var EMOJI$1 = "EMOJI";
var SYM = "SYM";
var tk = Object.freeze({
  __proto__: null,
  WORD,
  UWORD,
  ASCIINUMERICAL,
  ALPHANUMERICAL,
  LOCALHOST,
  TLD,
  UTLD,
  SCHEME,
  SLASH_SCHEME,
  NUM,
  WS,
  NL,
  OPENBRACE,
  CLOSEBRACE,
  OPENBRACKET,
  CLOSEBRACKET,
  OPENPAREN,
  CLOSEPAREN,
  OPENANGLEBRACKET,
  CLOSEANGLEBRACKET,
  FULLWIDTHLEFTPAREN,
  FULLWIDTHRIGHTPAREN,
  LEFTCORNERBRACKET,
  RIGHTCORNERBRACKET,
  LEFTWHITECORNERBRACKET,
  RIGHTWHITECORNERBRACKET,
  FULLWIDTHLESSTHAN,
  FULLWIDTHGREATERTHAN,
  AMPERSAND,
  APOSTROPHE,
  ASTERISK,
  AT,
  BACKSLASH,
  BACKTICK,
  CARET,
  COLON,
  COMMA,
  DOLLAR,
  DOT,
  EQUALS,
  EXCLAMATION,
  HYPHEN,
  PERCENT,
  PIPE,
  PLUS,
  POUND,
  QUERY,
  QUOTE,
  FULLWIDTHMIDDLEDOT,
  SEMI,
  SLASH,
  TILDE,
  UNDERSCORE,
  EMOJI: EMOJI$1,
  SYM
});
var ASCII_LETTER = /[a-z]/;
var LETTER = /\p{L}/u;
var EMOJI = /\p{Emoji}/u;
var EMOJI_VARIATION$1 = /\ufe0f/;
var DIGIT = /\d/;
var SPACE = /\s/;
var regexp = Object.freeze({
  __proto__: null,
  ASCII_LETTER,
  LETTER,
  EMOJI,
  EMOJI_VARIATION: EMOJI_VARIATION$1,
  DIGIT,
  SPACE
});
var CR = "\r";
var LF = "\n";
var EMOJI_VARIATION = "️";
var EMOJI_JOINER = "‍";
var OBJECT_REPLACEMENT = "￼";
var tlds = null;
var utlds = null;
function init$2(customSchemes = []) {
  const groups = {};
  State.groups = groups;
  const Start = new State();
  if (tlds == null) {
    tlds = decodeTlds(encodedTlds);
  }
  if (utlds == null) {
    utlds = decodeTlds(encodedUtlds);
  }
  tt(Start, "'", APOSTROPHE);
  tt(Start, "{", OPENBRACE);
  tt(Start, "}", CLOSEBRACE);
  tt(Start, "[", OPENBRACKET);
  tt(Start, "]", CLOSEBRACKET);
  tt(Start, "(", OPENPAREN);
  tt(Start, ")", CLOSEPAREN);
  tt(Start, "<", OPENANGLEBRACKET);
  tt(Start, ">", CLOSEANGLEBRACKET);
  tt(Start, "（", FULLWIDTHLEFTPAREN);
  tt(Start, "）", FULLWIDTHRIGHTPAREN);
  tt(Start, "「", LEFTCORNERBRACKET);
  tt(Start, "」", RIGHTCORNERBRACKET);
  tt(Start, "『", LEFTWHITECORNERBRACKET);
  tt(Start, "』", RIGHTWHITECORNERBRACKET);
  tt(Start, "＜", FULLWIDTHLESSTHAN);
  tt(Start, "＞", FULLWIDTHGREATERTHAN);
  tt(Start, "&", AMPERSAND);
  tt(Start, "*", ASTERISK);
  tt(Start, "@", AT);
  tt(Start, "`", BACKTICK);
  tt(Start, "^", CARET);
  tt(Start, ":", COLON);
  tt(Start, ",", COMMA);
  tt(Start, "$", DOLLAR);
  tt(Start, ".", DOT);
  tt(Start, "=", EQUALS);
  tt(Start, "!", EXCLAMATION);
  tt(Start, "-", HYPHEN);
  tt(Start, "%", PERCENT);
  tt(Start, "|", PIPE);
  tt(Start, "+", PLUS);
  tt(Start, "#", POUND);
  tt(Start, "?", QUERY);
  tt(Start, '"', QUOTE);
  tt(Start, "/", SLASH);
  tt(Start, ";", SEMI);
  tt(Start, "~", TILDE);
  tt(Start, "_", UNDERSCORE);
  tt(Start, "\\", BACKSLASH);
  tt(Start, "・", FULLWIDTHMIDDLEDOT);
  const Num = tr(Start, DIGIT, NUM, {
    [numeric]: true
  });
  tr(Num, DIGIT, Num);
  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {
    [asciinumeric]: true
  });
  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {
    [alphanumeric]: true
  });
  const Word = tr(Start, ASCII_LETTER, WORD, {
    [ascii]: true
  });
  tr(Word, DIGIT, Asciinumeric);
  tr(Word, ASCII_LETTER, Word);
  tr(Asciinumeric, DIGIT, Asciinumeric);
  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);
  const UWord = tr(Start, LETTER, UWORD, {
    [alpha]: true
  });
  tr(UWord, ASCII_LETTER);
  tr(UWord, DIGIT, Alphanumeric);
  tr(UWord, LETTER, UWord);
  tr(Alphanumeric, DIGIT, Alphanumeric);
  tr(Alphanumeric, ASCII_LETTER);
  tr(Alphanumeric, LETTER, Alphanumeric);
  const Nl2 = tt(Start, LF, NL, {
    [whitespace]: true
  });
  const Cr = tt(Start, CR, WS, {
    [whitespace]: true
  });
  const Ws = tr(Start, SPACE, WS, {
    [whitespace]: true
  });
  tt(Start, OBJECT_REPLACEMENT, Ws);
  tt(Cr, LF, Nl2);
  tt(Cr, OBJECT_REPLACEMENT, Ws);
  tr(Cr, SPACE, Ws);
  tt(Ws, CR);
  tt(Ws, LF);
  tr(Ws, SPACE, Ws);
  tt(Ws, OBJECT_REPLACEMENT, Ws);
  const Emoji2 = tr(Start, EMOJI, EMOJI$1, {
    [emoji]: true
  });
  tt(Emoji2, "#");
  tr(Emoji2, EMOJI, Emoji2);
  tt(Emoji2, EMOJI_VARIATION, Emoji2);
  const EmojiJoiner = tt(Emoji2, EMOJI_JOINER);
  tt(EmojiJoiner, "#");
  tr(EmojiJoiner, EMOJI, Emoji2);
  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];
  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];
  for (let i = 0; i < tlds.length; i++) {
    fastts(Start, tlds[i], TLD, WORD, wordjr);
  }
  for (let i = 0; i < utlds.length; i++) {
    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);
  }
  addToGroups(TLD, {
    tld: true,
    ascii: true
  }, groups);
  addToGroups(UTLD, {
    utld: true,
    alpha: true
  }, groups);
  fastts(Start, "file", SCHEME, WORD, wordjr);
  fastts(Start, "mailto", SCHEME, WORD, wordjr);
  fastts(Start, "http", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "https", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "ftp", SLASH_SCHEME, WORD, wordjr);
  fastts(Start, "ftps", SLASH_SCHEME, WORD, wordjr);
  addToGroups(SCHEME, {
    scheme: true,
    ascii: true
  }, groups);
  addToGroups(SLASH_SCHEME, {
    slashscheme: true,
    ascii: true
  }, groups);
  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);
  for (let i = 0; i < customSchemes.length; i++) {
    const sch = customSchemes[i][0];
    const optionalSlashSlash = customSchemes[i][1];
    const flags = optionalSlashSlash ? {
      [scheme]: true
    } : {
      [slashscheme]: true
    };
    if (sch.indexOf("-") >= 0) {
      flags[domain] = true;
    } else if (!ASCII_LETTER.test(sch)) {
      flags[numeric] = true;
    } else if (DIGIT.test(sch)) {
      flags[asciinumeric] = true;
    } else {
      flags[ascii] = true;
    }
    ts(Start, sch, sch, flags);
  }
  ts(Start, "localhost", LOCALHOST, {
    ascii: true
  });
  Start.jd = new State(SYM);
  return {
    start: Start,
    tokens: assign({
      groups
    }, tk)
  };
}
function run$1(start2, str) {
  const iterable = stringToArray(str.replace(/[A-Z]/g, (c) => c.toLowerCase()));
  const charCount = iterable.length;
  const tokens = [];
  let cursor = 0;
  let charCursor = 0;
  while (charCursor < charCount) {
    let state = start2;
    let nextState = null;
    let tokenLength = 0;
    let latestAccepting = null;
    let sinceAccepts = -1;
    let charsSinceAccepts = -1;
    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {
      state = nextState;
      if (state.accepts()) {
        sinceAccepts = 0;
        charsSinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts += iterable[charCursor].length;
        charsSinceAccepts++;
      }
      tokenLength += iterable[charCursor].length;
      cursor += iterable[charCursor].length;
      charCursor++;
    }
    cursor -= sinceAccepts;
    charCursor -= charsSinceAccepts;
    tokenLength -= sinceAccepts;
    tokens.push({
      t: latestAccepting.t,
      // token type/name
      v: str.slice(cursor - tokenLength, cursor),
      // string value
      s: cursor - tokenLength,
      // start index
      e: cursor
      // end index (excluding)
    });
  }
  return tokens;
}
function stringToArray(str) {
  const result = [];
  const len = str.length;
  let index5 = 0;
  while (index5 < len) {
    let first = str.charCodeAt(index5);
    let second;
    let char = first < 55296 || first > 56319 || index5 + 1 === len || (second = str.charCodeAt(index5 + 1)) < 56320 || second > 57343 ? str[index5] : str.slice(index5, index5 + 2);
    result.push(char);
    index5 += char.length;
  }
  return result;
}
function fastts(state, input, t, defaultt, jr) {
  let next;
  const len = input.length;
  for (let i = 0; i < len - 1; i++) {
    const char = input[i];
    if (state.j[char]) {
      next = state.j[char];
    } else {
      next = new State(defaultt);
      next.jr = jr.slice();
      state.j[char] = next;
    }
    state = next;
  }
  next = new State(t);
  next.jr = jr.slice();
  state.j[input[len - 1]] = next;
  return next;
}
function decodeTlds(encoded) {
  const words = [];
  const stack = [];
  let i = 0;
  let digits = "0123456789";
  while (i < encoded.length) {
    let popDigitCount = 0;
    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {
      popDigitCount++;
    }
    if (popDigitCount > 0) {
      words.push(stack.join(""));
      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {
        stack.pop();
      }
      i += popDigitCount;
    } else {
      stack.push(encoded[i]);
      i++;
    }
  }
  return words;
}
var defaults = {
  defaultProtocol: "http",
  events: null,
  format: noop2,
  formatHref: noop2,
  nl2br: false,
  tagName: "a",
  target: null,
  rel: null,
  validate: true,
  truncate: Infinity,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function Options(opts, defaultRender = null) {
  let o = assign({}, defaults);
  if (opts) {
    o = assign(o, opts instanceof Options ? opts.o : opts);
  }
  const ignoredTags = o.ignoreTags;
  const uppercaseIgnoredTags = [];
  for (let i = 0; i < ignoredTags.length; i++) {
    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());
  }
  this.o = o;
  if (defaultRender) {
    this.defaultRender = defaultRender;
  }
  this.ignoreTags = uppercaseIgnoredTags;
}
Options.prototype = {
  o: defaults,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(ir) {
    return ir;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(token) {
    return this.get("validate", token.toString(), token);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(key, operator, token) {
    const isCallable = operator != null;
    let option = this.o[key];
    if (!option) {
      return option;
    }
    if (typeof option === "object") {
      option = token.t in option ? option[token.t] : defaults[key];
      if (typeof option === "function" && isCallable) {
        option = option(operator, token);
      }
    } else if (typeof option === "function" && isCallable) {
      option = option(operator, token.t, token);
    }
    return option;
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(key, operator, token) {
    let obj = this.o[key];
    if (typeof obj === "function" && operator != null) {
      obj = obj(operator, token.t, token);
    }
    return obj;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(token) {
    const ir = token.render(this);
    const renderFn = this.get("render", null, token) || this.defaultRender;
    return renderFn(ir, token.t, token);
  }
};
function noop2(val) {
  return val;
}
var options = Object.freeze({
  __proto__: null,
  defaults,
  Options,
  assign
});
function MultiToken(value, tokens) {
  this.t = "token";
  this.v = value;
  this.tk = tokens;
}
MultiToken.prototype = {
  isLink: false,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
   */
  toHref(scheme2) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(options2) {
    const val = this.toString();
    const truncate = options2.get("truncate", val, this);
    const formatted = options2.get("format", val, this);
    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + "…" : formatted;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(options2) {
    return options2.get("formatHref", this.toHref(options2.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(protocol = defaults.defaultProtocol) {
    return {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(protocol),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(options2) {
    return {
      type: this.t,
      value: this.toFormattedString(options2),
      isLink: this.isLink,
      href: this.toFormattedHref(options2),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(options2) {
    return options2.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(options2) {
    const token = this;
    const href = this.toHref(options2.get("defaultProtocol"));
    const formattedHref = options2.get("formatHref", href, this);
    const tagName = options2.get("tagName", href, token);
    const content3 = this.toFormattedString(options2);
    const attributes = {};
    const className = options2.get("className", href, token);
    const target = options2.get("target", href, token);
    const rel = options2.get("rel", href, token);
    const attrs = options2.getObj("attributes", href, token);
    const eventListeners = options2.getObj("events", href, token);
    attributes.href = formattedHref;
    if (className) {
      attributes.class = className;
    }
    if (target) {
      attributes.target = target;
    }
    if (rel) {
      attributes.rel = rel;
    }
    if (attrs) {
      assign(attributes, attrs);
    }
    return {
      tagName,
      attributes,
      content: content3,
      eventListeners
    };
  }
};
function createTokenClass(type, props) {
  class Token extends MultiToken {
    constructor(value, tokens) {
      super(value, tokens);
      this.t = type;
    }
  }
  for (const p in props) {
    Token.prototype[p] = props[p];
  }
  Token.t = type;
  return Token;
}
var Email = createTokenClass("email", {
  isLink: true,
  toHref() {
    return "mailto:" + this.toString();
  }
});
var Text = createTokenClass("text");
var Nl = createTokenClass("nl");
var Url = createTokenClass("url", {
  isLink: true,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(scheme2 = defaults.defaultProtocol) {
    return this.hasProtocol() ? this.v : `${scheme2}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const tokens = this.tk;
    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;
  }
});
var multi = Object.freeze({
  __proto__: null,
  MultiToken,
  Base: MultiToken,
  createTokenClass,
  Email,
  Text,
  Nl,
  Url
});
var makeState = (arg) => new State(arg);
function init$1({
  groups
}) {
  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);
  const qsNonAccepting = [COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];
  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];
  const Start = makeState();
  const Localpart = tt(Start, TILDE);
  ta(Localpart, localpartAccepting, Localpart);
  ta(Localpart, groups.domain, Localpart);
  const Domain = makeState(), Scheme = makeState(), SlashScheme = makeState();
  ta(Start, groups.domain, Domain);
  ta(Start, groups.scheme, Scheme);
  ta(Start, groups.slashscheme, SlashScheme);
  ta(Domain, localpartAccepting, Localpart);
  ta(Domain, groups.domain, Domain);
  const LocalpartAt = tt(Domain, AT);
  tt(Localpart, AT, LocalpartAt);
  tt(Scheme, AT, LocalpartAt);
  tt(SlashScheme, AT, LocalpartAt);
  const LocalpartDot = tt(Localpart, DOT);
  ta(LocalpartDot, localpartAccepting, Localpart);
  ta(LocalpartDot, groups.domain, Localpart);
  const EmailDomain = makeState();
  ta(LocalpartAt, groups.domain, EmailDomain);
  ta(EmailDomain, groups.domain, EmailDomain);
  const EmailDomainDot = tt(EmailDomain, DOT);
  ta(EmailDomainDot, groups.domain, EmailDomain);
  const Email$1 = makeState(Email);
  ta(EmailDomainDot, groups.tld, Email$1);
  ta(EmailDomainDot, groups.utld, Email$1);
  tt(LocalpartAt, LOCALHOST, Email$1);
  const EmailDomainHyphen = tt(EmailDomain, HYPHEN);
  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);
  ta(EmailDomainHyphen, groups.domain, EmailDomain);
  ta(Email$1, groups.domain, EmailDomain);
  tt(Email$1, DOT, EmailDomainDot);
  tt(Email$1, HYPHEN, EmailDomainHyphen);
  const EmailColon = tt(Email$1, COLON);
  ta(EmailColon, groups.numeric, Email);
  const DomainHyphen = tt(Domain, HYPHEN);
  const DomainDot = tt(Domain, DOT);
  tt(DomainHyphen, HYPHEN, DomainHyphen);
  ta(DomainHyphen, groups.domain, Domain);
  ta(DomainDot, localpartAccepting, Localpart);
  ta(DomainDot, groups.domain, Domain);
  const DomainDotTld = makeState(Url);
  ta(DomainDot, groups.tld, DomainDotTld);
  ta(DomainDot, groups.utld, DomainDotTld);
  ta(DomainDotTld, groups.domain, Domain);
  ta(DomainDotTld, localpartAccepting, Localpart);
  tt(DomainDotTld, DOT, DomainDot);
  tt(DomainDotTld, HYPHEN, DomainHyphen);
  tt(DomainDotTld, AT, LocalpartAt);
  const DomainDotTldColon = tt(DomainDotTld, COLON);
  const DomainDotTldColonPort = makeState(Url);
  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);
  const Url$1 = makeState(Url);
  const UrlNonaccept = makeState();
  ta(Url$1, qsAccepting, Url$1);
  ta(Url$1, qsNonAccepting, UrlNonaccept);
  ta(UrlNonaccept, qsAccepting, Url$1);
  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);
  tt(DomainDotTld, SLASH, Url$1);
  tt(DomainDotTldColonPort, SLASH, Url$1);
  const SchemeColon = tt(Scheme, COLON);
  const SlashSchemeColon = tt(SlashScheme, COLON);
  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH);
  const UriPrefix = tt(SlashSchemeColonSlash, SLASH);
  ta(Scheme, groups.domain, Domain);
  tt(Scheme, DOT, DomainDot);
  tt(Scheme, HYPHEN, DomainHyphen);
  ta(SlashScheme, groups.domain, Domain);
  tt(SlashScheme, DOT, DomainDot);
  tt(SlashScheme, HYPHEN, DomainHyphen);
  ta(SchemeColon, groups.domain, Url$1);
  tt(SchemeColon, SLASH, Url$1);
  tt(SchemeColon, QUERY, Url$1);
  ta(UriPrefix, groups.domain, Url$1);
  ta(UriPrefix, qsAccepting, Url$1);
  tt(UriPrefix, SLASH, Url$1);
  const bracketPairs = [
    [OPENBRACE, CLOSEBRACE],
    // {}
    [OPENBRACKET, CLOSEBRACKET],
    // []
    [OPENPAREN, CLOSEPAREN],
    // ()
    [OPENANGLEBRACKET, CLOSEANGLEBRACKET],
    // <>
    [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],
    // （）
    [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],
    // 「」
    [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],
    // 『』
    [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN]
    // ＜＞
  ];
  for (let i = 0; i < bracketPairs.length; i++) {
    const [OPEN, CLOSE] = bracketPairs[i];
    const UrlOpen = tt(Url$1, OPEN);
    tt(UrlNonaccept, OPEN, UrlOpen);
    tt(UrlOpen, CLOSE, Url$1);
    const UrlOpenQ = makeState(Url);
    ta(UrlOpen, qsAccepting, UrlOpenQ);
    const UrlOpenSyms = makeState();
    ta(UrlOpen, qsNonAccepting);
    ta(UrlOpenQ, qsAccepting, UrlOpenQ);
    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);
    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);
    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);
    tt(UrlOpenQ, CLOSE, Url$1);
    tt(UrlOpenSyms, CLOSE, Url$1);
  }
  tt(Start, LOCALHOST, DomainDotTld);
  tt(Start, NL, Nl);
  return {
    start: Start,
    tokens: tk
  };
}
function run(start2, input, tokens) {
  let len = tokens.length;
  let cursor = 0;
  let multis = [];
  let textTokens = [];
  while (cursor < len) {
    let state = start2;
    let secondState = null;
    let nextState = null;
    let multiLength = 0;
    let latestAccepting = null;
    let sinceAccepts = -1;
    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {
      textTokens.push(tokens[cursor++]);
    }
    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {
      secondState = null;
      state = nextState;
      if (state.accepts()) {
        sinceAccepts = 0;
        latestAccepting = state;
      } else if (sinceAccepts >= 0) {
        sinceAccepts++;
      }
      cursor++;
      multiLength++;
    }
    if (sinceAccepts < 0) {
      cursor -= multiLength;
      if (cursor < len) {
        textTokens.push(tokens[cursor]);
        cursor++;
      }
    } else {
      if (textTokens.length > 0) {
        multis.push(initMultiToken(Text, input, textTokens));
        textTokens = [];
      }
      cursor -= sinceAccepts;
      multiLength -= sinceAccepts;
      const Multi = latestAccepting.t;
      const subtokens = tokens.slice(cursor - multiLength, cursor);
      multis.push(initMultiToken(Multi, input, subtokens));
    }
  }
  if (textTokens.length > 0) {
    multis.push(initMultiToken(Text, input, textTokens));
  }
  return multis;
}
function initMultiToken(Multi, input, tokens) {
  const startIdx = tokens[0].s;
  const endIdx = tokens[tokens.length - 1].e;
  const value = input.slice(startIdx, endIdx);
  return new Multi(value, tokens);
}
var INIT = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: false
};
function init() {
  INIT.scanner = init$2(INIT.customSchemes);
  for (let i = 0; i < INIT.tokenQueue.length; i++) {
    INIT.tokenQueue[i][1]({
      scanner: INIT.scanner
    });
  }
  INIT.parser = init$1(INIT.scanner.tokens);
  for (let i = 0; i < INIT.pluginQueue.length; i++) {
    INIT.pluginQueue[i][1]({
      scanner: INIT.scanner,
      parser: INIT.parser
    });
  }
  INIT.initialized = true;
  return INIT;
}
function tokenize(str) {
  if (!INIT.initialized) {
    init();
  }
  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));
}
tokenize.scan = run$1;
function find(str, type = null, opts = null) {
  if (type && typeof type === "object") {
    if (opts) {
      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);
    }
    opts = type;
    type = null;
  }
  const options2 = new Options(opts);
  const tokens = tokenize(str);
  const filtered = [];
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    if (token.isLink && (!type || token.t === type) && options2.check(token)) {
      filtered.push(token.toFormattedObject(options2));
    }
  }
  return filtered;
}
function test(str, type = null) {
  const tokens = tokenize(str);
  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);
}

// node_modules/stream-chat-react/dist/components/Attachment/UnsupportedAttachment.js
var import_react37 = __toESM(require_react());
var UnsupportedAttachment = function(_a) {
  var _b;
  var attachment = _a.attachment;
  return import_react37.default.createElement(
    "div",
    null,
    import_react37.default.createElement(
      "div",
      null,
      "Unsupported attachment type ",
      import_react37.default.createElement("strong", null, (_b = attachment.type) !== null && _b !== void 0 ? _b : "unknown")
    ),
    import_react37.default.createElement("code", null, JSON.stringify(attachment, null, 4)),
    ";"
  );
};
var NullComponent = function() {
  return null;
};

// node_modules/stream-chat-react/dist/components/Attachment/AttachmentContainer.js
var AttachmentWithinContainer = function(_a) {
  var _b;
  var _c;
  var attachment = _a.attachment, children = _a.children, componentType = _a.componentType;
  var isGAT = isGalleryAttachmentType(attachment);
  var extra = "";
  if (!isGAT) {
    extra = componentType === "card" && !(attachment === null || attachment === void 0 ? void 0 : attachment.image_url) && !(attachment === null || attachment === void 0 ? void 0 : attachment.thumb_url) ? "no-image" : ((_c = attachment === null || attachment === void 0 ? void 0 : attachment.actions) === null || _c === void 0 ? void 0 : _c.length) ? "actions" : "";
  }
  var classNames = clsx_default("str-chat__message-attachment str-chat__message-attachment-dynamic-size", (_b = {}, _b["str-chat__message-attachment--".concat(componentType)] = componentType, _b["str-chat__message-attachment--".concat(attachment === null || attachment === void 0 ? void 0 : attachment.type)] = attachment === null || attachment === void 0 ? void 0 : attachment.type, _b["str-chat__message-attachment--".concat(componentType, "--").concat(extra)] = componentType && extra, _b["str-chat__message-attachment--svg-image"] = isSvgAttachment(attachment), _b["str-chat__message-attachment-with-actions"] = extra === "actions", _b));
  return import_react38.default.createElement("div", { className: classNames }, children);
};
var AttachmentActionsContainer = function(_a) {
  var _b;
  var actionHandler = _a.actionHandler, attachment = _a.attachment, _c = _a.AttachmentActions, AttachmentActions2 = _c === void 0 ? AttachmentActions : _c;
  if (!((_b = attachment.actions) === null || _b === void 0 ? void 0 : _b.length))
    return null;
  return import_react38.default.createElement(AttachmentActions2, __assign({}, attachment, { actionHandler, actions: attachment.actions, id: attachment.id || "", text: attachment.text || "" }));
};
function getCssDimensionsVariables(url) {
  var cssVars = {
    "--original-height": 1e6,
    "--original-width": 1e6
  };
  if (test(url, "url")) {
    var urlParams = new URL(url).searchParams;
    var oh = Number(urlParams.get("oh"));
    var ow = Number(urlParams.get("ow"));
    var originalHeight = oh > 1 ? oh : 1e6;
    var originalWidth = ow > 1 ? ow : 1e6;
    cssVars["--original-width"] = originalWidth;
    cssVars["--original-height"] = originalHeight;
  }
  return cssVars;
}
var GalleryContainer = function(_a) {
  var attachment = _a.attachment, _b = _a.Gallery, Gallery2 = _b === void 0 ? Gallery : _b;
  var imageElements = (0, import_react38.useRef)([]);
  var imageAttachmentSizeHandler = useChannelStateContext().imageAttachmentSizeHandler;
  var _c = (0, import_react38.useState)([]), attachmentConfigurations = _c[0], setAttachmentConfigurations = _c[1];
  (0, import_react38.useLayoutEffect)(function() {
    if (imageElements.current && imageElements.current.every(function(element3) {
      return !!element3;
    }) && imageAttachmentSizeHandler) {
      var newConfigurations_1 = [];
      imageElements.current.forEach(function(element3, i) {
        var config = imageAttachmentSizeHandler(attachment.images[i], element3);
        newConfigurations_1.push(config);
      });
      setAttachmentConfigurations(newConfigurations_1);
    }
  }, [imageElements, imageAttachmentSizeHandler, attachment]);
  var images = attachment.images.map(function(image2, i) {
    var _a2, _b2, _c2;
    return __assign(__assign({}, image2), { previewUrl: ((_a2 = attachmentConfigurations[i]) === null || _a2 === void 0 ? void 0 : _a2.url) || "about:blank", style: getCssDimensionsVariables(((_b2 = attachment.images[i]) === null || _b2 === void 0 ? void 0 : _b2.image_url) || ((_c2 = attachment.images[i]) === null || _c2 === void 0 ? void 0 : _c2.thumb_url) || "") });
  });
  return import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType: "gallery" },
    import_react38.default.createElement(Gallery2, { images: images || [], innerRefs: imageElements, key: "gallery" })
  );
};
var ImageContainer = function(props) {
  var attachment = props.attachment, _a = props.Image, Image = _a === void 0 ? ImageComponent : _a;
  var componentType = "image";
  var imageElement = (0, import_react38.useRef)(null);
  var imageAttachmentSizeHandler = useChannelStateContext().imageAttachmentSizeHandler;
  var _b = (0, import_react38.useState)(void 0), attachmentConfiguration = _b[0], setAttachmentConfiguration = _b[1];
  (0, import_react38.useLayoutEffect)(function() {
    if (imageElement.current && imageAttachmentSizeHandler) {
      var config = imageAttachmentSizeHandler(attachment, imageElement.current);
      setAttachmentConfiguration(config);
    }
  }, [imageElement, imageAttachmentSizeHandler, attachment]);
  var imageConfig = __assign(__assign({}, attachment), { previewUrl: (attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.url) || "about:blank", style: getCssDimensionsVariables(attachment.image_url || attachment.thumb_url || "") });
  if (attachment.actions && attachment.actions.length) {
    return import_react38.default.createElement(
      AttachmentWithinContainer,
      { attachment, componentType },
      import_react38.default.createElement(
        "div",
        { className: "str-chat__attachment" },
        import_react38.default.createElement(Image, __assign({}, imageConfig, { innerRef: imageElement })),
        import_react38.default.createElement(AttachmentActionsContainer, __assign({}, props))
      )
    );
  }
  return import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType },
    import_react38.default.createElement(Image, __assign({}, imageConfig, { innerRef: imageElement }))
  );
};
var CardContainer = function(props) {
  var attachment = props.attachment, _a = props.Card, Card2 = _a === void 0 ? Card : _a;
  var componentType = "card";
  if (attachment.actions && attachment.actions.length) {
    return import_react38.default.createElement(
      AttachmentWithinContainer,
      { attachment, componentType },
      import_react38.default.createElement(
        "div",
        { className: "str-chat__attachment" },
        import_react38.default.createElement(Card2, __assign({}, attachment)),
        import_react38.default.createElement(AttachmentActionsContainer, __assign({}, props))
      )
    );
  }
  return import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType },
    import_react38.default.createElement(Card2, __assign({}, attachment))
  );
};
var FileContainer = function(_a) {
  var attachment = _a.attachment, _b = _a.File, File2 = _b === void 0 ? FileAttachment : _b;
  if (!attachment.asset_url)
    return null;
  return import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType: "file" },
    import_react38.default.createElement(File2, { attachment })
  );
};
var AudioContainer = function(_a) {
  var attachment = _a.attachment, _b = _a.Audio, Audio2 = _b === void 0 ? Audio : _b;
  return import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType: "audio" },
    import_react38.default.createElement(
      "div",
      { className: "str-chat__attachment" },
      import_react38.default.createElement(Audio2, { og: attachment })
    )
  );
};
var MediaContainer = function(props) {
  var _a;
  var attachment = props.attachment, _b = props.Media, Media = _b === void 0 ? import_react_player3.default : _b;
  var componentType = "media";
  var _c = useChannelStateContext(), shouldGenerateVideoThumbnail = _c.shouldGenerateVideoThumbnail, videoAttachmentSizeHandler = _c.videoAttachmentSizeHandler;
  var videoElement = (0, import_react38.useRef)(null);
  var _d = (0, import_react38.useState)(), attachmentConfiguration = _d[0], setAttachmentConfiguration = _d[1];
  (0, import_react38.useLayoutEffect)(function() {
    if (videoElement.current && videoAttachmentSizeHandler) {
      var config = videoAttachmentSizeHandler(attachment, videoElement.current, shouldGenerateVideoThumbnail);
      setAttachmentConfiguration(config);
    }
  }, [videoElement, videoAttachmentSizeHandler, attachment]);
  var content3 = import_react38.default.createElement(
    "div",
    { className: "str-chat__player-wrapper", "data-testid": "video-wrapper", ref: videoElement, style: getCssDimensionsVariables(attachment.thumb_url || "") },
    import_react38.default.createElement(Media, { className: "react-player", config: { file: { attributes: { poster: attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.thumbUrl } } }, controls: true, height: "100%", url: attachmentConfiguration === null || attachmentConfiguration === void 0 ? void 0 : attachmentConfiguration.url, width: "100%" })
  );
  return ((_a = attachment.actions) === null || _a === void 0 ? void 0 : _a.length) ? import_react38.default.createElement(
    AttachmentWithinContainer,
    { attachment, componentType },
    import_react38.default.createElement(
      "div",
      { className: "str-chat__attachment str-chat__attachment-media" },
      content3,
      import_react38.default.createElement(AttachmentActionsContainer, __assign({}, props))
    )
  ) : import_react38.default.createElement(AttachmentWithinContainer, { attachment, componentType }, content3);
};
var UnsupportedAttachmentContainer = function(_a) {
  var attachment = _a.attachment, _b = _a.UnsupportedAttachment, UnsupportedAttachment2 = _b === void 0 ? NullComponent : _b;
  return import_react38.default.createElement(
    import_react38.default.Fragment,
    null,
    import_react38.default.createElement(UnsupportedAttachment2, { attachment })
  );
};

// node_modules/stream-chat-react/dist/components/Attachment/Attachment.js
var CONTAINER_MAP = {
  audio: AudioContainer,
  card: CardContainer,
  file: FileContainer,
  media: MediaContainer,
  unsupported: UnsupportedAttachmentContainer
};
var ATTACHMENT_GROUPS_ORDER = [
  "card",
  "gallery",
  "image",
  "media",
  "audio",
  "file",
  "unsupported"
];
var Attachment = function(props) {
  var attachments = props.attachments;
  var groupedAttachments = (0, import_react39.useMemo)(function() {
    return renderGroupedAttachments(props);
  }, [attachments]);
  return import_react39.default.createElement("div", { className: "str-chat__attachment-list" }, ATTACHMENT_GROUPS_ORDER.reduce(function(acc, groupName) {
    return __spreadArray(__spreadArray([], acc, true), groupedAttachments[groupName], true);
  }, []));
};
var renderGroupedAttachments = function(_a) {
  var attachments = _a.attachments, rest = __rest(_a, ["attachments"]);
  var uploadedImages = attachments.filter(function(attachment) {
    return isUploadedImage(attachment);
  });
  var containers = attachments.filter(function(attachment) {
    return !isUploadedImage(attachment);
  }).reduce(function(typeMap, attachment) {
    var attachmentType = getAttachmentType(attachment);
    var Container = CONTAINER_MAP[attachmentType];
    typeMap[attachmentType].push(import_react39.default.createElement(Container, __assign({ key: "".concat(attachmentType, "-").concat(typeMap[attachmentType].length) }, rest, { attachment })));
    return typeMap;
  }, {
    audio: [],
    card: [],
    file: [],
    media: [],
    unsupported: [],
    // not used in reduce
    // eslint-disable-next-line sort-keys
    image: [],
    // eslint-disable-next-line sort-keys
    gallery: []
  });
  if (uploadedImages.length > 1) {
    containers["gallery"] = [
      import_react39.default.createElement(GalleryContainer, __assign({ key: "gallery-container" }, rest, { attachment: {
        images: uploadedImages,
        type: "gallery"
      } }))
    ];
  } else if (uploadedImages.length === 1) {
    containers["image"] = [
      import_react39.default.createElement(ImageContainer, __assign({ key: "image-container" }, rest, { attachment: uploadedImages[0] }))
    ];
  }
  return containers;
};
var getAttachmentType = function(attachment) {
  if (isScrapedContent(attachment)) {
    return "card";
  } else if (isMediaAttachment(attachment)) {
    return "media";
  } else if (isAudioAttachment(attachment)) {
    return "audio";
  } else if (isFileAttachment(attachment)) {
    return "file";
  }
  return "unsupported";
};

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Item.js
var import_react40 = __toESM(require_react());
var Item = import_react40.default.forwardRef(function Item2(props, innerRef) {
  var className = props.className, Component = props.component, item = props.item, onClickHandler = props.onClickHandler, onSelectHandler = props.onSelectHandler, selected = props.selected, style = props.style;
  var themeVersion = useChatContext("SuggestionItem").themeVersion;
  var selectItem = (0, import_react40.useCallback)(function() {
    return onSelectHandler(item);
  }, [item, onClickHandler]);
  if (themeVersion === "2")
    return import_react40.default.createElement(
      "li",
      { className: clsx_default(className, { "str-chat__suggestion-item--selected": selected }), style },
      import_react40.default.createElement(
        "a",
        { href: "", onClick: onClickHandler, onFocus: selectItem, onMouseEnter: selectItem, ref: innerRef },
        import_react40.default.createElement(Component, { entity: item, selected })
      )
    );
  return import_react40.default.createElement(
    "li",
    { className: clsx_default("rta__item", className), style },
    import_react40.default.createElement(
      "button",
      { className: clsx_default("rta__entity", { "rta__entity--selected": selected }), onClick: onClickHandler, onFocus: selectItem, onMouseEnter: selectItem, ref: innerRef },
      import_react40.default.createElement(
        "div",
        { tabIndex: -1 },
        import_react40.default.createElement(Component, { entity: item, selected })
      )
    )
  );
});

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/List.js
var import_react48 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Header.js
var import_react41 = __toESM(require_react());
var DefaultSuggestionListHeader = function(props) {
  var currentTrigger = props.currentTrigger, value = props.value;
  var t = useTranslationContext("DefaultSuggestionListHeader").t;
  var triggerIndex = value.lastIndexOf(currentTrigger);
  if (currentTrigger === "/") {
    return import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      t("Commands matching"),
      " ",
      import_react41.default.createElement("strong", null, value.slice(triggerIndex + 1))
    );
  }
  if (currentTrigger === ":") {
    return import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      t("Emoji matching"),
      " ",
      import_react41.default.createElement("strong", null, value.slice(triggerIndex + 1))
    );
  }
  if (currentTrigger === "@") {
    return import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      t("People matching"),
      " ",
      import_react41.default.createElement("strong", null, value.slice(triggerIndex + 1))
    );
  }
  return null;
};

// node_modules/stream-chat-react/dist/components/Message/renderText/regex.js
function escapeRegExp(text5) {
  return text5.replace(/[-[\]{}()*+?.,/\\^$|#]/g, "\\$&");
}
var detectHttp = /(http(s?):\/\/)?(www\.)?/;
var messageCodeBlocks = function(message) {
  var codeRegex = /```[a-z]*\n[\s\S]*?\n```|`[a-z]*[\s\S]*?`/gm;
  var matches = message.match(codeRegex);
  return matches || [];
};
var matchMarkdownLinks = function(message) {
  var regexMdLinks = /\[([^[]+)\](\(.*\))/gm;
  var matches = message.match(regexMdLinks);
  var singleMatch = /\[([^[]+)\]\((.*)\)/;
  var links = matches ? matches.map(function(match) {
    var i = singleMatch.exec(match);
    return i && [i[1], i[2]];
  }) : [];
  return links.flat();
};

// node_modules/unist-util-is/lib/index.js
var convert = (
  /**
   * @type {(
   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {AssertAnything}
   */
  function(test2) {
    if (test2 === void 0 || test2 === null) {
      return ok;
    }
    if (typeof test2 === "string") {
      return typeFactory(test2);
    }
    if (typeof test2 === "object") {
      return Array.isArray(test2) ? anyFactory(test2) : propsFactory(test2);
    }
    if (typeof test2 === "function") {
      return castFactory(test2);
    }
    throw new Error("Expected function, string, or object as test");
  }
);
function anyFactory(tests) {
  const checks2 = [];
  let index5 = -1;
  while (++index5 < tests.length) {
    checks2[index5] = convert(tests[index5]);
  }
  return castFactory(any);
  function any(...parameters) {
    let index6 = -1;
    while (++index6 < checks2.length) {
      if (checks2[index6].call(this, ...parameters))
        return true;
    }
    return false;
  }
}
function propsFactory(check) {
  return castFactory(all3);
  function all3(node2) {
    let key;
    for (key in check) {
      if (node2[key] !== check[key])
        return false;
    }
    return true;
  }
}
function typeFactory(check) {
  return castFactory(type);
  function type(node2) {
    return node2 && node2.type === check;
  }
}
function castFactory(check) {
  return assertion;
  function assertion(node2, ...parameters) {
    return Boolean(
      node2 && typeof node2 === "object" && "type" in node2 && // @ts-expect-error: fine.
      Boolean(check.call(this, node2, ...parameters))
    );
  }
}
function ok() {
  return true;
}

// node_modules/unist-util-visit-parents/lib/color.browser.js
function color(d) {
  return d;
}

// node_modules/unist-util-visit-parents/lib/index.js
var CONTINUE = true;
var EXIT = false;
var SKIP = "skip";
var visitParents = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor<Node>} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(tree, test2, visitor3, reverse) {
    if (typeof test2 === "function" && typeof visitor3 !== "function") {
      reverse = visitor3;
      visitor3 = test2;
      test2 = null;
    }
    const is3 = convert(test2);
    const step = reverse ? -1 : 1;
    factory(tree, void 0, [])();
    function factory(node2, index5, parents) {
      const value = node2 && typeof node2 === "object" ? node2 : {};
      if (typeof value.type === "string") {
        const name = (
          // `hast`
          typeof value.tagName === "string" ? value.tagName : (
            // `xast`
            typeof value.name === "string" ? value.name : void 0
          )
        );
        Object.defineProperty(visit2, "name", {
          value: "node (" + color(node2.type + (name ? "<" + name + ">" : "")) + ")"
        });
      }
      return visit2;
      function visit2() {
        let result = [];
        let subresult;
        let offset2;
        let grandparents;
        if (!test2 || is3(node2, index5, parents[parents.length - 1] || null)) {
          result = toResult(visitor3(node2, parents));
          if (result[0] === EXIT) {
            return result;
          }
        }
        if (node2.children && result[0] !== SKIP) {
          offset2 = (reverse ? node2.children.length : -1) + step;
          grandparents = parents.concat(node2);
          while (offset2 > -1 && offset2 < node2.children.length) {
            subresult = factory(node2.children[offset2], offset2, grandparents)();
            if (subresult[0] === EXIT) {
              return subresult;
            }
            offset2 = typeof subresult[1] === "number" ? subresult[1] : offset2 + step;
          }
        }
        return result;
      }
    }
  }
);
function toResult(value) {
  if (Array.isArray(value)) {
    return value;
  }
  if (typeof value === "number") {
    return [CONTINUE, value];
  }
  return [value];
}

// node_modules/hast-util-is-element/index.js
var convertElement = (
  /**
   * @type {(
   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &
   *   ((test?: Test) => AssertAnything)
   * )}
   */
  /**
   * @param {Test | null | undefined} [test]
   * @returns {AssertAnything}
   */
  function(test2) {
    if (test2 === void 0 || test2 === null) {
      return element;
    }
    if (typeof test2 === "string") {
      return tagNameFactory(test2);
    }
    if (typeof test2 === "object") {
      return anyFactory2(test2);
    }
    if (typeof test2 === "function") {
      return castFactory2(test2);
    }
    throw new Error("Expected function, string, or array as test");
  }
);
function anyFactory2(tests) {
  const checks2 = [];
  let index5 = -1;
  while (++index5 < tests.length) {
    checks2[index5] = convertElement(tests[index5]);
  }
  return castFactory2(any);
  function any(...parameters) {
    let index6 = -1;
    while (++index6 < checks2.length) {
      if (checks2[index6].call(this, ...parameters)) {
        return true;
      }
    }
    return false;
  }
}
function tagNameFactory(check) {
  return tagName;
  function tagName(node2) {
    return element(node2) && node2.tagName === check;
  }
}
function castFactory2(check) {
  return assertion;
  function assertion(node2, ...parameters) {
    return element(node2) && Boolean(check.call(this, node2, ...parameters));
  }
}
function element(node2) {
  return Boolean(
    node2 && typeof node2 === "object" && // @ts-expect-error Looks like a node.
    node2.type === "element" && // @ts-expect-error Looks like an element.
    typeof node2.tagName === "string"
  );
}

// node_modules/escape-string-regexp/index.js
function escapeStringRegexp(string3) {
  if (typeof string3 !== "string") {
    throw new TypeError("Expected a string");
  }
  return string3.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}

// node_modules/hast-util-find-and-replace/lib/index.js
var own = {}.hasOwnProperty;
var defaultIgnore = ["math", "script", "style", "svg", "title"];
function findAndReplace(tree, find4, replace2, options2) {
  let settings;
  let schema;
  if (typeof find4 === "string" || find4 instanceof RegExp) {
    schema = [[find4, replace2]];
    settings = options2;
  } else {
    schema = find4;
    settings = replace2;
  }
  if (!settings) {
    settings = {};
  }
  const ignored = convertElement(settings.ignore || defaultIgnore);
  const pairs = toPairs(schema);
  let pairIndex = -1;
  while (++pairIndex < pairs.length) {
    visitParents(tree, "text", visitor3);
  }
  return tree;
  function visitor3(node2, parents) {
    let index5 = -1;
    let grandparent;
    while (++index5 < parents.length) {
      const parent = parents[index5];
      if (ignored(
        parent,
        // @ts-expect-error: TS doesn’t understand but it’s perfect.
        grandparent ? grandparent.children.indexOf(parent) : void 0,
        grandparent
      )) {
        return;
      }
      grandparent = parent;
    }
    if (grandparent) {
      return handler(node2, parents);
    }
  }
  function handler(node2, parents) {
    const parent = parents[parents.length - 1];
    const find5 = pairs[pairIndex][0];
    const replace3 = pairs[pairIndex][1];
    let start2 = 0;
    const index5 = parent.children.indexOf(node2);
    let change = false;
    let nodes = [];
    find5.lastIndex = 0;
    let match = find5.exec(node2.value);
    while (match) {
      const position4 = match.index;
      const matchObject = {
        index: match.index,
        input: match.input,
        // @ts-expect-error: stack is fine.
        stack: [...parents, node2]
      };
      let value = replace3(...match, matchObject);
      if (typeof value === "string") {
        value = value.length > 0 ? { type: "text", value } : void 0;
      }
      if (value !== false) {
        if (start2 !== position4) {
          nodes.push({ type: "text", value: node2.value.slice(start2, position4) });
        }
        if (Array.isArray(value)) {
          nodes.push(...value);
        } else if (value) {
          nodes.push(value);
        }
        start2 = position4 + match[0].length;
        change = true;
      }
      if (!find5.global) {
        break;
      }
      match = find5.exec(node2.value);
    }
    if (change) {
      if (start2 < node2.value.length) {
        nodes.push({ type: "text", value: node2.value.slice(start2) });
      }
      parent.children.splice(index5, 1, ...nodes);
    } else {
      nodes = [node2];
    }
    return index5 + nodes.length;
  }
}
function toPairs(schema) {
  const result = [];
  if (typeof schema !== "object") {
    throw new TypeError("Expected array or object as schema");
  }
  if (Array.isArray(schema)) {
    let index5 = -1;
    while (++index5 < schema.length) {
      result.push([
        toExpression(schema[index5][0]),
        toFunction(schema[index5][1])
      ]);
    }
  } else {
    let key;
    for (key in schema) {
      if (own.call(schema, key)) {
        result.push([toExpression(key), toFunction(schema[key])]);
      }
    }
  }
  return result;
}
function toExpression(find4) {
  return typeof find4 === "string" ? new RegExp(escapeStringRegexp(find4), "g") : find4;
}
function toFunction(replace2) {
  return typeof replace2 === "function" ? replace2 : () => replace2;
}

// node_modules/unist-builder/lib/index.js
var u = (
  /**
   * @type {(
   *   (<T extends string>(type: T) => {type: T}) &
   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &
   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &
   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &
   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &
   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)
   * )}
   */
  /**
   * @param {string} type
   * @param {Props | ChildrenOrValue | null | undefined} [props]
   * @param {ChildrenOrValue | null | undefined} [value]
   * @returns {Node}
   */
  function(type, props, value) {
    const node2 = { type: String(type) };
    if ((value === void 0 || value === null) && (typeof props === "string" || Array.isArray(props))) {
      value = props;
    } else {
      Object.assign(node2, props);
    }
    if (Array.isArray(value)) {
      node2.children = value;
    } else if (value !== void 0 && value !== null) {
      node2.value = String(value);
    }
    return node2;
  }
);

// node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/emojiMarkdownPlugin.js
var import_emoji_regex = __toESM(require_emoji_regex());
var emojiMarkdownPlugin = function() {
  var replace2 = function(match) {
    return u("element", { tagName: "emoji" }, [u("text", match)]);
  };
  var transform3 = function(node2) {
    return findAndReplace(node2, (0, import_emoji_regex.default)(), replace2);
  };
  return transform3;
};

// node_modules/unist-util-visit/lib/index.js
var visit = (
  /**
   * @type {(
   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &
   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)
   * )}
   */
  /**
   * @param {Node} tree
   * @param {Test} test
   * @param {Visitor} visitor
   * @param {boolean | null | undefined} [reverse]
   * @returns {void}
   */
  function(tree, test2, visitor3, reverse) {
    if (typeof test2 === "function" && typeof visitor3 !== "function") {
      reverse = visitor3;
      visitor3 = test2;
      test2 = null;
    }
    visitParents(tree, test2, overload, reverse);
    function overload(node2, parents) {
      const parent = parents[parents.length - 1];
      return visitor3(
        node2,
        parent ? parent.children.indexOf(node2) : null,
        parent
      );
    }
  }
);

// node_modules/stream-chat-react/dist/components/Message/renderText/rehypePlugins/mentionsMarkdownPlugin.js
var mentionsMarkdownPlugin = function(mentioned_users) {
  return function() {
    var mentioned_usernames = mentioned_users.map(function(user) {
      return user.name || user.id;
    }).filter(Boolean).map(escapeRegExp);
    var mentionedUsersRegex = new RegExp(mentioned_usernames.map(function(username) {
      return "@".concat(username);
    }).join("|"), "g");
    var replace2 = function(match) {
      var usernameOrId = match.replace("@", "");
      var user = mentioned_users.find(function(_a) {
        var id = _a.id, name = _a.name;
        return name === usernameOrId || id === usernameOrId;
      });
      return u("element", { mentionedUser: user, tagName: "mention" }, [u("text", match)]);
    };
    var transform3 = function(tree) {
      if (!mentioned_usernames.length)
        return tree;
      visit(tree, function(node2, index5, parent) {
        var _a;
        if (index5 === null)
          return;
        if (!parent)
          return;
        var nextChild = parent.children.at(index5 + 1);
        var nextChildHref = (_a = nextChild === null || nextChild === void 0 ? void 0 : nextChild.properties) === null || _a === void 0 ? void 0 : _a.href;
        if (node2.type === "text" && // text value has to have @ sign at the end of the string
        // and no other characters except whitespace can precede it
        // valid cases:   "text @", "@", " @"
        // invalid cases: "text@", "@text",
        /.?\s?@$|^@$/.test(node2.value) && (nextChildHref === null || nextChildHref === void 0 ? void 0 : nextChildHref.startsWith("mailto:"))) {
          var newTextValue = node2.value.replace(/@$/, "");
          var username = nextChildHref.replace("mailto:", "");
          parent.children[index5] = u("text", newTextValue);
          parent.children[index5 + 1] = u("text", "@".concat(username));
        }
      });
      return findAndReplace(tree, mentionedUsersRegex, replace2);
    };
    return transform3;
  };
};

// node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/htmlToTextPlugin.js
var visitor = function(node2) {
  if (node2.type !== "html")
    return;
  node2.type = "text";
};
var transform = function(tree) {
  visit(tree, visitor);
};
var htmlToTextPlugin = function() {
  return transform;
};

// node_modules/stream-chat-react/dist/components/Message/renderText/remarkPlugins/keepLineBreaksPlugin.js
var visitor2 = function(node2, index5, parent) {
  if (index5 === null || index5 === 0)
    return;
  if (!parent)
    return;
  if (!node2.position)
    return;
  var prevSibling = parent.children.at(index5 - 1);
  if (!(prevSibling === null || prevSibling === void 0 ? void 0 : prevSibling.position))
    return;
  if (node2.position.start.line === prevSibling.position.start.line)
    return false;
  var ownStartLine = node2.position.start.line;
  var prevEndLine = prevSibling.position.end.line;
  var countTruncatedLineBreaks = ownStartLine - prevEndLine - 1;
  if (countTruncatedLineBreaks < 1)
    return;
  var lineBreaks = Array.from({ length: countTruncatedLineBreaks }, function() {
    return u("break", { tagName: "br" });
  });
  parent.children = __spreadArray(__spreadArray(__spreadArray([], parent.children.slice(0, index5), true), lineBreaks, true), parent.children.slice(index5), true);
  return;
};
var transform2 = function(tree) {
  visit(tree, visitor2);
};
var keepLineBreaksPlugin = function() {
  return transform2;
};

// node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js
var import_react47 = __toESM(require_react());

// node_modules/react-markdown/lib/uri-transformer.js
var protocols = ["http", "https", "mailto", "tel"];
function uriTransformer(uri) {
  const url = (uri || "").trim();
  const first = url.charAt(0);
  if (first === "#" || first === "/") {
    return url;
  }
  const colon = url.indexOf(":");
  if (colon === -1) {
    return url;
  }
  let index5 = -1;
  while (++index5 < protocols.length) {
    const protocol = protocols[index5];
    if (colon === protocol.length && url.slice(0, protocol.length).toLowerCase() === protocol) {
      return url;
    }
  }
  index5 = url.indexOf("?");
  if (index5 !== -1 && colon > index5) {
    return url;
  }
  index5 = url.indexOf("#");
  if (index5 !== -1 && colon > index5) {
    return url;
  }
  return "javascript:void(0)";
}

// node_modules/react-markdown/lib/react-markdown.js
var import_react43 = __toESM(require_react(), 1);

// node_modules/vfile/lib/index.js
var import_is_buffer = __toESM(require_is_buffer(), 1);

// node_modules/vfile-message/node_modules/unist-util-stringify-position/lib/index.js
function stringifyPosition(value) {
  if (!value || typeof value !== "object") {
    return "";
  }
  if ("position" in value || "type" in value) {
    return position(value.position);
  }
  if ("start" in value || "end" in value) {
    return position(value);
  }
  if ("line" in value || "column" in value) {
    return point(value);
  }
  return "";
}
function point(point5) {
  return index2(point5 && point5.line) + ":" + index2(point5 && point5.column);
}
function position(pos) {
  return point(pos && pos.start) + "-" + point(pos && pos.end);
}
function index2(value) {
  return value && typeof value === "number" ? value : 1;
}

// node_modules/vfile-message/lib/index.js
var VFileMessage = class extends Error {
  /**
   * Create a message for `reason` at `place` from `origin`.
   *
   * When an error is passed in as `reason`, the `stack` is copied.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   *
   *   > 👉 **Note**: you should use markdown.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns
   *   Instance of `VFileMessage`.
   */
  // To do: next major: expose `undefined` everywhere instead of `null`.
  constructor(reason, place, origin) {
    const parts = [null, null];
    let position4 = {
      // @ts-expect-error: we always follows the structure of `position`.
      start: { line: null, column: null },
      // @ts-expect-error: "
      end: { line: null, column: null }
    };
    super();
    if (typeof place === "string") {
      origin = place;
      place = void 0;
    }
    if (typeof origin === "string") {
      const index5 = origin.indexOf(":");
      if (index5 === -1) {
        parts[1] = origin;
      } else {
        parts[0] = origin.slice(0, index5);
        parts[1] = origin.slice(index5 + 1);
      }
    }
    if (place) {
      if ("type" in place || "position" in place) {
        if (place.position) {
          position4 = place.position;
        }
      } else if ("start" in place || "end" in place) {
        position4 = place;
      } else if ("line" in place || "column" in place) {
        position4.start = place;
      }
    }
    this.name = stringifyPosition(place) || "1:1";
    this.message = typeof reason === "object" ? reason.message : reason;
    this.stack = "";
    if (typeof reason === "object" && reason.stack) {
      this.stack = reason.stack;
    }
    this.reason = this.message;
    this.fatal;
    this.line = position4.start.line;
    this.column = position4.start.column;
    this.position = position4;
    this.source = parts[0];
    this.ruleId = parts[1];
    this.file;
    this.actual;
    this.expected;
    this.url;
    this.note;
  }
};
VFileMessage.prototype.file = "";
VFileMessage.prototype.name = "";
VFileMessage.prototype.reason = "";
VFileMessage.prototype.message = "";
VFileMessage.prototype.stack = "";
VFileMessage.prototype.fatal = null;
VFileMessage.prototype.column = null;
VFileMessage.prototype.line = null;
VFileMessage.prototype.source = null;
VFileMessage.prototype.ruleId = null;
VFileMessage.prototype.position = null;

// node_modules/vfile/lib/minpath.browser.js
var path = { basename, dirname, extname, join, sep: "/" };
function basename(path3, ext) {
  if (ext !== void 0 && typeof ext !== "string") {
    throw new TypeError('"ext" argument must be a string');
  }
  assertPath(path3);
  let start2 = 0;
  let end2 = -1;
  let index5 = path3.length;
  let seenNonSlash;
  if (ext === void 0 || ext.length === 0 || ext.length > path3.length) {
    while (index5--) {
      if (path3.charCodeAt(index5) === 47) {
        if (seenNonSlash) {
          start2 = index5 + 1;
          break;
        }
      } else if (end2 < 0) {
        seenNonSlash = true;
        end2 = index5 + 1;
      }
    }
    return end2 < 0 ? "" : path3.slice(start2, end2);
  }
  if (ext === path3) {
    return "";
  }
  let firstNonSlashEnd = -1;
  let extIndex = ext.length - 1;
  while (index5--) {
    if (path3.charCodeAt(index5) === 47) {
      if (seenNonSlash) {
        start2 = index5 + 1;
        break;
      }
    } else {
      if (firstNonSlashEnd < 0) {
        seenNonSlash = true;
        firstNonSlashEnd = index5 + 1;
      }
      if (extIndex > -1) {
        if (path3.charCodeAt(index5) === ext.charCodeAt(extIndex--)) {
          if (extIndex < 0) {
            end2 = index5;
          }
        } else {
          extIndex = -1;
          end2 = firstNonSlashEnd;
        }
      }
    }
  }
  if (start2 === end2) {
    end2 = firstNonSlashEnd;
  } else if (end2 < 0) {
    end2 = path3.length;
  }
  return path3.slice(start2, end2);
}
function dirname(path3) {
  assertPath(path3);
  if (path3.length === 0) {
    return ".";
  }
  let end2 = -1;
  let index5 = path3.length;
  let unmatchedSlash;
  while (--index5) {
    if (path3.charCodeAt(index5) === 47) {
      if (unmatchedSlash) {
        end2 = index5;
        break;
      }
    } else if (!unmatchedSlash) {
      unmatchedSlash = true;
    }
  }
  return end2 < 0 ? path3.charCodeAt(0) === 47 ? "/" : "." : end2 === 1 && path3.charCodeAt(0) === 47 ? "//" : path3.slice(0, end2);
}
function extname(path3) {
  assertPath(path3);
  let index5 = path3.length;
  let end2 = -1;
  let startPart = 0;
  let startDot = -1;
  let preDotState = 0;
  let unmatchedSlash;
  while (index5--) {
    const code3 = path3.charCodeAt(index5);
    if (code3 === 47) {
      if (unmatchedSlash) {
        startPart = index5 + 1;
        break;
      }
      continue;
    }
    if (end2 < 0) {
      unmatchedSlash = true;
      end2 = index5 + 1;
    }
    if (code3 === 46) {
      if (startDot < 0) {
        startDot = index5;
      } else if (preDotState !== 1) {
        preDotState = 1;
      }
    } else if (startDot > -1) {
      preDotState = -1;
    }
  }
  if (startDot < 0 || end2 < 0 || // We saw a non-dot character immediately before the dot.
  preDotState === 0 || // The (right-most) trimmed path component is exactly `..`.
  preDotState === 1 && startDot === end2 - 1 && startDot === startPart + 1) {
    return "";
  }
  return path3.slice(startDot, end2);
}
function join(...segments) {
  let index5 = -1;
  let joined;
  while (++index5 < segments.length) {
    assertPath(segments[index5]);
    if (segments[index5]) {
      joined = joined === void 0 ? segments[index5] : joined + "/" + segments[index5];
    }
  }
  return joined === void 0 ? "." : normalize(joined);
}
function normalize(path3) {
  assertPath(path3);
  const absolute = path3.charCodeAt(0) === 47;
  let value = normalizeString(path3, !absolute);
  if (value.length === 0 && !absolute) {
    value = ".";
  }
  if (value.length > 0 && path3.charCodeAt(path3.length - 1) === 47) {
    value += "/";
  }
  return absolute ? "/" + value : value;
}
function normalizeString(path3, allowAboveRoot) {
  let result = "";
  let lastSegmentLength = 0;
  let lastSlash = -1;
  let dots = 0;
  let index5 = -1;
  let code3;
  let lastSlashIndex;
  while (++index5 <= path3.length) {
    if (index5 < path3.length) {
      code3 = path3.charCodeAt(index5);
    } else if (code3 === 47) {
      break;
    } else {
      code3 = 47;
    }
    if (code3 === 47) {
      if (lastSlash === index5 - 1 || dots === 1) {
      } else if (lastSlash !== index5 - 1 && dots === 2) {
        if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 || result.charCodeAt(result.length - 2) !== 46) {
          if (result.length > 2) {
            lastSlashIndex = result.lastIndexOf("/");
            if (lastSlashIndex !== result.length - 1) {
              if (lastSlashIndex < 0) {
                result = "";
                lastSegmentLength = 0;
              } else {
                result = result.slice(0, lastSlashIndex);
                lastSegmentLength = result.length - 1 - result.lastIndexOf("/");
              }
              lastSlash = index5;
              dots = 0;
              continue;
            }
          } else if (result.length > 0) {
            result = "";
            lastSegmentLength = 0;
            lastSlash = index5;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          result = result.length > 0 ? result + "/.." : "..";
          lastSegmentLength = 2;
        }
      } else {
        if (result.length > 0) {
          result += "/" + path3.slice(lastSlash + 1, index5);
        } else {
          result = path3.slice(lastSlash + 1, index5);
        }
        lastSegmentLength = index5 - lastSlash - 1;
      }
      lastSlash = index5;
      dots = 0;
    } else if (code3 === 46 && dots > -1) {
      dots++;
    } else {
      dots = -1;
    }
  }
  return result;
}
function assertPath(path3) {
  if (typeof path3 !== "string") {
    throw new TypeError(
      "Path must be a string. Received " + JSON.stringify(path3)
    );
  }
}

// node_modules/vfile/lib/minproc.browser.js
var proc = { cwd };
function cwd() {
  return "/";
}

// node_modules/vfile/lib/minurl.shared.js
function isUrl(fileUrlOrPath) {
  return fileUrlOrPath !== null && typeof fileUrlOrPath === "object" && // @ts-expect-error: indexable.
  fileUrlOrPath.href && // @ts-expect-error: indexable.
  fileUrlOrPath.origin;
}

// node_modules/vfile/lib/minurl.browser.js
function urlToPath(path3) {
  if (typeof path3 === "string") {
    path3 = new URL(path3);
  } else if (!isUrl(path3)) {
    const error = new TypeError(
      'The "path" argument must be of type string or an instance of URL. Received `' + path3 + "`"
    );
    error.code = "ERR_INVALID_ARG_TYPE";
    throw error;
  }
  if (path3.protocol !== "file:") {
    const error = new TypeError("The URL must be of scheme file");
    error.code = "ERR_INVALID_URL_SCHEME";
    throw error;
  }
  return getPathFromURLPosix(path3);
}
function getPathFromURLPosix(url) {
  if (url.hostname !== "") {
    const error = new TypeError(
      'File URL host must be "localhost" or empty on darwin'
    );
    error.code = "ERR_INVALID_FILE_URL_HOST";
    throw error;
  }
  const pathname = url.pathname;
  let index5 = -1;
  while (++index5 < pathname.length) {
    if (pathname.charCodeAt(index5) === 37 && pathname.charCodeAt(index5 + 1) === 50) {
      const third = pathname.charCodeAt(index5 + 2);
      if (third === 70 || third === 102) {
        const error = new TypeError(
          "File URL path must not include encoded / characters"
        );
        error.code = "ERR_INVALID_FILE_URL_PATH";
        throw error;
      }
    }
  }
  return decodeURIComponent(pathname);
}

// node_modules/vfile/lib/index.js
var order = ["history", "path", "basename", "stem", "extname", "dirname"];
var VFile = class {
  /**
   * Create a new virtual file.
   *
   * `options` is treated as:
   *
   * *   `string` or `Buffer` — `{value: options}`
   * *   `URL` — `{path: options}`
   * *   `VFile` — shallow copies its data over to the new file
   * *   `object` — all fields are shallow copied over to the new file
   *
   * Path related fields are set in the following order (least specific to
   * most specific): `history`, `path`, `basename`, `stem`, `extname`,
   * `dirname`.
   *
   * You cannot set `dirname` or `extname` without setting either `history`,
   * `path`, `basename`, or `stem` too.
   *
   * @param {Compatible | null | undefined} [value]
   *   File value.
   * @returns
   *   New instance.
   */
  constructor(value) {
    let options2;
    if (!value) {
      options2 = {};
    } else if (typeof value === "string" || buffer(value)) {
      options2 = { value };
    } else if (isUrl(value)) {
      options2 = { path: value };
    } else {
      options2 = value;
    }
    this.data = {};
    this.messages = [];
    this.history = [];
    this.cwd = proc.cwd();
    this.value;
    this.stored;
    this.result;
    this.map;
    let index5 = -1;
    while (++index5 < order.length) {
      const prop2 = order[index5];
      if (prop2 in options2 && options2[prop2] !== void 0 && options2[prop2] !== null) {
        this[prop2] = prop2 === "history" ? [...options2[prop2]] : options2[prop2];
      }
    }
    let prop;
    for (prop in options2) {
      if (!order.includes(prop)) {
        this[prop] = options2[prop];
      }
    }
  }
  /**
   * Get the full path (example: `'~/index.min.js'`).
   *
   * @returns {string}
   */
  get path() {
    return this.history[this.history.length - 1];
  }
  /**
   * Set the full path (example: `'~/index.min.js'`).
   *
   * Cannot be nullified.
   * You can set a file URL (a `URL` object with a `file:` protocol) which will
   * be turned into a path with `url.fileURLToPath`.
   *
   * @param {string | URL} path
   */
  set path(path3) {
    if (isUrl(path3)) {
      path3 = urlToPath(path3);
    }
    assertNonEmpty(path3, "path");
    if (this.path !== path3) {
      this.history.push(path3);
    }
  }
  /**
   * Get the parent path (example: `'~'`).
   */
  get dirname() {
    return typeof this.path === "string" ? path.dirname(this.path) : void 0;
  }
  /**
   * Set the parent path (example: `'~'`).
   *
   * Cannot be set if there’s no `path` yet.
   */
  set dirname(dirname2) {
    assertPath2(this.basename, "dirname");
    this.path = path.join(dirname2 || "", this.basename);
  }
  /**
   * Get the basename (including extname) (example: `'index.min.js'`).
   */
  get basename() {
    return typeof this.path === "string" ? path.basename(this.path) : void 0;
  }
  /**
   * Set basename (including extname) (`'index.min.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set basename(basename2) {
    assertNonEmpty(basename2, "basename");
    assertPart(basename2, "basename");
    this.path = path.join(this.dirname || "", basename2);
  }
  /**
   * Get the extname (including dot) (example: `'.js'`).
   */
  get extname() {
    return typeof this.path === "string" ? path.extname(this.path) : void 0;
  }
  /**
   * Set the extname (including dot) (example: `'.js'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be set if there’s no `path` yet.
   */
  set extname(extname2) {
    assertPart(extname2, "extname");
    assertPath2(this.dirname, "extname");
    if (extname2) {
      if (extname2.charCodeAt(0) !== 46) {
        throw new Error("`extname` must start with `.`");
      }
      if (extname2.includes(".", 1)) {
        throw new Error("`extname` cannot contain multiple dots");
      }
    }
    this.path = path.join(this.dirname, this.stem + (extname2 || ""));
  }
  /**
   * Get the stem (basename w/o extname) (example: `'index.min'`).
   */
  get stem() {
    return typeof this.path === "string" ? path.basename(this.path, this.extname) : void 0;
  }
  /**
   * Set the stem (basename w/o extname) (example: `'index.min'`).
   *
   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
   * on windows).
   * Cannot be nullified (use `file.path = file.dirname` instead).
   */
  set stem(stem) {
    assertNonEmpty(stem, "stem");
    assertPart(stem, "stem");
    this.path = path.join(this.dirname || "", stem + (this.extname || ""));
  }
  /**
   * Serialize the file.
   *
   * @param {BufferEncoding | null | undefined} [encoding='utf8']
   *   Character encoding to understand `value` as when it’s a `Buffer`
   *   (default: `'utf8'`).
   * @returns {string}
   *   Serialized file.
   */
  toString(encoding) {
    return (this.value || "").toString(encoding || void 0);
  }
  /**
   * Create a warning message associated with the file.
   *
   * Its `fatal` is set to `false` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  message(reason, place, origin) {
    const message = new VFileMessage(reason, place, origin);
    if (this.path) {
      message.name = this.path + ":" + message.name;
      message.file = this.path;
    }
    message.fatal = false;
    this.messages.push(message);
    return message;
  }
  /**
   * Create an info message associated with the file.
   *
   * Its `fatal` is set to `null` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {VFileMessage}
   *   Message.
   */
  info(reason, place, origin) {
    const message = this.message(reason, place, origin);
    message.fatal = null;
    return message;
  }
  /**
   * Create a fatal error associated with the file.
   *
   * Its `fatal` is set to `true` and `file` is set to the current file path.
   * Its added to `file.messages`.
   *
   * > 👉 **Note**: a fatal error means that a file is no longer processable.
   *
   * @param {string | Error | VFileMessage} reason
   *   Reason for message, uses the stack and message of the error if given.
   * @param {Node | NodeLike | Position | Point | null | undefined} [place]
   *   Place in file where the message occurred.
   * @param {string | null | undefined} [origin]
   *   Place in code where the message originates (example:
   *   `'my-package:my-rule'` or `'my-rule'`).
   * @returns {never}
   *   Message.
   * @throws {VFileMessage}
   *   Message.
   */
  fail(reason, place, origin) {
    const message = this.message(reason, place, origin);
    message.fatal = true;
    throw message;
  }
};
function assertPart(part, name) {
  if (part && part.includes(path.sep)) {
    throw new Error(
      "`" + name + "` cannot be a path: did not expect `" + path.sep + "`"
    );
  }
}
function assertNonEmpty(part, name) {
  if (!part) {
    throw new Error("`" + name + "` cannot be empty");
  }
}
function assertPath2(path3, name) {
  if (!path3) {
    throw new Error("Setting `" + name + "` requires `path` to be set too");
  }
}
function buffer(value) {
  return (0, import_is_buffer.default)(value);
}

// node_modules/bail/index.js
function bail(error) {
  if (error) {
    throw error;
  }
}

// node_modules/unified/lib/index.js
var import_is_buffer2 = __toESM(require_is_buffer(), 1);
var import_extend = __toESM(require_extend(), 1);

// node_modules/is-plain-obj/index.js
function isPlainObject(value) {
  if (typeof value !== "object" || value === null) {
    return false;
  }
  const prototype = Object.getPrototypeOf(value);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);
}

// node_modules/trough/lib/index.js
function trough() {
  const fns = [];
  const pipeline = { run: run3, use };
  return pipeline;
  function run3(...values2) {
    let middlewareIndex = -1;
    const callback = values2.pop();
    if (typeof callback !== "function") {
      throw new TypeError("Expected function as last argument, not " + callback);
    }
    next(null, ...values2);
    function next(error, ...output) {
      const fn2 = fns[++middlewareIndex];
      let index5 = -1;
      if (error) {
        callback(error);
        return;
      }
      while (++index5 < values2.length) {
        if (output[index5] === null || output[index5] === void 0) {
          output[index5] = values2[index5];
        }
      }
      values2 = output;
      if (fn2) {
        wrap(fn2, next)(...output);
      } else {
        callback(null, ...output);
      }
    }
  }
  function use(middelware) {
    if (typeof middelware !== "function") {
      throw new TypeError(
        "Expected `middelware` to be a function, not " + middelware
      );
    }
    fns.push(middelware);
    return pipeline;
  }
}
function wrap(middleware, callback) {
  let called;
  return wrapped;
  function wrapped(...parameters) {
    const fnExpectsCallback = middleware.length > parameters.length;
    let result;
    if (fnExpectsCallback) {
      parameters.push(done);
    }
    try {
      result = middleware.apply(this, parameters);
    } catch (error) {
      const exception = (
        /** @type {Error} */
        error
      );
      if (fnExpectsCallback && called) {
        throw exception;
      }
      return done(exception);
    }
    if (!fnExpectsCallback) {
      if (result && result.then && typeof result.then === "function") {
        result.then(then, done);
      } else if (result instanceof Error) {
        done(result);
      } else {
        then(result);
      }
    }
  }
  function done(error, ...output) {
    if (!called) {
      called = true;
      callback(error, ...output);
    }
  }
  function then(value) {
    done(null, value);
  }
}

// node_modules/unified/lib/index.js
var unified = base().freeze();
var own2 = {}.hasOwnProperty;
function base() {
  const transformers = trough();
  const attachers = [];
  let namespace = {};
  let frozen;
  let freezeIndex = -1;
  processor.data = data;
  processor.Parser = void 0;
  processor.Compiler = void 0;
  processor.freeze = freeze;
  processor.attachers = attachers;
  processor.use = use;
  processor.parse = parse2;
  processor.stringify = stringify4;
  processor.run = run3;
  processor.runSync = runSync;
  processor.process = process2;
  processor.processSync = processSync;
  return processor;
  function processor() {
    const destination = base();
    let index5 = -1;
    while (++index5 < attachers.length) {
      destination.use(...attachers[index5]);
    }
    destination.data((0, import_extend.default)(true, {}, namespace));
    return destination;
  }
  function data(key, value) {
    if (typeof key === "string") {
      if (arguments.length === 2) {
        assertUnfrozen("data", frozen);
        namespace[key] = value;
        return processor;
      }
      return own2.call(namespace, key) && namespace[key] || null;
    }
    if (key) {
      assertUnfrozen("data", frozen);
      namespace = key;
      return processor;
    }
    return namespace;
  }
  function freeze() {
    if (frozen) {
      return processor;
    }
    while (++freezeIndex < attachers.length) {
      const [attacher, ...options2] = attachers[freezeIndex];
      if (options2[0] === false) {
        continue;
      }
      if (options2[0] === true) {
        options2[0] = void 0;
      }
      const transformer = attacher.call(processor, ...options2);
      if (typeof transformer === "function") {
        transformers.use(transformer);
      }
    }
    frozen = true;
    freezeIndex = Number.POSITIVE_INFINITY;
    return processor;
  }
  function use(value, ...options2) {
    let settings;
    assertUnfrozen("use", frozen);
    if (value === null || value === void 0) {
    } else if (typeof value === "function") {
      addPlugin(value, ...options2);
    } else if (typeof value === "object") {
      if (Array.isArray(value)) {
        addList(value);
      } else {
        addPreset(value);
      }
    } else {
      throw new TypeError("Expected usable value, not `" + value + "`");
    }
    if (settings) {
      namespace.settings = Object.assign(namespace.settings || {}, settings);
    }
    return processor;
    function add(value2) {
      if (typeof value2 === "function") {
        addPlugin(value2);
      } else if (typeof value2 === "object") {
        if (Array.isArray(value2)) {
          const [plugin, ...options3] = value2;
          addPlugin(plugin, ...options3);
        } else {
          addPreset(value2);
        }
      } else {
        throw new TypeError("Expected usable value, not `" + value2 + "`");
      }
    }
    function addPreset(result) {
      addList(result.plugins);
      if (result.settings) {
        settings = Object.assign(settings || {}, result.settings);
      }
    }
    function addList(plugins) {
      let index5 = -1;
      if (plugins === null || plugins === void 0) {
      } else if (Array.isArray(plugins)) {
        while (++index5 < plugins.length) {
          const thing = plugins[index5];
          add(thing);
        }
      } else {
        throw new TypeError("Expected a list of plugins, not `" + plugins + "`");
      }
    }
    function addPlugin(plugin, value2) {
      let index5 = -1;
      let entry;
      while (++index5 < attachers.length) {
        if (attachers[index5][0] === plugin) {
          entry = attachers[index5];
          break;
        }
      }
      if (entry) {
        if (isPlainObject(entry[1]) && isPlainObject(value2)) {
          value2 = (0, import_extend.default)(true, entry[1], value2);
        }
        entry[1] = value2;
      } else {
        attachers.push([...arguments]);
      }
    }
  }
  function parse2(doc) {
    processor.freeze();
    const file = vfile(doc);
    const Parser = processor.Parser;
    assertParser("parse", Parser);
    if (newable(Parser, "parse")) {
      return new Parser(String(file), file).parse();
    }
    return Parser(String(file), file);
  }
  function stringify4(node2, doc) {
    processor.freeze();
    const file = vfile(doc);
    const Compiler = processor.Compiler;
    assertCompiler("stringify", Compiler);
    assertNode(node2);
    if (newable(Compiler, "compile")) {
      return new Compiler(node2, file).compile();
    }
    return Compiler(node2, file);
  }
  function run3(node2, doc, callback) {
    assertNode(node2);
    processor.freeze();
    if (!callback && typeof doc === "function") {
      callback = doc;
      doc = void 0;
    }
    if (!callback) {
      return new Promise(executor);
    }
    executor(null, callback);
    function executor(resolve, reject) {
      transformers.run(node2, vfile(doc), done);
      function done(error, tree, file) {
        tree = tree || node2;
        if (error) {
          reject(error);
        } else if (resolve) {
          resolve(tree);
        } else {
          callback(null, tree, file);
        }
      }
    }
  }
  function runSync(node2, file) {
    let result;
    let complete;
    processor.run(node2, file, done);
    assertDone("runSync", "run", complete);
    return result;
    function done(error, tree) {
      bail(error);
      result = tree;
      complete = true;
    }
  }
  function process2(doc, callback) {
    processor.freeze();
    assertParser("process", processor.Parser);
    assertCompiler("process", processor.Compiler);
    if (!callback) {
      return new Promise(executor);
    }
    executor(null, callback);
    function executor(resolve, reject) {
      const file = vfile(doc);
      processor.run(processor.parse(file), file, (error, tree, file2) => {
        if (error || !tree || !file2) {
          done(error);
        } else {
          const result = processor.stringify(tree, file2);
          if (result === void 0 || result === null) {
          } else if (looksLikeAVFileValue(result)) {
            file2.value = result;
          } else {
            file2.result = result;
          }
          done(error, file2);
        }
      });
      function done(error, file2) {
        if (error || !file2) {
          reject(error);
        } else if (resolve) {
          resolve(file2);
        } else {
          callback(null, file2);
        }
      }
    }
  }
  function processSync(doc) {
    let complete;
    processor.freeze();
    assertParser("processSync", processor.Parser);
    assertCompiler("processSync", processor.Compiler);
    const file = vfile(doc);
    processor.process(file, done);
    assertDone("processSync", "process", complete);
    return file;
    function done(error) {
      complete = true;
      bail(error);
    }
  }
}
function newable(value, name) {
  return typeof value === "function" && // Prototypes do exist.
  // type-coverage:ignore-next-line
  value.prototype && // A function with keys in its prototype is probably a constructor.
  // Classes’ prototype methods are not enumerable, so we check if some value
  // exists in the prototype.
  // type-coverage:ignore-next-line
  (keys(value.prototype) || name in value.prototype);
}
function keys(value) {
  let key;
  for (key in value) {
    if (own2.call(value, key)) {
      return true;
    }
  }
  return false;
}
function assertParser(name, value) {
  if (typeof value !== "function") {
    throw new TypeError("Cannot `" + name + "` without `Parser`");
  }
}
function assertCompiler(name, value) {
  if (typeof value !== "function") {
    throw new TypeError("Cannot `" + name + "` without `Compiler`");
  }
}
function assertUnfrozen(name, frozen) {
  if (frozen) {
    throw new Error(
      "Cannot call `" + name + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
  }
}
function assertNode(node2) {
  if (!isPlainObject(node2) || typeof node2.type !== "string") {
    throw new TypeError("Expected node, got `" + node2 + "`");
  }
}
function assertDone(name, asyncName, complete) {
  if (!complete) {
    throw new Error(
      "`" + name + "` finished async. Use `" + asyncName + "` instead"
    );
  }
}
function vfile(value) {
  return looksLikeAVFile(value) ? value : new VFile(value);
}
function looksLikeAVFile(value) {
  return Boolean(
    value && typeof value === "object" && "message" in value && "messages" in value
  );
}
function looksLikeAVFileValue(value) {
  return typeof value === "string" || (0, import_is_buffer2.default)(value);
}

// node_modules/dequal/dist/index.mjs
var has = Object.prototype.hasOwnProperty;
function find2(iter, tar, key) {
  for (key of iter.keys()) {
    if (dequal(key, tar))
      return key;
  }
}
function dequal(foo, bar) {
  var ctor, len, tmp;
  if (foo === bar)
    return true;
  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
    if (ctor === Date)
      return foo.getTime() === bar.getTime();
    if (ctor === RegExp)
      return foo.toString() === bar.toString();
    if (ctor === Array) {
      if ((len = foo.length) === bar.length) {
        while (len-- && dequal(foo[len], bar[len]))
          ;
      }
      return len === -1;
    }
    if (ctor === Set) {
      if (foo.size !== bar.size) {
        return false;
      }
      for (len of foo) {
        tmp = len;
        if (tmp && typeof tmp === "object") {
          tmp = find2(bar, tmp);
          if (!tmp)
            return false;
        }
        if (!bar.has(tmp))
          return false;
      }
      return true;
    }
    if (ctor === Map) {
      if (foo.size !== bar.size) {
        return false;
      }
      for (len of foo) {
        tmp = len[0];
        if (tmp && typeof tmp === "object") {
          tmp = find2(bar, tmp);
          if (!tmp)
            return false;
        }
        if (!dequal(len[1], bar.get(tmp))) {
          return false;
        }
      }
      return true;
    }
    if (ctor === ArrayBuffer) {
      foo = new Uint8Array(foo);
      bar = new Uint8Array(bar);
    } else if (ctor === DataView) {
      if ((len = foo.byteLength) === bar.byteLength) {
        while (len-- && foo.getInt8(len) === bar.getInt8(len))
          ;
      }
      return len === -1;
    }
    if (ArrayBuffer.isView(foo)) {
      if ((len = foo.byteLength) === bar.byteLength) {
        while (len-- && foo[len] === bar[len])
          ;
      }
      return len === -1;
    }
    if (!ctor || typeof foo === "object") {
      len = 0;
      for (ctor in foo) {
        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))
          return false;
        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))
          return false;
      }
      return Object.keys(bar).length === len;
    }
  }
  return foo !== foo && bar !== bar;
}

// node_modules/kleur/index.mjs
var FORCE_COLOR;
var NODE_DISABLE_COLORS;
var NO_COLOR;
var TERM;
var isTTY = true;
if (typeof process !== "undefined") {
  ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});
  isTTY = process.stdout && process.stdout.isTTY;
}
var $ = {
  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== "dumb" && (FORCE_COLOR != null && FORCE_COLOR !== "0" || isTTY),
  // modifiers
  reset: init2(0, 0),
  bold: init2(1, 22),
  dim: init2(2, 22),
  italic: init2(3, 23),
  underline: init2(4, 24),
  inverse: init2(7, 27),
  hidden: init2(8, 28),
  strikethrough: init2(9, 29),
  // colors
  black: init2(30, 39),
  red: init2(31, 39),
  green: init2(32, 39),
  yellow: init2(33, 39),
  blue: init2(34, 39),
  magenta: init2(35, 39),
  cyan: init2(36, 39),
  white: init2(37, 39),
  gray: init2(90, 39),
  grey: init2(90, 39),
  // background colors
  bgBlack: init2(40, 49),
  bgRed: init2(41, 49),
  bgGreen: init2(42, 49),
  bgYellow: init2(43, 49),
  bgBlue: init2(44, 49),
  bgMagenta: init2(45, 49),
  bgCyan: init2(46, 49),
  bgWhite: init2(47, 49)
};
function run2(arr, str) {
  let i = 0, tmp, beg = "", end2 = "";
  for (; i < arr.length; i++) {
    tmp = arr[i];
    beg += tmp.open;
    end2 += tmp.close;
    if (!!~str.indexOf(tmp.close)) {
      str = str.replace(tmp.rgx, tmp.close + tmp.open);
    }
  }
  return beg + str + end2;
}
function chain(has2, keys2) {
  let ctx = { has: has2, keys: keys2 };
  ctx.reset = $.reset.bind(ctx);
  ctx.bold = $.bold.bind(ctx);
  ctx.dim = $.dim.bind(ctx);
  ctx.italic = $.italic.bind(ctx);
  ctx.underline = $.underline.bind(ctx);
  ctx.inverse = $.inverse.bind(ctx);
  ctx.hidden = $.hidden.bind(ctx);
  ctx.strikethrough = $.strikethrough.bind(ctx);
  ctx.black = $.black.bind(ctx);
  ctx.red = $.red.bind(ctx);
  ctx.green = $.green.bind(ctx);
  ctx.yellow = $.yellow.bind(ctx);
  ctx.blue = $.blue.bind(ctx);
  ctx.magenta = $.magenta.bind(ctx);
  ctx.cyan = $.cyan.bind(ctx);
  ctx.white = $.white.bind(ctx);
  ctx.gray = $.gray.bind(ctx);
  ctx.grey = $.grey.bind(ctx);
  ctx.bgBlack = $.bgBlack.bind(ctx);
  ctx.bgRed = $.bgRed.bind(ctx);
  ctx.bgGreen = $.bgGreen.bind(ctx);
  ctx.bgYellow = $.bgYellow.bind(ctx);
  ctx.bgBlue = $.bgBlue.bind(ctx);
  ctx.bgMagenta = $.bgMagenta.bind(ctx);
  ctx.bgCyan = $.bgCyan.bind(ctx);
  ctx.bgWhite = $.bgWhite.bind(ctx);
  return ctx;
}
function init2(open, close) {
  let blk = {
    open: `\x1B[${open}m`,
    close: `\x1B[${close}m`,
    rgx: new RegExp(`\\x1b\\[${close}m`, "g")
  };
  return function(txt) {
    if (this !== void 0 && this.has !== void 0) {
      !!~this.has.indexOf(open) || (this.has.push(open), this.keys.push(blk));
      return txt === void 0 ? this : $.enabled ? run2(this.keys, txt + "") : txt + "";
    }
    return txt === void 0 ? chain([open], [blk]) : $.enabled ? run2([blk], txt + "") : txt + "";
  };
}
var kleur_default = $;

// node_modules/diff/lib/index.es6.js
function Diff() {
}
Diff.prototype = {
  diff: function diff(oldString, newString) {
    var _options$timeout;
    var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var callback = options2.callback;
    if (typeof options2 === "function") {
      callback = options2;
      options2 = {};
    }
    this.options = options2;
    var self2 = this;
    function done(value) {
      if (callback) {
        setTimeout(function() {
          callback(void 0, value);
        }, 0);
        return true;
      } else {
        return value;
      }
    }
    oldString = this.castInput(oldString);
    newString = this.castInput(newString);
    oldString = this.removeEmpty(this.tokenize(oldString));
    newString = this.removeEmpty(this.tokenize(newString));
    var newLen = newString.length, oldLen = oldString.length;
    var editLength = 1;
    var maxEditLength = newLen + oldLen;
    if (options2.maxEditLength) {
      maxEditLength = Math.min(maxEditLength, options2.maxEditLength);
    }
    var maxExecutionTime = (_options$timeout = options2.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;
    var abortAfterTimestamp = Date.now() + maxExecutionTime;
    var bestPath = [{
      oldPos: -1,
      lastComponent: void 0
    }];
    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);
    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {
      return done([{
        value: this.join(newString),
        count: newString.length
      }]);
    }
    var minDiagonalToConsider = -Infinity, maxDiagonalToConsider = Infinity;
    function execEditLength() {
      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {
        var basePath = void 0;
        var removePath = bestPath[diagonalPath - 1], addPath = bestPath[diagonalPath + 1];
        if (removePath) {
          bestPath[diagonalPath - 1] = void 0;
        }
        var canAdd = false;
        if (addPath) {
          var addPathNewPos = addPath.oldPos - diagonalPath;
          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;
        }
        var canRemove = removePath && removePath.oldPos + 1 < oldLen;
        if (!canAdd && !canRemove) {
          bestPath[diagonalPath] = void 0;
          continue;
        }
        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {
          basePath = self2.addToPath(addPath, true, void 0, 0);
        } else {
          basePath = self2.addToPath(removePath, void 0, true, 1);
        }
        newPos = self2.extractCommon(basePath, newString, oldString, diagonalPath);
        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {
          return done(buildValues(self2, basePath.lastComponent, newString, oldString, self2.useLongestToken));
        } else {
          bestPath[diagonalPath] = basePath;
          if (basePath.oldPos + 1 >= oldLen) {
            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);
          }
          if (newPos + 1 >= newLen) {
            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);
          }
        }
      }
      editLength++;
    }
    if (callback) {
      (function exec() {
        setTimeout(function() {
          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {
            return callback();
          }
          if (!execEditLength()) {
            exec();
          }
        }, 0);
      })();
    } else {
      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {
        var ret = execEditLength();
        if (ret) {
          return ret;
        }
      }
    }
  },
  addToPath: function addToPath(path3, added, removed, oldPosInc) {
    var last = path3.lastComponent;
    if (last && last.added === added && last.removed === removed) {
      return {
        oldPos: path3.oldPos + oldPosInc,
        lastComponent: {
          count: last.count + 1,
          added,
          removed,
          previousComponent: last.previousComponent
        }
      };
    } else {
      return {
        oldPos: path3.oldPos + oldPosInc,
        lastComponent: {
          count: 1,
          added,
          removed,
          previousComponent: last
        }
      };
    }
  },
  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {
    var newLen = newString.length, oldLen = oldString.length, oldPos = basePath.oldPos, newPos = oldPos - diagonalPath, commonCount = 0;
    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {
      newPos++;
      oldPos++;
      commonCount++;
    }
    if (commonCount) {
      basePath.lastComponent = {
        count: commonCount,
        previousComponent: basePath.lastComponent
      };
    }
    basePath.oldPos = oldPos;
    return newPos;
  },
  equals: function equals(left2, right2) {
    if (this.options.comparator) {
      return this.options.comparator(left2, right2);
    } else {
      return left2 === right2 || this.options.ignoreCase && left2.toLowerCase() === right2.toLowerCase();
    }
  },
  removeEmpty: function removeEmpty(array) {
    var ret = [];
    for (var i = 0; i < array.length; i++) {
      if (array[i]) {
        ret.push(array[i]);
      }
    }
    return ret;
  },
  castInput: function castInput(value) {
    return value;
  },
  tokenize: function tokenize2(value) {
    return value.split("");
  },
  join: function join2(chars2) {
    return chars2.join("");
  }
};
function buildValues(diff2, lastComponent, newString, oldString, useLongestToken) {
  var components = [];
  var nextComponent;
  while (lastComponent) {
    components.push(lastComponent);
    nextComponent = lastComponent.previousComponent;
    delete lastComponent.previousComponent;
    lastComponent = nextComponent;
  }
  components.reverse();
  var componentPos = 0, componentLen = components.length, newPos = 0, oldPos = 0;
  for (; componentPos < componentLen; componentPos++) {
    var component = components[componentPos];
    if (!component.removed) {
      if (!component.added && useLongestToken) {
        var value = newString.slice(newPos, newPos + component.count);
        value = value.map(function(value2, i) {
          var oldValue = oldString[oldPos + i];
          return oldValue.length > value2.length ? oldValue : value2;
        });
        component.value = diff2.join(value);
      } else {
        component.value = diff2.join(newString.slice(newPos, newPos + component.count));
      }
      newPos += component.count;
      if (!component.added) {
        oldPos += component.count;
      }
    } else {
      component.value = diff2.join(oldString.slice(oldPos, oldPos + component.count));
      oldPos += component.count;
      if (componentPos && components[componentPos - 1].added) {
        var tmp = components[componentPos - 1];
        components[componentPos - 1] = components[componentPos];
        components[componentPos] = tmp;
      }
    }
  }
  var finalComponent = components[componentLen - 1];
  if (componentLen > 1 && typeof finalComponent.value === "string" && (finalComponent.added || finalComponent.removed) && diff2.equals("", finalComponent.value)) {
    components[componentLen - 2].value += finalComponent.value;
    components.pop();
  }
  return components;
}
var characterDiff = new Diff();
function diffChars(oldStr, newStr, options2) {
  return characterDiff.diff(oldStr, newStr, options2);
}
var extendedWordChars = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/;
var reWhitespace = /\S/;
var wordDiff = new Diff();
wordDiff.equals = function(left2, right2) {
  if (this.options.ignoreCase) {
    left2 = left2.toLowerCase();
    right2 = right2.toLowerCase();
  }
  return left2 === right2 || this.options.ignoreWhitespace && !reWhitespace.test(left2) && !reWhitespace.test(right2);
};
wordDiff.tokenize = function(value) {
  var tokens = value.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/);
  for (var i = 0; i < tokens.length - 1; i++) {
    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {
      tokens[i] += tokens[i + 2];
      tokens.splice(i + 1, 2);
      i--;
    }
  }
  return tokens;
};
var lineDiff = new Diff();
lineDiff.tokenize = function(value) {
  if (this.options.stripTrailingCr) {
    value = value.replace(/\r\n/g, "\n");
  }
  var retLines = [], linesAndNewlines = value.split(/(\n|\r\n)/);
  if (!linesAndNewlines[linesAndNewlines.length - 1]) {
    linesAndNewlines.pop();
  }
  for (var i = 0; i < linesAndNewlines.length; i++) {
    var line2 = linesAndNewlines[i];
    if (i % 2 && !this.options.newlineIsToken) {
      retLines[retLines.length - 1] += line2;
    } else {
      if (this.options.ignoreWhitespace) {
        line2 = line2.trim();
      }
      retLines.push(line2);
    }
  }
  return retLines;
};
function diffLines(oldStr, newStr, callback) {
  return lineDiff.diff(oldStr, newStr, callback);
}
var sentenceDiff = new Diff();
sentenceDiff.tokenize = function(value) {
  return value.split(/(\S.+?[.!?])(?=\s+|$)/);
};
var cssDiff = new Diff();
cssDiff.tokenize = function(value) {
  return value.split(/([{}:;,]|\s+)/);
};
function _typeof(obj) {
  "@babel/helpers - typeof";
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
var objectPrototypeToString = Object.prototype.toString;
var jsonDiff = new Diff();
jsonDiff.useLongestToken = true;
jsonDiff.tokenize = lineDiff.tokenize;
jsonDiff.castInput = function(value) {
  var _this$options = this.options, undefinedReplacement = _this$options.undefinedReplacement, _this$options$stringi = _this$options.stringifyReplacer, stringifyReplacer = _this$options$stringi === void 0 ? function(k, v) {
    return typeof v === "undefined" ? undefinedReplacement : v;
  } : _this$options$stringi;
  return typeof value === "string" ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, "  ");
};
jsonDiff.equals = function(left2, right2) {
  return Diff.prototype.equals.call(jsonDiff, left2.replace(/,([\r\n])/g, "$1"), right2.replace(/,([\r\n])/g, "$1"));
};
function canonicalize(obj, stack, replacementStack, replacer, key) {
  stack = stack || [];
  replacementStack = replacementStack || [];
  if (replacer) {
    obj = replacer(key, obj);
  }
  var i;
  for (i = 0; i < stack.length; i += 1) {
    if (stack[i] === obj) {
      return replacementStack[i];
    }
  }
  var canonicalizedObj;
  if ("[object Array]" === objectPrototypeToString.call(obj)) {
    stack.push(obj);
    canonicalizedObj = new Array(obj.length);
    replacementStack.push(canonicalizedObj);
    for (i = 0; i < obj.length; i += 1) {
      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);
    }
    stack.pop();
    replacementStack.pop();
    return canonicalizedObj;
  }
  if (obj && obj.toJSON) {
    obj = obj.toJSON();
  }
  if (_typeof(obj) === "object" && obj !== null) {
    stack.push(obj);
    canonicalizedObj = {};
    replacementStack.push(canonicalizedObj);
    var sortedKeys = [], _key;
    for (_key in obj) {
      if (obj.hasOwnProperty(_key)) {
        sortedKeys.push(_key);
      }
    }
    sortedKeys.sort();
    for (i = 0; i < sortedKeys.length; i += 1) {
      _key = sortedKeys[i];
      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);
    }
    stack.pop();
    replacementStack.pop();
  } else {
    canonicalizedObj = obj;
  }
  return canonicalizedObj;
}
var arrayDiff = new Diff();
arrayDiff.tokenize = function(value) {
  return value.slice();
};
arrayDiff.join = arrayDiff.removeEmpty = function(value) {
  return value;
};
function diffArrays(oldArr, newArr, callback) {
  return arrayDiff.diff(oldArr, newArr, callback);
}

// node_modules/uvu/diff/index.mjs
var colors = {
  "--": kleur_default.red,
  "··": kleur_default.grey,
  "++": kleur_default.green
};
var TITLE = kleur_default.dim().italic;
var TAB = kleur_default.dim("→");
var SPACE2 = kleur_default.dim("·");
var NL2 = kleur_default.dim("↵");
var LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + "\n";
var LINE = (num, x) => kleur_default.dim("L" + String(num).padStart(x, "0") + " ");
var PRETTY = (str) => str.replace(/[ ]/g, SPACE2).replace(/\t/g, TAB).replace(/(\r?\n)/g, NL2);
function line(obj, prev, pad) {
  let char = obj.removed ? "--" : obj.added ? "++" : "··";
  let arr = obj.value.replace(/\r?\n$/, "").split("\n");
  let i = 0, tmp, out = "";
  if (obj.added)
    out += colors[char]().underline(TITLE("Expected:")) + "\n";
  else if (obj.removed)
    out += colors[char]().underline(TITLE("Actual:")) + "\n";
  for (; i < arr.length; i++) {
    tmp = arr[i];
    if (tmp != null) {
      if (prev)
        out += LINE(prev + i, pad);
      out += LOG(char, tmp || "\n");
    }
  }
  return out;
}
function arrays(input, expect) {
  let arr = diffArrays(input, expect);
  let i = 0, j = 0, k = 0, tmp, val, char, isObj, str;
  let out = LOG("··", "[");
  for (; i < arr.length; i++) {
    char = (tmp = arr[i]).removed ? "--" : tmp.added ? "++" : "··";
    if (tmp.added) {
      out += colors[char]().underline(TITLE("Expected:")) + "\n";
    } else if (tmp.removed) {
      out += colors[char]().underline(TITLE("Actual:")) + "\n";
    }
    for (j = 0; j < tmp.value.length; j++) {
      isObj = tmp.value[j] && typeof tmp.value[j] === "object";
      val = stringify(tmp.value[j]).split(/\r?\n/g);
      for (k = 0; k < val.length; ) {
        str = "  " + val[k++] + (isObj ? "" : ",");
        if (isObj && k === val.length && j + 1 < tmp.value.length)
          str += ",";
        out += LOG(char, str);
      }
    }
  }
  return out + LOG("··", "]");
}
function lines(input, expect, linenum = 0) {
  let i = 0, tmp, output = "";
  let arr = diffLines(input, expect);
  let pad = String(expect.split(/\r?\n/g).length - linenum).length;
  for (; i < arr.length; i++) {
    output += line(tmp = arr[i], linenum, pad);
    if (linenum && !tmp.removed)
      linenum += tmp.count;
  }
  return output;
}
function chars(input, expect) {
  let arr = diffChars(input, expect);
  let i = 0, output = "", tmp;
  let l1 = input.length;
  let l2 = expect.length;
  let p1 = PRETTY(input);
  let p2 = PRETTY(expect);
  tmp = arr[i];
  if (l1 === l2) {
  } else if (tmp.removed && arr[i + 1]) {
    let del = tmp.count - arr[i + 1].count;
    if (del == 0) {
    } else if (del > 0) {
      expect = " ".repeat(del) + expect;
      p2 = " ".repeat(del) + p2;
      l2 += del;
    } else if (del < 0) {
      input = " ".repeat(-del) + input;
      p1 = " ".repeat(-del) + p1;
      l1 += -del;
    }
  }
  output += direct(p1, p2, l1, l2);
  if (l1 === l2) {
    for (tmp = "  "; i < l1; i++) {
      tmp += input[i] === expect[i] ? " " : "^";
    }
  } else {
    for (tmp = "  "; i < arr.length; i++) {
      tmp += (arr[i].added || arr[i].removed ? "^" : " ").repeat(Math.max(arr[i].count, 0));
      if (i + 1 < arr.length && (arr[i].added && arr[i + 1].removed || arr[i].removed && arr[i + 1].added)) {
        arr[i + 1].count -= arr[i].count;
      }
    }
  }
  return output + kleur_default.red(tmp);
}
function direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {
  let gutter = 4;
  let lenC = Math.max(lenA, lenB);
  let typeA = typeof input, typeB = typeof expect;
  if (typeA !== typeB) {
    gutter = 2;
    let delA = gutter + lenC - lenA;
    let delB = gutter + lenC - lenB;
    input += " ".repeat(delA) + kleur_default.dim(`[${typeA}]`);
    expect += " ".repeat(delB) + kleur_default.dim(`[${typeB}]`);
    lenA += delA + typeA.length + 2;
    lenB += delB + typeB.length + 2;
    lenC = Math.max(lenA, lenB);
  }
  let output = colors["++"]("++" + expect + " ".repeat(gutter + lenC - lenB) + TITLE("(Expected)")) + "\n";
  return output + colors["--"]("--" + input + " ".repeat(gutter + lenC - lenA) + TITLE("(Actual)")) + "\n";
}
function sort(input, expect) {
  var k, i = 0, tmp, isArr = Array.isArray(input);
  var keys2 = [], out = isArr ? Array(input.length) : {};
  if (isArr) {
    for (i = 0; i < out.length; i++) {
      tmp = input[i];
      if (!tmp || typeof tmp !== "object")
        out[i] = tmp;
      else
        out[i] = sort(tmp, expect[i]);
    }
  } else {
    for (k in expect)
      keys2.push(k);
    for (; i < keys2.length; i++) {
      if (Object.prototype.hasOwnProperty.call(input, k = keys2[i])) {
        if (!(tmp = input[k]) || typeof tmp !== "object")
          out[k] = tmp;
        else
          out[k] = sort(tmp, expect[k]);
      }
    }
    for (k in input) {
      if (!out.hasOwnProperty(k)) {
        out[k] = input[k];
      }
    }
  }
  return out;
}
function circular() {
  var cache = /* @__PURE__ */ new Set();
  return function print(key, val) {
    if (val === void 0)
      return "[__VOID__]";
    if (typeof val === "number" && val !== val)
      return "[__NAN__]";
    if (typeof val === "bigint")
      return val.toString();
    if (!val || typeof val !== "object")
      return val;
    if (cache.has(val))
      return "[Circular]";
    cache.add(val);
    return val;
  };
}
function stringify(input) {
  return JSON.stringify(input, circular(), 2).replace(/"\[__NAN__\]"/g, "NaN").replace(/"\[__VOID__\]"/g, "undefined");
}
function compare(input, expect) {
  if (Array.isArray(expect) && Array.isArray(input))
    return arrays(input, expect);
  if (expect instanceof RegExp)
    return chars("" + input, "" + expect);
  let isA = input && typeof input == "object";
  let isB = expect && typeof expect == "object";
  if (isA && isB)
    input = sort(input, expect);
  if (isB)
    expect = stringify(expect);
  if (isA)
    input = stringify(input);
  if (expect && typeof expect == "object") {
    input = stringify(sort(input, expect));
    expect = stringify(expect);
  }
  isA = typeof input == "string";
  isB = typeof expect == "string";
  if (isA && /\r?\n/.test(input))
    return lines(input, "" + expect);
  if (isB && /\r?\n/.test(expect))
    return lines("" + input, expect);
  if (isA && isB)
    return chars(input, expect);
  return direct(input, expect);
}

// node_modules/uvu/assert/index.mjs
function dedent(str) {
  str = str.replace(/\r?\n/g, "\n");
  let arr = str.match(/^[ \t]*(?=\S)/gm);
  let i = 0, min2 = 1 / 0, len = (arr || []).length;
  for (; i < len; i++)
    min2 = Math.min(min2, arr[i].length);
  return len && min2 ? str.replace(new RegExp(`^[ \\t]{${min2}}`, "gm"), "") : str;
}
var Assertion = class extends Error {
  constructor(opts = {}) {
    super(opts.message);
    this.name = "Assertion";
    this.code = "ERR_ASSERTION";
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.details = opts.details || false;
    this.generated = !!opts.generated;
    this.operator = opts.operator;
    this.expects = opts.expects;
    this.actual = opts.actual;
  }
};
function assert(bool, actual, expects, operator, detailer, backup, msg) {
  if (bool)
    return;
  let message = msg || backup;
  if (msg instanceof Error)
    throw msg;
  let details = detailer && detailer(actual, expects);
  throw new Assertion({ actual, expects, operator, message, details, generated: !msg });
}
function ok2(val, msg) {
  assert(!!val, false, true, "ok", false, "Expected value to be truthy", msg);
}
function is2(val, exp, msg) {
  assert(val === exp, val, exp, "is", compare, "Expected values to be strictly equal:", msg);
}
function not(val, msg) {
  assert(!val, true, false, "not", false, "Expected value to be falsey", msg);
}
not.ok = not;
is2.not = function(val, exp, msg) {
  assert(val !== exp, val, exp, "is.not", false, "Expected values not to be strictly equal", msg);
};
not.equal = function(val, exp, msg) {
  assert(!dequal(val, exp), val, exp, "not.equal", false, "Expected values not to be deeply equal", msg);
};
not.type = function(val, exp, msg) {
  let tmp = typeof val;
  assert(tmp !== exp, tmp, exp, "not.type", false, `Expected "${tmp}" not to be "${exp}"`, msg);
};
not.instance = function(val, exp, msg) {
  let name = "`" + (exp.name || exp.constructor.name) + "`";
  assert(!(val instanceof exp), val, exp, "not.instance", false, `Expected value not to be an instance of ${name}`, msg);
};
not.snapshot = function(val, exp, msg) {
  val = dedent(val);
  exp = dedent(exp);
  assert(val !== exp, val, exp, "not.snapshot", false, "Expected value not to match snapshot", msg);
};
not.fixture = function(val, exp, msg) {
  val = dedent(val);
  exp = dedent(exp);
  assert(val !== exp, val, exp, "not.fixture", false, "Expected value not to match fixture", msg);
};
not.match = function(val, exp, msg) {
  if (typeof exp === "string") {
    assert(!val.includes(exp), val, exp, "not.match", false, `Expected value not to include "${exp}" substring`, msg);
  } else {
    assert(!exp.test(val), val, exp, "not.match", false, `Expected value not to match \`${String(exp)}\` pattern`, msg);
  }
};
not.throws = function(blk, exp, msg) {
  if (!msg && typeof exp === "string") {
    msg = exp;
    exp = null;
  }
  try {
    blk();
  } catch (err) {
    if (typeof exp === "function") {
      assert(!exp(err), true, false, "not.throws", false, "Expected function not to throw matching exception", msg);
    } else if (exp instanceof RegExp) {
      assert(!exp.test(err.message), true, false, "not.throws", false, `Expected function not to throw exception matching \`${String(exp)}\` pattern`, msg);
    } else if (!exp) {
      assert(false, true, false, "not.throws", false, "Expected function not to throw", msg);
    }
  }
};

// node_modules/mdast-util-to-string/lib/index.js
var emptyOptions = {};
function toString(value, options2) {
  const settings = options2 || emptyOptions;
  const includeImageAlt = typeof settings.includeImageAlt === "boolean" ? settings.includeImageAlt : true;
  const includeHtml = typeof settings.includeHtml === "boolean" ? settings.includeHtml : true;
  return one(value, includeImageAlt, includeHtml);
}
function one(value, includeImageAlt, includeHtml) {
  if (node(value)) {
    if ("value" in value) {
      return value.type === "html" && !includeHtml ? "" : value.value;
    }
    if (includeImageAlt && "alt" in value && value.alt) {
      return value.alt;
    }
    if ("children" in value) {
      return all(value.children, includeImageAlt, includeHtml);
    }
  }
  if (Array.isArray(value)) {
    return all(value, includeImageAlt, includeHtml);
  }
  return "";
}
function all(values2, includeImageAlt, includeHtml) {
  const result = [];
  let index5 = -1;
  while (++index5 < values2.length) {
    result[index5] = one(values2[index5], includeImageAlt, includeHtml);
  }
  return result.join("");
}
function node(value) {
  return Boolean(value && typeof value === "object");
}

// node_modules/micromark-util-symbol/constants.js
var constants = (
  /** @type {const} */
  {
    attentionSideBefore: 1,
    // Symbol to mark an attention sequence as before content: `*a`
    attentionSideAfter: 2,
    // Symbol to mark an attention sequence as after content: `a*`
    atxHeadingOpeningFenceSizeMax: 6,
    // 6 number signs is fine, 7 isn’t.
    autolinkDomainSizeMax: 63,
    // 63 characters is fine, 64 is too many.
    autolinkSchemeSizeMax: 32,
    // 32 characters is fine, 33 is too many.
    cdataOpeningString: "CDATA[",
    // And preceded by `<![`.
    characterGroupWhitespace: 1,
    // Symbol used to indicate a character is whitespace
    characterGroupPunctuation: 2,
    // Symbol used to indicate a character is punctuation
    characterReferenceDecimalSizeMax: 7,
    // `&#9999999;`.
    characterReferenceHexadecimalSizeMax: 6,
    // `&#xff9999;`.
    characterReferenceNamedSizeMax: 31,
    // `&CounterClockwiseContourIntegral;`.
    codeFencedSequenceSizeMin: 3,
    // At least 3 ticks or tildes are needed.
    contentTypeDocument: "document",
    contentTypeFlow: "flow",
    contentTypeContent: "content",
    contentTypeString: "string",
    contentTypeText: "text",
    hardBreakPrefixSizeMin: 2,
    // At least 2 trailing spaces are needed.
    htmlRaw: 1,
    // Symbol for `<script>`
    htmlComment: 2,
    // Symbol for `<!---->`
    htmlInstruction: 3,
    // Symbol for `<?php?>`
    htmlDeclaration: 4,
    // Symbol for `<!doctype>`
    htmlCdata: 5,
    // Symbol for `<![CDATA[]]>`
    htmlBasic: 6,
    // Symbol for `<div`
    htmlComplete: 7,
    // Symbol for `<x>`
    htmlRawSizeMax: 8,
    // Length of `textarea`.
    linkResourceDestinationBalanceMax: 32,
    // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>
    linkReferenceSizeMax: 999,
    // See: <https://spec.commonmark.org/0.30/#link-label>
    listItemValueSizeMax: 10,
    // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>
    numericBaseDecimal: 10,
    numericBaseHexadecimal: 16,
    tabSize: 4,
    // Tabs have a hard-coded size of 4, per CommonMark.
    thematicBreakMarkerCountMin: 3,
    // At least 3 asterisks, dashes, or underscores are needed.
    v8MaxSafeChunkSize: 1e4
    // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.
  }
);

// node_modules/micromark-util-chunked/dev/index.js
function splice(list3, start2, remove, items) {
  const end2 = list3.length;
  let chunkStart = 0;
  let parameters;
  if (start2 < 0) {
    start2 = -start2 > end2 ? 0 : end2 + start2;
  } else {
    start2 = start2 > end2 ? end2 : start2;
  }
  remove = remove > 0 ? remove : 0;
  if (items.length < constants.v8MaxSafeChunkSize) {
    parameters = Array.from(items);
    parameters.unshift(start2, remove);
    list3.splice(...parameters);
  } else {
    if (remove)
      list3.splice(start2, remove);
    while (chunkStart < items.length) {
      parameters = items.slice(
        chunkStart,
        chunkStart + constants.v8MaxSafeChunkSize
      );
      parameters.unshift(start2, 0);
      list3.splice(...parameters);
      chunkStart += constants.v8MaxSafeChunkSize;
      start2 += constants.v8MaxSafeChunkSize;
    }
  }
}
function push(list3, items) {
  if (list3.length > 0) {
    splice(list3, list3.length, 0, items);
    return list3;
  }
  return items;
}

// node_modules/micromark-util-combine-extensions/index.js
var hasOwnProperty = {}.hasOwnProperty;
function combineExtensions(extensions) {
  const all3 = {};
  let index5 = -1;
  while (++index5 < extensions.length) {
    syntaxExtension(all3, extensions[index5]);
  }
  return all3;
}
function syntaxExtension(all3, extension2) {
  let hook;
  for (hook in extension2) {
    const maybe = hasOwnProperty.call(all3, hook) ? all3[hook] : void 0;
    const left2 = maybe || (all3[hook] = {});
    const right2 = extension2[hook];
    let code3;
    if (right2) {
      for (code3 in right2) {
        if (!hasOwnProperty.call(left2, code3))
          left2[code3] = [];
        const value = right2[code3];
        constructs(
          // @ts-expect-error Looks like a list.
          left2[code3],
          Array.isArray(value) ? value : value ? [value] : []
        );
      }
    }
  }
}
function constructs(existing, list3) {
  let index5 = -1;
  const before = [];
  while (++index5 < list3.length) {
    ;
    (list3[index5].add === "after" ? existing : before).push(list3[index5]);
  }
  splice(existing, 0, 0, before);
}

// node_modules/micromark-util-symbol/codes.js
var codes = (
  /** @type {const} */
  {
    carriageReturn: -5,
    lineFeed: -4,
    carriageReturnLineFeed: -3,
    horizontalTab: -2,
    virtualSpace: -1,
    eof: null,
    nul: 0,
    soh: 1,
    stx: 2,
    etx: 3,
    eot: 4,
    enq: 5,
    ack: 6,
    bel: 7,
    bs: 8,
    ht: 9,
    // `\t`
    lf: 10,
    // `\n`
    vt: 11,
    // `\v`
    ff: 12,
    // `\f`
    cr: 13,
    // `\r`
    so: 14,
    si: 15,
    dle: 16,
    dc1: 17,
    dc2: 18,
    dc3: 19,
    dc4: 20,
    nak: 21,
    syn: 22,
    etb: 23,
    can: 24,
    em: 25,
    sub: 26,
    esc: 27,
    fs: 28,
    gs: 29,
    rs: 30,
    us: 31,
    space: 32,
    exclamationMark: 33,
    // `!`
    quotationMark: 34,
    // `"`
    numberSign: 35,
    // `#`
    dollarSign: 36,
    // `$`
    percentSign: 37,
    // `%`
    ampersand: 38,
    // `&`
    apostrophe: 39,
    // `'`
    leftParenthesis: 40,
    // `(`
    rightParenthesis: 41,
    // `)`
    asterisk: 42,
    // `*`
    plusSign: 43,
    // `+`
    comma: 44,
    // `,`
    dash: 45,
    // `-`
    dot: 46,
    // `.`
    slash: 47,
    // `/`
    digit0: 48,
    // `0`
    digit1: 49,
    // `1`
    digit2: 50,
    // `2`
    digit3: 51,
    // `3`
    digit4: 52,
    // `4`
    digit5: 53,
    // `5`
    digit6: 54,
    // `6`
    digit7: 55,
    // `7`
    digit8: 56,
    // `8`
    digit9: 57,
    // `9`
    colon: 58,
    // `:`
    semicolon: 59,
    // `;`
    lessThan: 60,
    // `<`
    equalsTo: 61,
    // `=`
    greaterThan: 62,
    // `>`
    questionMark: 63,
    // `?`
    atSign: 64,
    // `@`
    uppercaseA: 65,
    // `A`
    uppercaseB: 66,
    // `B`
    uppercaseC: 67,
    // `C`
    uppercaseD: 68,
    // `D`
    uppercaseE: 69,
    // `E`
    uppercaseF: 70,
    // `F`
    uppercaseG: 71,
    // `G`
    uppercaseH: 72,
    // `H`
    uppercaseI: 73,
    // `I`
    uppercaseJ: 74,
    // `J`
    uppercaseK: 75,
    // `K`
    uppercaseL: 76,
    // `L`
    uppercaseM: 77,
    // `M`
    uppercaseN: 78,
    // `N`
    uppercaseO: 79,
    // `O`
    uppercaseP: 80,
    // `P`
    uppercaseQ: 81,
    // `Q`
    uppercaseR: 82,
    // `R`
    uppercaseS: 83,
    // `S`
    uppercaseT: 84,
    // `T`
    uppercaseU: 85,
    // `U`
    uppercaseV: 86,
    // `V`
    uppercaseW: 87,
    // `W`
    uppercaseX: 88,
    // `X`
    uppercaseY: 89,
    // `Y`
    uppercaseZ: 90,
    // `Z`
    leftSquareBracket: 91,
    // `[`
    backslash: 92,
    // `\`
    rightSquareBracket: 93,
    // `]`
    caret: 94,
    // `^`
    underscore: 95,
    // `_`
    graveAccent: 96,
    // `` ` ``
    lowercaseA: 97,
    // `a`
    lowercaseB: 98,
    // `b`
    lowercaseC: 99,
    // `c`
    lowercaseD: 100,
    // `d`
    lowercaseE: 101,
    // `e`
    lowercaseF: 102,
    // `f`
    lowercaseG: 103,
    // `g`
    lowercaseH: 104,
    // `h`
    lowercaseI: 105,
    // `i`
    lowercaseJ: 106,
    // `j`
    lowercaseK: 107,
    // `k`
    lowercaseL: 108,
    // `l`
    lowercaseM: 109,
    // `m`
    lowercaseN: 110,
    // `n`
    lowercaseO: 111,
    // `o`
    lowercaseP: 112,
    // `p`
    lowercaseQ: 113,
    // `q`
    lowercaseR: 114,
    // `r`
    lowercaseS: 115,
    // `s`
    lowercaseT: 116,
    // `t`
    lowercaseU: 117,
    // `u`
    lowercaseV: 118,
    // `v`
    lowercaseW: 119,
    // `w`
    lowercaseX: 120,
    // `x`
    lowercaseY: 121,
    // `y`
    lowercaseZ: 122,
    // `z`
    leftCurlyBrace: 123,
    // `{`
    verticalBar: 124,
    // `|`
    rightCurlyBrace: 125,
    // `}`
    tilde: 126,
    // `~`
    del: 127,
    // Unicode Specials block.
    byteOrderMarker: 65279,
    // Unicode Specials block.
    replacementCharacter: 65533
    // `�`
  }
);

// node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js
var unicodePunctuationRegex = /[!-/:-@[-`{-~\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;

// node_modules/micromark-util-character/dev/index.js
var asciiAlpha = regexCheck(/[A-Za-z]/);
var asciiAlphanumeric = regexCheck(/[\dA-Za-z]/);
var asciiAtext = regexCheck(/[#-'*+\--9=?A-Z^-~]/);
function asciiControl(code3) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    code3 !== null && (code3 < codes.space || code3 === codes.del)
  );
}
var asciiDigit = regexCheck(/\d/);
var asciiHexDigit = regexCheck(/[\dA-Fa-f]/);
var asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);
function markdownLineEnding(code3) {
  return code3 !== null && code3 < codes.horizontalTab;
}
function markdownLineEndingOrSpace(code3) {
  return code3 !== null && (code3 < codes.nul || code3 === codes.space);
}
function markdownSpace(code3) {
  return code3 === codes.horizontalTab || code3 === codes.virtualSpace || code3 === codes.space;
}
var unicodePunctuation = regexCheck(unicodePunctuationRegex);
var unicodeWhitespace = regexCheck(/\s/);
function regexCheck(regex) {
  return check;
  function check(code3) {
    return code3 !== null && regex.test(String.fromCharCode(code3));
  }
}

// node_modules/micromark-factory-space/dev/index.js
function factorySpace(effects, ok3, type, max2) {
  const limit = max2 ? max2 - 1 : Number.POSITIVE_INFINITY;
  let size = 0;
  return start2;
  function start2(code3) {
    if (markdownSpace(code3)) {
      effects.enter(type);
      return prefix(code3);
    }
    return ok3(code3);
  }
  function prefix(code3) {
    if (markdownSpace(code3) && size++ < limit) {
      effects.consume(code3);
      return prefix;
    }
    effects.exit(type);
    return ok3(code3);
  }
}

// node_modules/micromark-util-symbol/types.js
var types = (
  /** @type {const} */
  {
    // Generic type for data, such as in a title, a destination, etc.
    data: "data",
    // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).
    // Such as, between a fenced code fence and an info string.
    whitespace: "whitespace",
    // Generic type for line endings (line feed, carriage return, carriage return +
    // line feed).
    lineEnding: "lineEnding",
    // A line ending, but ending a blank line.
    lineEndingBlank: "lineEndingBlank",
    // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a
    // line.
    linePrefix: "linePrefix",
    // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a
    // line.
    lineSuffix: "lineSuffix",
    // Whole ATX heading:
    //
    // ```markdown
    // #
    // ## Alpha
    // ### Bravo ###
    // ```
    //
    // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.
    atxHeading: "atxHeading",
    // Sequence of number signs in an ATX heading (`###`).
    atxHeadingSequence: "atxHeadingSequence",
    // Content in an ATX heading (`alpha`).
    // Includes text.
    atxHeadingText: "atxHeadingText",
    // Whole autolink (`<https://example.com>` or `<admin@example.com>`)
    // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.
    autolink: "autolink",
    // Email autolink w/o markers (`admin@example.com`)
    autolinkEmail: "autolinkEmail",
    // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).
    autolinkMarker: "autolinkMarker",
    // Protocol autolink w/o markers (`https://example.com`)
    autolinkProtocol: "autolinkProtocol",
    // A whole character escape (`\-`).
    // Includes `escapeMarker` and `characterEscapeValue`.
    characterEscape: "characterEscape",
    // The escaped character (`-`).
    characterEscapeValue: "characterEscapeValue",
    // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).
    // Includes `characterReferenceMarker`, an optional
    // `characterReferenceMarkerNumeric`, in which case an optional
    // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.
    characterReference: "characterReference",
    // The start or end marker (`&` or `;`).
    characterReferenceMarker: "characterReferenceMarker",
    // Mark reference as numeric (`#`).
    characterReferenceMarkerNumeric: "characterReferenceMarkerNumeric",
    // Mark reference as numeric (`x` or `X`).
    characterReferenceMarkerHexadecimal: "characterReferenceMarkerHexadecimal",
    // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).
    characterReferenceValue: "characterReferenceValue",
    // Whole fenced code:
    //
    // ````markdown
    // ```js
    // alert(1)
    // ```
    // ````
    codeFenced: "codeFenced",
    // A fenced code fence, including whitespace, sequence, info, and meta
    // (` ```js `).
    codeFencedFence: "codeFencedFence",
    // Sequence of grave accent or tilde characters (` ``` `) in a fence.
    codeFencedFenceSequence: "codeFencedFenceSequence",
    // Info word (`js`) in a fence.
    // Includes string.
    codeFencedFenceInfo: "codeFencedFenceInfo",
    // Meta words (`highlight="1"`) in a fence.
    // Includes string.
    codeFencedFenceMeta: "codeFencedFenceMeta",
    // A line of code.
    codeFlowValue: "codeFlowValue",
    // Whole indented code:
    //
    // ```markdown
    //     alert(1)
    // ```
    //
    // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.
    codeIndented: "codeIndented",
    // A text code (``` `alpha` ```).
    // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include
    // `codeTextPadding`.
    codeText: "codeText",
    codeTextData: "codeTextData",
    // A space or line ending right after or before a tick.
    codeTextPadding: "codeTextPadding",
    // A text code fence (` `` `).
    codeTextSequence: "codeTextSequence",
    // Whole content:
    //
    // ```markdown
    // [a]: b
    // c
    // =
    // d
    // ```
    //
    // Includes `paragraph` and `definition`.
    content: "content",
    // Whole definition:
    //
    // ```markdown
    // [micromark]: https://github.com/micromark/micromark
    // ```
    //
    // Includes `definitionLabel`, `definitionMarker`, `whitespace`,
    // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.
    definition: "definition",
    // Destination of a definition (`https://github.com/micromark/micromark` or
    // `<https://github.com/micromark/micromark>`).
    // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.
    definitionDestination: "definitionDestination",
    // Enclosed destination of a definition
    // (`<https://github.com/micromark/micromark>`).
    // Includes `definitionDestinationLiteralMarker` and optionally
    // `definitionDestinationString`.
    definitionDestinationLiteral: "definitionDestinationLiteral",
    // Markers of an enclosed definition destination (`<` or `>`).
    definitionDestinationLiteralMarker: "definitionDestinationLiteralMarker",
    // Unenclosed destination of a definition
    // (`https://github.com/micromark/micromark`).
    // Includes `definitionDestinationString`.
    definitionDestinationRaw: "definitionDestinationRaw",
    // Text in an destination (`https://github.com/micromark/micromark`).
    // Includes string.
    definitionDestinationString: "definitionDestinationString",
    // Label of a definition (`[micromark]`).
    // Includes `definitionLabelMarker` and `definitionLabelString`.
    definitionLabel: "definitionLabel",
    // Markers of a definition label (`[` or `]`).
    definitionLabelMarker: "definitionLabelMarker",
    // Value of a definition label (`micromark`).
    // Includes string.
    definitionLabelString: "definitionLabelString",
    // Marker between a label and a destination (`:`).
    definitionMarker: "definitionMarker",
    // Title of a definition (`"x"`, `'y'`, or `(z)`).
    // Includes `definitionTitleMarker` and optionally `definitionTitleString`.
    definitionTitle: "definitionTitle",
    // Marker around a title of a definition (`"`, `'`, `(`, or `)`).
    definitionTitleMarker: "definitionTitleMarker",
    // Data without markers in a title (`z`).
    // Includes string.
    definitionTitleString: "definitionTitleString",
    // Emphasis (`*alpha*`).
    // Includes `emphasisSequence` and `emphasisText`.
    emphasis: "emphasis",
    // Sequence of emphasis markers (`*` or `_`).
    emphasisSequence: "emphasisSequence",
    // Emphasis text (`alpha`).
    // Includes text.
    emphasisText: "emphasisText",
    // The character escape marker (`\`).
    escapeMarker: "escapeMarker",
    // A hard break created with a backslash (`\\n`).
    // Note: does not include the line ending.
    hardBreakEscape: "hardBreakEscape",
    // A hard break created with trailing spaces (`  \n`).
    // Does not include the line ending.
    hardBreakTrailing: "hardBreakTrailing",
    // Flow HTML:
    //
    // ```markdown
    // <div
    // ```
    //
    // Inlcudes `lineEnding`, `htmlFlowData`.
    htmlFlow: "htmlFlow",
    htmlFlowData: "htmlFlowData",
    // HTML in text (the tag in `a <i> b`).
    // Includes `lineEnding`, `htmlTextData`.
    htmlText: "htmlText",
    htmlTextData: "htmlTextData",
    // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or
    // `![alpha]`).
    // Includes `label` and an optional `resource` or `reference`.
    image: "image",
    // Whole link label (`[*alpha*]`).
    // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.
    label: "label",
    // Text in an label (`*alpha*`).
    // Includes text.
    labelText: "labelText",
    // Start a link label (`[`).
    // Includes a `labelMarker`.
    labelLink: "labelLink",
    // Start an image label (`![`).
    // Includes `labelImageMarker` and `labelMarker`.
    labelImage: "labelImage",
    // Marker of a label (`[` or `]`).
    labelMarker: "labelMarker",
    // Marker to start an image (`!`).
    labelImageMarker: "labelImageMarker",
    // End a label (`]`).
    // Includes `labelMarker`.
    labelEnd: "labelEnd",
    // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).
    // Includes `label` and an optional `resource` or `reference`.
    link: "link",
    // Whole paragraph:
    //
    // ```markdown
    // alpha
    // bravo.
    // ```
    //
    // Includes text.
    paragraph: "paragraph",
    // A reference (`[alpha]` or `[]`).
    // Includes `referenceMarker` and an optional `referenceString`.
    reference: "reference",
    // A reference marker (`[` or `]`).
    referenceMarker: "referenceMarker",
    // Reference text (`alpha`).
    // Includes string.
    referenceString: "referenceString",
    // A resource (`(https://example.com "alpha")`).
    // Includes `resourceMarker`, an optional `resourceDestination` with an optional
    // `whitespace` and `resourceTitle`.
    resource: "resource",
    // A resource destination (`https://example.com`).
    // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.
    resourceDestination: "resourceDestination",
    // A literal resource destination (`<https://example.com>`).
    // Includes `resourceDestinationLiteralMarker` and optionally
    // `resourceDestinationString`.
    resourceDestinationLiteral: "resourceDestinationLiteral",
    // A resource destination marker (`<` or `>`).
    resourceDestinationLiteralMarker: "resourceDestinationLiteralMarker",
    // A raw resource destination (`https://example.com`).
    // Includes `resourceDestinationString`.
    resourceDestinationRaw: "resourceDestinationRaw",
    // Resource destination text (`https://example.com`).
    // Includes string.
    resourceDestinationString: "resourceDestinationString",
    // A resource marker (`(` or `)`).
    resourceMarker: "resourceMarker",
    // A resource title (`"alpha"`, `'alpha'`, or `(alpha)`).
    // Includes `resourceTitleMarker` and optionally `resourceTitleString`.
    resourceTitle: "resourceTitle",
    // A resource title marker (`"`, `'`, `(`, or `)`).
    resourceTitleMarker: "resourceTitleMarker",
    // Resource destination title (`alpha`).
    // Includes string.
    resourceTitleString: "resourceTitleString",
    // Whole setext heading:
    //
    // ```markdown
    // alpha
    // bravo
    // =====
    // ```
    //
    // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and
    // `setextHeadingLine`.
    setextHeading: "setextHeading",
    // Content in a setext heading (`alpha\nbravo`).
    // Includes text.
    setextHeadingText: "setextHeadingText",
    // Underline in a setext heading, including whitespace suffix (`==`).
    // Includes `setextHeadingLineSequence`.
    setextHeadingLine: "setextHeadingLine",
    // Sequence of equals or dash characters in underline in a setext heading (`-`).
    setextHeadingLineSequence: "setextHeadingLineSequence",
    // Strong (`**alpha**`).
    // Includes `strongSequence` and `strongText`.
    strong: "strong",
    // Sequence of strong markers (`**` or `__`).
    strongSequence: "strongSequence",
    // Strong text (`alpha`).
    // Includes text.
    strongText: "strongText",
    // Whole thematic break:
    //
    // ```markdown
    // * * *
    // ```
    //
    // Includes `thematicBreakSequence` and `whitespace`.
    thematicBreak: "thematicBreak",
    // A sequence of one or more thematic break markers (`***`).
    thematicBreakSequence: "thematicBreakSequence",
    // Whole block quote:
    //
    // ```markdown
    // > a
    // >
    // > b
    // ```
    //
    // Includes `blockQuotePrefix` and flow.
    blockQuote: "blockQuote",
    // The `>` or `> ` of a block quote.
    blockQuotePrefix: "blockQuotePrefix",
    // The `>` of a block quote prefix.
    blockQuoteMarker: "blockQuoteMarker",
    // The optional ` ` of a block quote prefix.
    blockQuotePrefixWhitespace: "blockQuotePrefixWhitespace",
    // Whole unordered list:
    //
    // ```markdown
    // - a
    //   b
    // ```
    //
    // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further
    // lines.
    listOrdered: "listOrdered",
    // Whole ordered list:
    //
    // ```markdown
    // 1. a
    //    b
    // ```
    //
    // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further
    // lines.
    listUnordered: "listUnordered",
    // The indent of further list item lines.
    listItemIndent: "listItemIndent",
    // A marker, as in, `*`, `+`, `-`, `.`, or `)`.
    listItemMarker: "listItemMarker",
    // The thing that starts a list item, such as `1. `.
    // Includes `listItemValue` if ordered, `listItemMarker`, and
    // `listItemPrefixWhitespace` (unless followed by a line ending).
    listItemPrefix: "listItemPrefix",
    // The whitespace after a marker.
    listItemPrefixWhitespace: "listItemPrefixWhitespace",
    // The numerical value of an ordered item.
    listItemValue: "listItemValue",
    // Internal types used for subtokenizers, compiled away
    chunkDocument: "chunkDocument",
    chunkContent: "chunkContent",
    chunkFlow: "chunkFlow",
    chunkText: "chunkText",
    chunkString: "chunkString"
  }
);

// node_modules/micromark/dev/lib/initialize/content.js
var content = { tokenize: initializeContent };
function initializeContent(effects) {
  const contentStart = effects.attempt(
    this.parser.constructs.contentInitial,
    afterContentStartConstruct,
    paragraphInitial
  );
  let previous3;
  return contentStart;
  function afterContentStartConstruct(code3) {
    ok2(
      code3 === codes.eof || markdownLineEnding(code3),
      "expected eol or eof"
    );
    if (code3 === codes.eof) {
      effects.consume(code3);
      return;
    }
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return factorySpace(effects, contentStart, types.linePrefix);
  }
  function paragraphInitial(code3) {
    ok2(
      code3 !== codes.eof && !markdownLineEnding(code3),
      "expected anything other than a line ending or EOF"
    );
    effects.enter(types.paragraph);
    return lineStart(code3);
  }
  function lineStart(code3) {
    const token = effects.enter(types.chunkText, {
      contentType: constants.contentTypeText,
      previous: previous3
    });
    if (previous3) {
      previous3.next = token;
    }
    previous3 = token;
    return data(code3);
  }
  function data(code3) {
    if (code3 === codes.eof) {
      effects.exit(types.chunkText);
      effects.exit(types.paragraph);
      effects.consume(code3);
      return;
    }
    if (markdownLineEnding(code3)) {
      effects.consume(code3);
      effects.exit(types.chunkText);
      return lineStart;
    }
    effects.consume(code3);
    return data;
  }
}

// node_modules/micromark/dev/lib/initialize/document.js
var document2 = { tokenize: initializeDocument };
var containerConstruct = { tokenize: tokenizeContainer };
function initializeDocument(effects) {
  const self2 = this;
  const stack = [];
  let continued = 0;
  let childFlow;
  let childToken;
  let lineStartOffset;
  return start2;
  function start2(code3) {
    if (continued < stack.length) {
      const item = stack[continued];
      self2.containerState = item[1];
      ok2(
        item[0].continuation,
        "expected `continuation` to be defined on container construct"
      );
      return effects.attempt(
        item[0].continuation,
        documentContinue,
        checkNewContainers
      )(code3);
    }
    return checkNewContainers(code3);
  }
  function documentContinue(code3) {
    ok2(
      self2.containerState,
      "expected `containerState` to be defined after continuation"
    );
    continued++;
    if (self2.containerState._closeFlow) {
      self2.containerState._closeFlow = void 0;
      if (childFlow) {
        closeFlow();
      }
      const indexBeforeExits = self2.events.length;
      let indexBeforeFlow = indexBeforeExits;
      let point5;
      while (indexBeforeFlow--) {
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === types.chunkFlow) {
          point5 = self2.events[indexBeforeFlow][1].end;
          break;
        }
      }
      ok2(point5, "could not find previous flow chunk");
      exitContainers(continued);
      let index5 = indexBeforeExits;
      while (index5 < self2.events.length) {
        self2.events[index5][1].end = Object.assign({}, point5);
        index5++;
      }
      splice(
        self2.events,
        indexBeforeFlow + 1,
        0,
        self2.events.slice(indexBeforeExits)
      );
      self2.events.length = index5;
      return checkNewContainers(code3);
    }
    return start2(code3);
  }
  function checkNewContainers(code3) {
    if (continued === stack.length) {
      if (!childFlow) {
        return documentContinued(code3);
      }
      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {
        return flowStart(code3);
      }
      self2.interrupt = Boolean(
        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack
      );
    }
    self2.containerState = {};
    return effects.check(
      containerConstruct,
      thereIsANewContainer,
      thereIsNoNewContainer
    )(code3);
  }
  function thereIsANewContainer(code3) {
    if (childFlow)
      closeFlow();
    exitContainers(continued);
    return documentContinued(code3);
  }
  function thereIsNoNewContainer(code3) {
    self2.parser.lazy[self2.now().line] = continued !== stack.length;
    lineStartOffset = self2.now().offset;
    return flowStart(code3);
  }
  function documentContinued(code3) {
    self2.containerState = {};
    return effects.attempt(
      containerConstruct,
      containerContinue,
      flowStart
    )(code3);
  }
  function containerContinue(code3) {
    ok2(
      self2.currentConstruct,
      "expected `currentConstruct` to be defined on tokenizer"
    );
    ok2(
      self2.containerState,
      "expected `containerState` to be defined on tokenizer"
    );
    continued++;
    stack.push([self2.currentConstruct, self2.containerState]);
    return documentContinued(code3);
  }
  function flowStart(code3) {
    if (code3 === codes.eof) {
      if (childFlow)
        closeFlow();
      exitContainers(0);
      effects.consume(code3);
      return;
    }
    childFlow = childFlow || self2.parser.flow(self2.now());
    effects.enter(types.chunkFlow, {
      contentType: constants.contentTypeFlow,
      previous: childToken,
      _tokenizer: childFlow
    });
    return flowContinue(code3);
  }
  function flowContinue(code3) {
    if (code3 === codes.eof) {
      writeToChild(effects.exit(types.chunkFlow), true);
      exitContainers(0);
      effects.consume(code3);
      return;
    }
    if (markdownLineEnding(code3)) {
      effects.consume(code3);
      writeToChild(effects.exit(types.chunkFlow));
      continued = 0;
      self2.interrupt = void 0;
      return start2;
    }
    effects.consume(code3);
    return flowContinue;
  }
  function writeToChild(token, eof) {
    ok2(childFlow, "expected `childFlow` to be defined when continuing");
    const stream = self2.sliceStream(token);
    if (eof)
      stream.push(null);
    token.previous = childToken;
    if (childToken)
      childToken.next = token;
    childToken = token;
    childFlow.defineSkip(token.start);
    childFlow.write(stream);
    if (self2.parser.lazy[token.start.line]) {
      let index5 = childFlow.events.length;
      while (index5--) {
        if (
          // The token starts before the line ending…
          childFlow.events[index5][1].start.offset < lineStartOffset && // …and either is not ended yet…
          (!childFlow.events[index5][1].end || // …or ends after it.
          childFlow.events[index5][1].end.offset > lineStartOffset)
        ) {
          return;
        }
      }
      const indexBeforeExits = self2.events.length;
      let indexBeforeFlow = indexBeforeExits;
      let seen;
      let point5;
      while (indexBeforeFlow--) {
        if (self2.events[indexBeforeFlow][0] === "exit" && self2.events[indexBeforeFlow][1].type === types.chunkFlow) {
          if (seen) {
            point5 = self2.events[indexBeforeFlow][1].end;
            break;
          }
          seen = true;
        }
      }
      ok2(point5, "could not find previous flow chunk");
      exitContainers(continued);
      index5 = indexBeforeExits;
      while (index5 < self2.events.length) {
        self2.events[index5][1].end = Object.assign({}, point5);
        index5++;
      }
      splice(
        self2.events,
        indexBeforeFlow + 1,
        0,
        self2.events.slice(indexBeforeExits)
      );
      self2.events.length = index5;
    }
  }
  function exitContainers(size) {
    let index5 = stack.length;
    while (index5-- > size) {
      const entry = stack[index5];
      self2.containerState = entry[1];
      ok2(
        entry[0].exit,
        "expected `exit` to be defined on container construct"
      );
      entry[0].exit.call(self2, effects);
    }
    stack.length = size;
  }
  function closeFlow() {
    ok2(
      self2.containerState,
      "expected `containerState` to be defined when closing flow"
    );
    ok2(childFlow, "expected `childFlow` to be defined when closing it");
    childFlow.write([codes.eof]);
    childToken = void 0;
    childFlow = void 0;
    self2.containerState._closeFlow = void 0;
  }
}
function tokenizeContainer(effects, ok3, nok) {
  ok2(
    this.parser.constructs.disable.null,
    "expected `disable.null` to be populated"
  );
  return factorySpace(
    effects,
    effects.attempt(this.parser.constructs.document, ok3, nok),
    types.linePrefix,
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
  );
}

// node_modules/micromark-util-classify-character/dev/index.js
function classifyCharacter(code3) {
  if (code3 === codes.eof || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3)) {
    return constants.characterGroupWhitespace;
  }
  if (unicodePunctuation(code3)) {
    return constants.characterGroupPunctuation;
  }
}

// node_modules/micromark-util-resolve-all/index.js
function resolveAll(constructs2, events, context) {
  const called = [];
  let index5 = -1;
  while (++index5 < constructs2.length) {
    const resolve = constructs2[index5].resolveAll;
    if (resolve && !called.includes(resolve)) {
      events = resolve(events, context);
      called.push(resolve);
    }
  }
  return events;
}

// node_modules/micromark-core-commonmark/dev/lib/attention.js
var attention = {
  name: "attention",
  tokenize: tokenizeAttention,
  resolveAll: resolveAllAttention
};
function resolveAllAttention(events, context) {
  let index5 = -1;
  let open;
  let group;
  let text5;
  let openingSequence;
  let closingSequence;
  let use;
  let nextEvents;
  let offset2;
  while (++index5 < events.length) {
    if (events[index5][0] === "enter" && events[index5][1].type === "attentionSequence" && events[index5][1]._close) {
      open = index5;
      while (open--) {
        if (events[open][0] === "exit" && events[open][1].type === "attentionSequence" && events[open][1]._open && // If the markers are the same:
        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index5][1]).charCodeAt(0)) {
          if ((events[open][1]._close || events[index5][1]._open) && (events[index5][1].end.offset - events[index5][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index5][1].end.offset - events[index5][1].start.offset) % 3)) {
            continue;
          }
          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index5][1].end.offset - events[index5][1].start.offset > 1 ? 2 : 1;
          const start2 = Object.assign({}, events[open][1].end);
          const end2 = Object.assign({}, events[index5][1].start);
          movePoint(start2, -use);
          movePoint(end2, use);
          openingSequence = {
            type: use > 1 ? types.strongSequence : types.emphasisSequence,
            start: start2,
            end: Object.assign({}, events[open][1].end)
          };
          closingSequence = {
            type: use > 1 ? types.strongSequence : types.emphasisSequence,
            start: Object.assign({}, events[index5][1].start),
            end: end2
          };
          text5 = {
            type: use > 1 ? types.strongText : types.emphasisText,
            start: Object.assign({}, events[open][1].end),
            end: Object.assign({}, events[index5][1].start)
          };
          group = {
            type: use > 1 ? types.strong : types.emphasis,
            start: Object.assign({}, openingSequence.start),
            end: Object.assign({}, closingSequence.end)
          };
          events[open][1].end = Object.assign({}, openingSequence.start);
          events[index5][1].start = Object.assign({}, closingSequence.end);
          nextEvents = [];
          if (events[open][1].end.offset - events[open][1].start.offset) {
            nextEvents = push(nextEvents, [
              ["enter", events[open][1], context],
              ["exit", events[open][1], context]
            ]);
          }
          nextEvents = push(nextEvents, [
            ["enter", group, context],
            ["enter", openingSequence, context],
            ["exit", openingSequence, context],
            ["enter", text5, context]
          ]);
          ok2(
            context.parser.constructs.insideSpan.null,
            "expected `insideSpan` to be populated"
          );
          nextEvents = push(
            nextEvents,
            resolveAll(
              context.parser.constructs.insideSpan.null,
              events.slice(open + 1, index5),
              context
            )
          );
          nextEvents = push(nextEvents, [
            ["exit", text5, context],
            ["enter", closingSequence, context],
            ["exit", closingSequence, context],
            ["exit", group, context]
          ]);
          if (events[index5][1].end.offset - events[index5][1].start.offset) {
            offset2 = 2;
            nextEvents = push(nextEvents, [
              ["enter", events[index5][1], context],
              ["exit", events[index5][1], context]
            ]);
          } else {
            offset2 = 0;
          }
          splice(events, open - 1, index5 - open + 3, nextEvents);
          index5 = open + nextEvents.length - offset2 - 2;
          break;
        }
      }
    }
  }
  index5 = -1;
  while (++index5 < events.length) {
    if (events[index5][1].type === "attentionSequence") {
      events[index5][1].type = "data";
    }
  }
  return events;
}
function tokenizeAttention(effects, ok3) {
  const attentionMarkers2 = this.parser.constructs.attentionMarkers.null;
  const previous3 = this.previous;
  const before = classifyCharacter(previous3);
  let marker;
  return start2;
  function start2(code3) {
    ok2(
      code3 === codes.asterisk || code3 === codes.underscore,
      "expected asterisk or underscore"
    );
    marker = code3;
    effects.enter("attentionSequence");
    return inside(code3);
  }
  function inside(code3) {
    if (code3 === marker) {
      effects.consume(code3);
      return inside;
    }
    const token = effects.exit("attentionSequence");
    const after = classifyCharacter(code3);
    ok2(attentionMarkers2, "expected `attentionMarkers` to be populated");
    const open = !after || after === constants.characterGroupPunctuation && before || attentionMarkers2.includes(code3);
    const close = !before || before === constants.characterGroupPunctuation && after || attentionMarkers2.includes(previous3);
    token._open = Boolean(
      marker === codes.asterisk ? open : open && (before || !close)
    );
    token._close = Boolean(
      marker === codes.asterisk ? close : close && (after || !open)
    );
    return ok3(code3);
  }
}
function movePoint(point5, offset2) {
  point5.column += offset2;
  point5.offset += offset2;
  point5._bufferIndex += offset2;
}

// node_modules/micromark-core-commonmark/dev/lib/autolink.js
var autolink = { name: "autolink", tokenize: tokenizeAutolink };
function tokenizeAutolink(effects, ok3, nok) {
  let size = 0;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.lessThan, "expected `<`");
    effects.enter(types.autolink);
    effects.enter(types.autolinkMarker);
    effects.consume(code3);
    effects.exit(types.autolinkMarker);
    effects.enter(types.autolinkProtocol);
    return open;
  }
  function open(code3) {
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      return schemeOrEmailAtext;
    }
    return emailAtext(code3);
  }
  function schemeOrEmailAtext(code3) {
    if (code3 === codes.plusSign || code3 === codes.dash || code3 === codes.dot || asciiAlphanumeric(code3)) {
      size = 1;
      return schemeInsideOrEmailAtext(code3);
    }
    return emailAtext(code3);
  }
  function schemeInsideOrEmailAtext(code3) {
    if (code3 === codes.colon) {
      effects.consume(code3);
      size = 0;
      return urlInside;
    }
    if ((code3 === codes.plusSign || code3 === codes.dash || code3 === codes.dot || asciiAlphanumeric(code3)) && size++ < constants.autolinkSchemeSizeMax) {
      effects.consume(code3);
      return schemeInsideOrEmailAtext;
    }
    size = 0;
    return emailAtext(code3);
  }
  function urlInside(code3) {
    if (code3 === codes.greaterThan) {
      effects.exit(types.autolinkProtocol);
      effects.enter(types.autolinkMarker);
      effects.consume(code3);
      effects.exit(types.autolinkMarker);
      effects.exit(types.autolink);
      return ok3;
    }
    if (code3 === codes.eof || code3 === codes.space || code3 === codes.lessThan || asciiControl(code3)) {
      return nok(code3);
    }
    effects.consume(code3);
    return urlInside;
  }
  function emailAtext(code3) {
    if (code3 === codes.atSign) {
      effects.consume(code3);
      return emailAtSignOrDot;
    }
    if (asciiAtext(code3)) {
      effects.consume(code3);
      return emailAtext;
    }
    return nok(code3);
  }
  function emailAtSignOrDot(code3) {
    return asciiAlphanumeric(code3) ? emailLabel(code3) : nok(code3);
  }
  function emailLabel(code3) {
    if (code3 === codes.dot) {
      effects.consume(code3);
      size = 0;
      return emailAtSignOrDot;
    }
    if (code3 === codes.greaterThan) {
      effects.exit(types.autolinkProtocol).type = types.autolinkEmail;
      effects.enter(types.autolinkMarker);
      effects.consume(code3);
      effects.exit(types.autolinkMarker);
      effects.exit(types.autolink);
      return ok3;
    }
    return emailValue(code3);
  }
  function emailValue(code3) {
    if ((code3 === codes.dash || asciiAlphanumeric(code3)) && size++ < constants.autolinkDomainSizeMax) {
      const next = code3 === codes.dash ? emailValue : emailLabel;
      effects.consume(code3);
      return next;
    }
    return nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/blank-line.js
var blankLine = { tokenize: tokenizeBlankLine, partial: true };
function tokenizeBlankLine(effects, ok3, nok) {
  return start2;
  function start2(code3) {
    return markdownSpace(code3) ? factorySpace(effects, after, types.linePrefix)(code3) : after(code3);
  }
  function after(code3) {
    return code3 === codes.eof || markdownLineEnding(code3) ? ok3(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/block-quote.js
var blockQuote = {
  name: "blockQuote",
  tokenize: tokenizeBlockQuoteStart,
  continuation: { tokenize: tokenizeBlockQuoteContinuation },
  exit
};
function tokenizeBlockQuoteStart(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    if (code3 === codes.greaterThan) {
      const state = self2.containerState;
      ok2(state, "expected `containerState` to be defined in container");
      if (!state.open) {
        effects.enter(types.blockQuote, { _container: true });
        state.open = true;
      }
      effects.enter(types.blockQuotePrefix);
      effects.enter(types.blockQuoteMarker);
      effects.consume(code3);
      effects.exit(types.blockQuoteMarker);
      return after;
    }
    return nok(code3);
  }
  function after(code3) {
    if (markdownSpace(code3)) {
      effects.enter(types.blockQuotePrefixWhitespace);
      effects.consume(code3);
      effects.exit(types.blockQuotePrefixWhitespace);
      effects.exit(types.blockQuotePrefix);
      return ok3;
    }
    effects.exit(types.blockQuotePrefix);
    return ok3(code3);
  }
}
function tokenizeBlockQuoteContinuation(effects, ok3, nok) {
  const self2 = this;
  return contStart;
  function contStart(code3) {
    if (markdownSpace(code3)) {
      ok2(
        self2.parser.constructs.disable.null,
        "expected `disable.null` to be populated"
      );
      return factorySpace(
        effects,
        contBefore,
        types.linePrefix,
        self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
      )(code3);
    }
    return contBefore(code3);
  }
  function contBefore(code3) {
    return effects.attempt(blockQuote, ok3, nok)(code3);
  }
}
function exit(effects) {
  effects.exit(types.blockQuote);
}

// node_modules/micromark-core-commonmark/dev/lib/character-escape.js
var characterEscape = {
  name: "characterEscape",
  tokenize: tokenizeCharacterEscape
};
function tokenizeCharacterEscape(effects, ok3, nok) {
  return start2;
  function start2(code3) {
    ok2(code3 === codes.backslash, "expected `\\`");
    effects.enter(types.characterEscape);
    effects.enter(types.escapeMarker);
    effects.consume(code3);
    effects.exit(types.escapeMarker);
    return inside;
  }
  function inside(code3) {
    if (asciiPunctuation(code3)) {
      effects.enter(types.characterEscapeValue);
      effects.consume(code3);
      effects.exit(types.characterEscapeValue);
      effects.exit(types.characterEscape);
      return ok3;
    }
    return nok(code3);
  }
}

// node_modules/decode-named-character-reference/index.dom.js
var element2 = document.createElement("i");
function decodeNamedCharacterReference(value) {
  const characterReference2 = "&" + value + ";";
  element2.innerHTML = characterReference2;
  const char = element2.textContent;
  if (char.charCodeAt(char.length - 1) === 59 && value !== "semi") {
    return false;
  }
  return char === characterReference2 ? false : char;
}

// node_modules/micromark-core-commonmark/dev/lib/character-reference.js
var characterReference = {
  name: "characterReference",
  tokenize: tokenizeCharacterReference
};
function tokenizeCharacterReference(effects, ok3, nok) {
  const self2 = this;
  let size = 0;
  let max2;
  let test2;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.ampersand, "expected `&`");
    effects.enter(types.characterReference);
    effects.enter(types.characterReferenceMarker);
    effects.consume(code3);
    effects.exit(types.characterReferenceMarker);
    return open;
  }
  function open(code3) {
    if (code3 === codes.numberSign) {
      effects.enter(types.characterReferenceMarkerNumeric);
      effects.consume(code3);
      effects.exit(types.characterReferenceMarkerNumeric);
      return numeric2;
    }
    effects.enter(types.characterReferenceValue);
    max2 = constants.characterReferenceNamedSizeMax;
    test2 = asciiAlphanumeric;
    return value(code3);
  }
  function numeric2(code3) {
    if (code3 === codes.uppercaseX || code3 === codes.lowercaseX) {
      effects.enter(types.characterReferenceMarkerHexadecimal);
      effects.consume(code3);
      effects.exit(types.characterReferenceMarkerHexadecimal);
      effects.enter(types.characterReferenceValue);
      max2 = constants.characterReferenceHexadecimalSizeMax;
      test2 = asciiHexDigit;
      return value;
    }
    effects.enter(types.characterReferenceValue);
    max2 = constants.characterReferenceDecimalSizeMax;
    test2 = asciiDigit;
    return value(code3);
  }
  function value(code3) {
    if (code3 === codes.semicolon && size) {
      const token = effects.exit(types.characterReferenceValue);
      if (test2 === asciiAlphanumeric && !decodeNamedCharacterReference(self2.sliceSerialize(token))) {
        return nok(code3);
      }
      effects.enter(types.characterReferenceMarker);
      effects.consume(code3);
      effects.exit(types.characterReferenceMarker);
      effects.exit(types.characterReference);
      return ok3;
    }
    if (test2(code3) && size++ < max2) {
      effects.consume(code3);
      return value;
    }
    return nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/code-fenced.js
var nonLazyContinuation = {
  tokenize: tokenizeNonLazyContinuation,
  partial: true
};
var codeFenced = {
  name: "codeFenced",
  tokenize: tokenizeCodeFenced,
  concrete: true
};
function tokenizeCodeFenced(effects, ok3, nok) {
  const self2 = this;
  const closeStart = { tokenize: tokenizeCloseStart, partial: true };
  let initialPrefix = 0;
  let sizeOpen = 0;
  let marker;
  return start2;
  function start2(code3) {
    return beforeSequenceOpen(code3);
  }
  function beforeSequenceOpen(code3) {
    ok2(
      code3 === codes.graveAccent || code3 === codes.tilde,
      "expected `` ` `` or `~`"
    );
    const tail = self2.events[self2.events.length - 1];
    initialPrefix = tail && tail[1].type === types.linePrefix ? tail[2].sliceSerialize(tail[1], true).length : 0;
    marker = code3;
    effects.enter(types.codeFenced);
    effects.enter(types.codeFencedFence);
    effects.enter(types.codeFencedFenceSequence);
    return sequenceOpen(code3);
  }
  function sequenceOpen(code3) {
    if (code3 === marker) {
      sizeOpen++;
      effects.consume(code3);
      return sequenceOpen;
    }
    if (sizeOpen < constants.codeFencedSequenceSizeMin) {
      return nok(code3);
    }
    effects.exit(types.codeFencedFenceSequence);
    return markdownSpace(code3) ? factorySpace(effects, infoBefore, types.whitespace)(code3) : infoBefore(code3);
  }
  function infoBefore(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.codeFencedFence);
      return self2.interrupt ? ok3(code3) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code3);
    }
    effects.enter(types.codeFencedFenceInfo);
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return info(code3);
  }
  function info(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.chunkString);
      effects.exit(types.codeFencedFenceInfo);
      return infoBefore(code3);
    }
    if (markdownSpace(code3)) {
      effects.exit(types.chunkString);
      effects.exit(types.codeFencedFenceInfo);
      return factorySpace(effects, metaBefore, types.whitespace)(code3);
    }
    if (code3 === codes.graveAccent && code3 === marker) {
      return nok(code3);
    }
    effects.consume(code3);
    return info;
  }
  function metaBefore(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return infoBefore(code3);
    }
    effects.enter(types.codeFencedFenceMeta);
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return meta(code3);
  }
  function meta(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.chunkString);
      effects.exit(types.codeFencedFenceMeta);
      return infoBefore(code3);
    }
    if (code3 === codes.graveAccent && code3 === marker) {
      return nok(code3);
    }
    effects.consume(code3);
    return meta;
  }
  function atNonLazyBreak(code3) {
    ok2(markdownLineEnding(code3), "expected eol");
    return effects.attempt(closeStart, after, contentBefore)(code3);
  }
  function contentBefore(code3) {
    ok2(markdownLineEnding(code3), "expected eol");
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return contentStart;
  }
  function contentStart(code3) {
    return initialPrefix > 0 && markdownSpace(code3) ? factorySpace(
      effects,
      beforeContentChunk,
      types.linePrefix,
      initialPrefix + 1
    )(code3) : beforeContentChunk(code3);
  }
  function beforeContentChunk(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code3);
    }
    effects.enter(types.codeFlowValue);
    return contentChunk(code3);
  }
  function contentChunk(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.codeFlowValue);
      return beforeContentChunk(code3);
    }
    effects.consume(code3);
    return contentChunk;
  }
  function after(code3) {
    effects.exit(types.codeFenced);
    return ok3(code3);
  }
  function tokenizeCloseStart(effects2, ok4, nok2) {
    let size = 0;
    return startBefore;
    function startBefore(code3) {
      ok2(markdownLineEnding(code3), "expected eol");
      effects2.enter(types.lineEnding);
      effects2.consume(code3);
      effects2.exit(types.lineEnding);
      return start3;
    }
    function start3(code3) {
      ok2(
        self2.parser.constructs.disable.null,
        "expected `disable.null` to be populated"
      );
      effects2.enter(types.codeFencedFence);
      return markdownSpace(code3) ? factorySpace(
        effects2,
        beforeSequenceClose,
        types.linePrefix,
        self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
      )(code3) : beforeSequenceClose(code3);
    }
    function beforeSequenceClose(code3) {
      if (code3 === marker) {
        effects2.enter(types.codeFencedFenceSequence);
        return sequenceClose(code3);
      }
      return nok2(code3);
    }
    function sequenceClose(code3) {
      if (code3 === marker) {
        size++;
        effects2.consume(code3);
        return sequenceClose;
      }
      if (size >= sizeOpen) {
        effects2.exit(types.codeFencedFenceSequence);
        return markdownSpace(code3) ? factorySpace(effects2, sequenceCloseAfter, types.whitespace)(code3) : sequenceCloseAfter(code3);
      }
      return nok2(code3);
    }
    function sequenceCloseAfter(code3) {
      if (code3 === codes.eof || markdownLineEnding(code3)) {
        effects2.exit(types.codeFencedFence);
        return ok4(code3);
      }
      return nok2(code3);
    }
  }
}
function tokenizeNonLazyContinuation(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    ok2(markdownLineEnding(code3), "expected eol");
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return lineStart;
  }
  function lineStart(code3) {
    return self2.parser.lazy[self2.now().line] ? nok(code3) : ok3(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/code-indented.js
var codeIndented = {
  name: "codeIndented",
  tokenize: tokenizeCodeIndented
};
var furtherStart = { tokenize: tokenizeFurtherStart, partial: true };
function tokenizeCodeIndented(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    ok2(markdownSpace(code3));
    effects.enter(types.codeIndented);
    return factorySpace(
      effects,
      afterPrefix,
      types.linePrefix,
      constants.tabSize + 1
    )(code3);
  }
  function afterPrefix(code3) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize ? atBreak(code3) : nok(code3);
  }
  function atBreak(code3) {
    if (code3 === codes.eof) {
      return after(code3);
    }
    if (markdownLineEnding(code3)) {
      return effects.attempt(furtherStart, atBreak, after)(code3);
    }
    effects.enter(types.codeFlowValue);
    return inside(code3);
  }
  function inside(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.codeFlowValue);
      return atBreak(code3);
    }
    effects.consume(code3);
    return inside;
  }
  function after(code3) {
    effects.exit(types.codeIndented);
    return ok3(code3);
  }
}
function tokenizeFurtherStart(effects, ok3, nok) {
  const self2 = this;
  return furtherStart2;
  function furtherStart2(code3) {
    if (self2.parser.lazy[self2.now().line]) {
      return nok(code3);
    }
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      return furtherStart2;
    }
    return factorySpace(
      effects,
      afterPrefix,
      types.linePrefix,
      constants.tabSize + 1
    )(code3);
  }
  function afterPrefix(code3) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize ? ok3(code3) : markdownLineEnding(code3) ? furtherStart2(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/code-text.js
var codeText = {
  name: "codeText",
  tokenize: tokenizeCodeText,
  resolve: resolveCodeText,
  previous
};
function resolveCodeText(events) {
  let tailExitIndex = events.length - 4;
  let headEnterIndex = 3;
  let index5;
  let enter;
  if ((events[headEnterIndex][1].type === types.lineEnding || events[headEnterIndex][1].type === "space") && (events[tailExitIndex][1].type === types.lineEnding || events[tailExitIndex][1].type === "space")) {
    index5 = headEnterIndex;
    while (++index5 < tailExitIndex) {
      if (events[index5][1].type === types.codeTextData) {
        events[headEnterIndex][1].type = types.codeTextPadding;
        events[tailExitIndex][1].type = types.codeTextPadding;
        headEnterIndex += 2;
        tailExitIndex -= 2;
        break;
      }
    }
  }
  index5 = headEnterIndex - 1;
  tailExitIndex++;
  while (++index5 <= tailExitIndex) {
    if (enter === void 0) {
      if (index5 !== tailExitIndex && events[index5][1].type !== types.lineEnding) {
        enter = index5;
      }
    } else if (index5 === tailExitIndex || events[index5][1].type === types.lineEnding) {
      events[enter][1].type = types.codeTextData;
      if (index5 !== enter + 2) {
        events[enter][1].end = events[index5 - 1][1].end;
        events.splice(enter + 2, index5 - enter - 2);
        tailExitIndex -= index5 - enter - 2;
        index5 = enter + 2;
      }
      enter = void 0;
    }
  }
  return events;
}
function previous(code3) {
  return code3 !== codes.graveAccent || this.events[this.events.length - 1][1].type === types.characterEscape;
}
function tokenizeCodeText(effects, ok3, nok) {
  const self2 = this;
  let sizeOpen = 0;
  let size;
  let token;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.graveAccent, "expected `` ` ``");
    ok2(previous.call(self2, self2.previous), "expected correct previous");
    effects.enter(types.codeText);
    effects.enter(types.codeTextSequence);
    return sequenceOpen(code3);
  }
  function sequenceOpen(code3) {
    if (code3 === codes.graveAccent) {
      effects.consume(code3);
      sizeOpen++;
      return sequenceOpen;
    }
    effects.exit(types.codeTextSequence);
    return between2(code3);
  }
  function between2(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (code3 === codes.space) {
      effects.enter("space");
      effects.consume(code3);
      effects.exit("space");
      return between2;
    }
    if (code3 === codes.graveAccent) {
      token = effects.enter(types.codeTextSequence);
      size = 0;
      return sequenceClose(code3);
    }
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      return between2;
    }
    effects.enter(types.codeTextData);
    return data(code3);
  }
  function data(code3) {
    if (code3 === codes.eof || code3 === codes.space || code3 === codes.graveAccent || markdownLineEnding(code3)) {
      effects.exit(types.codeTextData);
      return between2(code3);
    }
    effects.consume(code3);
    return data;
  }
  function sequenceClose(code3) {
    if (code3 === codes.graveAccent) {
      effects.consume(code3);
      size++;
      return sequenceClose;
    }
    if (size === sizeOpen) {
      effects.exit(types.codeTextSequence);
      effects.exit(types.codeText);
      return ok3(code3);
    }
    token.type = types.codeTextData;
    return data(code3);
  }
}

// node_modules/micromark-util-subtokenize/dev/index.js
function subtokenize(events) {
  const jumps = {};
  let index5 = -1;
  let event;
  let lineIndex;
  let otherIndex;
  let otherEvent;
  let parameters;
  let subevents;
  let more;
  while (++index5 < events.length) {
    while (index5 in jumps) {
      index5 = jumps[index5];
    }
    event = events[index5];
    if (index5 && event[1].type === types.chunkFlow && events[index5 - 1][1].type === types.listItemPrefix) {
      ok2(event[1]._tokenizer, "expected `_tokenizer` on subtokens");
      subevents = event[1]._tokenizer.events;
      otherIndex = 0;
      if (otherIndex < subevents.length && subevents[otherIndex][1].type === types.lineEndingBlank) {
        otherIndex += 2;
      }
      if (otherIndex < subevents.length && subevents[otherIndex][1].type === types.content) {
        while (++otherIndex < subevents.length) {
          if (subevents[otherIndex][1].type === types.content) {
            break;
          }
          if (subevents[otherIndex][1].type === types.chunkText) {
            subevents[otherIndex][1]._isInFirstContentOfListItem = true;
            otherIndex++;
          }
        }
      }
    }
    if (event[0] === "enter") {
      if (event[1].contentType) {
        Object.assign(jumps, subcontent(events, index5));
        index5 = jumps[index5];
        more = true;
      }
    } else if (event[1]._container) {
      otherIndex = index5;
      lineIndex = void 0;
      while (otherIndex--) {
        otherEvent = events[otherIndex];
        if (otherEvent[1].type === types.lineEnding || otherEvent[1].type === types.lineEndingBlank) {
          if (otherEvent[0] === "enter") {
            if (lineIndex) {
              events[lineIndex][1].type = types.lineEndingBlank;
            }
            otherEvent[1].type = types.lineEnding;
            lineIndex = otherIndex;
          }
        } else {
          break;
        }
      }
      if (lineIndex) {
        event[1].end = Object.assign({}, events[lineIndex][1].start);
        parameters = events.slice(lineIndex, index5);
        parameters.unshift(event);
        splice(events, lineIndex, index5 - lineIndex + 1, parameters);
      }
    }
  }
  return !more;
}
function subcontent(events, eventIndex) {
  const token = events[eventIndex][1];
  const context = events[eventIndex][2];
  let startPosition = eventIndex - 1;
  const startPositions = [];
  ok2(token.contentType, "expected `contentType` on subtokens");
  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);
  const childEvents = tokenizer.events;
  const jumps = [];
  const gaps = {};
  let stream;
  let previous3;
  let index5 = -1;
  let current = token;
  let adjust = 0;
  let start2 = 0;
  const breaks = [start2];
  while (current) {
    while (events[++startPosition][1] !== current) {
    }
    ok2(
      !previous3 || current.previous === previous3,
      "expected previous to match"
    );
    ok2(!previous3 || previous3.next === current, "expected next to match");
    startPositions.push(startPosition);
    if (!current._tokenizer) {
      stream = context.sliceStream(current);
      if (!current.next) {
        stream.push(codes.eof);
      }
      if (previous3) {
        tokenizer.defineSkip(current.start);
      }
      if (current._isInFirstContentOfListItem) {
        tokenizer._gfmTasklistFirstContentOfListItem = true;
      }
      tokenizer.write(stream);
      if (current._isInFirstContentOfListItem) {
        tokenizer._gfmTasklistFirstContentOfListItem = void 0;
      }
    }
    previous3 = current;
    current = current.next;
  }
  current = token;
  while (++index5 < childEvents.length) {
    if (
      // Find a void token that includes a break.
      childEvents[index5][0] === "exit" && childEvents[index5 - 1][0] === "enter" && childEvents[index5][1].type === childEvents[index5 - 1][1].type && childEvents[index5][1].start.line !== childEvents[index5][1].end.line
    ) {
      ok2(current, "expected a current token");
      start2 = index5 + 1;
      breaks.push(start2);
      current._tokenizer = void 0;
      current.previous = void 0;
      current = current.next;
    }
  }
  tokenizer.events = [];
  if (current) {
    current._tokenizer = void 0;
    current.previous = void 0;
    ok2(!current.next, "expected no next token");
  } else {
    breaks.pop();
  }
  index5 = breaks.length;
  while (index5--) {
    const slice = childEvents.slice(breaks[index5], breaks[index5 + 1]);
    const start3 = startPositions.pop();
    ok2(start3 !== void 0, "expected a start position when splicing");
    jumps.unshift([start3, start3 + slice.length - 1]);
    splice(events, start3, 2, slice);
  }
  index5 = -1;
  while (++index5 < jumps.length) {
    gaps[adjust + jumps[index5][0]] = adjust + jumps[index5][1];
    adjust += jumps[index5][1] - jumps[index5][0] - 1;
  }
  return gaps;
}

// node_modules/micromark-core-commonmark/dev/lib/content.js
var content2 = { tokenize: tokenizeContent, resolve: resolveContent };
var continuationConstruct = { tokenize: tokenizeContinuation, partial: true };
function resolveContent(events) {
  subtokenize(events);
  return events;
}
function tokenizeContent(effects, ok3) {
  let previous3;
  return chunkStart;
  function chunkStart(code3) {
    ok2(
      code3 !== codes.eof && !markdownLineEnding(code3),
      "expected no eof or eol"
    );
    effects.enter(types.content);
    previous3 = effects.enter(types.chunkContent, {
      contentType: constants.contentTypeContent
    });
    return chunkInside(code3);
  }
  function chunkInside(code3) {
    if (code3 === codes.eof) {
      return contentEnd(code3);
    }
    if (markdownLineEnding(code3)) {
      return effects.check(
        continuationConstruct,
        contentContinue,
        contentEnd
      )(code3);
    }
    effects.consume(code3);
    return chunkInside;
  }
  function contentEnd(code3) {
    effects.exit(types.chunkContent);
    effects.exit(types.content);
    return ok3(code3);
  }
  function contentContinue(code3) {
    ok2(markdownLineEnding(code3), "expected eol");
    effects.consume(code3);
    effects.exit(types.chunkContent);
    ok2(previous3, "expected previous token");
    previous3.next = effects.enter(types.chunkContent, {
      contentType: constants.contentTypeContent,
      previous: previous3
    });
    previous3 = previous3.next;
    return chunkInside;
  }
}
function tokenizeContinuation(effects, ok3, nok) {
  const self2 = this;
  return startLookahead;
  function startLookahead(code3) {
    ok2(markdownLineEnding(code3), "expected a line ending");
    effects.exit(types.chunkContent);
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return factorySpace(effects, prefixed, types.linePrefix);
  }
  function prefixed(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return nok(code3);
    }
    ok2(
      self2.parser.constructs.disable.null,
      "expected `disable.null` to be populated"
    );
    const tail = self2.events[self2.events.length - 1];
    if (!self2.parser.constructs.disable.null.includes("codeIndented") && tail && tail[1].type === types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize) {
      return ok3(code3);
    }
    return effects.interrupt(self2.parser.constructs.flow, nok, ok3)(code3);
  }
}

// node_modules/micromark-factory-destination/dev/index.js
function factoryDestination(effects, ok3, nok, type, literalType, literalMarkerType, rawType, stringType, max2) {
  const limit = max2 || Number.POSITIVE_INFINITY;
  let balance = 0;
  return start2;
  function start2(code3) {
    if (code3 === codes.lessThan) {
      effects.enter(type);
      effects.enter(literalType);
      effects.enter(literalMarkerType);
      effects.consume(code3);
      effects.exit(literalMarkerType);
      return enclosedBefore;
    }
    if (code3 === codes.eof || code3 === codes.space || code3 === codes.rightParenthesis || asciiControl(code3)) {
      return nok(code3);
    }
    effects.enter(type);
    effects.enter(rawType);
    effects.enter(stringType);
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return raw(code3);
  }
  function enclosedBefore(code3) {
    if (code3 === codes.greaterThan) {
      effects.enter(literalMarkerType);
      effects.consume(code3);
      effects.exit(literalMarkerType);
      effects.exit(literalType);
      effects.exit(type);
      return ok3;
    }
    effects.enter(stringType);
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return enclosed(code3);
  }
  function enclosed(code3) {
    if (code3 === codes.greaterThan) {
      effects.exit(types.chunkString);
      effects.exit(stringType);
      return enclosedBefore(code3);
    }
    if (code3 === codes.eof || code3 === codes.lessThan || markdownLineEnding(code3)) {
      return nok(code3);
    }
    effects.consume(code3);
    return code3 === codes.backslash ? enclosedEscape : enclosed;
  }
  function enclosedEscape(code3) {
    if (code3 === codes.lessThan || code3 === codes.greaterThan || code3 === codes.backslash) {
      effects.consume(code3);
      return enclosed;
    }
    return enclosed(code3);
  }
  function raw(code3) {
    if (!balance && (code3 === codes.eof || code3 === codes.rightParenthesis || markdownLineEndingOrSpace(code3))) {
      effects.exit(types.chunkString);
      effects.exit(stringType);
      effects.exit(rawType);
      effects.exit(type);
      return ok3(code3);
    }
    if (balance < limit && code3 === codes.leftParenthesis) {
      effects.consume(code3);
      balance++;
      return raw;
    }
    if (code3 === codes.rightParenthesis) {
      effects.consume(code3);
      balance--;
      return raw;
    }
    if (code3 === codes.eof || code3 === codes.space || code3 === codes.leftParenthesis || asciiControl(code3)) {
      return nok(code3);
    }
    effects.consume(code3);
    return code3 === codes.backslash ? rawEscape : raw;
  }
  function rawEscape(code3) {
    if (code3 === codes.leftParenthesis || code3 === codes.rightParenthesis || code3 === codes.backslash) {
      effects.consume(code3);
      return raw;
    }
    return raw(code3);
  }
}

// node_modules/micromark-factory-label/dev/index.js
function factoryLabel(effects, ok3, nok, type, markerType, stringType) {
  const self2 = this;
  let size = 0;
  let seen;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    effects.enter(type);
    effects.enter(markerType);
    effects.consume(code3);
    effects.exit(markerType);
    effects.enter(stringType);
    return atBreak;
  }
  function atBreak(code3) {
    if (size > constants.linkReferenceSizeMax || code3 === codes.eof || code3 === codes.leftSquareBracket || code3 === codes.rightSquareBracket && !seen || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    code3 === codes.caret && !size && "_hiddenFootnoteSupport" in self2.parser.constructs) {
      return nok(code3);
    }
    if (code3 === codes.rightSquareBracket) {
      effects.exit(stringType);
      effects.enter(markerType);
      effects.consume(code3);
      effects.exit(markerType);
      effects.exit(type);
      return ok3;
    }
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      return atBreak;
    }
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return labelInside(code3);
  }
  function labelInside(code3) {
    if (code3 === codes.eof || code3 === codes.leftSquareBracket || code3 === codes.rightSquareBracket || markdownLineEnding(code3) || size++ > constants.linkReferenceSizeMax) {
      effects.exit(types.chunkString);
      return atBreak(code3);
    }
    effects.consume(code3);
    if (!seen)
      seen = !markdownSpace(code3);
    return code3 === codes.backslash ? labelEscape : labelInside;
  }
  function labelEscape(code3) {
    if (code3 === codes.leftSquareBracket || code3 === codes.backslash || code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      size++;
      return labelInside;
    }
    return labelInside(code3);
  }
}

// node_modules/micromark-factory-title/dev/index.js
function factoryTitle(effects, ok3, nok, type, markerType, stringType) {
  let marker;
  return start2;
  function start2(code3) {
    if (code3 === codes.quotationMark || code3 === codes.apostrophe || code3 === codes.leftParenthesis) {
      effects.enter(type);
      effects.enter(markerType);
      effects.consume(code3);
      effects.exit(markerType);
      marker = code3 === codes.leftParenthesis ? codes.rightParenthesis : code3;
      return begin;
    }
    return nok(code3);
  }
  function begin(code3) {
    if (code3 === marker) {
      effects.enter(markerType);
      effects.consume(code3);
      effects.exit(markerType);
      effects.exit(type);
      return ok3;
    }
    effects.enter(stringType);
    return atBreak(code3);
  }
  function atBreak(code3) {
    if (code3 === marker) {
      effects.exit(stringType);
      return begin(marker);
    }
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      return factorySpace(effects, atBreak, types.linePrefix);
    }
    effects.enter(types.chunkString, { contentType: constants.contentTypeString });
    return inside(code3);
  }
  function inside(code3) {
    if (code3 === marker || code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.chunkString);
      return atBreak(code3);
    }
    effects.consume(code3);
    return code3 === codes.backslash ? escape : inside;
  }
  function escape(code3) {
    if (code3 === marker || code3 === codes.backslash) {
      effects.consume(code3);
      return inside;
    }
    return inside(code3);
  }
}

// node_modules/micromark-factory-whitespace/dev/index.js
function factoryWhitespace(effects, ok3) {
  let seen;
  return start2;
  function start2(code3) {
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      seen = true;
      return start2;
    }
    if (markdownSpace(code3)) {
      return factorySpace(
        effects,
        start2,
        seen ? types.linePrefix : types.lineSuffix
      )(code3);
    }
    return ok3(code3);
  }
}

// node_modules/micromark-util-symbol/values.js
var values = (
  /** @type {const} */
  {
    ht: "	",
    lf: "\n",
    cr: "\r",
    space: " ",
    exclamationMark: "!",
    quotationMark: '"',
    numberSign: "#",
    dollarSign: "$",
    percentSign: "%",
    ampersand: "&",
    apostrophe: "'",
    leftParenthesis: "(",
    rightParenthesis: ")",
    asterisk: "*",
    plusSign: "+",
    comma: ",",
    dash: "-",
    dot: ".",
    slash: "/",
    digit0: "0",
    digit1: "1",
    digit2: "2",
    digit3: "3",
    digit4: "4",
    digit5: "5",
    digit6: "6",
    digit7: "7",
    digit8: "8",
    digit9: "9",
    colon: ":",
    semicolon: ";",
    lessThan: "<",
    equalsTo: "=",
    greaterThan: ">",
    questionMark: "?",
    atSign: "@",
    uppercaseA: "A",
    uppercaseB: "B",
    uppercaseC: "C",
    uppercaseD: "D",
    uppercaseE: "E",
    uppercaseF: "F",
    uppercaseG: "G",
    uppercaseH: "H",
    uppercaseI: "I",
    uppercaseJ: "J",
    uppercaseK: "K",
    uppercaseL: "L",
    uppercaseM: "M",
    uppercaseN: "N",
    uppercaseO: "O",
    uppercaseP: "P",
    uppercaseQ: "Q",
    uppercaseR: "R",
    uppercaseS: "S",
    uppercaseT: "T",
    uppercaseU: "U",
    uppercaseV: "V",
    uppercaseW: "W",
    uppercaseX: "X",
    uppercaseY: "Y",
    uppercaseZ: "Z",
    leftSquareBracket: "[",
    backslash: "\\",
    rightSquareBracket: "]",
    caret: "^",
    underscore: "_",
    graveAccent: "`",
    lowercaseA: "a",
    lowercaseB: "b",
    lowercaseC: "c",
    lowercaseD: "d",
    lowercaseE: "e",
    lowercaseF: "f",
    lowercaseG: "g",
    lowercaseH: "h",
    lowercaseI: "i",
    lowercaseJ: "j",
    lowercaseK: "k",
    lowercaseL: "l",
    lowercaseM: "m",
    lowercaseN: "n",
    lowercaseO: "o",
    lowercaseP: "p",
    lowercaseQ: "q",
    lowercaseR: "r",
    lowercaseS: "s",
    lowercaseT: "t",
    lowercaseU: "u",
    lowercaseV: "v",
    lowercaseW: "w",
    lowercaseX: "x",
    lowercaseY: "y",
    lowercaseZ: "z",
    leftCurlyBrace: "{",
    verticalBar: "|",
    rightCurlyBrace: "}",
    tilde: "~",
    replacementCharacter: "�"
  }
);

// node_modules/micromark-util-normalize-identifier/dev/index.js
function normalizeIdentifier(value) {
  return value.replace(/[\t\n\r ]+/g, values.space).replace(/^ | $/g, "").toLowerCase().toUpperCase();
}

// node_modules/micromark-core-commonmark/dev/lib/definition.js
var definition = { name: "definition", tokenize: tokenizeDefinition };
var titleBefore = { tokenize: tokenizeTitleBefore, partial: true };
function tokenizeDefinition(effects, ok3, nok) {
  const self2 = this;
  let identifier;
  return start2;
  function start2(code3) {
    effects.enter(types.definition);
    return before(code3);
  }
  function before(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    return factoryLabel.call(
      self2,
      effects,
      labelAfter,
      // Note: we don’t need to reset the way `markdown-rs` does.
      nok,
      types.definitionLabel,
      types.definitionLabelMarker,
      types.definitionLabelString
    )(code3);
  }
  function labelAfter(code3) {
    identifier = normalizeIdentifier(
      self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1)
    );
    if (code3 === codes.colon) {
      effects.enter(types.definitionMarker);
      effects.consume(code3);
      effects.exit(types.definitionMarker);
      return markerAfter;
    }
    return nok(code3);
  }
  function markerAfter(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, destinationBefore)(code3) : destinationBefore(code3);
  }
  function destinationBefore(code3) {
    return factoryDestination(
      effects,
      destinationAfter,
      // Note: we don’t need to reset the way `markdown-rs` does.
      nok,
      types.definitionDestination,
      types.definitionDestinationLiteral,
      types.definitionDestinationLiteralMarker,
      types.definitionDestinationRaw,
      types.definitionDestinationString
    )(code3);
  }
  function destinationAfter(code3) {
    return effects.attempt(titleBefore, after, after)(code3);
  }
  function after(code3) {
    return markdownSpace(code3) ? factorySpace(effects, afterWhitespace, types.whitespace)(code3) : afterWhitespace(code3);
  }
  function afterWhitespace(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.definition);
      self2.parser.defined.push(identifier);
      return ok3(code3);
    }
    return nok(code3);
  }
}
function tokenizeTitleBefore(effects, ok3, nok) {
  return titleBefore2;
  function titleBefore2(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, beforeMarker)(code3) : nok(code3);
  }
  function beforeMarker(code3) {
    return factoryTitle(
      effects,
      titleAfter,
      nok,
      types.definitionTitle,
      types.definitionTitleMarker,
      types.definitionTitleString
    )(code3);
  }
  function titleAfter(code3) {
    return markdownSpace(code3) ? factorySpace(
      effects,
      titleAfterOptionalWhitespace,
      types.whitespace
    )(code3) : titleAfterOptionalWhitespace(code3);
  }
  function titleAfterOptionalWhitespace(code3) {
    return code3 === codes.eof || markdownLineEnding(code3) ? ok3(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js
var hardBreakEscape = {
  name: "hardBreakEscape",
  tokenize: tokenizeHardBreakEscape
};
function tokenizeHardBreakEscape(effects, ok3, nok) {
  return start2;
  function start2(code3) {
    ok2(code3 === codes.backslash, "expected `\\`");
    effects.enter(types.hardBreakEscape);
    effects.consume(code3);
    return after;
  }
  function after(code3) {
    if (markdownLineEnding(code3)) {
      effects.exit(types.hardBreakEscape);
      return ok3(code3);
    }
    return nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/heading-atx.js
var headingAtx = {
  name: "headingAtx",
  tokenize: tokenizeHeadingAtx,
  resolve: resolveHeadingAtx
};
function resolveHeadingAtx(events, context) {
  let contentEnd = events.length - 2;
  let contentStart = 3;
  let content3;
  let text5;
  if (events[contentStart][1].type === types.whitespace) {
    contentStart += 2;
  }
  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === types.whitespace) {
    contentEnd -= 2;
  }
  if (events[contentEnd][1].type === types.atxHeadingSequence && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === types.whitespace)) {
    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;
  }
  if (contentEnd > contentStart) {
    content3 = {
      type: types.atxHeadingText,
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end
    };
    text5 = {
      type: types.chunkText,
      start: events[contentStart][1].start,
      end: events[contentEnd][1].end,
      contentType: constants.contentTypeText
    };
    splice(events, contentStart, contentEnd - contentStart + 1, [
      ["enter", content3, context],
      ["enter", text5, context],
      ["exit", text5, context],
      ["exit", content3, context]
    ]);
  }
  return events;
}
function tokenizeHeadingAtx(effects, ok3, nok) {
  let size = 0;
  return start2;
  function start2(code3) {
    effects.enter(types.atxHeading);
    return before(code3);
  }
  function before(code3) {
    ok2(code3 === codes.numberSign, "expected `#`");
    effects.enter(types.atxHeadingSequence);
    return sequenceOpen(code3);
  }
  function sequenceOpen(code3) {
    if (code3 === codes.numberSign && size++ < constants.atxHeadingOpeningFenceSizeMax) {
      effects.consume(code3);
      return sequenceOpen;
    }
    if (code3 === codes.eof || markdownLineEndingOrSpace(code3)) {
      effects.exit(types.atxHeadingSequence);
      return atBreak(code3);
    }
    return nok(code3);
  }
  function atBreak(code3) {
    if (code3 === codes.numberSign) {
      effects.enter(types.atxHeadingSequence);
      return sequenceFurther(code3);
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.atxHeading);
      return ok3(code3);
    }
    if (markdownSpace(code3)) {
      return factorySpace(effects, atBreak, types.whitespace)(code3);
    }
    effects.enter(types.atxHeadingText);
    return data(code3);
  }
  function sequenceFurther(code3) {
    if (code3 === codes.numberSign) {
      effects.consume(code3);
      return sequenceFurther;
    }
    effects.exit(types.atxHeadingSequence);
    return atBreak(code3);
  }
  function data(code3) {
    if (code3 === codes.eof || code3 === codes.numberSign || markdownLineEndingOrSpace(code3)) {
      effects.exit(types.atxHeadingText);
      return atBreak(code3);
    }
    effects.consume(code3);
    return data;
  }
}

// node_modules/micromark-util-html-tag-name/index.js
var htmlBlockNames = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "search",
  "section",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
];
var htmlRawNames = ["pre", "script", "style", "textarea"];

// node_modules/micromark-core-commonmark/dev/lib/html-flow.js
var htmlFlow = {
  name: "htmlFlow",
  tokenize: tokenizeHtmlFlow,
  resolveTo: resolveToHtmlFlow,
  concrete: true
};
var blankLineBefore = { tokenize: tokenizeBlankLineBefore, partial: true };
var nonLazyContinuationStart = {
  tokenize: tokenizeNonLazyContinuationStart,
  partial: true
};
function resolveToHtmlFlow(events) {
  let index5 = events.length;
  while (index5--) {
    if (events[index5][0] === "enter" && events[index5][1].type === types.htmlFlow) {
      break;
    }
  }
  if (index5 > 1 && events[index5 - 2][1].type === types.linePrefix) {
    events[index5][1].start = events[index5 - 2][1].start;
    events[index5 + 1][1].start = events[index5 - 2][1].start;
    events.splice(index5 - 2, 2);
  }
  return events;
}
function tokenizeHtmlFlow(effects, ok3, nok) {
  const self2 = this;
  let marker;
  let closingTag;
  let buffer2;
  let index5;
  let markerB;
  return start2;
  function start2(code3) {
    return before(code3);
  }
  function before(code3) {
    ok2(code3 === codes.lessThan, "expected `<`");
    effects.enter(types.htmlFlow);
    effects.enter(types.htmlFlowData);
    effects.consume(code3);
    return open;
  }
  function open(code3) {
    if (code3 === codes.exclamationMark) {
      effects.consume(code3);
      return declarationOpen;
    }
    if (code3 === codes.slash) {
      effects.consume(code3);
      closingTag = true;
      return tagCloseStart;
    }
    if (code3 === codes.questionMark) {
      effects.consume(code3);
      marker = constants.htmlInstruction;
      return self2.interrupt ? ok3 : continuationDeclarationInside;
    }
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      buffer2 = String.fromCharCode(code3);
      return tagName;
    }
    return nok(code3);
  }
  function declarationOpen(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      marker = constants.htmlComment;
      return commentOpenInside;
    }
    if (code3 === codes.leftSquareBracket) {
      effects.consume(code3);
      marker = constants.htmlCdata;
      index5 = 0;
      return cdataOpenInside;
    }
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      marker = constants.htmlDeclaration;
      return self2.interrupt ? ok3 : continuationDeclarationInside;
    }
    return nok(code3);
  }
  function commentOpenInside(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return self2.interrupt ? ok3 : continuationDeclarationInside;
    }
    return nok(code3);
  }
  function cdataOpenInside(code3) {
    const value = constants.cdataOpeningString;
    if (code3 === value.charCodeAt(index5++)) {
      effects.consume(code3);
      if (index5 === value.length) {
        return self2.interrupt ? ok3 : continuation;
      }
      return cdataOpenInside;
    }
    return nok(code3);
  }
  function tagCloseStart(code3) {
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      buffer2 = String.fromCharCode(code3);
      return tagName;
    }
    return nok(code3);
  }
  function tagName(code3) {
    if (code3 === codes.eof || code3 === codes.slash || code3 === codes.greaterThan || markdownLineEndingOrSpace(code3)) {
      const slash = code3 === codes.slash;
      const name = buffer2.toLowerCase();
      if (!slash && !closingTag && htmlRawNames.includes(name)) {
        marker = constants.htmlRaw;
        return self2.interrupt ? ok3(code3) : continuation(code3);
      }
      if (htmlBlockNames.includes(buffer2.toLowerCase())) {
        marker = constants.htmlBasic;
        if (slash) {
          effects.consume(code3);
          return basicSelfClosing;
        }
        return self2.interrupt ? ok3(code3) : continuation(code3);
      }
      marker = constants.htmlComplete;
      return self2.interrupt && !self2.parser.lazy[self2.now().line] ? nok(code3) : closingTag ? completeClosingTagAfter(code3) : completeAttributeNameBefore(code3);
    }
    if (code3 === codes.dash || asciiAlphanumeric(code3)) {
      effects.consume(code3);
      buffer2 += String.fromCharCode(code3);
      return tagName;
    }
    return nok(code3);
  }
  function basicSelfClosing(code3) {
    if (code3 === codes.greaterThan) {
      effects.consume(code3);
      return self2.interrupt ? ok3 : continuation;
    }
    return nok(code3);
  }
  function completeClosingTagAfter(code3) {
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return completeClosingTagAfter;
    }
    return completeEnd(code3);
  }
  function completeAttributeNameBefore(code3) {
    if (code3 === codes.slash) {
      effects.consume(code3);
      return completeEnd;
    }
    if (code3 === codes.colon || code3 === codes.underscore || asciiAlpha(code3)) {
      effects.consume(code3);
      return completeAttributeName;
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return completeAttributeNameBefore;
    }
    return completeEnd(code3);
  }
  function completeAttributeName(code3) {
    if (code3 === codes.dash || code3 === codes.dot || code3 === codes.colon || code3 === codes.underscore || asciiAlphanumeric(code3)) {
      effects.consume(code3);
      return completeAttributeName;
    }
    return completeAttributeNameAfter(code3);
  }
  function completeAttributeNameAfter(code3) {
    if (code3 === codes.equalsTo) {
      effects.consume(code3);
      return completeAttributeValueBefore;
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return completeAttributeNameAfter;
    }
    return completeAttributeNameBefore(code3);
  }
  function completeAttributeValueBefore(code3) {
    if (code3 === codes.eof || code3 === codes.lessThan || code3 === codes.equalsTo || code3 === codes.greaterThan || code3 === codes.graveAccent) {
      return nok(code3);
    }
    if (code3 === codes.quotationMark || code3 === codes.apostrophe) {
      effects.consume(code3);
      markerB = code3;
      return completeAttributeValueQuoted;
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return completeAttributeValueBefore;
    }
    return completeAttributeValueUnquoted(code3);
  }
  function completeAttributeValueQuoted(code3) {
    if (code3 === markerB) {
      effects.consume(code3);
      markerB = null;
      return completeAttributeValueQuotedAfter;
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return nok(code3);
    }
    effects.consume(code3);
    return completeAttributeValueQuoted;
  }
  function completeAttributeValueUnquoted(code3) {
    if (code3 === codes.eof || code3 === codes.quotationMark || code3 === codes.apostrophe || code3 === codes.slash || code3 === codes.lessThan || code3 === codes.equalsTo || code3 === codes.greaterThan || code3 === codes.graveAccent || markdownLineEndingOrSpace(code3)) {
      return completeAttributeNameAfter(code3);
    }
    effects.consume(code3);
    return completeAttributeValueUnquoted;
  }
  function completeAttributeValueQuotedAfter(code3) {
    if (code3 === codes.slash || code3 === codes.greaterThan || markdownSpace(code3)) {
      return completeAttributeNameBefore(code3);
    }
    return nok(code3);
  }
  function completeEnd(code3) {
    if (code3 === codes.greaterThan) {
      effects.consume(code3);
      return completeAfter;
    }
    return nok(code3);
  }
  function completeAfter(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return continuation(code3);
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return completeAfter;
    }
    return nok(code3);
  }
  function continuation(code3) {
    if (code3 === codes.dash && marker === constants.htmlComment) {
      effects.consume(code3);
      return continuationCommentInside;
    }
    if (code3 === codes.lessThan && marker === constants.htmlRaw) {
      effects.consume(code3);
      return continuationRawTagOpen;
    }
    if (code3 === codes.greaterThan && marker === constants.htmlDeclaration) {
      effects.consume(code3);
      return continuationClose;
    }
    if (code3 === codes.questionMark && marker === constants.htmlInstruction) {
      effects.consume(code3);
      return continuationDeclarationInside;
    }
    if (code3 === codes.rightSquareBracket && marker === constants.htmlCdata) {
      effects.consume(code3);
      return continuationCdataInside;
    }
    if (markdownLineEnding(code3) && (marker === constants.htmlBasic || marker === constants.htmlComplete)) {
      effects.exit(types.htmlFlowData);
      return effects.check(
        blankLineBefore,
        continuationAfter,
        continuationStart
      )(code3);
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.htmlFlowData);
      return continuationStart(code3);
    }
    effects.consume(code3);
    return continuation;
  }
  function continuationStart(code3) {
    return effects.check(
      nonLazyContinuationStart,
      continuationStartNonLazy,
      continuationAfter
    )(code3);
  }
  function continuationStartNonLazy(code3) {
    ok2(markdownLineEnding(code3));
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return continuationBefore;
  }
  function continuationBefore(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return continuationStart(code3);
    }
    effects.enter(types.htmlFlowData);
    return continuation(code3);
  }
  function continuationCommentInside(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return continuationDeclarationInside;
    }
    return continuation(code3);
  }
  function continuationRawTagOpen(code3) {
    if (code3 === codes.slash) {
      effects.consume(code3);
      buffer2 = "";
      return continuationRawEndTag;
    }
    return continuation(code3);
  }
  function continuationRawEndTag(code3) {
    if (code3 === codes.greaterThan) {
      const name = buffer2.toLowerCase();
      if (htmlRawNames.includes(name)) {
        effects.consume(code3);
        return continuationClose;
      }
      return continuation(code3);
    }
    if (asciiAlpha(code3) && buffer2.length < constants.htmlRawSizeMax) {
      effects.consume(code3);
      buffer2 += String.fromCharCode(code3);
      return continuationRawEndTag;
    }
    return continuation(code3);
  }
  function continuationCdataInside(code3) {
    if (code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      return continuationDeclarationInside;
    }
    return continuation(code3);
  }
  function continuationDeclarationInside(code3) {
    if (code3 === codes.greaterThan) {
      effects.consume(code3);
      return continuationClose;
    }
    if (code3 === codes.dash && marker === constants.htmlComment) {
      effects.consume(code3);
      return continuationDeclarationInside;
    }
    return continuation(code3);
  }
  function continuationClose(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.htmlFlowData);
      return continuationAfter(code3);
    }
    effects.consume(code3);
    return continuationClose;
  }
  function continuationAfter(code3) {
    effects.exit(types.htmlFlow);
    return ok3(code3);
  }
}
function tokenizeNonLazyContinuationStart(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    if (markdownLineEnding(code3)) {
      effects.enter(types.lineEnding);
      effects.consume(code3);
      effects.exit(types.lineEnding);
      return after;
    }
    return nok(code3);
  }
  function after(code3) {
    return self2.parser.lazy[self2.now().line] ? nok(code3) : ok3(code3);
  }
}
function tokenizeBlankLineBefore(effects, ok3, nok) {
  return start2;
  function start2(code3) {
    ok2(markdownLineEnding(code3), "expected a line ending");
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return effects.attempt(blankLine, ok3, nok);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/html-text.js
var htmlText = { name: "htmlText", tokenize: tokenizeHtmlText };
function tokenizeHtmlText(effects, ok3, nok) {
  const self2 = this;
  let marker;
  let index5;
  let returnState;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.lessThan, "expected `<`");
    effects.enter(types.htmlText);
    effects.enter(types.htmlTextData);
    effects.consume(code3);
    return open;
  }
  function open(code3) {
    if (code3 === codes.exclamationMark) {
      effects.consume(code3);
      return declarationOpen;
    }
    if (code3 === codes.slash) {
      effects.consume(code3);
      return tagCloseStart;
    }
    if (code3 === codes.questionMark) {
      effects.consume(code3);
      return instruction;
    }
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      return tagOpen;
    }
    return nok(code3);
  }
  function declarationOpen(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return commentOpenInside;
    }
    if (code3 === codes.leftSquareBracket) {
      effects.consume(code3);
      index5 = 0;
      return cdataOpenInside;
    }
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      return declaration;
    }
    return nok(code3);
  }
  function commentOpenInside(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return commentEnd;
    }
    return nok(code3);
  }
  function comment(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (code3 === codes.dash) {
      effects.consume(code3);
      return commentClose;
    }
    if (markdownLineEnding(code3)) {
      returnState = comment;
      return lineEndingBefore(code3);
    }
    effects.consume(code3);
    return comment;
  }
  function commentClose(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return commentEnd;
    }
    return comment(code3);
  }
  function commentEnd(code3) {
    return code3 === codes.greaterThan ? end2(code3) : code3 === codes.dash ? commentClose(code3) : comment(code3);
  }
  function cdataOpenInside(code3) {
    const value = constants.cdataOpeningString;
    if (code3 === value.charCodeAt(index5++)) {
      effects.consume(code3);
      return index5 === value.length ? cdata : cdataOpenInside;
    }
    return nok(code3);
  }
  function cdata(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      return cdataClose;
    }
    if (markdownLineEnding(code3)) {
      returnState = cdata;
      return lineEndingBefore(code3);
    }
    effects.consume(code3);
    return cdata;
  }
  function cdataClose(code3) {
    if (code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      return cdataEnd;
    }
    return cdata(code3);
  }
  function cdataEnd(code3) {
    if (code3 === codes.greaterThan) {
      return end2(code3);
    }
    if (code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      return cdataEnd;
    }
    return cdata(code3);
  }
  function declaration(code3) {
    if (code3 === codes.eof || code3 === codes.greaterThan) {
      return end2(code3);
    }
    if (markdownLineEnding(code3)) {
      returnState = declaration;
      return lineEndingBefore(code3);
    }
    effects.consume(code3);
    return declaration;
  }
  function instruction(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (code3 === codes.questionMark) {
      effects.consume(code3);
      return instructionClose;
    }
    if (markdownLineEnding(code3)) {
      returnState = instruction;
      return lineEndingBefore(code3);
    }
    effects.consume(code3);
    return instruction;
  }
  function instructionClose(code3) {
    return code3 === codes.greaterThan ? end2(code3) : instruction(code3);
  }
  function tagCloseStart(code3) {
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      return tagClose;
    }
    return nok(code3);
  }
  function tagClose(code3) {
    if (code3 === codes.dash || asciiAlphanumeric(code3)) {
      effects.consume(code3);
      return tagClose;
    }
    return tagCloseBetween(code3);
  }
  function tagCloseBetween(code3) {
    if (markdownLineEnding(code3)) {
      returnState = tagCloseBetween;
      return lineEndingBefore(code3);
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return tagCloseBetween;
    }
    return end2(code3);
  }
  function tagOpen(code3) {
    if (code3 === codes.dash || asciiAlphanumeric(code3)) {
      effects.consume(code3);
      return tagOpen;
    }
    if (code3 === codes.slash || code3 === codes.greaterThan || markdownLineEndingOrSpace(code3)) {
      return tagOpenBetween(code3);
    }
    return nok(code3);
  }
  function tagOpenBetween(code3) {
    if (code3 === codes.slash) {
      effects.consume(code3);
      return end2;
    }
    if (code3 === codes.colon || code3 === codes.underscore || asciiAlpha(code3)) {
      effects.consume(code3);
      return tagOpenAttributeName;
    }
    if (markdownLineEnding(code3)) {
      returnState = tagOpenBetween;
      return lineEndingBefore(code3);
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return tagOpenBetween;
    }
    return end2(code3);
  }
  function tagOpenAttributeName(code3) {
    if (code3 === codes.dash || code3 === codes.dot || code3 === codes.colon || code3 === codes.underscore || asciiAlphanumeric(code3)) {
      effects.consume(code3);
      return tagOpenAttributeName;
    }
    return tagOpenAttributeNameAfter(code3);
  }
  function tagOpenAttributeNameAfter(code3) {
    if (code3 === codes.equalsTo) {
      effects.consume(code3);
      return tagOpenAttributeValueBefore;
    }
    if (markdownLineEnding(code3)) {
      returnState = tagOpenAttributeNameAfter;
      return lineEndingBefore(code3);
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return tagOpenAttributeNameAfter;
    }
    return tagOpenBetween(code3);
  }
  function tagOpenAttributeValueBefore(code3) {
    if (code3 === codes.eof || code3 === codes.lessThan || code3 === codes.equalsTo || code3 === codes.greaterThan || code3 === codes.graveAccent) {
      return nok(code3);
    }
    if (code3 === codes.quotationMark || code3 === codes.apostrophe) {
      effects.consume(code3);
      marker = code3;
      return tagOpenAttributeValueQuoted;
    }
    if (markdownLineEnding(code3)) {
      returnState = tagOpenAttributeValueBefore;
      return lineEndingBefore(code3);
    }
    if (markdownSpace(code3)) {
      effects.consume(code3);
      return tagOpenAttributeValueBefore;
    }
    effects.consume(code3);
    return tagOpenAttributeValueUnquoted;
  }
  function tagOpenAttributeValueQuoted(code3) {
    if (code3 === marker) {
      effects.consume(code3);
      marker = void 0;
      return tagOpenAttributeValueQuotedAfter;
    }
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (markdownLineEnding(code3)) {
      returnState = tagOpenAttributeValueQuoted;
      return lineEndingBefore(code3);
    }
    effects.consume(code3);
    return tagOpenAttributeValueQuoted;
  }
  function tagOpenAttributeValueUnquoted(code3) {
    if (code3 === codes.eof || code3 === codes.quotationMark || code3 === codes.apostrophe || code3 === codes.lessThan || code3 === codes.equalsTo || code3 === codes.graveAccent) {
      return nok(code3);
    }
    if (code3 === codes.slash || code3 === codes.greaterThan || markdownLineEndingOrSpace(code3)) {
      return tagOpenBetween(code3);
    }
    effects.consume(code3);
    return tagOpenAttributeValueUnquoted;
  }
  function tagOpenAttributeValueQuotedAfter(code3) {
    if (code3 === codes.slash || code3 === codes.greaterThan || markdownLineEndingOrSpace(code3)) {
      return tagOpenBetween(code3);
    }
    return nok(code3);
  }
  function end2(code3) {
    if (code3 === codes.greaterThan) {
      effects.consume(code3);
      effects.exit(types.htmlTextData);
      effects.exit(types.htmlText);
      return ok3;
    }
    return nok(code3);
  }
  function lineEndingBefore(code3) {
    ok2(returnState, "expected return state");
    ok2(markdownLineEnding(code3), "expected eol");
    effects.exit(types.htmlTextData);
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return lineEndingAfter;
  }
  function lineEndingAfter(code3) {
    ok2(
      self2.parser.constructs.disable.null,
      "expected `disable.null` to be populated"
    );
    return markdownSpace(code3) ? factorySpace(
      effects,
      lineEndingAfterPrefix,
      types.linePrefix,
      self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
    )(code3) : lineEndingAfterPrefix(code3);
  }
  function lineEndingAfterPrefix(code3) {
    effects.enter(types.htmlTextData);
    return returnState(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/label-end.js
var labelEnd = {
  name: "labelEnd",
  tokenize: tokenizeLabelEnd,
  resolveTo: resolveToLabelEnd,
  resolveAll: resolveAllLabelEnd
};
var resourceConstruct = { tokenize: tokenizeResource };
var referenceFullConstruct = { tokenize: tokenizeReferenceFull };
var referenceCollapsedConstruct = { tokenize: tokenizeReferenceCollapsed };
function resolveAllLabelEnd(events) {
  let index5 = -1;
  while (++index5 < events.length) {
    const token = events[index5][1];
    if (token.type === types.labelImage || token.type === types.labelLink || token.type === types.labelEnd) {
      events.splice(index5 + 1, token.type === types.labelImage ? 4 : 2);
      token.type = types.data;
      index5++;
    }
  }
  return events;
}
function resolveToLabelEnd(events, context) {
  let index5 = events.length;
  let offset2 = 0;
  let token;
  let open;
  let close;
  let media;
  while (index5--) {
    token = events[index5][1];
    if (open) {
      if (token.type === types.link || token.type === types.labelLink && token._inactive) {
        break;
      }
      if (events[index5][0] === "enter" && token.type === types.labelLink) {
        token._inactive = true;
      }
    } else if (close) {
      if (events[index5][0] === "enter" && (token.type === types.labelImage || token.type === types.labelLink) && !token._balanced) {
        open = index5;
        if (token.type !== types.labelLink) {
          offset2 = 2;
          break;
        }
      }
    } else if (token.type === types.labelEnd) {
      close = index5;
    }
  }
  ok2(open !== void 0, "`open` is supposed to be found");
  ok2(close !== void 0, "`close` is supposed to be found");
  const group = {
    type: events[open][1].type === types.labelLink ? types.link : types.image,
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  const label = {
    type: types.label,
    start: Object.assign({}, events[open][1].start),
    end: Object.assign({}, events[close][1].end)
  };
  const text5 = {
    type: types.labelText,
    start: Object.assign({}, events[open + offset2 + 2][1].end),
    end: Object.assign({}, events[close - 2][1].start)
  };
  media = [
    ["enter", group, context],
    ["enter", label, context]
  ];
  media = push(media, events.slice(open + 1, open + offset2 + 3));
  media = push(media, [["enter", text5, context]]);
  ok2(
    context.parser.constructs.insideSpan.null,
    "expected `insideSpan.null` to be populated"
  );
  media = push(
    media,
    resolveAll(
      context.parser.constructs.insideSpan.null,
      events.slice(open + offset2 + 4, close - 3),
      context
    )
  );
  media = push(media, [
    ["exit", text5, context],
    events[close - 2],
    events[close - 1],
    ["exit", label, context]
  ]);
  media = push(media, events.slice(close + 1));
  media = push(media, [["exit", group, context]]);
  splice(events, open, events.length, media);
  return events;
}
function tokenizeLabelEnd(effects, ok3, nok) {
  const self2 = this;
  let index5 = self2.events.length;
  let labelStart;
  let defined;
  while (index5--) {
    if ((self2.events[index5][1].type === types.labelImage || self2.events[index5][1].type === types.labelLink) && !self2.events[index5][1]._balanced) {
      labelStart = self2.events[index5][1];
      break;
    }
  }
  return start2;
  function start2(code3) {
    ok2(code3 === codes.rightSquareBracket, "expected `]`");
    if (!labelStart) {
      return nok(code3);
    }
    if (labelStart._inactive) {
      return labelEndNok(code3);
    }
    defined = self2.parser.defined.includes(
      normalizeIdentifier(
        self2.sliceSerialize({ start: labelStart.end, end: self2.now() })
      )
    );
    effects.enter(types.labelEnd);
    effects.enter(types.labelMarker);
    effects.consume(code3);
    effects.exit(types.labelMarker);
    effects.exit(types.labelEnd);
    return after;
  }
  function after(code3) {
    if (code3 === codes.leftParenthesis) {
      return effects.attempt(
        resourceConstruct,
        labelEndOk,
        defined ? labelEndOk : labelEndNok
      )(code3);
    }
    if (code3 === codes.leftSquareBracket) {
      return effects.attempt(
        referenceFullConstruct,
        labelEndOk,
        defined ? referenceNotFull : labelEndNok
      )(code3);
    }
    return defined ? labelEndOk(code3) : labelEndNok(code3);
  }
  function referenceNotFull(code3) {
    return effects.attempt(
      referenceCollapsedConstruct,
      labelEndOk,
      labelEndNok
    )(code3);
  }
  function labelEndOk(code3) {
    return ok3(code3);
  }
  function labelEndNok(code3) {
    labelStart._balanced = true;
    return nok(code3);
  }
}
function tokenizeResource(effects, ok3, nok) {
  return resourceStart;
  function resourceStart(code3) {
    ok2(code3 === codes.leftParenthesis, "expected left paren");
    effects.enter(types.resource);
    effects.enter(types.resourceMarker);
    effects.consume(code3);
    effects.exit(types.resourceMarker);
    return resourceBefore;
  }
  function resourceBefore(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, resourceOpen)(code3) : resourceOpen(code3);
  }
  function resourceOpen(code3) {
    if (code3 === codes.rightParenthesis) {
      return resourceEnd(code3);
    }
    return factoryDestination(
      effects,
      resourceDestinationAfter,
      resourceDestinationMissing,
      types.resourceDestination,
      types.resourceDestinationLiteral,
      types.resourceDestinationLiteralMarker,
      types.resourceDestinationRaw,
      types.resourceDestinationString,
      constants.linkResourceDestinationBalanceMax
    )(code3);
  }
  function resourceDestinationAfter(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, resourceBetween)(code3) : resourceEnd(code3);
  }
  function resourceDestinationMissing(code3) {
    return nok(code3);
  }
  function resourceBetween(code3) {
    if (code3 === codes.quotationMark || code3 === codes.apostrophe || code3 === codes.leftParenthesis) {
      return factoryTitle(
        effects,
        resourceTitleAfter,
        nok,
        types.resourceTitle,
        types.resourceTitleMarker,
        types.resourceTitleString
      )(code3);
    }
    return resourceEnd(code3);
  }
  function resourceTitleAfter(code3) {
    return markdownLineEndingOrSpace(code3) ? factoryWhitespace(effects, resourceEnd)(code3) : resourceEnd(code3);
  }
  function resourceEnd(code3) {
    if (code3 === codes.rightParenthesis) {
      effects.enter(types.resourceMarker);
      effects.consume(code3);
      effects.exit(types.resourceMarker);
      effects.exit(types.resource);
      return ok3;
    }
    return nok(code3);
  }
}
function tokenizeReferenceFull(effects, ok3, nok) {
  const self2 = this;
  return referenceFull;
  function referenceFull(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected left bracket");
    return factoryLabel.call(
      self2,
      effects,
      referenceFullAfter,
      referenceFullMissing,
      types.reference,
      types.referenceMarker,
      types.referenceString
    )(code3);
  }
  function referenceFullAfter(code3) {
    return self2.parser.defined.includes(
      normalizeIdentifier(
        self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1)
      )
    ) ? ok3(code3) : nok(code3);
  }
  function referenceFullMissing(code3) {
    return nok(code3);
  }
}
function tokenizeReferenceCollapsed(effects, ok3, nok) {
  return referenceCollapsedStart;
  function referenceCollapsedStart(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected left bracket");
    effects.enter(types.reference);
    effects.enter(types.referenceMarker);
    effects.consume(code3);
    effects.exit(types.referenceMarker);
    return referenceCollapsedOpen;
  }
  function referenceCollapsedOpen(code3) {
    if (code3 === codes.rightSquareBracket) {
      effects.enter(types.referenceMarker);
      effects.consume(code3);
      effects.exit(types.referenceMarker);
      effects.exit(types.reference);
      return ok3;
    }
    return nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/label-start-image.js
var labelStartImage = {
  name: "labelStartImage",
  tokenize: tokenizeLabelStartImage,
  resolveAll: labelEnd.resolveAll
};
function tokenizeLabelStartImage(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.exclamationMark, "expected `!`");
    effects.enter(types.labelImage);
    effects.enter(types.labelImageMarker);
    effects.consume(code3);
    effects.exit(types.labelImageMarker);
    return open;
  }
  function open(code3) {
    if (code3 === codes.leftSquareBracket) {
      effects.enter(types.labelMarker);
      effects.consume(code3);
      effects.exit(types.labelMarker);
      effects.exit(types.labelImage);
      return after;
    }
    return nok(code3);
  }
  function after(code3) {
    return code3 === codes.caret && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code3) : ok3(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/label-start-link.js
var labelStartLink = {
  name: "labelStartLink",
  tokenize: tokenizeLabelStartLink,
  resolveAll: labelEnd.resolveAll
};
function tokenizeLabelStartLink(effects, ok3, nok) {
  const self2 = this;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    effects.enter(types.labelLink);
    effects.enter(types.labelMarker);
    effects.consume(code3);
    effects.exit(types.labelMarker);
    effects.exit(types.labelLink);
    return after;
  }
  function after(code3) {
    return code3 === codes.caret && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code3) : ok3(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/line-ending.js
var lineEnding = { name: "lineEnding", tokenize: tokenizeLineEnding };
function tokenizeLineEnding(effects, ok3) {
  return start2;
  function start2(code3) {
    ok2(markdownLineEnding(code3), "expected eol");
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    return factorySpace(effects, ok3, types.linePrefix);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/thematic-break.js
var thematicBreak = {
  name: "thematicBreak",
  tokenize: tokenizeThematicBreak
};
function tokenizeThematicBreak(effects, ok3, nok) {
  let size = 0;
  let marker;
  return start2;
  function start2(code3) {
    effects.enter(types.thematicBreak);
    return before(code3);
  }
  function before(code3) {
    ok2(
      code3 === codes.asterisk || code3 === codes.dash || code3 === codes.underscore,
      "expected `*`, `-`, or `_`"
    );
    marker = code3;
    return atBreak(code3);
  }
  function atBreak(code3) {
    if (code3 === marker) {
      effects.enter(types.thematicBreakSequence);
      return sequence(code3);
    }
    if (size >= constants.thematicBreakMarkerCountMin && (code3 === codes.eof || markdownLineEnding(code3))) {
      effects.exit(types.thematicBreak);
      return ok3(code3);
    }
    return nok(code3);
  }
  function sequence(code3) {
    if (code3 === marker) {
      effects.consume(code3);
      size++;
      return sequence;
    }
    effects.exit(types.thematicBreakSequence);
    return markdownSpace(code3) ? factorySpace(effects, atBreak, types.whitespace)(code3) : atBreak(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/list.js
var list = {
  name: "list",
  tokenize: tokenizeListStart,
  continuation: { tokenize: tokenizeListContinuation },
  exit: tokenizeListEnd
};
var listItemPrefixWhitespaceConstruct = {
  tokenize: tokenizeListItemPrefixWhitespace,
  partial: true
};
var indentConstruct = { tokenize: tokenizeIndent, partial: true };
function tokenizeListStart(effects, ok3, nok) {
  const self2 = this;
  const tail = self2.events[self2.events.length - 1];
  let initialSize = tail && tail[1].type === types.linePrefix ? tail[2].sliceSerialize(tail[1], true).length : 0;
  let size = 0;
  return start2;
  function start2(code3) {
    ok2(self2.containerState, "expected state");
    const kind = self2.containerState.type || (code3 === codes.asterisk || code3 === codes.plusSign || code3 === codes.dash ? types.listUnordered : types.listOrdered);
    if (kind === types.listUnordered ? !self2.containerState.marker || code3 === self2.containerState.marker : asciiDigit(code3)) {
      if (!self2.containerState.type) {
        self2.containerState.type = kind;
        effects.enter(kind, { _container: true });
      }
      if (kind === types.listUnordered) {
        effects.enter(types.listItemPrefix);
        return code3 === codes.asterisk || code3 === codes.dash ? effects.check(thematicBreak, nok, atMarker)(code3) : atMarker(code3);
      }
      if (!self2.interrupt || code3 === codes.digit1) {
        effects.enter(types.listItemPrefix);
        effects.enter(types.listItemValue);
        return inside(code3);
      }
    }
    return nok(code3);
  }
  function inside(code3) {
    ok2(self2.containerState, "expected state");
    if (asciiDigit(code3) && ++size < constants.listItemValueSizeMax) {
      effects.consume(code3);
      return inside;
    }
    if ((!self2.interrupt || size < 2) && (self2.containerState.marker ? code3 === self2.containerState.marker : code3 === codes.rightParenthesis || code3 === codes.dot)) {
      effects.exit(types.listItemValue);
      return atMarker(code3);
    }
    return nok(code3);
  }
  function atMarker(code3) {
    ok2(self2.containerState, "expected state");
    ok2(code3 !== codes.eof, "eof (`null`) is not a marker");
    effects.enter(types.listItemMarker);
    effects.consume(code3);
    effects.exit(types.listItemMarker);
    self2.containerState.marker = self2.containerState.marker || code3;
    return effects.check(
      blankLine,
      // Can’t be empty when interrupting.
      self2.interrupt ? nok : onBlank,
      effects.attempt(
        listItemPrefixWhitespaceConstruct,
        endOfPrefix,
        otherPrefix
      )
    );
  }
  function onBlank(code3) {
    ok2(self2.containerState, "expected state");
    self2.containerState.initialBlankLine = true;
    initialSize++;
    return endOfPrefix(code3);
  }
  function otherPrefix(code3) {
    if (markdownSpace(code3)) {
      effects.enter(types.listItemPrefixWhitespace);
      effects.consume(code3);
      effects.exit(types.listItemPrefixWhitespace);
      return endOfPrefix;
    }
    return nok(code3);
  }
  function endOfPrefix(code3) {
    ok2(self2.containerState, "expected state");
    self2.containerState.size = initialSize + self2.sliceSerialize(effects.exit(types.listItemPrefix), true).length;
    return ok3(code3);
  }
}
function tokenizeListContinuation(effects, ok3, nok) {
  const self2 = this;
  ok2(self2.containerState, "expected state");
  self2.containerState._closeFlow = void 0;
  return effects.check(blankLine, onBlank, notBlank);
  function onBlank(code3) {
    ok2(self2.containerState, "expected state");
    ok2(typeof self2.containerState.size === "number", "expected size");
    self2.containerState.furtherBlankLines = self2.containerState.furtherBlankLines || self2.containerState.initialBlankLine;
    return factorySpace(
      effects,
      ok3,
      types.listItemIndent,
      self2.containerState.size + 1
    )(code3);
  }
  function notBlank(code3) {
    ok2(self2.containerState, "expected state");
    if (self2.containerState.furtherBlankLines || !markdownSpace(code3)) {
      self2.containerState.furtherBlankLines = void 0;
      self2.containerState.initialBlankLine = void 0;
      return notInCurrentItem(code3);
    }
    self2.containerState.furtherBlankLines = void 0;
    self2.containerState.initialBlankLine = void 0;
    return effects.attempt(indentConstruct, ok3, notInCurrentItem)(code3);
  }
  function notInCurrentItem(code3) {
    ok2(self2.containerState, "expected state");
    self2.containerState._closeFlow = true;
    self2.interrupt = void 0;
    ok2(
      self2.parser.constructs.disable.null,
      "expected `disable.null` to be populated"
    );
    return factorySpace(
      effects,
      effects.attempt(list, ok3, nok),
      types.linePrefix,
      self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
    )(code3);
  }
}
function tokenizeIndent(effects, ok3, nok) {
  const self2 = this;
  ok2(self2.containerState, "expected state");
  ok2(typeof self2.containerState.size === "number", "expected size");
  return factorySpace(
    effects,
    afterPrefix,
    types.listItemIndent,
    self2.containerState.size + 1
  );
  function afterPrefix(code3) {
    ok2(self2.containerState, "expected state");
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === types.listItemIndent && tail[2].sliceSerialize(tail[1], true).length === self2.containerState.size ? ok3(code3) : nok(code3);
  }
}
function tokenizeListEnd(effects) {
  ok2(this.containerState, "expected state");
  ok2(typeof this.containerState.type === "string", "expected type");
  effects.exit(this.containerState.type);
}
function tokenizeListItemPrefixWhitespace(effects, ok3, nok) {
  const self2 = this;
  ok2(
    self2.parser.constructs.disable.null,
    "expected `disable.null` to be populated"
  );
  return factorySpace(
    effects,
    afterPrefix,
    types.listItemPrefixWhitespace,
    self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize + 1
  );
  function afterPrefix(code3) {
    const tail = self2.events[self2.events.length - 1];
    return !markdownSpace(code3) && tail && tail[1].type === types.listItemPrefixWhitespace ? ok3(code3) : nok(code3);
  }
}

// node_modules/micromark-core-commonmark/dev/lib/setext-underline.js
var setextUnderline = {
  name: "setextUnderline",
  tokenize: tokenizeSetextUnderline,
  resolveTo: resolveToSetextUnderline
};
function resolveToSetextUnderline(events, context) {
  let index5 = events.length;
  let content3;
  let text5;
  let definition2;
  while (index5--) {
    if (events[index5][0] === "enter") {
      if (events[index5][1].type === types.content) {
        content3 = index5;
        break;
      }
      if (events[index5][1].type === types.paragraph) {
        text5 = index5;
      }
    } else {
      if (events[index5][1].type === types.content) {
        events.splice(index5, 1);
      }
      if (!definition2 && events[index5][1].type === types.definition) {
        definition2 = index5;
      }
    }
  }
  ok2(text5 !== void 0, "expected a `text` index to be found");
  ok2(content3 !== void 0, "expected a `text` index to be found");
  const heading2 = {
    type: types.setextHeading,
    start: Object.assign({}, events[text5][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  events[text5][1].type = types.setextHeadingText;
  if (definition2) {
    events.splice(text5, 0, ["enter", heading2, context]);
    events.splice(definition2 + 1, 0, ["exit", events[content3][1], context]);
    events[content3][1].end = Object.assign({}, events[definition2][1].end);
  } else {
    events[content3][1] = heading2;
  }
  events.push(["exit", heading2, context]);
  return events;
}
function tokenizeSetextUnderline(effects, ok3, nok) {
  const self2 = this;
  let marker;
  return start2;
  function start2(code3) {
    let index5 = self2.events.length;
    let paragraph2;
    ok2(
      code3 === codes.dash || code3 === codes.equalsTo,
      "expected `=` or `-`"
    );
    while (index5--) {
      if (self2.events[index5][1].type !== types.lineEnding && self2.events[index5][1].type !== types.linePrefix && self2.events[index5][1].type !== types.content) {
        paragraph2 = self2.events[index5][1].type === types.paragraph;
        break;
      }
    }
    if (!self2.parser.lazy[self2.now().line] && (self2.interrupt || paragraph2)) {
      effects.enter(types.setextHeadingLine);
      marker = code3;
      return before(code3);
    }
    return nok(code3);
  }
  function before(code3) {
    effects.enter(types.setextHeadingLineSequence);
    return inside(code3);
  }
  function inside(code3) {
    if (code3 === marker) {
      effects.consume(code3);
      return inside;
    }
    effects.exit(types.setextHeadingLineSequence);
    return markdownSpace(code3) ? factorySpace(effects, after, types.lineSuffix)(code3) : after(code3);
  }
  function after(code3) {
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit(types.setextHeadingLine);
      return ok3(code3);
    }
    return nok(code3);
  }
}

// node_modules/micromark/dev/lib/initialize/flow.js
var flow = { tokenize: initializeFlow };
function initializeFlow(effects) {
  const self2 = this;
  const initial = effects.attempt(
    // Try to parse a blank line.
    blankLine,
    atBlankEnding,
    // Try to parse initial flow (essentially, only code).
    effects.attempt(
      this.parser.constructs.flowInitial,
      afterConstruct,
      factorySpace(
        effects,
        effects.attempt(
          this.parser.constructs.flow,
          afterConstruct,
          effects.attempt(content2, afterConstruct)
        ),
        types.linePrefix
      )
    )
  );
  return initial;
  function atBlankEnding(code3) {
    ok2(
      code3 === codes.eof || markdownLineEnding(code3),
      "expected eol or eof"
    );
    if (code3 === codes.eof) {
      effects.consume(code3);
      return;
    }
    effects.enter(types.lineEndingBlank);
    effects.consume(code3);
    effects.exit(types.lineEndingBlank);
    self2.currentConstruct = void 0;
    return initial;
  }
  function afterConstruct(code3) {
    ok2(
      code3 === codes.eof || markdownLineEnding(code3),
      "expected eol or eof"
    );
    if (code3 === codes.eof) {
      effects.consume(code3);
      return;
    }
    effects.enter(types.lineEnding);
    effects.consume(code3);
    effects.exit(types.lineEnding);
    self2.currentConstruct = void 0;
    return initial;
  }
}

// node_modules/micromark/dev/lib/initialize/text.js
var resolver = { resolveAll: createResolver() };
var string = initializeFactory("string");
var text = initializeFactory("text");
function initializeFactory(field) {
  return {
    tokenize: initializeText,
    resolveAll: createResolver(
      field === "text" ? resolveAllLineSuffixes : void 0
    )
  };
  function initializeText(effects) {
    const self2 = this;
    const constructs2 = this.parser.constructs[field];
    const text5 = effects.attempt(constructs2, start2, notText);
    return start2;
    function start2(code3) {
      return atBreak(code3) ? text5(code3) : notText(code3);
    }
    function notText(code3) {
      if (code3 === codes.eof) {
        effects.consume(code3);
        return;
      }
      effects.enter(types.data);
      effects.consume(code3);
      return data;
    }
    function data(code3) {
      if (atBreak(code3)) {
        effects.exit(types.data);
        return text5(code3);
      }
      effects.consume(code3);
      return data;
    }
    function atBreak(code3) {
      if (code3 === codes.eof) {
        return true;
      }
      const list3 = constructs2[code3];
      let index5 = -1;
      if (list3) {
        ok2(Array.isArray(list3), "expected `disable.null` to be populated");
        while (++index5 < list3.length) {
          const item = list3[index5];
          if (!item.previous || item.previous.call(self2, self2.previous)) {
            return true;
          }
        }
      }
      return false;
    }
  }
}
function createResolver(extraResolver) {
  return resolveAllText;
  function resolveAllText(events, context) {
    let index5 = -1;
    let enter;
    while (++index5 <= events.length) {
      if (enter === void 0) {
        if (events[index5] && events[index5][1].type === types.data) {
          enter = index5;
          index5++;
        }
      } else if (!events[index5] || events[index5][1].type !== types.data) {
        if (index5 !== enter + 2) {
          events[enter][1].end = events[index5 - 1][1].end;
          events.splice(enter + 2, index5 - enter - 2);
          index5 = enter + 2;
        }
        enter = void 0;
      }
    }
    return extraResolver ? extraResolver(events, context) : events;
  }
}
function resolveAllLineSuffixes(events, context) {
  let eventIndex = 0;
  while (++eventIndex <= events.length) {
    if ((eventIndex === events.length || events[eventIndex][1].type === types.lineEnding) && events[eventIndex - 1][1].type === types.data) {
      const data = events[eventIndex - 1][1];
      const chunks = context.sliceStream(data);
      let index5 = chunks.length;
      let bufferIndex = -1;
      let size = 0;
      let tabs;
      while (index5--) {
        const chunk = chunks[index5];
        if (typeof chunk === "string") {
          bufferIndex = chunk.length;
          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {
            size++;
            bufferIndex--;
          }
          if (bufferIndex)
            break;
          bufferIndex = -1;
        } else if (chunk === codes.horizontalTab) {
          tabs = true;
          size++;
        } else if (chunk === codes.virtualSpace) {
        } else {
          index5++;
          break;
        }
      }
      if (size) {
        const token = {
          type: eventIndex === events.length || tabs || size < constants.hardBreakPrefixSizeMin ? types.lineSuffix : types.hardBreakTrailing,
          start: {
            line: data.end.line,
            column: data.end.column - size,
            offset: data.end.offset - size,
            _index: data.start._index + index5,
            _bufferIndex: index5 ? bufferIndex : data.start._bufferIndex + bufferIndex
          },
          end: Object.assign({}, data.end)
        };
        data.end = Object.assign({}, token.start);
        if (data.start.offset === data.end.offset) {
          Object.assign(data, token);
        } else {
          events.splice(
            eventIndex,
            0,
            ["enter", token, context],
            ["exit", token, context]
          );
          eventIndex += 2;
        }
      }
      eventIndex++;
    }
  }
  return events;
}

// node_modules/micromark/dev/lib/create-tokenizer.js
var import_debug = __toESM(require_browser(), 1);
var debug = (0, import_debug.default)("micromark");
function createTokenizer(parser, initialize, from) {
  let point5 = Object.assign(
    from ? Object.assign({}, from) : { line: 1, column: 1, offset: 0 },
    { _index: 0, _bufferIndex: -1 }
  );
  const columnStart = {};
  const resolveAllConstructs = [];
  let chunks = [];
  let stack = [];
  let consumed = true;
  const effects = {
    consume,
    enter,
    exit: exit3,
    attempt: constructFactory(onsuccessfulconstruct),
    check: constructFactory(onsuccessfulcheck),
    interrupt: constructFactory(onsuccessfulcheck, { interrupt: true })
  };
  const context = {
    previous: codes.eof,
    code: codes.eof,
    containerState: {},
    events: [],
    parser,
    sliceStream,
    sliceSerialize,
    now,
    defineSkip,
    write: write2
  };
  let state = initialize.tokenize.call(context, effects);
  let expectedCode;
  if (initialize.resolveAll) {
    resolveAllConstructs.push(initialize);
  }
  return context;
  function write2(slice) {
    chunks = push(chunks, slice);
    main2();
    if (chunks[chunks.length - 1] !== codes.eof) {
      return [];
    }
    addResult(initialize, 0);
    context.events = resolveAll(resolveAllConstructs, context.events, context);
    return context.events;
  }
  function sliceSerialize(token, expandTabs) {
    return serializeChunks(sliceStream(token), expandTabs);
  }
  function sliceStream(token) {
    return sliceChunks(chunks, token);
  }
  function now() {
    const { line: line2, column, offset: offset2, _index, _bufferIndex } = point5;
    return { line: line2, column, offset: offset2, _index, _bufferIndex };
  }
  function defineSkip(value) {
    columnStart[value.line] = value.column;
    accountForPotentialSkip();
    debug("position: define skip: `%j`", point5);
  }
  function main2() {
    let chunkIndex;
    while (point5._index < chunks.length) {
      const chunk = chunks[point5._index];
      if (typeof chunk === "string") {
        chunkIndex = point5._index;
        if (point5._bufferIndex < 0) {
          point5._bufferIndex = 0;
        }
        while (point5._index === chunkIndex && point5._bufferIndex < chunk.length) {
          go(chunk.charCodeAt(point5._bufferIndex));
        }
      } else {
        go(chunk);
      }
    }
  }
  function go(code3) {
    ok2(consumed === true, "expected character to be consumed");
    consumed = void 0;
    debug("main: passing `%s` to %s", code3, state && state.name);
    expectedCode = code3;
    ok2(typeof state === "function", "expected state");
    state = state(code3);
  }
  function consume(code3) {
    ok2(code3 === expectedCode, "expected given code to equal expected code");
    debug("consume: `%s`", code3);
    ok2(
      consumed === void 0,
      "expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used"
    );
    ok2(
      code3 === null ? context.events.length === 0 || context.events[context.events.length - 1][0] === "exit" : context.events[context.events.length - 1][0] === "enter",
      "expected last token to be open"
    );
    if (markdownLineEnding(code3)) {
      point5.line++;
      point5.column = 1;
      point5.offset += code3 === codes.carriageReturnLineFeed ? 2 : 1;
      accountForPotentialSkip();
      debug("position: after eol: `%j`", point5);
    } else if (code3 !== codes.virtualSpace) {
      point5.column++;
      point5.offset++;
    }
    if (point5._bufferIndex < 0) {
      point5._index++;
    } else {
      point5._bufferIndex++;
      if (point5._bufferIndex === chunks[point5._index].length) {
        point5._bufferIndex = -1;
        point5._index++;
      }
    }
    context.previous = code3;
    consumed = true;
  }
  function enter(type, fields) {
    const token = fields || {};
    token.type = type;
    token.start = now();
    ok2(typeof type === "string", "expected string type");
    ok2(type.length > 0, "expected non-empty string");
    debug("enter: `%s`", type);
    context.events.push(["enter", token, context]);
    stack.push(token);
    return token;
  }
  function exit3(type) {
    ok2(typeof type === "string", "expected string type");
    ok2(type.length > 0, "expected non-empty string");
    const token = stack.pop();
    ok2(token, "cannot close w/o open tokens");
    token.end = now();
    ok2(type === token.type, "expected exit token to match current token");
    ok2(
      !(token.start._index === token.end._index && token.start._bufferIndex === token.end._bufferIndex),
      "expected non-empty token (`" + type + "`)"
    );
    debug("exit: `%s`", token.type);
    context.events.push(["exit", token, context]);
    return token;
  }
  function onsuccessfulconstruct(construct, info) {
    addResult(construct, info.from);
  }
  function onsuccessfulcheck(_, info) {
    info.restore();
  }
  function constructFactory(onreturn, fields) {
    return hook;
    function hook(constructs2, returnState, bogusState) {
      let listOfConstructs;
      let constructIndex;
      let currentConstruct;
      let info;
      return Array.isArray(constructs2) ? (
        /* c8 ignore next 1 */
        handleListOfConstructs(constructs2)
      ) : "tokenize" in constructs2 ? (
        // @ts-expect-error Looks like a construct.
        handleListOfConstructs([constructs2])
      ) : handleMapOfConstructs(constructs2);
      function handleMapOfConstructs(map2) {
        return start2;
        function start2(code3) {
          const def = code3 !== null && map2[code3];
          const all3 = code3 !== null && map2.null;
          const list3 = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(def) ? def : def ? [def] : [],
            ...Array.isArray(all3) ? all3 : all3 ? [all3] : []
          ];
          return handleListOfConstructs(list3)(code3);
        }
      }
      function handleListOfConstructs(list3) {
        listOfConstructs = list3;
        constructIndex = 0;
        if (list3.length === 0) {
          ok2(bogusState, "expected `bogusState` to be given");
          return bogusState;
        }
        return handleConstruct(list3[constructIndex]);
      }
      function handleConstruct(construct) {
        return start2;
        function start2(code3) {
          info = store();
          currentConstruct = construct;
          if (!construct.partial) {
            context.currentConstruct = construct;
          }
          ok2(
            context.parser.constructs.disable.null,
            "expected `disable.null` to be populated"
          );
          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {
            return nok(code3);
          }
          return construct.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            fields ? Object.assign(Object.create(context), fields) : context,
            effects,
            ok3,
            nok
          )(code3);
        }
      }
      function ok3(code3) {
        ok2(code3 === expectedCode, "expected code");
        consumed = true;
        onreturn(currentConstruct, info);
        return returnState;
      }
      function nok(code3) {
        ok2(code3 === expectedCode, "expected code");
        consumed = true;
        info.restore();
        if (++constructIndex < listOfConstructs.length) {
          return handleConstruct(listOfConstructs[constructIndex]);
        }
        return bogusState;
      }
    }
  }
  function addResult(construct, from2) {
    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {
      resolveAllConstructs.push(construct);
    }
    if (construct.resolve) {
      splice(
        context.events,
        from2,
        context.events.length - from2,
        construct.resolve(context.events.slice(from2), context)
      );
    }
    if (construct.resolveTo) {
      context.events = construct.resolveTo(context.events, context);
    }
    ok2(
      construct.partial || context.events.length === 0 || context.events[context.events.length - 1][0] === "exit",
      "expected last token to end"
    );
  }
  function store() {
    const startPoint = now();
    const startPrevious = context.previous;
    const startCurrentConstruct = context.currentConstruct;
    const startEventsIndex = context.events.length;
    const startStack = Array.from(stack);
    return { restore, from: startEventsIndex };
    function restore() {
      point5 = startPoint;
      context.previous = startPrevious;
      context.currentConstruct = startCurrentConstruct;
      context.events.length = startEventsIndex;
      stack = startStack;
      accountForPotentialSkip();
      debug("position: restore: `%j`", point5);
    }
  }
  function accountForPotentialSkip() {
    if (point5.line in columnStart && point5.column < 2) {
      point5.column = columnStart[point5.line];
      point5.offset += columnStart[point5.line] - 1;
    }
  }
}
function sliceChunks(chunks, token) {
  const startIndex = token.start._index;
  const startBufferIndex = token.start._bufferIndex;
  const endIndex = token.end._index;
  const endBufferIndex = token.end._bufferIndex;
  let view;
  if (startIndex === endIndex) {
    ok2(endBufferIndex > -1, "expected non-negative end buffer index");
    ok2(startBufferIndex > -1, "expected non-negative start buffer index");
    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];
  } else {
    view = chunks.slice(startIndex, endIndex);
    if (startBufferIndex > -1) {
      const head = view[0];
      if (typeof head === "string") {
        view[0] = head.slice(startBufferIndex);
      } else {
        ok2(startBufferIndex === 0, "expected `startBufferIndex` to be `0`");
        view.shift();
      }
    }
    if (endBufferIndex > 0) {
      view.push(chunks[endIndex].slice(0, endBufferIndex));
    }
  }
  return view;
}
function serializeChunks(chunks, expandTabs) {
  let index5 = -1;
  const result = [];
  let atTab;
  while (++index5 < chunks.length) {
    const chunk = chunks[index5];
    let value;
    if (typeof chunk === "string") {
      value = chunk;
    } else
      switch (chunk) {
        case codes.carriageReturn: {
          value = values.cr;
          break;
        }
        case codes.lineFeed: {
          value = values.lf;
          break;
        }
        case codes.carriageReturnLineFeed: {
          value = values.cr + values.lf;
          break;
        }
        case codes.horizontalTab: {
          value = expandTabs ? values.space : values.ht;
          break;
        }
        case codes.virtualSpace: {
          if (!expandTabs && atTab)
            continue;
          value = values.space;
          break;
        }
        default: {
          ok2(typeof chunk === "number", "expected number");
          value = String.fromCharCode(chunk);
        }
      }
    atTab = chunk === codes.horizontalTab;
    result.push(value);
  }
  return result.join("");
}

// node_modules/micromark/dev/lib/constructs.js
var constructs_exports = {};
__export(constructs_exports, {
  attentionMarkers: () => attentionMarkers,
  contentInitial: () => contentInitial,
  disable: () => disable,
  document: () => document3,
  flow: () => flow2,
  flowInitial: () => flowInitial,
  insideSpan: () => insideSpan,
  string: () => string2,
  text: () => text2
});
var document3 = {
  [codes.asterisk]: list,
  [codes.plusSign]: list,
  [codes.dash]: list,
  [codes.digit0]: list,
  [codes.digit1]: list,
  [codes.digit2]: list,
  [codes.digit3]: list,
  [codes.digit4]: list,
  [codes.digit5]: list,
  [codes.digit6]: list,
  [codes.digit7]: list,
  [codes.digit8]: list,
  [codes.digit9]: list,
  [codes.greaterThan]: blockQuote
};
var contentInitial = {
  [codes.leftSquareBracket]: definition
};
var flowInitial = {
  [codes.horizontalTab]: codeIndented,
  [codes.virtualSpace]: codeIndented,
  [codes.space]: codeIndented
};
var flow2 = {
  [codes.numberSign]: headingAtx,
  [codes.asterisk]: thematicBreak,
  [codes.dash]: [setextUnderline, thematicBreak],
  [codes.lessThan]: htmlFlow,
  [codes.equalsTo]: setextUnderline,
  [codes.underscore]: thematicBreak,
  [codes.graveAccent]: codeFenced,
  [codes.tilde]: codeFenced
};
var string2 = {
  [codes.ampersand]: characterReference,
  [codes.backslash]: characterEscape
};
var text2 = {
  [codes.carriageReturn]: lineEnding,
  [codes.lineFeed]: lineEnding,
  [codes.carriageReturnLineFeed]: lineEnding,
  [codes.exclamationMark]: labelStartImage,
  [codes.ampersand]: characterReference,
  [codes.asterisk]: attention,
  [codes.lessThan]: [autolink, htmlText],
  [codes.leftSquareBracket]: labelStartLink,
  [codes.backslash]: [hardBreakEscape, characterEscape],
  [codes.rightSquareBracket]: labelEnd,
  [codes.underscore]: attention,
  [codes.graveAccent]: codeText
};
var insideSpan = { null: [attention, resolver] };
var attentionMarkers = { null: [codes.asterisk, codes.underscore] };
var disable = { null: [] };

// node_modules/micromark/dev/lib/parse.js
function parse(options2) {
  const settings = options2 || {};
  const constructs2 = (
    /** @type {FullNormalizedExtension} */
    combineExtensions([constructs_exports, ...settings.extensions || []])
  );
  const parser = {
    defined: [],
    lazy: {},
    constructs: constructs2,
    content: create2(content),
    document: create2(document2),
    flow: create2(flow),
    string: create2(string),
    text: create2(text)
  };
  return parser;
  function create2(initial) {
    return creator;
    function creator(from) {
      return createTokenizer(parser, initial, from);
    }
  }
}

// node_modules/micromark/dev/lib/preprocess.js
var search = /[\0\t\n\r]/g;
function preprocess() {
  let column = 1;
  let buffer2 = "";
  let start2 = true;
  let atCarriageReturn;
  return preprocessor;
  function preprocessor(value, encoding, end2) {
    const chunks = [];
    let match;
    let next;
    let startPosition;
    let endPosition;
    let code3;
    value = buffer2 + value.toString(encoding);
    startPosition = 0;
    buffer2 = "";
    if (start2) {
      if (value.charCodeAt(0) === codes.byteOrderMarker) {
        startPosition++;
      }
      start2 = void 0;
    }
    while (startPosition < value.length) {
      search.lastIndex = startPosition;
      match = search.exec(value);
      endPosition = match && match.index !== void 0 ? match.index : value.length;
      code3 = value.charCodeAt(endPosition);
      if (!match) {
        buffer2 = value.slice(startPosition);
        break;
      }
      if (code3 === codes.lf && startPosition === endPosition && atCarriageReturn) {
        chunks.push(codes.carriageReturnLineFeed);
        atCarriageReturn = void 0;
      } else {
        if (atCarriageReturn) {
          chunks.push(codes.carriageReturn);
          atCarriageReturn = void 0;
        }
        if (startPosition < endPosition) {
          chunks.push(value.slice(startPosition, endPosition));
          column += endPosition - startPosition;
        }
        switch (code3) {
          case codes.nul: {
            chunks.push(codes.replacementCharacter);
            column++;
            break;
          }
          case codes.ht: {
            next = Math.ceil(column / constants.tabSize) * constants.tabSize;
            chunks.push(codes.horizontalTab);
            while (column++ < next)
              chunks.push(codes.virtualSpace);
            break;
          }
          case codes.lf: {
            chunks.push(codes.lineFeed);
            column = 1;
            break;
          }
          default: {
            atCarriageReturn = true;
            column = 1;
          }
        }
      }
      startPosition = endPosition + 1;
    }
    if (end2) {
      if (atCarriageReturn)
        chunks.push(codes.carriageReturn);
      if (buffer2)
        chunks.push(buffer2);
      chunks.push(codes.eof);
    }
    return chunks;
  }
}

// node_modules/micromark/dev/lib/postprocess.js
function postprocess(events) {
  while (!subtokenize(events)) {
  }
  return events;
}

// node_modules/micromark-util-decode-numeric-character-reference/dev/index.js
function decodeNumericCharacterReference(value, base2) {
  const code3 = Number.parseInt(value, base2);
  if (
    // C0 except for HT, LF, FF, CR, space.
    code3 < codes.ht || code3 === codes.vt || code3 > codes.cr && code3 < codes.space || // Control character (DEL) of C0, and C1 controls.
    code3 > codes.tilde && code3 < 160 || // Lone high surrogates and low surrogates.
    code3 > 55295 && code3 < 57344 || // Noncharacters.
    code3 > 64975 && code3 < 65008 || /* eslint-disable no-bitwise */
    (code3 & 65535) === 65535 || (code3 & 65535) === 65534 || /* eslint-enable no-bitwise */
    // Out of range
    code3 > 1114111
  ) {
    return values.replacementCharacter;
  }
  return String.fromCharCode(code3);
}

// node_modules/micromark-util-decode-string/dev/index.js
var characterEscapeOrReference = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
function decodeString(value) {
  return value.replace(characterEscapeOrReference, decode);
}
function decode($0, $1, $2) {
  if ($1) {
    return $1;
  }
  const head = $2.charCodeAt(0);
  if (head === codes.numberSign) {
    const head2 = $2.charCodeAt(1);
    const hex = head2 === codes.lowercaseX || head2 === codes.uppercaseX;
    return decodeNumericCharacterReference(
      $2.slice(hex ? 2 : 1),
      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal
    );
  }
  return decodeNamedCharacterReference($2) || $0;
}

// node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js
function stringifyPosition2(value) {
  if (!value || typeof value !== "object") {
    return "";
  }
  if ("position" in value || "type" in value) {
    return position2(value.position);
  }
  if ("start" in value || "end" in value) {
    return position2(value);
  }
  if ("line" in value || "column" in value) {
    return point2(value);
  }
  return "";
}
function point2(point5) {
  return index3(point5 && point5.line) + ":" + index3(point5 && point5.column);
}
function position2(pos) {
  return point2(pos && pos.start) + "-" + point2(pos && pos.end);
}
function index3(value) {
  return value && typeof value === "number" ? value : 1;
}

// node_modules/mdast-util-from-markdown/dev/lib/index.js
var own3 = {}.hasOwnProperty;
var fromMarkdown = (
  /**
   * @type {(
   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &
   *   ((value: Value, options?: Options | null | undefined) => Root)
   * )}
   */
  /**
   * @param {Value} value
   * @param {Encoding | Options | null | undefined} [encoding]
   * @param {Options | null | undefined} [options]
   * @returns {Root}
   */
  function(value, encoding, options2) {
    if (typeof encoding !== "string") {
      options2 = encoding;
      encoding = void 0;
    }
    return compiler(options2)(
      postprocess(
        parse(options2).document().write(preprocess()(value, encoding, true))
      )
    );
  }
);
function compiler(options2) {
  const config = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: opener(link2),
      autolinkProtocol: onenterdata,
      autolinkEmail: onenterdata,
      atxHeading: opener(heading2),
      blockQuote: opener(blockQuote2),
      characterEscape: onenterdata,
      characterReference: onenterdata,
      codeFenced: opener(codeFlow),
      codeFencedFenceInfo: buffer2,
      codeFencedFenceMeta: buffer2,
      codeIndented: opener(codeFlow, buffer2),
      codeText: opener(codeText2, buffer2),
      codeTextData: onenterdata,
      data: onenterdata,
      codeFlowValue: onenterdata,
      definition: opener(definition2),
      definitionDestinationString: buffer2,
      definitionLabelString: buffer2,
      definitionTitleString: buffer2,
      emphasis: opener(emphasis2),
      hardBreakEscape: opener(hardBreak2),
      hardBreakTrailing: opener(hardBreak2),
      htmlFlow: opener(html4, buffer2),
      htmlFlowData: onenterdata,
      htmlText: opener(html4, buffer2),
      htmlTextData: onenterdata,
      image: opener(image2),
      label: buffer2,
      link: opener(link2),
      listItem: opener(listItem3),
      listItemValue: onenterlistitemvalue,
      listOrdered: opener(list3, onenterlistordered),
      listUnordered: opener(list3),
      paragraph: opener(paragraph2),
      reference: onenterreference,
      referenceString: buffer2,
      resourceDestinationString: buffer2,
      resourceTitleString: buffer2,
      setextHeading: opener(heading2),
      strong: opener(strong2),
      thematicBreak: opener(thematicBreak3)
    },
    exit: {
      atxHeading: closer(),
      atxHeadingSequence: onexitatxheadingsequence,
      autolink: closer(),
      autolinkEmail: onexitautolinkemail,
      autolinkProtocol: onexitautolinkprotocol,
      blockQuote: closer(),
      characterEscapeValue: onexitdata,
      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,
      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,
      characterReferenceValue: onexitcharacterreferencevalue,
      codeFenced: closer(onexitcodefenced),
      codeFencedFence: onexitcodefencedfence,
      codeFencedFenceInfo: onexitcodefencedfenceinfo,
      codeFencedFenceMeta: onexitcodefencedfencemeta,
      codeFlowValue: onexitdata,
      codeIndented: closer(onexitcodeindented),
      codeText: closer(onexitcodetext),
      codeTextData: onexitdata,
      data: onexitdata,
      definition: closer(),
      definitionDestinationString: onexitdefinitiondestinationstring,
      definitionLabelString: onexitdefinitionlabelstring,
      definitionTitleString: onexitdefinitiontitlestring,
      emphasis: closer(),
      hardBreakEscape: closer(onexithardbreak),
      hardBreakTrailing: closer(onexithardbreak),
      htmlFlow: closer(onexithtmlflow),
      htmlFlowData: onexitdata,
      htmlText: closer(onexithtmltext),
      htmlTextData: onexitdata,
      image: closer(onexitimage),
      label: onexitlabel,
      labelText: onexitlabeltext,
      lineEnding: onexitlineending,
      link: closer(onexitlink),
      listItem: closer(),
      listOrdered: closer(),
      listUnordered: closer(),
      paragraph: closer(),
      referenceString: onexitreferencestring,
      resourceDestinationString: onexitresourcedestinationstring,
      resourceTitleString: onexitresourcetitlestring,
      resource: onexitresource,
      setextHeading: closer(onexitsetextheading),
      setextHeadingLineSequence: onexitsetextheadinglinesequence,
      setextHeadingText: onexitsetextheadingtext,
      strong: closer(),
      thematicBreak: closer()
    }
  };
  configure(config, (options2 || {}).mdastExtensions || []);
  const data = {};
  return compile;
  function compile(events) {
    let tree = { type: "root", children: [] };
    const context = {
      stack: [tree],
      tokenStack: [],
      config,
      enter,
      exit: exit3,
      buffer: buffer2,
      resume,
      setData,
      getData
    };
    const listStack = [];
    let index5 = -1;
    while (++index5 < events.length) {
      if (events[index5][1].type === types.listOrdered || events[index5][1].type === types.listUnordered) {
        if (events[index5][0] === "enter") {
          listStack.push(index5);
        } else {
          const tail = listStack.pop();
          ok2(typeof tail === "number", "expected list ot be open");
          index5 = prepareList(events, tail, index5);
        }
      }
    }
    index5 = -1;
    while (++index5 < events.length) {
      const handler = config[events[index5][0]];
      if (own3.call(handler, events[index5][1].type)) {
        handler[events[index5][1].type].call(
          Object.assign(
            { sliceSerialize: events[index5][2].sliceSerialize },
            context
          ),
          events[index5][1]
        );
      }
    }
    if (context.tokenStack.length > 0) {
      const tail = context.tokenStack[context.tokenStack.length - 1];
      const handler = tail[1] || defaultOnError;
      handler.call(context, void 0, tail[0]);
    }
    tree.position = {
      start: point3(
        events.length > 0 ? events[0][1].start : { line: 1, column: 1, offset: 0 }
      ),
      end: point3(
        events.length > 0 ? events[events.length - 2][1].end : { line: 1, column: 1, offset: 0 }
      )
    };
    index5 = -1;
    while (++index5 < config.transforms.length) {
      tree = config.transforms[index5](tree) || tree;
    }
    return tree;
  }
  function prepareList(events, start2, length) {
    let index5 = start2 - 1;
    let containerBalance = -1;
    let listSpread = false;
    let listItem4;
    let lineIndex;
    let firstBlankLineIndex;
    let atMarker;
    while (++index5 <= length) {
      const event = events[index5];
      if (event[1].type === types.listUnordered || event[1].type === types.listOrdered || event[1].type === types.blockQuote) {
        if (event[0] === "enter") {
          containerBalance++;
        } else {
          containerBalance--;
        }
        atMarker = void 0;
      } else if (event[1].type === types.lineEndingBlank) {
        if (event[0] === "enter") {
          if (listItem4 && !atMarker && !containerBalance && !firstBlankLineIndex) {
            firstBlankLineIndex = index5;
          }
          atMarker = void 0;
        }
      } else if (event[1].type === types.linePrefix || event[1].type === types.listItemValue || event[1].type === types.listItemMarker || event[1].type === types.listItemPrefix || event[1].type === types.listItemPrefixWhitespace) {
      } else {
        atMarker = void 0;
      }
      if (!containerBalance && event[0] === "enter" && event[1].type === types.listItemPrefix || containerBalance === -1 && event[0] === "exit" && (event[1].type === types.listUnordered || event[1].type === types.listOrdered)) {
        if (listItem4) {
          let tailIndex = index5;
          lineIndex = void 0;
          while (tailIndex--) {
            const tailEvent = events[tailIndex];
            if (tailEvent[1].type === types.lineEnding || tailEvent[1].type === types.lineEndingBlank) {
              if (tailEvent[0] === "exit")
                continue;
              if (lineIndex) {
                events[lineIndex][1].type = types.lineEndingBlank;
                listSpread = true;
              }
              tailEvent[1].type = types.lineEnding;
              lineIndex = tailIndex;
            } else if (tailEvent[1].type === types.linePrefix || tailEvent[1].type === types.blockQuotePrefix || tailEvent[1].type === types.blockQuotePrefixWhitespace || tailEvent[1].type === types.blockQuoteMarker || tailEvent[1].type === types.listItemIndent) {
            } else {
              break;
            }
          }
          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {
            listItem4._spread = true;
          }
          listItem4.end = Object.assign(
            {},
            lineIndex ? events[lineIndex][1].start : event[1].end
          );
          events.splice(lineIndex || index5, 0, ["exit", listItem4, event[2]]);
          index5++;
          length++;
        }
        if (event[1].type === types.listItemPrefix) {
          listItem4 = {
            type: "listItem",
            _spread: false,
            start: Object.assign({}, event[1].start),
            // @ts-expect-error: we’ll add `end` in a second.
            end: void 0
          };
          events.splice(index5, 0, ["enter", listItem4, event[2]]);
          index5++;
          length++;
          firstBlankLineIndex = void 0;
          atMarker = true;
        }
      }
    }
    events[start2][1]._spread = listSpread;
    return length;
  }
  function setData(key, value) {
    data[key] = value;
  }
  function getData(key) {
    return data[key];
  }
  function opener(create2, and) {
    return open;
    function open(token) {
      enter.call(this, create2(token), token);
      if (and)
        and.call(this, token);
    }
  }
  function buffer2() {
    this.stack.push({ type: "fragment", children: [] });
  }
  function enter(node2, token, errorHandler) {
    const parent = this.stack[this.stack.length - 1];
    ok2(parent, "expected `parent`");
    ok2("children" in parent, "expected `parent`");
    parent.children.push(node2);
    this.stack.push(node2);
    this.tokenStack.push([token, errorHandler]);
    node2.position = { start: point3(token.start) };
    return node2;
  }
  function closer(and) {
    return close;
    function close(token) {
      if (and)
        and.call(this, token);
      exit3.call(this, token);
    }
  }
  function exit3(token, onExitError) {
    const node2 = this.stack.pop();
    ok2(node2, "expected `node`");
    const open = this.tokenStack.pop();
    if (!open) {
      throw new Error(
        "Cannot close `" + token.type + "` (" + stringifyPosition2({ start: token.start, end: token.end }) + "): it’s not open"
      );
    } else if (open[0].type !== token.type) {
      if (onExitError) {
        onExitError.call(this, token, open[0]);
      } else {
        const handler = open[1] || defaultOnError;
        handler.call(this, token, open[0]);
      }
    }
    ok2(node2.type !== "fragment", "unexpected fragment `exit`ed");
    ok2(node2.position, "expected `position` to be defined");
    node2.position.end = point3(token.end);
    return node2;
  }
  function resume() {
    return toString(this.stack.pop());
  }
  function onenterlistordered() {
    setData("expectingFirstListItemValue", true);
  }
  function onenterlistitemvalue(token) {
    if (getData("expectingFirstListItemValue")) {
      const ancestor = this.stack[this.stack.length - 2];
      ok2(ancestor, "expected nodes on stack");
      ok2(ancestor.type === "list", "expected list on stack");
      ancestor.start = Number.parseInt(
        this.sliceSerialize(token),
        constants.numericBaseDecimal
      );
      setData("expectingFirstListItemValue");
    }
  }
  function onexitcodefencedfenceinfo() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "code", "expected code on stack");
    node2.lang = data2;
  }
  function onexitcodefencedfencemeta() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "code", "expected code on stack");
    node2.meta = data2;
  }
  function onexitcodefencedfence() {
    if (getData("flowCodeInside"))
      return;
    this.buffer();
    setData("flowCodeInside", true);
  }
  function onexitcodefenced() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "code", "expected code on stack");
    node2.value = data2.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, "");
    setData("flowCodeInside");
  }
  function onexitcodeindented() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "code", "expected code on stack");
    node2.value = data2.replace(/(\r?\n|\r)$/g, "");
  }
  function onexitdefinitionlabelstring(token) {
    const label = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "definition", "expected definition on stack");
    node2.label = label;
    node2.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase();
  }
  function onexitdefinitiontitlestring() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "definition", "expected definition on stack");
    node2.title = data2;
  }
  function onexitdefinitiondestinationstring() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "definition", "expected definition on stack");
    node2.url = data2;
  }
  function onexitatxheadingsequence(token) {
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "heading", "expected heading on stack");
    if (!node2.depth) {
      const depth = this.sliceSerialize(token).length;
      ok2(
        depth === 1 || depth === 2 || depth === 3 || depth === 4 || depth === 5 || depth === 6,
        "expected `depth` between `1` and `6`"
      );
      node2.depth = depth;
    }
  }
  function onexitsetextheadingtext() {
    setData("setextHeadingSlurpLineEnding", true);
  }
  function onexitsetextheadinglinesequence(token) {
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "heading", "expected heading on stack");
    node2.depth = this.sliceSerialize(token).charCodeAt(0) === codes.equalsTo ? 1 : 2;
  }
  function onexitsetextheading() {
    setData("setextHeadingSlurpLineEnding");
  }
  function onenterdata(token) {
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2("children" in node2, "expected parent on stack");
    let tail = node2.children[node2.children.length - 1];
    if (!tail || tail.type !== "text") {
      tail = text5();
      tail.position = { start: point3(token.start) };
      node2.children.push(tail);
    }
    this.stack.push(tail);
  }
  function onexitdata(token) {
    const tail = this.stack.pop();
    ok2(tail, "expected a `node` to be on the stack");
    ok2("value" in tail, "expected a `literal` to be on the stack");
    ok2(tail.position, "expected `node` to have an open position");
    tail.value += this.sliceSerialize(token);
    tail.position.end = point3(token.end);
  }
  function onexitlineending(token) {
    const context = this.stack[this.stack.length - 1];
    ok2(context, "expected `node`");
    if (getData("atHardBreak")) {
      ok2("children" in context, "expected `parent`");
      const tail = context.children[context.children.length - 1];
      ok2(tail.position, "expected tail to have a starting position");
      tail.position.end = point3(token.end);
      setData("atHardBreak");
      return;
    }
    if (!getData("setextHeadingSlurpLineEnding") && config.canContainEols.includes(context.type)) {
      onenterdata.call(this, token);
      onexitdata.call(this, token);
    }
  }
  function onexithardbreak() {
    setData("atHardBreak", true);
  }
  function onexithtmlflow() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "html", "expected html on stack");
    node2.value = data2;
  }
  function onexithtmltext() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "html", "expected html on stack");
    node2.value = data2;
  }
  function onexitcodetext() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "inlineCode", "expected inline code on stack");
    node2.value = data2;
  }
  function onexitlink() {
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "link", "expected link on stack");
    if (getData("inReference")) {
      const referenceType = getData("referenceType") || "shortcut";
      node2.type += "Reference";
      node2.referenceType = referenceType;
      delete node2.url;
      delete node2.title;
    } else {
      delete node2.identifier;
      delete node2.label;
    }
    setData("referenceType");
  }
  function onexitimage() {
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "image", "expected image on stack");
    if (getData("inReference")) {
      const referenceType = getData("referenceType") || "shortcut";
      node2.type += "Reference";
      node2.referenceType = referenceType;
      delete node2.url;
      delete node2.title;
    } else {
      delete node2.identifier;
      delete node2.label;
    }
    setData("referenceType");
  }
  function onexitlabeltext(token) {
    const string3 = this.sliceSerialize(token);
    const ancestor = this.stack[this.stack.length - 2];
    ok2(ancestor, "expected ancestor on stack");
    ok2(
      ancestor.type === "image" || ancestor.type === "link",
      "expected image or link on stack"
    );
    ancestor.label = decodeString(string3);
    ancestor.identifier = normalizeIdentifier(string3).toLowerCase();
  }
  function onexitlabel() {
    const fragment = this.stack[this.stack.length - 1];
    ok2(fragment, "expected node on stack");
    ok2(fragment.type === "fragment", "expected fragment on stack");
    const value = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(
      node2.type === "image" || node2.type === "link",
      "expected image or link on stack"
    );
    setData("inReference", true);
    if (node2.type === "link") {
      const children = fragment.children;
      node2.children = children;
    } else {
      node2.alt = value;
    }
  }
  function onexitresourcedestinationstring() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(
      node2.type === "image" || node2.type === "link",
      "expected image or link on stack"
    );
    node2.url = data2;
  }
  function onexitresourcetitlestring() {
    const data2 = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(
      node2.type === "image" || node2.type === "link",
      "expected image or link on stack"
    );
    node2.title = data2;
  }
  function onexitresource() {
    setData("inReference");
  }
  function onenterreference() {
    setData("referenceType", "collapsed");
  }
  function onexitreferencestring(token) {
    const label = this.resume();
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(
      node2.type === "image" || node2.type === "link",
      "expected image reference or link reference on stack"
    );
    node2.label = label;
    node2.identifier = normalizeIdentifier(
      this.sliceSerialize(token)
    ).toLowerCase();
    setData("referenceType", "full");
  }
  function onexitcharacterreferencemarker(token) {
    ok2(
      token.type === "characterReferenceMarkerNumeric" || token.type === "characterReferenceMarkerHexadecimal"
    );
    setData("characterReferenceType", token.type);
  }
  function onexitcharacterreferencevalue(token) {
    const data2 = this.sliceSerialize(token);
    const type = getData("characterReferenceType");
    let value;
    if (type) {
      value = decodeNumericCharacterReference(
        data2,
        type === types.characterReferenceMarkerNumeric ? constants.numericBaseDecimal : constants.numericBaseHexadecimal
      );
      setData("characterReferenceType");
    } else {
      const result = decodeNamedCharacterReference(data2);
      ok2(result !== false, "expected reference to decode");
      value = result;
    }
    const tail = this.stack.pop();
    ok2(tail, "expected `node`");
    ok2(tail.position, "expected `node.position`");
    ok2("value" in tail, "expected `node.value`");
    tail.value += value;
    tail.position.end = point3(token.end);
  }
  function onexitautolinkprotocol(token) {
    onexitdata.call(this, token);
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "link", "expected link on stack");
    node2.url = this.sliceSerialize(token);
  }
  function onexitautolinkemail(token) {
    onexitdata.call(this, token);
    const node2 = this.stack[this.stack.length - 1];
    ok2(node2, "expected node on stack");
    ok2(node2.type === "link", "expected link on stack");
    node2.url = "mailto:" + this.sliceSerialize(token);
  }
  function blockQuote2() {
    return { type: "blockquote", children: [] };
  }
  function codeFlow() {
    return { type: "code", lang: null, meta: null, value: "" };
  }
  function codeText2() {
    return { type: "inlineCode", value: "" };
  }
  function definition2() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function emphasis2() {
    return { type: "emphasis", children: [] };
  }
  function heading2() {
    return { type: "heading", depth: void 0, children: [] };
  }
  function hardBreak2() {
    return { type: "break" };
  }
  function html4() {
    return { type: "html", value: "" };
  }
  function image2() {
    return { type: "image", title: null, url: "", alt: null };
  }
  function link2() {
    return { type: "link", title: null, url: "", children: [] };
  }
  function list3(token) {
    return {
      type: "list",
      ordered: token.type === "listOrdered",
      start: null,
      spread: token._spread,
      children: []
    };
  }
  function listItem3(token) {
    return {
      type: "listItem",
      spread: token._spread,
      checked: null,
      children: []
    };
  }
  function paragraph2() {
    return { type: "paragraph", children: [] };
  }
  function strong2() {
    return { type: "strong", children: [] };
  }
  function text5() {
    return { type: "text", value: "" };
  }
  function thematicBreak3() {
    return { type: "thematicBreak" };
  }
}
function point3(d) {
  return { line: d.line, column: d.column, offset: d.offset };
}
function configure(combined, extensions) {
  let index5 = -1;
  while (++index5 < extensions.length) {
    const value = extensions[index5];
    if (Array.isArray(value)) {
      configure(combined, value);
    } else {
      extension(combined, value);
    }
  }
}
function extension(combined, extension2) {
  let key;
  for (key in extension2) {
    if (own3.call(extension2, key)) {
      if (key === "canContainEols") {
        const right2 = extension2[key];
        if (right2) {
          combined[key].push(...right2);
        }
      } else if (key === "transforms") {
        const right2 = extension2[key];
        if (right2) {
          combined[key].push(...right2);
        }
      } else if (key === "enter" || key === "exit") {
        const right2 = extension2[key];
        if (right2) {
          Object.assign(combined[key], right2);
        }
      }
    }
  }
}
function defaultOnError(left2, right2) {
  if (left2) {
    throw new Error(
      "Cannot close `" + left2.type + "` (" + stringifyPosition2({ start: left2.start, end: left2.end }) + "): a different token (`" + right2.type + "`, " + stringifyPosition2({ start: right2.start, end: right2.end }) + ") is open"
    );
  } else {
    throw new Error(
      "Cannot close document, a token (`" + right2.type + "`, " + stringifyPosition2({ start: right2.start, end: right2.end }) + ") is still open"
    );
  }
}

// node_modules/remark-parse/lib/index.js
function remarkParse(options2) {
  const parser = (doc) => {
    const settings = (
      /** @type {Options} */
      this.data("settings")
    );
    return fromMarkdown(
      doc,
      Object.assign({}, settings, options2, {
        // Note: these options are not in the readme.
        // The goal is for them to be set by plugins on `data` instead of being
        // passed by users.
        extensions: this.data("micromarkExtensions") || [],
        mdastExtensions: this.data("fromMarkdownExtensions") || []
      })
    );
  };
  Object.assign(this, { Parser: parser });
}

// node_modules/mdast-util-to-hast/lib/handlers/blockquote.js
function blockquote(state, node2) {
  const result = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: state.wrap(state.all(node2), true)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/break.js
function hardBreak(state, node2) {
  const result = { type: "element", tagName: "br", properties: {}, children: [] };
  state.patch(node2, result);
  return [state.applyData(node2, result), { type: "text", value: "\n" }];
}

// node_modules/mdast-util-to-hast/lib/handlers/code.js
function code(state, node2) {
  const value = node2.value ? node2.value + "\n" : "";
  const lang = node2.lang ? node2.lang.match(/^[^ \t]+(?=[ \t]|$)/) : null;
  const properties = {};
  if (lang) {
    properties.className = ["language-" + lang];
  }
  let result = {
    type: "element",
    tagName: "code",
    properties,
    children: [{ type: "text", value }]
  };
  if (node2.meta) {
    result.data = { meta: node2.meta };
  }
  state.patch(node2, result);
  result = state.applyData(node2, result);
  result = { type: "element", tagName: "pre", properties: {}, children: [result] };
  state.patch(node2, result);
  return result;
}

// node_modules/mdast-util-to-hast/lib/handlers/delete.js
function strikethrough(state, node2) {
  const result = {
    type: "element",
    tagName: "del",
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/emphasis.js
function emphasis(state, node2) {
  const result = {
    type: "element",
    tagName: "em",
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/micromark-util-sanitize-uri/dev/index.js
function normalizeUri(value) {
  const result = [];
  let index5 = -1;
  let start2 = 0;
  let skip = 0;
  while (++index5 < value.length) {
    const code3 = value.charCodeAt(index5);
    let replace2 = "";
    if (code3 === codes.percentSign && asciiAlphanumeric(value.charCodeAt(index5 + 1)) && asciiAlphanumeric(value.charCodeAt(index5 + 2))) {
      skip = 2;
    } else if (code3 < 128) {
      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code3))) {
        replace2 = String.fromCharCode(code3);
      }
    } else if (code3 > 55295 && code3 < 57344) {
      const next = value.charCodeAt(index5 + 1);
      if (code3 < 56320 && next > 56319 && next < 57344) {
        replace2 = String.fromCharCode(code3, next);
        skip = 1;
      } else {
        replace2 = values.replacementCharacter;
      }
    } else {
      replace2 = String.fromCharCode(code3);
    }
    if (replace2) {
      result.push(value.slice(start2, index5), encodeURIComponent(replace2));
      start2 = index5 + skip + 1;
      replace2 = "";
    }
    if (skip) {
      index5 += skip;
      skip = 0;
    }
  }
  return result.join("") + value.slice(start2);
}

// node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js
function footnoteReference(state, node2) {
  const id = String(node2.identifier).toUpperCase();
  const safeId = normalizeUri(id.toLowerCase());
  const index5 = state.footnoteOrder.indexOf(id);
  let counter;
  if (index5 === -1) {
    state.footnoteOrder.push(id);
    state.footnoteCounts[id] = 1;
    counter = state.footnoteOrder.length;
  } else {
    state.footnoteCounts[id]++;
    counter = index5 + 1;
  }
  const reuseCounter = state.footnoteCounts[id];
  const link2 = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + state.clobberPrefix + "fn-" + safeId,
      id: state.clobberPrefix + "fnref-" + safeId + (reuseCounter > 1 ? "-" + reuseCounter : ""),
      dataFootnoteRef: true,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(counter) }]
  };
  state.patch(node2, link2);
  const sup = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [link2]
  };
  state.patch(node2, sup);
  return state.applyData(node2, sup);
}

// node_modules/mdast-util-to-hast/lib/handlers/footnote.js
function footnote(state, node2) {
  const footnoteById = state.footnoteById;
  let no = 1;
  while (no in footnoteById)
    no++;
  const identifier = String(no);
  footnoteById[identifier] = {
    type: "footnoteDefinition",
    identifier,
    children: [{ type: "paragraph", children: node2.children }],
    position: node2.position
  };
  return footnoteReference(state, {
    type: "footnoteReference",
    identifier,
    position: node2.position
  });
}

// node_modules/mdast-util-to-hast/lib/handlers/heading.js
function heading(state, node2) {
  const result = {
    type: "element",
    tagName: "h" + node2.depth,
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/html.js
function html(state, node2) {
  if (state.dangerous) {
    const result = { type: "raw", value: node2.value };
    state.patch(node2, result);
    return state.applyData(node2, result);
  }
  return null;
}

// node_modules/mdast-util-to-hast/lib/revert.js
function revert(state, node2) {
  const subtype = node2.referenceType;
  let suffix = "]";
  if (subtype === "collapsed") {
    suffix += "[]";
  } else if (subtype === "full") {
    suffix += "[" + (node2.label || node2.identifier) + "]";
  }
  if (node2.type === "imageReference") {
    return { type: "text", value: "![" + node2.alt + suffix };
  }
  const contents = state.all(node2);
  const head = contents[0];
  if (head && head.type === "text") {
    head.value = "[" + head.value;
  } else {
    contents.unshift({ type: "text", value: "[" });
  }
  const tail = contents[contents.length - 1];
  if (tail && tail.type === "text") {
    tail.value += suffix;
  } else {
    contents.push({ type: "text", value: suffix });
  }
  return contents;
}

// node_modules/mdast-util-to-hast/lib/handlers/image-reference.js
function imageReference(state, node2) {
  const def = state.definition(node2.identifier);
  if (!def) {
    return revert(state, node2);
  }
  const properties = { src: normalizeUri(def.url || ""), alt: node2.alt };
  if (def.title !== null && def.title !== void 0) {
    properties.title = def.title;
  }
  const result = { type: "element", tagName: "img", properties, children: [] };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/image.js
function image(state, node2) {
  const properties = { src: normalizeUri(node2.url) };
  if (node2.alt !== null && node2.alt !== void 0) {
    properties.alt = node2.alt;
  }
  if (node2.title !== null && node2.title !== void 0) {
    properties.title = node2.title;
  }
  const result = { type: "element", tagName: "img", properties, children: [] };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/inline-code.js
function inlineCode(state, node2) {
  const text5 = { type: "text", value: node2.value.replace(/\r?\n|\r/g, " ") };
  state.patch(node2, text5);
  const result = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [text5]
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/link-reference.js
function linkReference(state, node2) {
  const def = state.definition(node2.identifier);
  if (!def) {
    return revert(state, node2);
  }
  const properties = { href: normalizeUri(def.url || "") };
  if (def.title !== null && def.title !== void 0) {
    properties.title = def.title;
  }
  const result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/link.js
function link(state, node2) {
  const properties = { href: normalizeUri(node2.url) };
  if (node2.title !== null && node2.title !== void 0) {
    properties.title = node2.title;
  }
  const result = {
    type: "element",
    tagName: "a",
    properties,
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/list-item.js
function listItem(state, node2, parent) {
  const results = state.all(node2);
  const loose = parent ? listLoose(parent) : listItemLoose(node2);
  const properties = {};
  const children = [];
  if (typeof node2.checked === "boolean") {
    const head = results[0];
    let paragraph2;
    if (head && head.type === "element" && head.tagName === "p") {
      paragraph2 = head;
    } else {
      paragraph2 = { type: "element", tagName: "p", properties: {}, children: [] };
      results.unshift(paragraph2);
    }
    if (paragraph2.children.length > 0) {
      paragraph2.children.unshift({ type: "text", value: " " });
    }
    paragraph2.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: node2.checked, disabled: true },
      children: []
    });
    properties.className = ["task-list-item"];
  }
  let index5 = -1;
  while (++index5 < results.length) {
    const child = results[index5];
    if (loose || index5 !== 0 || child.type !== "element" || child.tagName !== "p") {
      children.push({ type: "text", value: "\n" });
    }
    if (child.type === "element" && child.tagName === "p" && !loose) {
      children.push(...child.children);
    } else {
      children.push(child);
    }
  }
  const tail = results[results.length - 1];
  if (tail && (loose || tail.type !== "element" || tail.tagName !== "p")) {
    children.push({ type: "text", value: "\n" });
  }
  const result = { type: "element", tagName: "li", properties, children };
  state.patch(node2, result);
  return state.applyData(node2, result);
}
function listLoose(node2) {
  let loose = false;
  if (node2.type === "list") {
    loose = node2.spread || false;
    const children = node2.children;
    let index5 = -1;
    while (!loose && ++index5 < children.length) {
      loose = listItemLoose(children[index5]);
    }
  }
  return loose;
}
function listItemLoose(node2) {
  const spread = node2.spread;
  return spread === void 0 || spread === null ? node2.children.length > 1 : spread;
}

// node_modules/mdast-util-to-hast/lib/handlers/list.js
function list2(state, node2) {
  const properties = {};
  const results = state.all(node2);
  let index5 = -1;
  if (typeof node2.start === "number" && node2.start !== 1) {
    properties.start = node2.start;
  }
  while (++index5 < results.length) {
    const child = results[index5];
    if (child.type === "element" && child.tagName === "li" && child.properties && Array.isArray(child.properties.className) && child.properties.className.includes("task-list-item")) {
      properties.className = ["contains-task-list"];
      break;
    }
  }
  const result = {
    type: "element",
    tagName: node2.ordered ? "ol" : "ul",
    properties,
    children: state.wrap(results, true)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/paragraph.js
function paragraph(state, node2) {
  const result = {
    type: "element",
    tagName: "p",
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/root.js
function root(state, node2) {
  const result = { type: "root", children: state.wrap(state.all(node2)) };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/strong.js
function strong(state, node2) {
  const result = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/unist-util-position/lib/index.js
var pointStart = point4("start");
var pointEnd = point4("end");
function position3(node2) {
  return { start: pointStart(node2), end: pointEnd(node2) };
}
function point4(type) {
  return point5;
  function point5(node2) {
    const point6 = node2 && node2.position && node2.position[type] || {};
    return {
      // @ts-expect-error: in practice, null is allowed.
      line: point6.line || null,
      // @ts-expect-error: in practice, null is allowed.
      column: point6.column || null,
      // @ts-expect-error: in practice, null is allowed.
      offset: point6.offset > -1 ? point6.offset : null
    };
  }
}

// node_modules/mdast-util-to-hast/lib/handlers/table.js
function table(state, node2) {
  const rows = state.all(node2);
  const firstRow = rows.shift();
  const tableContent = [];
  if (firstRow) {
    const head = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: state.wrap([firstRow], true)
    };
    state.patch(node2.children[0], head);
    tableContent.push(head);
  }
  if (rows.length > 0) {
    const body = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: state.wrap(rows, true)
    };
    const start2 = pointStart(node2.children[1]);
    const end2 = pointEnd(node2.children[node2.children.length - 1]);
    if (start2.line && end2.line)
      body.position = { start: start2, end: end2 };
    tableContent.push(body);
  }
  const result = {
    type: "element",
    tagName: "table",
    properties: {},
    children: state.wrap(tableContent, true)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/table-row.js
function tableRow(state, node2, parent) {
  const siblings = parent ? parent.children : void 0;
  const rowIndex = siblings ? siblings.indexOf(node2) : 1;
  const tagName = rowIndex === 0 ? "th" : "td";
  const align = parent && parent.type === "table" ? parent.align : void 0;
  const length = align ? align.length : node2.children.length;
  let cellIndex = -1;
  const cells = [];
  while (++cellIndex < length) {
    const cell = node2.children[cellIndex];
    const properties = {};
    const alignValue = align ? align[cellIndex] : void 0;
    if (alignValue) {
      properties.align = alignValue;
    }
    let result2 = { type: "element", tagName, properties, children: [] };
    if (cell) {
      result2.children = state.all(cell);
      state.patch(cell, result2);
      result2 = state.applyData(node2, result2);
    }
    cells.push(result2);
  }
  const result = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: state.wrap(cells, true)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/table-cell.js
function tableCell(state, node2) {
  const result = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: state.all(node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/trim-lines/index.js
var tab = 9;
var space = 32;
function trimLines(value) {
  const source = String(value);
  const search2 = /\r?\n|\r/g;
  let match = search2.exec(source);
  let last = 0;
  const lines2 = [];
  while (match) {
    lines2.push(
      trimLine(source.slice(last, match.index), last > 0, true),
      match[0]
    );
    last = match.index + match[0].length;
    match = search2.exec(source);
  }
  lines2.push(trimLine(source.slice(last), last > 0, false));
  return lines2.join("");
}
function trimLine(value, start2, end2) {
  let startIndex = 0;
  let endIndex = value.length;
  if (start2) {
    let code3 = value.codePointAt(startIndex);
    while (code3 === tab || code3 === space) {
      startIndex++;
      code3 = value.codePointAt(startIndex);
    }
  }
  if (end2) {
    let code3 = value.codePointAt(endIndex - 1);
    while (code3 === tab || code3 === space) {
      endIndex--;
      code3 = value.codePointAt(endIndex - 1);
    }
  }
  return endIndex > startIndex ? value.slice(startIndex, endIndex) : "";
}

// node_modules/mdast-util-to-hast/lib/handlers/text.js
function text3(state, node2) {
  const result = { type: "text", value: trimLines(String(node2.value)) };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js
function thematicBreak2(state, node2) {
  const result = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}

// node_modules/mdast-util-to-hast/lib/handlers/index.js
var handlers = {
  blockquote,
  break: hardBreak,
  code,
  delete: strikethrough,
  emphasis,
  footnoteReference,
  footnote,
  heading,
  html,
  imageReference,
  image,
  inlineCode,
  linkReference,
  link,
  listItem,
  list: list2,
  paragraph,
  root,
  strong,
  table,
  tableCell,
  tableRow,
  text: text3,
  thematicBreak: thematicBreak2,
  toml: ignore,
  yaml: ignore,
  definition: ignore,
  footnoteDefinition: ignore
};
function ignore() {
  return null;
}

// node_modules/unist-util-generated/lib/index.js
function generated(node2) {
  return !node2 || !node2.position || !node2.position.start || !node2.position.start.line || !node2.position.start.column || !node2.position.end || !node2.position.end.line || !node2.position.end.column;
}

// node_modules/mdast-util-definitions/lib/index.js
var own4 = {}.hasOwnProperty;
function definitions(tree) {
  const cache = /* @__PURE__ */ Object.create(null);
  if (!tree || !tree.type) {
    throw new Error("mdast-util-definitions expected node");
  }
  visit(tree, "definition", (definition3) => {
    const id = clean(definition3.identifier);
    if (id && !own4.call(cache, id)) {
      cache[id] = definition3;
    }
  });
  return definition2;
  function definition2(identifier) {
    const id = clean(identifier);
    return id && own4.call(cache, id) ? cache[id] : null;
  }
}
function clean(value) {
  return String(value || "").toUpperCase();
}

// node_modules/mdast-util-to-hast/lib/state.js
var own5 = {}.hasOwnProperty;
function createState(tree, options2) {
  const settings = options2 || {};
  const dangerous = settings.allowDangerousHtml || false;
  const footnoteById = {};
  state.dangerous = dangerous;
  state.clobberPrefix = settings.clobberPrefix === void 0 || settings.clobberPrefix === null ? "user-content-" : settings.clobberPrefix;
  state.footnoteLabel = settings.footnoteLabel || "Footnotes";
  state.footnoteLabelTagName = settings.footnoteLabelTagName || "h2";
  state.footnoteLabelProperties = settings.footnoteLabelProperties || {
    className: ["sr-only"]
  };
  state.footnoteBackLabel = settings.footnoteBackLabel || "Back to content";
  state.unknownHandler = settings.unknownHandler;
  state.passThrough = settings.passThrough;
  state.handlers = { ...handlers, ...settings.handlers };
  state.definition = definitions(tree);
  state.footnoteById = footnoteById;
  state.footnoteOrder = [];
  state.footnoteCounts = {};
  state.patch = patch;
  state.applyData = applyData;
  state.one = oneBound;
  state.all = allBound;
  state.wrap = wrap2;
  state.augment = augment;
  visit(tree, "footnoteDefinition", (definition2) => {
    const id = String(definition2.identifier).toUpperCase();
    if (!own5.call(footnoteById, id)) {
      footnoteById[id] = definition2;
    }
  });
  return state;
  function augment(left2, right2) {
    if (left2 && "data" in left2 && left2.data) {
      const data = left2.data;
      if (data.hName) {
        if (right2.type !== "element") {
          right2 = {
            type: "element",
            tagName: "",
            properties: {},
            children: []
          };
        }
        right2.tagName = data.hName;
      }
      if (right2.type === "element" && data.hProperties) {
        right2.properties = { ...right2.properties, ...data.hProperties };
      }
      if ("children" in right2 && right2.children && data.hChildren) {
        right2.children = data.hChildren;
      }
    }
    if (left2) {
      const ctx = "type" in left2 ? left2 : { position: left2 };
      if (!generated(ctx)) {
        right2.position = { start: pointStart(ctx), end: pointEnd(ctx) };
      }
    }
    return right2;
  }
  function state(node2, tagName, props, children) {
    if (Array.isArray(props)) {
      children = props;
      props = {};
    }
    return augment(node2, {
      type: "element",
      tagName,
      properties: props || {},
      children: children || []
    });
  }
  function oneBound(node2, parent) {
    return one2(state, node2, parent);
  }
  function allBound(parent) {
    return all2(state, parent);
  }
}
function patch(from, to) {
  if (from.position)
    to.position = position3(from);
}
function applyData(from, to) {
  let result = to;
  if (from && from.data) {
    const hName = from.data.hName;
    const hChildren = from.data.hChildren;
    const hProperties = from.data.hProperties;
    if (typeof hName === "string") {
      if (result.type === "element") {
        result.tagName = hName;
      } else {
        result = {
          type: "element",
          tagName: hName,
          properties: {},
          children: []
        };
      }
    }
    if (result.type === "element" && hProperties) {
      result.properties = { ...result.properties, ...hProperties };
    }
    if ("children" in result && result.children && hChildren !== null && hChildren !== void 0) {
      result.children = hChildren;
    }
  }
  return result;
}
function one2(state, node2, parent) {
  const type = node2 && node2.type;
  if (!type) {
    throw new Error("Expected node, got `" + node2 + "`");
  }
  if (own5.call(state.handlers, type)) {
    return state.handlers[type](state, node2, parent);
  }
  if (state.passThrough && state.passThrough.includes(type)) {
    return "children" in node2 ? { ...node2, children: all2(state, node2) } : node2;
  }
  if (state.unknownHandler) {
    return state.unknownHandler(state, node2, parent);
  }
  return defaultUnknownHandler(state, node2);
}
function all2(state, parent) {
  const values2 = [];
  if ("children" in parent) {
    const nodes = parent.children;
    let index5 = -1;
    while (++index5 < nodes.length) {
      const result = one2(state, nodes[index5], parent);
      if (result) {
        if (index5 && nodes[index5 - 1].type === "break") {
          if (!Array.isArray(result) && result.type === "text") {
            result.value = result.value.replace(/^\s+/, "");
          }
          if (!Array.isArray(result) && result.type === "element") {
            const head = result.children[0];
            if (head && head.type === "text") {
              head.value = head.value.replace(/^\s+/, "");
            }
          }
        }
        if (Array.isArray(result)) {
          values2.push(...result);
        } else {
          values2.push(result);
        }
      }
    }
  }
  return values2;
}
function defaultUnknownHandler(state, node2) {
  const data = node2.data || {};
  const result = "value" in node2 && !(own5.call(data, "hProperties") || own5.call(data, "hChildren")) ? { type: "text", value: node2.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: all2(state, node2)
  };
  state.patch(node2, result);
  return state.applyData(node2, result);
}
function wrap2(nodes, loose) {
  const result = [];
  let index5 = -1;
  if (loose) {
    result.push({ type: "text", value: "\n" });
  }
  while (++index5 < nodes.length) {
    if (index5)
      result.push({ type: "text", value: "\n" });
    result.push(nodes[index5]);
  }
  if (loose && nodes.length > 0) {
    result.push({ type: "text", value: "\n" });
  }
  return result;
}

// node_modules/mdast-util-to-hast/lib/footer.js
function footer(state) {
  const listItems = [];
  let index5 = -1;
  while (++index5 < state.footnoteOrder.length) {
    const def = state.footnoteById[state.footnoteOrder[index5]];
    if (!def) {
      continue;
    }
    const content3 = state.all(def);
    const id = String(def.identifier).toUpperCase();
    const safeId = normalizeUri(id.toLowerCase());
    let referenceIndex = 0;
    const backReferences = [];
    while (++referenceIndex <= state.footnoteCounts[id]) {
      const backReference = {
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + state.clobberPrefix + "fnref-" + safeId + (referenceIndex > 1 ? "-" + referenceIndex : ""),
          dataFootnoteBackref: true,
          className: ["data-footnote-backref"],
          ariaLabel: state.footnoteBackLabel
        },
        children: [{ type: "text", value: "↩" }]
      };
      if (referenceIndex > 1) {
        backReference.children.push({
          type: "element",
          tagName: "sup",
          children: [{ type: "text", value: String(referenceIndex) }]
        });
      }
      if (backReferences.length > 0) {
        backReferences.push({ type: "text", value: " " });
      }
      backReferences.push(backReference);
    }
    const tail = content3[content3.length - 1];
    if (tail && tail.type === "element" && tail.tagName === "p") {
      const tailTail = tail.children[tail.children.length - 1];
      if (tailTail && tailTail.type === "text") {
        tailTail.value += " ";
      } else {
        tail.children.push({ type: "text", value: " " });
      }
      tail.children.push(...backReferences);
    } else {
      content3.push(...backReferences);
    }
    const listItem3 = {
      type: "element",
      tagName: "li",
      properties: { id: state.clobberPrefix + "fn-" + safeId },
      children: state.wrap(content3, true)
    };
    state.patch(def, listItem3);
    listItems.push(listItem3);
  }
  if (listItems.length === 0) {
    return;
  }
  return {
    type: "element",
    tagName: "section",
    properties: { dataFootnotes: true, className: ["footnotes"] },
    children: [
      {
        type: "element",
        tagName: state.footnoteLabelTagName,
        properties: {
          // To do: use structured clone.
          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),
          id: "footnote-label"
        },
        children: [{ type: "text", value: state.footnoteLabel }]
      },
      { type: "text", value: "\n" },
      {
        type: "element",
        tagName: "ol",
        properties: {},
        children: state.wrap(listItems, true)
      },
      { type: "text", value: "\n" }
    ]
  };
}

// node_modules/mdast-util-to-hast/lib/index.js
function toHast(tree, options2) {
  const state = createState(tree, options2);
  const node2 = state.one(tree, null);
  const foot = footer(state);
  if (foot) {
    node2.children.push({ type: "text", value: "\n" }, foot);
  }
  return Array.isArray(node2) ? { type: "root", children: node2 } : node2;
}

// node_modules/remark-rehype/lib/index.js
var remarkRehype = (
  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */
  function(destination, options2) {
    return destination && "run" in destination ? bridge(destination, options2) : mutate(destination || options2);
  }
);
var lib_default = remarkRehype;
function bridge(destination, options2) {
  return (node2, file, next) => {
    destination.run(toHast(node2, options2), file, (error) => {
      next(error);
    });
  };
}
function mutate(options2) {
  return (node2) => toHast(node2, options2);
}

// node_modules/react-markdown/lib/react-markdown.js
var import_prop_types2 = __toESM(require_prop_types(), 1);

// node_modules/property-information/lib/util/schema.js
var Schema = class {
  /**
   * @constructor
   * @param {Properties} property
   * @param {Normal} normal
   * @param {string} [space]
   */
  constructor(property, normal, space2) {
    this.property = property;
    this.normal = normal;
    if (space2) {
      this.space = space2;
    }
  }
};
Schema.prototype.property = {};
Schema.prototype.normal = {};
Schema.prototype.space = null;

// node_modules/property-information/lib/util/merge.js
function merge(definitions2, space2) {
  const property = {};
  const normal = {};
  let index5 = -1;
  while (++index5 < definitions2.length) {
    Object.assign(property, definitions2[index5].property);
    Object.assign(normal, definitions2[index5].normal);
  }
  return new Schema(property, normal, space2);
}

// node_modules/property-information/lib/normalize.js
function normalize2(value) {
  return value.toLowerCase();
}

// node_modules/property-information/lib/util/info.js
var Info = class {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   */
  constructor(property, attribute) {
    this.property = property;
    this.attribute = attribute;
  }
};
Info.prototype.space = null;
Info.prototype.boolean = false;
Info.prototype.booleanish = false;
Info.prototype.overloadedBoolean = false;
Info.prototype.number = false;
Info.prototype.commaSeparated = false;
Info.prototype.spaceSeparated = false;
Info.prototype.commaOrSpaceSeparated = false;
Info.prototype.mustUseProperty = false;
Info.prototype.defined = false;

// node_modules/property-information/lib/util/types.js
var types_exports = {};
__export(types_exports, {
  boolean: () => boolean,
  booleanish: () => booleanish,
  commaOrSpaceSeparated: () => commaOrSpaceSeparated,
  commaSeparated: () => commaSeparated,
  number: () => number,
  overloadedBoolean: () => overloadedBoolean,
  spaceSeparated: () => spaceSeparated
});
var powers = 0;
var boolean = increment();
var booleanish = increment();
var overloadedBoolean = increment();
var number = increment();
var spaceSeparated = increment();
var commaSeparated = increment();
var commaOrSpaceSeparated = increment();
function increment() {
  return 2 ** ++powers;
}

// node_modules/property-information/lib/util/defined-info.js
var checks = Object.keys(types_exports);
var DefinedInfo = class extends Info {
  /**
   * @constructor
   * @param {string} property
   * @param {string} attribute
   * @param {number|null} [mask]
   * @param {string} [space]
   */
  constructor(property, attribute, mask, space2) {
    let index5 = -1;
    super(property, attribute);
    mark(this, "space", space2);
    if (typeof mask === "number") {
      while (++index5 < checks.length) {
        const check = checks[index5];
        mark(this, checks[index5], (mask & types_exports[check]) === types_exports[check]);
      }
    }
  }
};
DefinedInfo.prototype.defined = true;
function mark(values2, key, value) {
  if (value) {
    values2[key] = value;
  }
}

// node_modules/property-information/lib/util/create.js
var own6 = {}.hasOwnProperty;
function create(definition2) {
  const property = {};
  const normal = {};
  let prop;
  for (prop in definition2.properties) {
    if (own6.call(definition2.properties, prop)) {
      const value = definition2.properties[prop];
      const info = new DefinedInfo(
        prop,
        definition2.transform(definition2.attributes || {}, prop),
        value,
        definition2.space
      );
      if (definition2.mustUseProperty && definition2.mustUseProperty.includes(prop)) {
        info.mustUseProperty = true;
      }
      property[prop] = info;
      normal[normalize2(prop)] = prop;
      normal[normalize2(info.attribute)] = prop;
    }
  }
  return new Schema(property, normal, definition2.space);
}

// node_modules/property-information/lib/xlink.js
var xlink = create({
  space: "xlink",
  transform(_, prop) {
    return "xlink:" + prop.slice(5).toLowerCase();
  },
  properties: {
    xLinkActuate: null,
    xLinkArcRole: null,
    xLinkHref: null,
    xLinkRole: null,
    xLinkShow: null,
    xLinkTitle: null,
    xLinkType: null
  }
});

// node_modules/property-information/lib/xml.js
var xml = create({
  space: "xml",
  transform(_, prop) {
    return "xml:" + prop.slice(3).toLowerCase();
  },
  properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
});

// node_modules/property-information/lib/util/case-sensitive-transform.js
function caseSensitiveTransform(attributes, attribute) {
  return attribute in attributes ? attributes[attribute] : attribute;
}

// node_modules/property-information/lib/util/case-insensitive-transform.js
function caseInsensitiveTransform(attributes, property) {
  return caseSensitiveTransform(attributes, property.toLowerCase());
}

// node_modules/property-information/lib/xmlns.js
var xmlns = create({
  space: "xmlns",
  attributes: { xmlnsxlink: "xmlns:xlink" },
  transform: caseInsensitiveTransform,
  properties: { xmlns: null, xmlnsXLink: null }
});

// node_modules/property-information/lib/aria.js
var aria = create({
  transform(_, prop) {
    return prop === "role" ? prop : "aria-" + prop.slice(4).toLowerCase();
  },
  properties: {
    ariaActiveDescendant: null,
    ariaAtomic: booleanish,
    ariaAutoComplete: null,
    ariaBusy: booleanish,
    ariaChecked: booleanish,
    ariaColCount: number,
    ariaColIndex: number,
    ariaColSpan: number,
    ariaControls: spaceSeparated,
    ariaCurrent: null,
    ariaDescribedBy: spaceSeparated,
    ariaDetails: null,
    ariaDisabled: booleanish,
    ariaDropEffect: spaceSeparated,
    ariaErrorMessage: null,
    ariaExpanded: booleanish,
    ariaFlowTo: spaceSeparated,
    ariaGrabbed: booleanish,
    ariaHasPopup: null,
    ariaHidden: booleanish,
    ariaInvalid: null,
    ariaKeyShortcuts: null,
    ariaLabel: null,
    ariaLabelledBy: spaceSeparated,
    ariaLevel: number,
    ariaLive: null,
    ariaModal: booleanish,
    ariaMultiLine: booleanish,
    ariaMultiSelectable: booleanish,
    ariaOrientation: null,
    ariaOwns: spaceSeparated,
    ariaPlaceholder: null,
    ariaPosInSet: number,
    ariaPressed: booleanish,
    ariaReadOnly: booleanish,
    ariaRelevant: null,
    ariaRequired: booleanish,
    ariaRoleDescription: spaceSeparated,
    ariaRowCount: number,
    ariaRowIndex: number,
    ariaRowSpan: number,
    ariaSelected: booleanish,
    ariaSetSize: number,
    ariaSort: null,
    ariaValueMax: number,
    ariaValueMin: number,
    ariaValueNow: number,
    ariaValueText: null,
    role: null
  }
});

// node_modules/property-information/lib/html.js
var html2 = create({
  space: "html",
  attributes: {
    acceptcharset: "accept-charset",
    classname: "class",
    htmlfor: "for",
    httpequiv: "http-equiv"
  },
  transform: caseInsensitiveTransform,
  mustUseProperty: ["checked", "multiple", "muted", "selected"],
  properties: {
    // Standard Properties.
    abbr: null,
    accept: commaSeparated,
    acceptCharset: spaceSeparated,
    accessKey: spaceSeparated,
    action: null,
    allow: null,
    allowFullScreen: boolean,
    allowPaymentRequest: boolean,
    allowUserMedia: boolean,
    alt: null,
    as: null,
    async: boolean,
    autoCapitalize: null,
    autoComplete: spaceSeparated,
    autoFocus: boolean,
    autoPlay: boolean,
    blocking: spaceSeparated,
    capture: null,
    charSet: null,
    checked: boolean,
    cite: null,
    className: spaceSeparated,
    cols: number,
    colSpan: null,
    content: null,
    contentEditable: booleanish,
    controls: boolean,
    controlsList: spaceSeparated,
    coords: number | commaSeparated,
    crossOrigin: null,
    data: null,
    dateTime: null,
    decoding: null,
    default: boolean,
    defer: boolean,
    dir: null,
    dirName: null,
    disabled: boolean,
    download: overloadedBoolean,
    draggable: booleanish,
    encType: null,
    enterKeyHint: null,
    fetchPriority: null,
    form: null,
    formAction: null,
    formEncType: null,
    formMethod: null,
    formNoValidate: boolean,
    formTarget: null,
    headers: spaceSeparated,
    height: number,
    hidden: boolean,
    high: number,
    href: null,
    hrefLang: null,
    htmlFor: spaceSeparated,
    httpEquiv: spaceSeparated,
    id: null,
    imageSizes: null,
    imageSrcSet: null,
    inert: boolean,
    inputMode: null,
    integrity: null,
    is: null,
    isMap: boolean,
    itemId: null,
    itemProp: spaceSeparated,
    itemRef: spaceSeparated,
    itemScope: boolean,
    itemType: spaceSeparated,
    kind: null,
    label: null,
    lang: null,
    language: null,
    list: null,
    loading: null,
    loop: boolean,
    low: number,
    manifest: null,
    max: null,
    maxLength: number,
    media: null,
    method: null,
    min: null,
    minLength: number,
    multiple: boolean,
    muted: boolean,
    name: null,
    nonce: null,
    noModule: boolean,
    noValidate: boolean,
    onAbort: null,
    onAfterPrint: null,
    onAuxClick: null,
    onBeforeMatch: null,
    onBeforePrint: null,
    onBeforeToggle: null,
    onBeforeUnload: null,
    onBlur: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onContextLost: null,
    onContextMenu: null,
    onContextRestored: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFormData: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLanguageChange: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadEnd: null,
    onLoadStart: null,
    onMessage: null,
    onMessageError: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRejectionHandled: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onScrollEnd: null,
    onSecurityPolicyViolation: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onSlotChange: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnhandledRejection: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onWheel: null,
    open: boolean,
    optimum: number,
    pattern: null,
    ping: spaceSeparated,
    placeholder: null,
    playsInline: boolean,
    popover: null,
    popoverTarget: null,
    popoverTargetAction: null,
    poster: null,
    preload: null,
    readOnly: boolean,
    referrerPolicy: null,
    rel: spaceSeparated,
    required: boolean,
    reversed: boolean,
    rows: number,
    rowSpan: number,
    sandbox: spaceSeparated,
    scope: null,
    scoped: boolean,
    seamless: boolean,
    selected: boolean,
    shadowRootClonable: boolean,
    shadowRootDelegatesFocus: boolean,
    shadowRootMode: null,
    shape: null,
    size: number,
    sizes: null,
    slot: null,
    span: number,
    spellCheck: booleanish,
    src: null,
    srcDoc: null,
    srcLang: null,
    srcSet: null,
    start: number,
    step: null,
    style: null,
    tabIndex: number,
    target: null,
    title: null,
    translate: null,
    type: null,
    typeMustMatch: boolean,
    useMap: null,
    value: booleanish,
    width: number,
    wrap: null,
    writingSuggestions: null,
    // Legacy.
    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
    align: null,
    // Several. Use CSS `text-align` instead,
    aLink: null,
    // `<body>`. Use CSS `a:active {color}` instead
    archive: spaceSeparated,
    // `<object>`. List of URIs to archives
    axis: null,
    // `<td>` and `<th>`. Use `scope` on `<th>`
    background: null,
    // `<body>`. Use CSS `background-image` instead
    bgColor: null,
    // `<body>` and table elements. Use CSS `background-color` instead
    border: number,
    // `<table>`. Use CSS `border-width` instead,
    borderColor: null,
    // `<table>`. Use CSS `border-color` instead,
    bottomMargin: number,
    // `<body>`
    cellPadding: null,
    // `<table>`
    cellSpacing: null,
    // `<table>`
    char: null,
    // Several table elements. When `align=char`, sets the character to align on
    charOff: null,
    // Several table elements. When `char`, offsets the alignment
    classId: null,
    // `<object>`
    clear: null,
    // `<br>`. Use CSS `clear` instead
    code: null,
    // `<object>`
    codeBase: null,
    // `<object>`
    codeType: null,
    // `<object>`
    color: null,
    // `<font>` and `<hr>`. Use CSS instead
    compact: boolean,
    // Lists. Use CSS to reduce space between items instead
    declare: boolean,
    // `<object>`
    event: null,
    // `<script>`
    face: null,
    // `<font>`. Use CSS instead
    frame: null,
    // `<table>`
    frameBorder: null,
    // `<iframe>`. Use CSS `border` instead
    hSpace: number,
    // `<img>` and `<object>`
    leftMargin: number,
    // `<body>`
    link: null,
    // `<body>`. Use CSS `a:link {color: *}` instead
    longDesc: null,
    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
    lowSrc: null,
    // `<img>`. Use a `<picture>`
    marginHeight: number,
    // `<body>`
    marginWidth: number,
    // `<body>`
    noResize: boolean,
    // `<frame>`
    noHref: boolean,
    // `<area>`. Use no href instead of an explicit `nohref`
    noShade: boolean,
    // `<hr>`. Use background-color and height instead of borders
    noWrap: boolean,
    // `<td>` and `<th>`
    object: null,
    // `<applet>`
    profile: null,
    // `<head>`
    prompt: null,
    // `<isindex>`
    rev: null,
    // `<link>`
    rightMargin: number,
    // `<body>`
    rules: null,
    // `<table>`
    scheme: null,
    // `<meta>`
    scrolling: booleanish,
    // `<frame>`. Use overflow in the child context
    standby: null,
    // `<object>`
    summary: null,
    // `<table>`
    text: null,
    // `<body>`. Use CSS `color` instead
    topMargin: number,
    // `<body>`
    valueType: null,
    // `<param>`
    version: null,
    // `<html>`. Use a doctype.
    vAlign: null,
    // Several. Use CSS `vertical-align` instead
    vLink: null,
    // `<body>`. Use CSS `a:visited {color}` instead
    vSpace: number,
    // `<img>` and `<object>`
    // Non-standard Properties.
    allowTransparency: null,
    autoCorrect: null,
    autoSave: null,
    disablePictureInPicture: boolean,
    disableRemotePlayback: boolean,
    prefix: null,
    property: null,
    results: number,
    security: null,
    unselectable: null
  }
});

// node_modules/property-information/lib/svg.js
var svg = create({
  space: "svg",
  attributes: {
    accentHeight: "accent-height",
    alignmentBaseline: "alignment-baseline",
    arabicForm: "arabic-form",
    baselineShift: "baseline-shift",
    capHeight: "cap-height",
    className: "class",
    clipPath: "clip-path",
    clipRule: "clip-rule",
    colorInterpolation: "color-interpolation",
    colorInterpolationFilters: "color-interpolation-filters",
    colorProfile: "color-profile",
    colorRendering: "color-rendering",
    crossOrigin: "crossorigin",
    dataType: "datatype",
    dominantBaseline: "dominant-baseline",
    enableBackground: "enable-background",
    fillOpacity: "fill-opacity",
    fillRule: "fill-rule",
    floodColor: "flood-color",
    floodOpacity: "flood-opacity",
    fontFamily: "font-family",
    fontSize: "font-size",
    fontSizeAdjust: "font-size-adjust",
    fontStretch: "font-stretch",
    fontStyle: "font-style",
    fontVariant: "font-variant",
    fontWeight: "font-weight",
    glyphName: "glyph-name",
    glyphOrientationHorizontal: "glyph-orientation-horizontal",
    glyphOrientationVertical: "glyph-orientation-vertical",
    hrefLang: "hreflang",
    horizAdvX: "horiz-adv-x",
    horizOriginX: "horiz-origin-x",
    horizOriginY: "horiz-origin-y",
    imageRendering: "image-rendering",
    letterSpacing: "letter-spacing",
    lightingColor: "lighting-color",
    markerEnd: "marker-end",
    markerMid: "marker-mid",
    markerStart: "marker-start",
    navDown: "nav-down",
    navDownLeft: "nav-down-left",
    navDownRight: "nav-down-right",
    navLeft: "nav-left",
    navNext: "nav-next",
    navPrev: "nav-prev",
    navRight: "nav-right",
    navUp: "nav-up",
    navUpLeft: "nav-up-left",
    navUpRight: "nav-up-right",
    onAbort: "onabort",
    onActivate: "onactivate",
    onAfterPrint: "onafterprint",
    onBeforePrint: "onbeforeprint",
    onBegin: "onbegin",
    onCancel: "oncancel",
    onCanPlay: "oncanplay",
    onCanPlayThrough: "oncanplaythrough",
    onChange: "onchange",
    onClick: "onclick",
    onClose: "onclose",
    onCopy: "oncopy",
    onCueChange: "oncuechange",
    onCut: "oncut",
    onDblClick: "ondblclick",
    onDrag: "ondrag",
    onDragEnd: "ondragend",
    onDragEnter: "ondragenter",
    onDragExit: "ondragexit",
    onDragLeave: "ondragleave",
    onDragOver: "ondragover",
    onDragStart: "ondragstart",
    onDrop: "ondrop",
    onDurationChange: "ondurationchange",
    onEmptied: "onemptied",
    onEnd: "onend",
    onEnded: "onended",
    onError: "onerror",
    onFocus: "onfocus",
    onFocusIn: "onfocusin",
    onFocusOut: "onfocusout",
    onHashChange: "onhashchange",
    onInput: "oninput",
    onInvalid: "oninvalid",
    onKeyDown: "onkeydown",
    onKeyPress: "onkeypress",
    onKeyUp: "onkeyup",
    onLoad: "onload",
    onLoadedData: "onloadeddata",
    onLoadedMetadata: "onloadedmetadata",
    onLoadStart: "onloadstart",
    onMessage: "onmessage",
    onMouseDown: "onmousedown",
    onMouseEnter: "onmouseenter",
    onMouseLeave: "onmouseleave",
    onMouseMove: "onmousemove",
    onMouseOut: "onmouseout",
    onMouseOver: "onmouseover",
    onMouseUp: "onmouseup",
    onMouseWheel: "onmousewheel",
    onOffline: "onoffline",
    onOnline: "ononline",
    onPageHide: "onpagehide",
    onPageShow: "onpageshow",
    onPaste: "onpaste",
    onPause: "onpause",
    onPlay: "onplay",
    onPlaying: "onplaying",
    onPopState: "onpopstate",
    onProgress: "onprogress",
    onRateChange: "onratechange",
    onRepeat: "onrepeat",
    onReset: "onreset",
    onResize: "onresize",
    onScroll: "onscroll",
    onSeeked: "onseeked",
    onSeeking: "onseeking",
    onSelect: "onselect",
    onShow: "onshow",
    onStalled: "onstalled",
    onStorage: "onstorage",
    onSubmit: "onsubmit",
    onSuspend: "onsuspend",
    onTimeUpdate: "ontimeupdate",
    onToggle: "ontoggle",
    onUnload: "onunload",
    onVolumeChange: "onvolumechange",
    onWaiting: "onwaiting",
    onZoom: "onzoom",
    overlinePosition: "overline-position",
    overlineThickness: "overline-thickness",
    paintOrder: "paint-order",
    panose1: "panose-1",
    pointerEvents: "pointer-events",
    referrerPolicy: "referrerpolicy",
    renderingIntent: "rendering-intent",
    shapeRendering: "shape-rendering",
    stopColor: "stop-color",
    stopOpacity: "stop-opacity",
    strikethroughPosition: "strikethrough-position",
    strikethroughThickness: "strikethrough-thickness",
    strokeDashArray: "stroke-dasharray",
    strokeDashOffset: "stroke-dashoffset",
    strokeLineCap: "stroke-linecap",
    strokeLineJoin: "stroke-linejoin",
    strokeMiterLimit: "stroke-miterlimit",
    strokeOpacity: "stroke-opacity",
    strokeWidth: "stroke-width",
    tabIndex: "tabindex",
    textAnchor: "text-anchor",
    textDecoration: "text-decoration",
    textRendering: "text-rendering",
    transformOrigin: "transform-origin",
    typeOf: "typeof",
    underlinePosition: "underline-position",
    underlineThickness: "underline-thickness",
    unicodeBidi: "unicode-bidi",
    unicodeRange: "unicode-range",
    unitsPerEm: "units-per-em",
    vAlphabetic: "v-alphabetic",
    vHanging: "v-hanging",
    vIdeographic: "v-ideographic",
    vMathematical: "v-mathematical",
    vectorEffect: "vector-effect",
    vertAdvY: "vert-adv-y",
    vertOriginX: "vert-origin-x",
    vertOriginY: "vert-origin-y",
    wordSpacing: "word-spacing",
    writingMode: "writing-mode",
    xHeight: "x-height",
    // These were camelcased in Tiny. Now lowercased in SVG 2
    playbackOrder: "playbackorder",
    timelineBegin: "timelinebegin"
  },
  transform: caseSensitiveTransform,
  properties: {
    about: commaOrSpaceSeparated,
    accentHeight: number,
    accumulate: null,
    additive: null,
    alignmentBaseline: null,
    alphabetic: number,
    amplitude: number,
    arabicForm: null,
    ascent: number,
    attributeName: null,
    attributeType: null,
    azimuth: number,
    bandwidth: null,
    baselineShift: null,
    baseFrequency: null,
    baseProfile: null,
    bbox: null,
    begin: null,
    bias: number,
    by: null,
    calcMode: null,
    capHeight: number,
    className: spaceSeparated,
    clip: null,
    clipPath: null,
    clipPathUnits: null,
    clipRule: null,
    color: null,
    colorInterpolation: null,
    colorInterpolationFilters: null,
    colorProfile: null,
    colorRendering: null,
    content: null,
    contentScriptType: null,
    contentStyleType: null,
    crossOrigin: null,
    cursor: null,
    cx: null,
    cy: null,
    d: null,
    dataType: null,
    defaultAction: null,
    descent: number,
    diffuseConstant: number,
    direction: null,
    display: null,
    dur: null,
    divisor: number,
    dominantBaseline: null,
    download: boolean,
    dx: null,
    dy: null,
    edgeMode: null,
    editable: null,
    elevation: number,
    enableBackground: null,
    end: null,
    event: null,
    exponent: number,
    externalResourcesRequired: null,
    fill: null,
    fillOpacity: number,
    fillRule: null,
    filter: null,
    filterRes: null,
    filterUnits: null,
    floodColor: null,
    floodOpacity: null,
    focusable: null,
    focusHighlight: null,
    fontFamily: null,
    fontSize: null,
    fontSizeAdjust: null,
    fontStretch: null,
    fontStyle: null,
    fontVariant: null,
    fontWeight: null,
    format: null,
    fr: null,
    from: null,
    fx: null,
    fy: null,
    g1: commaSeparated,
    g2: commaSeparated,
    glyphName: commaSeparated,
    glyphOrientationHorizontal: null,
    glyphOrientationVertical: null,
    glyphRef: null,
    gradientTransform: null,
    gradientUnits: null,
    handler: null,
    hanging: number,
    hatchContentUnits: null,
    hatchUnits: null,
    height: null,
    href: null,
    hrefLang: null,
    horizAdvX: number,
    horizOriginX: number,
    horizOriginY: number,
    id: null,
    ideographic: number,
    imageRendering: null,
    initialVisibility: null,
    in: null,
    in2: null,
    intercept: number,
    k: number,
    k1: number,
    k2: number,
    k3: number,
    k4: number,
    kernelMatrix: commaOrSpaceSeparated,
    kernelUnitLength: null,
    keyPoints: null,
    // SEMI_COLON_SEPARATED
    keySplines: null,
    // SEMI_COLON_SEPARATED
    keyTimes: null,
    // SEMI_COLON_SEPARATED
    kerning: null,
    lang: null,
    lengthAdjust: null,
    letterSpacing: null,
    lightingColor: null,
    limitingConeAngle: number,
    local: null,
    markerEnd: null,
    markerMid: null,
    markerStart: null,
    markerHeight: null,
    markerUnits: null,
    markerWidth: null,
    mask: null,
    maskContentUnits: null,
    maskUnits: null,
    mathematical: null,
    max: null,
    media: null,
    mediaCharacterEncoding: null,
    mediaContentEncodings: null,
    mediaSize: number,
    mediaTime: null,
    method: null,
    min: null,
    mode: null,
    name: null,
    navDown: null,
    navDownLeft: null,
    navDownRight: null,
    navLeft: null,
    navNext: null,
    navPrev: null,
    navRight: null,
    navUp: null,
    navUpLeft: null,
    navUpRight: null,
    numOctaves: null,
    observer: null,
    offset: null,
    onAbort: null,
    onActivate: null,
    onAfterPrint: null,
    onBeforePrint: null,
    onBegin: null,
    onCancel: null,
    onCanPlay: null,
    onCanPlayThrough: null,
    onChange: null,
    onClick: null,
    onClose: null,
    onCopy: null,
    onCueChange: null,
    onCut: null,
    onDblClick: null,
    onDrag: null,
    onDragEnd: null,
    onDragEnter: null,
    onDragExit: null,
    onDragLeave: null,
    onDragOver: null,
    onDragStart: null,
    onDrop: null,
    onDurationChange: null,
    onEmptied: null,
    onEnd: null,
    onEnded: null,
    onError: null,
    onFocus: null,
    onFocusIn: null,
    onFocusOut: null,
    onHashChange: null,
    onInput: null,
    onInvalid: null,
    onKeyDown: null,
    onKeyPress: null,
    onKeyUp: null,
    onLoad: null,
    onLoadedData: null,
    onLoadedMetadata: null,
    onLoadStart: null,
    onMessage: null,
    onMouseDown: null,
    onMouseEnter: null,
    onMouseLeave: null,
    onMouseMove: null,
    onMouseOut: null,
    onMouseOver: null,
    onMouseUp: null,
    onMouseWheel: null,
    onOffline: null,
    onOnline: null,
    onPageHide: null,
    onPageShow: null,
    onPaste: null,
    onPause: null,
    onPlay: null,
    onPlaying: null,
    onPopState: null,
    onProgress: null,
    onRateChange: null,
    onRepeat: null,
    onReset: null,
    onResize: null,
    onScroll: null,
    onSeeked: null,
    onSeeking: null,
    onSelect: null,
    onShow: null,
    onStalled: null,
    onStorage: null,
    onSubmit: null,
    onSuspend: null,
    onTimeUpdate: null,
    onToggle: null,
    onUnload: null,
    onVolumeChange: null,
    onWaiting: null,
    onZoom: null,
    opacity: null,
    operator: null,
    order: null,
    orient: null,
    orientation: null,
    origin: null,
    overflow: null,
    overlay: null,
    overlinePosition: number,
    overlineThickness: number,
    paintOrder: null,
    panose1: null,
    path: null,
    pathLength: number,
    patternContentUnits: null,
    patternTransform: null,
    patternUnits: null,
    phase: null,
    ping: spaceSeparated,
    pitch: null,
    playbackOrder: null,
    pointerEvents: null,
    points: null,
    pointsAtX: number,
    pointsAtY: number,
    pointsAtZ: number,
    preserveAlpha: null,
    preserveAspectRatio: null,
    primitiveUnits: null,
    propagate: null,
    property: commaOrSpaceSeparated,
    r: null,
    radius: null,
    referrerPolicy: null,
    refX: null,
    refY: null,
    rel: commaOrSpaceSeparated,
    rev: commaOrSpaceSeparated,
    renderingIntent: null,
    repeatCount: null,
    repeatDur: null,
    requiredExtensions: commaOrSpaceSeparated,
    requiredFeatures: commaOrSpaceSeparated,
    requiredFonts: commaOrSpaceSeparated,
    requiredFormats: commaOrSpaceSeparated,
    resource: null,
    restart: null,
    result: null,
    rotate: null,
    rx: null,
    ry: null,
    scale: null,
    seed: null,
    shapeRendering: null,
    side: null,
    slope: null,
    snapshotTime: null,
    specularConstant: number,
    specularExponent: number,
    spreadMethod: null,
    spacing: null,
    startOffset: null,
    stdDeviation: null,
    stemh: null,
    stemv: null,
    stitchTiles: null,
    stopColor: null,
    stopOpacity: null,
    strikethroughPosition: number,
    strikethroughThickness: number,
    string: null,
    stroke: null,
    strokeDashArray: commaOrSpaceSeparated,
    strokeDashOffset: null,
    strokeLineCap: null,
    strokeLineJoin: null,
    strokeMiterLimit: number,
    strokeOpacity: number,
    strokeWidth: null,
    style: null,
    surfaceScale: number,
    syncBehavior: null,
    syncBehaviorDefault: null,
    syncMaster: null,
    syncTolerance: null,
    syncToleranceDefault: null,
    systemLanguage: commaOrSpaceSeparated,
    tabIndex: number,
    tableValues: null,
    target: null,
    targetX: number,
    targetY: number,
    textAnchor: null,
    textDecoration: null,
    textRendering: null,
    textLength: null,
    timelineBegin: null,
    title: null,
    transformBehavior: null,
    type: null,
    typeOf: commaOrSpaceSeparated,
    to: null,
    transform: null,
    transformOrigin: null,
    u1: null,
    u2: null,
    underlinePosition: number,
    underlineThickness: number,
    unicode: null,
    unicodeBidi: null,
    unicodeRange: null,
    unitsPerEm: number,
    values: null,
    vAlphabetic: number,
    vMathematical: number,
    vectorEffect: null,
    vHanging: number,
    vIdeographic: number,
    version: null,
    vertAdvY: number,
    vertOriginX: number,
    vertOriginY: number,
    viewBox: null,
    viewTarget: null,
    visibility: null,
    width: null,
    widths: null,
    wordSpacing: null,
    writingMode: null,
    x: null,
    x1: null,
    x2: null,
    xChannelSelector: null,
    xHeight: number,
    y: null,
    y1: null,
    y2: null,
    yChannelSelector: null,
    z: null,
    zoomAndPan: null
  }
});

// node_modules/property-information/lib/find.js
var valid = /^data[-\w.:]+$/i;
var dash = /-[a-z]/g;
var cap = /[A-Z]/g;
function find3(schema, value) {
  const normal = normalize2(value);
  let prop = value;
  let Type = Info;
  if (normal in schema.normal) {
    return schema.property[schema.normal[normal]];
  }
  if (normal.length > 4 && normal.slice(0, 4) === "data" && valid.test(value)) {
    if (value.charAt(4) === "-") {
      const rest = value.slice(5).replace(dash, camelcase);
      prop = "data" + rest.charAt(0).toUpperCase() + rest.slice(1);
    } else {
      const rest = value.slice(4);
      if (!dash.test(rest)) {
        let dashes = rest.replace(cap, kebab);
        if (dashes.charAt(0) !== "-") {
          dashes = "-" + dashes;
        }
        value = "data" + dashes;
      }
    }
    Type = DefinedInfo;
  }
  return new Type(prop, value);
}
function kebab($0) {
  return "-" + $0.toLowerCase();
}
function camelcase($0) {
  return $0.charAt(1).toUpperCase();
}

// node_modules/property-information/lib/hast-to-react.js
var hastToReact = {
  classId: "classID",
  dataType: "datatype",
  itemId: "itemID",
  strokeDashArray: "strokeDasharray",
  strokeDashOffset: "strokeDashoffset",
  strokeLineCap: "strokeLinecap",
  strokeLineJoin: "strokeLinejoin",
  strokeMiterLimit: "strokeMiterlimit",
  typeOf: "typeof",
  xLinkActuate: "xlinkActuate",
  xLinkArcRole: "xlinkArcrole",
  xLinkHref: "xlinkHref",
  xLinkRole: "xlinkRole",
  xLinkShow: "xlinkShow",
  xLinkTitle: "xlinkTitle",
  xLinkType: "xlinkType",
  xmlnsXLink: "xmlnsXlink"
};

// node_modules/property-information/index.js
var html3 = merge([xml, xlink, xmlns, aria, html2], "html");
var svg2 = merge([xml, xlink, xmlns, aria, svg], "svg");

// node_modules/react-markdown/lib/rehype-filter.js
function rehypeFilter(options2) {
  if (options2.allowedElements && options2.disallowedElements) {
    throw new TypeError(
      "Only one of `allowedElements` and `disallowedElements` should be defined"
    );
  }
  if (options2.allowedElements || options2.disallowedElements || options2.allowElement) {
    return (tree) => {
      visit(tree, "element", (node2, index5, parent_) => {
        const parent = (
          /** @type {Element|Root} */
          parent_
        );
        let remove;
        if (options2.allowedElements) {
          remove = !options2.allowedElements.includes(node2.tagName);
        } else if (options2.disallowedElements) {
          remove = options2.disallowedElements.includes(node2.tagName);
        }
        if (!remove && options2.allowElement && typeof index5 === "number") {
          remove = !options2.allowElement(node2, index5, parent);
        }
        if (remove && typeof index5 === "number") {
          if (options2.unwrapDisallowed && node2.children) {
            parent.children.splice(index5, 1, ...node2.children);
          } else {
            parent.children.splice(index5, 1);
          }
          return index5;
        }
        return void 0;
      });
    };
  }
}

// node_modules/react-markdown/lib/ast-to-react.js
var import_react42 = __toESM(require_react(), 1);
var import_react_is = __toESM(require_react_is(), 1);

// node_modules/hast-util-whitespace/index.js
function whitespace2(thing) {
  const value = (
    // @ts-expect-error looks like a node.
    thing && typeof thing === "object" && thing.type === "text" ? (
      // @ts-expect-error looks like a text.
      thing.value || ""
    ) : thing
  );
  return typeof value === "string" && value.replace(/[ \t\n\f\r]/g, "") === "";
}

// node_modules/space-separated-tokens/index.js
function stringify2(values2) {
  return values2.join(" ").trim();
}

// node_modules/comma-separated-tokens/index.js
function stringify3(values2, options2) {
  const settings = options2 || {};
  const input = values2[values2.length - 1] === "" ? [...values2, ""] : values2;
  return input.join(
    (settings.padRight ? " " : "") + "," + (settings.padLeft === false ? "" : " ")
  ).trim();
}

// node_modules/style-to-object/index.mjs
var import_index = __toESM(require_style_to_object(), 1);
var style_to_object_default = import_index.default;

// node_modules/react-markdown/lib/ast-to-react.js
var own7 = {}.hasOwnProperty;
var tableElements = /* @__PURE__ */ new Set(["table", "thead", "tbody", "tfoot", "tr"]);
function childrenToReact(context, node2) {
  const children = [];
  let childIndex = -1;
  let child;
  while (++childIndex < node2.children.length) {
    child = node2.children[childIndex];
    if (child.type === "element") {
      children.push(toReact(context, child, childIndex, node2));
    } else if (child.type === "text") {
      if (node2.type !== "element" || !tableElements.has(node2.tagName) || !whitespace2(child)) {
        children.push(child.value);
      }
    } else if (child.type === "raw" && !context.options.skipHtml) {
      children.push(child.value);
    }
  }
  return children;
}
function toReact(context, node2, index5, parent) {
  const options2 = context.options;
  const transform3 = options2.transformLinkUri === void 0 ? uriTransformer : options2.transformLinkUri;
  const parentSchema = context.schema;
  const name = node2.tagName;
  const properties = {};
  let schema = parentSchema;
  let property;
  if (parentSchema.space === "html" && name === "svg") {
    schema = svg2;
    context.schema = schema;
  }
  if (node2.properties) {
    for (property in node2.properties) {
      if (own7.call(node2.properties, property)) {
        addProperty(properties, property, node2.properties[property], context);
      }
    }
  }
  if (name === "ol" || name === "ul") {
    context.listDepth++;
  }
  const children = childrenToReact(context, node2);
  if (name === "ol" || name === "ul") {
    context.listDepth--;
  }
  context.schema = parentSchema;
  const position4 = node2.position || {
    start: { line: null, column: null, offset: null },
    end: { line: null, column: null, offset: null }
  };
  const component = options2.components && own7.call(options2.components, name) ? options2.components[name] : name;
  const basic = typeof component === "string" || component === import_react42.default.Fragment;
  if (!import_react_is.default.isValidElementType(component)) {
    throw new TypeError(
      `Component for name \`${name}\` not defined or is not renderable`
    );
  }
  properties.key = index5;
  if (name === "a" && options2.linkTarget) {
    properties.target = typeof options2.linkTarget === "function" ? options2.linkTarget(
      String(properties.href || ""),
      node2.children,
      typeof properties.title === "string" ? properties.title : null
    ) : options2.linkTarget;
  }
  if (name === "a" && transform3) {
    properties.href = transform3(
      String(properties.href || ""),
      node2.children,
      typeof properties.title === "string" ? properties.title : null
    );
  }
  if (!basic && name === "code" && parent.type === "element" && parent.tagName !== "pre") {
    properties.inline = true;
  }
  if (!basic && (name === "h1" || name === "h2" || name === "h3" || name === "h4" || name === "h5" || name === "h6")) {
    properties.level = Number.parseInt(name.charAt(1), 10);
  }
  if (name === "img" && options2.transformImageUri) {
    properties.src = options2.transformImageUri(
      String(properties.src || ""),
      String(properties.alt || ""),
      typeof properties.title === "string" ? properties.title : null
    );
  }
  if (!basic && name === "li" && parent.type === "element") {
    const input = getInputElement(node2);
    properties.checked = input && input.properties ? Boolean(input.properties.checked) : null;
    properties.index = getElementsBeforeCount(parent, node2);
    properties.ordered = parent.tagName === "ol";
  }
  if (!basic && (name === "ol" || name === "ul")) {
    properties.ordered = name === "ol";
    properties.depth = context.listDepth;
  }
  if (name === "td" || name === "th") {
    if (properties.align) {
      if (!properties.style)
        properties.style = {};
      properties.style.textAlign = properties.align;
      delete properties.align;
    }
    if (!basic) {
      properties.isHeader = name === "th";
    }
  }
  if (!basic && name === "tr" && parent.type === "element") {
    properties.isHeader = Boolean(parent.tagName === "thead");
  }
  if (options2.sourcePos) {
    properties["data-sourcepos"] = flattenPosition(position4);
  }
  if (!basic && options2.rawSourcePos) {
    properties.sourcePosition = node2.position;
  }
  if (!basic && options2.includeElementIndex) {
    properties.index = getElementsBeforeCount(parent, node2);
    properties.siblingCount = getElementsBeforeCount(parent);
  }
  if (!basic) {
    properties.node = node2;
  }
  return children.length > 0 ? import_react42.default.createElement(component, properties, children) : import_react42.default.createElement(component, properties);
}
function getInputElement(node2) {
  let index5 = -1;
  while (++index5 < node2.children.length) {
    const child = node2.children[index5];
    if (child.type === "element" && child.tagName === "input") {
      return child;
    }
  }
  return null;
}
function getElementsBeforeCount(parent, node2) {
  let index5 = -1;
  let count = 0;
  while (++index5 < parent.children.length) {
    if (parent.children[index5] === node2)
      break;
    if (parent.children[index5].type === "element")
      count++;
  }
  return count;
}
function addProperty(props, prop, value, ctx) {
  const info = find3(ctx.schema, prop);
  let result = value;
  if (result === null || result === void 0 || result !== result) {
    return;
  }
  if (Array.isArray(result)) {
    result = info.commaSeparated ? stringify3(result) : stringify2(result);
  }
  if (info.property === "style" && typeof result === "string") {
    result = parseStyle(result);
  }
  if (info.space && info.property) {
    props[own7.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;
  } else if (info.attribute) {
    props[info.attribute] = result;
  }
}
function parseStyle(value) {
  const result = {};
  try {
    style_to_object_default(value, iterator);
  } catch {
  }
  return result;
  function iterator(name, v) {
    const k = name.slice(0, 4) === "-ms-" ? `ms-${name.slice(4)}` : name;
    result[k.replace(/-([a-z])/g, styleReplacer)] = v;
  }
}
function styleReplacer(_, $1) {
  return $1.toUpperCase();
}
function flattenPosition(pos) {
  return [
    pos.start.line,
    ":",
    pos.start.column,
    "-",
    pos.end.line,
    ":",
    pos.end.column
  ].map(String).join("");
}

// node_modules/react-markdown/lib/react-markdown.js
var own8 = {}.hasOwnProperty;
var changelog = "https://github.com/remarkjs/react-markdown/blob/main/changelog.md";
var deprecated = {
  plugins: { to: "remarkPlugins", id: "change-plugins-to-remarkplugins" },
  renderers: { to: "components", id: "change-renderers-to-components" },
  astPlugins: { id: "remove-buggy-html-in-markdown-parser" },
  allowDangerousHtml: { id: "remove-buggy-html-in-markdown-parser" },
  escapeHtml: { id: "remove-buggy-html-in-markdown-parser" },
  source: { to: "children", id: "change-source-to-children" },
  allowNode: {
    to: "allowElement",
    id: "replace-allownode-allowedtypes-and-disallowedtypes"
  },
  allowedTypes: {
    to: "allowedElements",
    id: "replace-allownode-allowedtypes-and-disallowedtypes"
  },
  disallowedTypes: {
    to: "disallowedElements",
    id: "replace-allownode-allowedtypes-and-disallowedtypes"
  },
  includeNodeIndex: {
    to: "includeElementIndex",
    id: "change-includenodeindex-to-includeelementindex"
  }
};
function ReactMarkdown(options2) {
  for (const key in deprecated) {
    if (own8.call(deprecated, key) && own8.call(options2, key)) {
      const deprecation = deprecated[key];
      console.warn(
        `[react-markdown] Warning: please ${deprecation.to ? `use \`${deprecation.to}\` instead of` : "remove"} \`${key}\` (see <${changelog}#${deprecation.id}> for more info)`
      );
      delete deprecated[key];
    }
  }
  const processor = unified().use(remarkParse).use(options2.remarkPlugins || []).use(lib_default, {
    ...options2.remarkRehypeOptions,
    allowDangerousHtml: true
  }).use(options2.rehypePlugins || []).use(rehypeFilter, options2);
  const file = new VFile();
  if (typeof options2.children === "string") {
    file.value = options2.children;
  } else if (options2.children !== void 0 && options2.children !== null) {
    console.warn(
      `[react-markdown] Warning: please pass a string as \`children\` (not: \`${options2.children}\`)`
    );
  }
  const hastNode = processor.runSync(processor.parse(file), file);
  if (hastNode.type !== "root") {
    throw new TypeError("Expected a `root` node");
  }
  let result = import_react43.default.createElement(
    import_react43.default.Fragment,
    {},
    childrenToReact({ options: options2, schema: html3, listDepth: 0 }, hastNode)
  );
  if (options2.className) {
    result = import_react43.default.createElement("div", { className: options2.className }, result);
  }
  return result;
}
ReactMarkdown.propTypes = {
  // Core options:
  children: import_prop_types2.default.string,
  // Layout options:
  className: import_prop_types2.default.string,
  // Filter options:
  allowElement: import_prop_types2.default.func,
  allowedElements: import_prop_types2.default.arrayOf(import_prop_types2.default.string),
  disallowedElements: import_prop_types2.default.arrayOf(import_prop_types2.default.string),
  unwrapDisallowed: import_prop_types2.default.bool,
  // Plugin options:
  remarkPlugins: import_prop_types2.default.arrayOf(
    import_prop_types2.default.oneOfType([
      import_prop_types2.default.object,
      import_prop_types2.default.func,
      import_prop_types2.default.arrayOf(
        import_prop_types2.default.oneOfType([
          import_prop_types2.default.bool,
          import_prop_types2.default.string,
          import_prop_types2.default.object,
          import_prop_types2.default.func,
          import_prop_types2.default.arrayOf(
            // prettier-ignore
            // type-coverage:ignore-next-line
            import_prop_types2.default.any
          )
        ])
      )
    ])
  ),
  rehypePlugins: import_prop_types2.default.arrayOf(
    import_prop_types2.default.oneOfType([
      import_prop_types2.default.object,
      import_prop_types2.default.func,
      import_prop_types2.default.arrayOf(
        import_prop_types2.default.oneOfType([
          import_prop_types2.default.bool,
          import_prop_types2.default.string,
          import_prop_types2.default.object,
          import_prop_types2.default.func,
          import_prop_types2.default.arrayOf(
            // prettier-ignore
            // type-coverage:ignore-next-line
            import_prop_types2.default.any
          )
        ])
      )
    ])
  ),
  // Transform options:
  sourcePos: import_prop_types2.default.bool,
  rawSourcePos: import_prop_types2.default.bool,
  skipHtml: import_prop_types2.default.bool,
  includeElementIndex: import_prop_types2.default.bool,
  transformLinkUri: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.bool]),
  linkTarget: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.string]),
  transformImageUri: import_prop_types2.default.func,
  components: import_prop_types2.default.object
};

// node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js
var import_lodash = __toESM(require_lodash());

// node_modules/micromark-extension-gfm-autolink-literal/dev/lib/syntax.js
var wwwPrefix = { tokenize: tokenizeWwwPrefix, partial: true };
var domain2 = { tokenize: tokenizeDomain, partial: true };
var path2 = { tokenize: tokenizePath, partial: true };
var trail = { tokenize: tokenizeTrail, partial: true };
var emailDomainDotTrail = {
  tokenize: tokenizeEmailDomainDotTrail,
  partial: true
};
var wwwAutolink = { tokenize: tokenizeWwwAutolink, previous: previousWww };
var protocolAutolink = {
  tokenize: tokenizeProtocolAutolink,
  previous: previousProtocol
};
var emailAutolink = { tokenize: tokenizeEmailAutolink, previous: previousEmail };
var text4 = {};
var gfmAutolinkLiteral = { text: text4 };
var code2 = codes.digit0;
while (code2 < codes.leftCurlyBrace) {
  text4[code2] = emailAutolink;
  code2++;
  if (code2 === codes.colon)
    code2 = codes.uppercaseA;
  else if (code2 === codes.leftSquareBracket)
    code2 = codes.lowercaseA;
}
text4[codes.plusSign] = emailAutolink;
text4[codes.dash] = emailAutolink;
text4[codes.dot] = emailAutolink;
text4[codes.underscore] = emailAutolink;
text4[codes.uppercaseH] = [emailAutolink, protocolAutolink];
text4[codes.lowercaseH] = [emailAutolink, protocolAutolink];
text4[codes.uppercaseW] = [emailAutolink, wwwAutolink];
text4[codes.lowercaseW] = [emailAutolink, wwwAutolink];
function tokenizeEmailAutolink(effects, ok3, nok) {
  const self2 = this;
  let dot;
  let data;
  return start2;
  function start2(code3) {
    if (!gfmAtext(code3) || !previousEmail.call(self2, self2.previous) || previousUnbalanced(self2.events)) {
      return nok(code3);
    }
    effects.enter("literalAutolink");
    effects.enter("literalAutolinkEmail");
    return atext(code3);
  }
  function atext(code3) {
    if (gfmAtext(code3)) {
      effects.consume(code3);
      return atext;
    }
    if (code3 === codes.atSign) {
      effects.consume(code3);
      return emailDomain;
    }
    return nok(code3);
  }
  function emailDomain(code3) {
    if (code3 === codes.dot) {
      return effects.check(
        emailDomainDotTrail,
        emailDomainAfter,
        emailDomainDot
      )(code3);
    }
    if (code3 === codes.dash || code3 === codes.underscore || asciiAlphanumeric(code3)) {
      data = true;
      effects.consume(code3);
      return emailDomain;
    }
    return emailDomainAfter(code3);
  }
  function emailDomainDot(code3) {
    effects.consume(code3);
    dot = true;
    return emailDomain;
  }
  function emailDomainAfter(code3) {
    if (data && dot && asciiAlpha(self2.previous)) {
      effects.exit("literalAutolinkEmail");
      effects.exit("literalAutolink");
      return ok3(code3);
    }
    return nok(code3);
  }
}
function tokenizeWwwAutolink(effects, ok3, nok) {
  const self2 = this;
  return wwwStart;
  function wwwStart(code3) {
    if (code3 !== codes.uppercaseW && code3 !== codes.lowercaseW || !previousWww.call(self2, self2.previous) || previousUnbalanced(self2.events)) {
      return nok(code3);
    }
    effects.enter("literalAutolink");
    effects.enter("literalAutolinkWww");
    return effects.check(
      wwwPrefix,
      effects.attempt(domain2, effects.attempt(path2, wwwAfter), nok),
      nok
    )(code3);
  }
  function wwwAfter(code3) {
    effects.exit("literalAutolinkWww");
    effects.exit("literalAutolink");
    return ok3(code3);
  }
}
function tokenizeProtocolAutolink(effects, ok3, nok) {
  const self2 = this;
  let buffer2 = "";
  let seen = false;
  return protocolStart;
  function protocolStart(code3) {
    if ((code3 === codes.uppercaseH || code3 === codes.lowercaseH) && previousProtocol.call(self2, self2.previous) && !previousUnbalanced(self2.events)) {
      effects.enter("literalAutolink");
      effects.enter("literalAutolinkHttp");
      buffer2 += String.fromCodePoint(code3);
      effects.consume(code3);
      return protocolPrefixInside;
    }
    return nok(code3);
  }
  function protocolPrefixInside(code3) {
    if (asciiAlpha(code3) && buffer2.length < 5) {
      buffer2 += String.fromCodePoint(code3);
      effects.consume(code3);
      return protocolPrefixInside;
    }
    if (code3 === codes.colon) {
      const protocol = buffer2.toLowerCase();
      if (protocol === "http" || protocol === "https") {
        effects.consume(code3);
        return protocolSlashesInside;
      }
    }
    return nok(code3);
  }
  function protocolSlashesInside(code3) {
    if (code3 === codes.slash) {
      effects.consume(code3);
      if (seen) {
        return afterProtocol;
      }
      seen = true;
      return protocolSlashesInside;
    }
    return nok(code3);
  }
  function afterProtocol(code3) {
    return code3 === codes.eof || asciiControl(code3) || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3) || unicodePunctuation(code3) ? nok(code3) : effects.attempt(domain2, effects.attempt(path2, protocolAfter), nok)(code3);
  }
  function protocolAfter(code3) {
    effects.exit("literalAutolinkHttp");
    effects.exit("literalAutolink");
    return ok3(code3);
  }
}
function tokenizeWwwPrefix(effects, ok3, nok) {
  let size = 0;
  return wwwPrefixInside;
  function wwwPrefixInside(code3) {
    if ((code3 === codes.uppercaseW || code3 === codes.lowercaseW) && size < 3) {
      size++;
      effects.consume(code3);
      return wwwPrefixInside;
    }
    if (code3 === codes.dot && size === 3) {
      effects.consume(code3);
      return wwwPrefixAfter;
    }
    return nok(code3);
  }
  function wwwPrefixAfter(code3) {
    return code3 === codes.eof ? nok(code3) : ok3(code3);
  }
}
function tokenizeDomain(effects, ok3, nok) {
  let underscoreInLastSegment;
  let underscoreInLastLastSegment;
  let seen;
  return domainInside;
  function domainInside(code3) {
    if (code3 === codes.dot || code3 === codes.underscore) {
      return effects.check(trail, domainAfter, domainAtPunctuation)(code3);
    }
    if (code3 === codes.eof || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3) || code3 !== codes.dash && unicodePunctuation(code3)) {
      return domainAfter(code3);
    }
    seen = true;
    effects.consume(code3);
    return domainInside;
  }
  function domainAtPunctuation(code3) {
    if (code3 === codes.underscore) {
      underscoreInLastSegment = true;
    } else {
      underscoreInLastLastSegment = underscoreInLastSegment;
      underscoreInLastSegment = void 0;
    }
    effects.consume(code3);
    return domainInside;
  }
  function domainAfter(code3) {
    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {
      return nok(code3);
    }
    return ok3(code3);
  }
}
function tokenizePath(effects, ok3) {
  let sizeOpen = 0;
  let sizeClose = 0;
  return pathInside;
  function pathInside(code3) {
    if (code3 === codes.leftParenthesis) {
      sizeOpen++;
      effects.consume(code3);
      return pathInside;
    }
    if (code3 === codes.rightParenthesis && sizeClose < sizeOpen) {
      return pathAtPunctuation(code3);
    }
    if (code3 === codes.exclamationMark || code3 === codes.quotationMark || code3 === codes.ampersand || code3 === codes.apostrophe || code3 === codes.rightParenthesis || code3 === codes.asterisk || code3 === codes.comma || code3 === codes.dot || code3 === codes.colon || code3 === codes.semicolon || code3 === codes.lessThan || code3 === codes.questionMark || code3 === codes.rightSquareBracket || code3 === codes.underscore || code3 === codes.tilde) {
      return effects.check(trail, ok3, pathAtPunctuation)(code3);
    }
    if (code3 === codes.eof || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3)) {
      return ok3(code3);
    }
    effects.consume(code3);
    return pathInside;
  }
  function pathAtPunctuation(code3) {
    if (code3 === codes.rightParenthesis) {
      sizeClose++;
    }
    effects.consume(code3);
    return pathInside;
  }
}
function tokenizeTrail(effects, ok3, nok) {
  return trail2;
  function trail2(code3) {
    if (code3 === codes.exclamationMark || code3 === codes.quotationMark || code3 === codes.apostrophe || code3 === codes.rightParenthesis || code3 === codes.asterisk || code3 === codes.comma || code3 === codes.dot || code3 === codes.colon || code3 === codes.semicolon || code3 === codes.questionMark || code3 === codes.underscore || code3 === codes.tilde) {
      effects.consume(code3);
      return trail2;
    }
    if (code3 === codes.ampersand) {
      effects.consume(code3);
      return trailCharRefStart;
    }
    if (code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      return trailBracketAfter;
    }
    if (
      // `<` is an end.
      code3 === codes.lessThan || // So is whitespace.
      code3 === codes.eof || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3)
    ) {
      return ok3(code3);
    }
    return nok(code3);
  }
  function trailBracketAfter(code3) {
    if (code3 === codes.eof || code3 === codes.leftParenthesis || code3 === codes.leftSquareBracket || markdownLineEndingOrSpace(code3) || unicodeWhitespace(code3)) {
      return ok3(code3);
    }
    return trail2(code3);
  }
  function trailCharRefStart(code3) {
    return asciiAlpha(code3) ? trailCharRefInside(code3) : nok(code3);
  }
  function trailCharRefInside(code3) {
    if (code3 === codes.semicolon) {
      effects.consume(code3);
      return trail2;
    }
    if (asciiAlpha(code3)) {
      effects.consume(code3);
      return trailCharRefInside;
    }
    return nok(code3);
  }
}
function tokenizeEmailDomainDotTrail(effects, ok3, nok) {
  return start2;
  function start2(code3) {
    effects.consume(code3);
    return after;
  }
  function after(code3) {
    return asciiAlphanumeric(code3) ? nok(code3) : ok3(code3);
  }
}
function previousWww(code3) {
  return code3 === codes.eof || code3 === codes.leftParenthesis || code3 === codes.asterisk || code3 === codes.underscore || code3 === codes.leftSquareBracket || code3 === codes.rightSquareBracket || code3 === codes.tilde || markdownLineEndingOrSpace(code3);
}
function previousProtocol(code3) {
  return !asciiAlpha(code3);
}
function previousEmail(code3) {
  return !(code3 === codes.slash || gfmAtext(code3));
}
function gfmAtext(code3) {
  return code3 === codes.plusSign || code3 === codes.dash || code3 === codes.dot || code3 === codes.underscore || asciiAlphanumeric(code3);
}
function previousUnbalanced(events) {
  let index5 = events.length;
  let result = false;
  while (index5--) {
    const token = events[index5][1];
    if ((token.type === "labelLink" || token.type === "labelImage") && !token._balanced) {
      result = true;
      break;
    }
    if (token._gfmAutolinkLiteralWalkedInto) {
      result = false;
      break;
    }
  }
  if (events.length > 0 && !result) {
    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;
  }
  return result;
}

// node_modules/micromark-extension-gfm-footnote/dev/lib/syntax.js
var indent = { tokenize: tokenizeIndent2, partial: true };
function gfmFootnote() {
  return {
    document: {
      [codes.leftSquareBracket]: {
        tokenize: tokenizeDefinitionStart,
        continuation: { tokenize: tokenizeDefinitionContinuation },
        exit: gfmFootnoteDefinitionEnd
      }
    },
    text: {
      [codes.leftSquareBracket]: { tokenize: tokenizeGfmFootnoteCall },
      [codes.rightSquareBracket]: {
        add: "after",
        tokenize: tokenizePotentialGfmFootnoteCall,
        resolveTo: resolveToPotentialGfmFootnoteCall
      }
    }
  };
}
function tokenizePotentialGfmFootnoteCall(effects, ok3, nok) {
  const self2 = this;
  let index5 = self2.events.length;
  const defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []);
  let labelStart;
  while (index5--) {
    const token = self2.events[index5][1];
    if (token.type === types.labelImage) {
      labelStart = token;
      break;
    }
    if (token.type === "gfmFootnoteCall" || token.type === types.labelLink || token.type === types.label || token.type === types.image || token.type === types.link) {
      break;
    }
  }
  return start2;
  function start2(code3) {
    ok2(code3 === codes.rightSquareBracket, "expected `]`");
    if (!labelStart || !labelStart._balanced) {
      return nok(code3);
    }
    const id = normalizeIdentifier(
      self2.sliceSerialize({ start: labelStart.end, end: self2.now() })
    );
    if (id.codePointAt(0) !== codes.caret || !defined.includes(id.slice(1))) {
      return nok(code3);
    }
    effects.enter("gfmFootnoteCallLabelMarker");
    effects.consume(code3);
    effects.exit("gfmFootnoteCallLabelMarker");
    return ok3(code3);
  }
}
function resolveToPotentialGfmFootnoteCall(events, context) {
  let index5 = events.length;
  let labelStart;
  while (index5--) {
    if (events[index5][1].type === types.labelImage && events[index5][0] === "enter") {
      labelStart = events[index5][1];
      break;
    }
  }
  ok2(labelStart, "expected `labelStart` to resolve");
  events[index5 + 1][1].type = types.data;
  events[index5 + 3][1].type = "gfmFootnoteCallLabelMarker";
  const call = {
    type: "gfmFootnoteCall",
    start: Object.assign({}, events[index5 + 3][1].start),
    end: Object.assign({}, events[events.length - 1][1].end)
  };
  const marker = {
    type: "gfmFootnoteCallMarker",
    start: Object.assign({}, events[index5 + 3][1].end),
    end: Object.assign({}, events[index5 + 3][1].end)
  };
  marker.end.column++;
  marker.end.offset++;
  marker.end._bufferIndex++;
  const string3 = {
    type: "gfmFootnoteCallString",
    start: Object.assign({}, marker.end),
    end: Object.assign({}, events[events.length - 1][1].start)
  };
  const chunk = {
    type: types.chunkString,
    contentType: "string",
    start: Object.assign({}, string3.start),
    end: Object.assign({}, string3.end)
  };
  const replacement = [
    // Take the `labelImageMarker` (now `data`, the `!`)
    events[index5 + 1],
    events[index5 + 2],
    ["enter", call, context],
    // The `[`
    events[index5 + 3],
    events[index5 + 4],
    // The `^`.
    ["enter", marker, context],
    ["exit", marker, context],
    // Everything in between.
    ["enter", string3, context],
    ["enter", chunk, context],
    ["exit", chunk, context],
    ["exit", string3, context],
    // The ending (`]`, properly parsed and labelled).
    events[events.length - 2],
    events[events.length - 1],
    ["exit", call, context]
  ];
  events.splice(index5, events.length - index5 + 1, ...replacement);
  return events;
}
function tokenizeGfmFootnoteCall(effects, ok3, nok) {
  const self2 = this;
  const defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []);
  let size = 0;
  let data;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    effects.enter("gfmFootnoteCall");
    effects.enter("gfmFootnoteCallLabelMarker");
    effects.consume(code3);
    effects.exit("gfmFootnoteCallLabelMarker");
    return callStart;
  }
  function callStart(code3) {
    if (code3 !== codes.caret)
      return nok(code3);
    effects.enter("gfmFootnoteCallMarker");
    effects.consume(code3);
    effects.exit("gfmFootnoteCallMarker");
    effects.enter("gfmFootnoteCallString");
    effects.enter("chunkString").contentType = "string";
    return callData;
  }
  function callData(code3) {
    if (
      // Too long.
      size > constants.linkReferenceSizeMax || // Closing brace with nothing.
      code3 === codes.rightSquareBracket && !data || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      code3 === codes.eof || code3 === codes.leftSquareBracket || markdownLineEndingOrSpace(code3)
    ) {
      return nok(code3);
    }
    if (code3 === codes.rightSquareBracket) {
      effects.exit("chunkString");
      const token = effects.exit("gfmFootnoteCallString");
      if (!defined.includes(normalizeIdentifier(self2.sliceSerialize(token)))) {
        return nok(code3);
      }
      effects.enter("gfmFootnoteCallLabelMarker");
      effects.consume(code3);
      effects.exit("gfmFootnoteCallLabelMarker");
      effects.exit("gfmFootnoteCall");
      return ok3;
    }
    if (!markdownLineEndingOrSpace(code3)) {
      data = true;
    }
    size++;
    effects.consume(code3);
    return code3 === codes.backslash ? callEscape : callData;
  }
  function callEscape(code3) {
    if (code3 === codes.leftSquareBracket || code3 === codes.backslash || code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      size++;
      return callData;
    }
    return callData(code3);
  }
}
function tokenizeDefinitionStart(effects, ok3, nok) {
  const self2 = this;
  const defined = self2.parser.gfmFootnotes || (self2.parser.gfmFootnotes = []);
  let identifier;
  let size = 0;
  let data;
  return start2;
  function start2(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    effects.enter("gfmFootnoteDefinition")._container = true;
    effects.enter("gfmFootnoteDefinitionLabel");
    effects.enter("gfmFootnoteDefinitionLabelMarker");
    effects.consume(code3);
    effects.exit("gfmFootnoteDefinitionLabelMarker");
    return labelAtMarker;
  }
  function labelAtMarker(code3) {
    if (code3 === codes.caret) {
      effects.enter("gfmFootnoteDefinitionMarker");
      effects.consume(code3);
      effects.exit("gfmFootnoteDefinitionMarker");
      effects.enter("gfmFootnoteDefinitionLabelString");
      effects.enter("chunkString").contentType = "string";
      return labelInside;
    }
    return nok(code3);
  }
  function labelInside(code3) {
    if (
      // Too long.
      size > constants.linkReferenceSizeMax || // Closing brace with nothing.
      code3 === codes.rightSquareBracket && !data || // Space or tab is not supported by GFM for some reason.
      // `\n` and `[` not being supported makes sense.
      code3 === codes.eof || code3 === codes.leftSquareBracket || markdownLineEndingOrSpace(code3)
    ) {
      return nok(code3);
    }
    if (code3 === codes.rightSquareBracket) {
      effects.exit("chunkString");
      const token = effects.exit("gfmFootnoteDefinitionLabelString");
      identifier = normalizeIdentifier(self2.sliceSerialize(token));
      effects.enter("gfmFootnoteDefinitionLabelMarker");
      effects.consume(code3);
      effects.exit("gfmFootnoteDefinitionLabelMarker");
      effects.exit("gfmFootnoteDefinitionLabel");
      return labelAfter;
    }
    if (!markdownLineEndingOrSpace(code3)) {
      data = true;
    }
    size++;
    effects.consume(code3);
    return code3 === codes.backslash ? labelEscape : labelInside;
  }
  function labelEscape(code3) {
    if (code3 === codes.leftSquareBracket || code3 === codes.backslash || code3 === codes.rightSquareBracket) {
      effects.consume(code3);
      size++;
      return labelInside;
    }
    return labelInside(code3);
  }
  function labelAfter(code3) {
    if (code3 === codes.colon) {
      effects.enter("definitionMarker");
      effects.consume(code3);
      effects.exit("definitionMarker");
      if (!defined.includes(identifier)) {
        defined.push(identifier);
      }
      return factorySpace(
        effects,
        whitespaceAfter,
        "gfmFootnoteDefinitionWhitespace"
      );
    }
    return nok(code3);
  }
  function whitespaceAfter(code3) {
    return ok3(code3);
  }
}
function tokenizeDefinitionContinuation(effects, ok3, nok) {
  return effects.check(blankLine, ok3, effects.attempt(indent, ok3, nok));
}
function gfmFootnoteDefinitionEnd(effects) {
  effects.exit("gfmFootnoteDefinition");
}
function tokenizeIndent2(effects, ok3, nok) {
  const self2 = this;
  return factorySpace(
    effects,
    afterPrefix,
    "gfmFootnoteDefinitionIndent",
    constants.tabSize + 1
  );
  function afterPrefix(code3) {
    const tail = self2.events[self2.events.length - 1];
    return tail && tail[1].type === "gfmFootnoteDefinitionIndent" && tail[2].sliceSerialize(tail[1], true).length === constants.tabSize ? ok3(code3) : nok(code3);
  }
}

// node_modules/micromark-extension-gfm-footnote/dev/lib/html.js
var own9 = {}.hasOwnProperty;

// node_modules/micromark-extension-gfm-strikethrough/dev/lib/syntax.js
function gfmStrikethrough(options2) {
  const options_ = options2 || {};
  let single = options_.singleTilde;
  const tokenizer = {
    tokenize: tokenizeStrikethrough,
    resolveAll: resolveAllStrikethrough
  };
  if (single === null || single === void 0) {
    single = true;
  }
  return {
    text: { [codes.tilde]: tokenizer },
    insideSpan: { null: [tokenizer] },
    attentionMarkers: { null: [codes.tilde] }
  };
  function resolveAllStrikethrough(events, context) {
    let index5 = -1;
    while (++index5 < events.length) {
      if (events[index5][0] === "enter" && events[index5][1].type === "strikethroughSequenceTemporary" && events[index5][1]._close) {
        let open = index5;
        while (open--) {
          if (events[open][0] === "exit" && events[open][1].type === "strikethroughSequenceTemporary" && events[open][1]._open && // If the sizes are the same:
          events[index5][1].end.offset - events[index5][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {
            events[index5][1].type = "strikethroughSequence";
            events[open][1].type = "strikethroughSequence";
            const strikethrough2 = {
              type: "strikethrough",
              start: Object.assign({}, events[open][1].start),
              end: Object.assign({}, events[index5][1].end)
            };
            const text5 = {
              type: "strikethroughText",
              start: Object.assign({}, events[open][1].end),
              end: Object.assign({}, events[index5][1].start)
            };
            const nextEvents = [
              ["enter", strikethrough2, context],
              ["enter", events[open][1], context],
              ["exit", events[open][1], context],
              ["enter", text5, context]
            ];
            const insideSpan2 = context.parser.constructs.insideSpan.null;
            if (insideSpan2) {
              splice(
                nextEvents,
                nextEvents.length,
                0,
                resolveAll(insideSpan2, events.slice(open + 1, index5), context)
              );
            }
            splice(nextEvents, nextEvents.length, 0, [
              ["exit", text5, context],
              ["enter", events[index5][1], context],
              ["exit", events[index5][1], context],
              ["exit", strikethrough2, context]
            ]);
            splice(events, open - 1, index5 - open + 3, nextEvents);
            index5 = open + nextEvents.length - 2;
            break;
          }
        }
      }
    }
    index5 = -1;
    while (++index5 < events.length) {
      if (events[index5][1].type === "strikethroughSequenceTemporary") {
        events[index5][1].type = types.data;
      }
    }
    return events;
  }
  function tokenizeStrikethrough(effects, ok3, nok) {
    const previous3 = this.previous;
    const events = this.events;
    let size = 0;
    return start2;
    function start2(code3) {
      ok2(code3 === codes.tilde, "expected `~`");
      if (previous3 === codes.tilde && events[events.length - 1][1].type !== types.characterEscape) {
        return nok(code3);
      }
      effects.enter("strikethroughSequenceTemporary");
      return more(code3);
    }
    function more(code3) {
      const before = classifyCharacter(previous3);
      if (code3 === codes.tilde) {
        if (size > 1)
          return nok(code3);
        effects.consume(code3);
        size++;
        return more;
      }
      if (size < 2 && !single)
        return nok(code3);
      const token = effects.exit("strikethroughSequenceTemporary");
      const after = classifyCharacter(code3);
      token._open = !after || after === constants.attentionSideAfter && Boolean(before);
      token._close = !before || before === constants.attentionSideAfter && Boolean(after);
      return ok3(code3);
    }
  }
}

// node_modules/micromark-extension-gfm-table/dev/lib/edit-map.js
var EditMap = class {
  /**
   * Create a new edit map.
   */
  constructor() {
    this.map = [];
  }
  /**
   * Create an edit: a remove and/or add at a certain place.
   *
   * @param {number} index
   * @param {number} remove
   * @param {Array<Event>} add
   * @returns {void}
   */
  add(index5, remove, add) {
    addImpl(this, index5, remove, add);
  }
  // To do: not used here.
  // /**
  //  * Create an edit: but insert `add` before existing additions.
  //  *
  //  * @param {number} index
  //  * @param {number} remove
  //  * @param {Array<Event>} add
  //  * @returns {void}
  //  */
  // addBefore(index, remove, add) {
  //   addImpl(this, index, remove, add, true)
  // }
  /**
   * Done, change the events.
   *
   * @param {Array<Event>} events
   * @returns {void}
   */
  consume(events) {
    this.map.sort((a, b) => a[0] - b[0]);
    if (this.map.length === 0) {
      return;
    }
    let index5 = this.map.length;
    const vecs = [];
    while (index5 > 0) {
      index5 -= 1;
      vecs.push(events.slice(this.map[index5][0] + this.map[index5][1]));
      vecs.push(this.map[index5][2]);
      events.length = this.map[index5][0];
    }
    vecs.push([...events]);
    events.length = 0;
    let slice = vecs.pop();
    while (slice) {
      events.push(...slice);
      slice = vecs.pop();
    }
    this.map.length = 0;
  }
};
function addImpl(editMap, at, remove, add) {
  let index5 = 0;
  if (remove === 0 && add.length === 0) {
    return;
  }
  while (index5 < editMap.map.length) {
    if (editMap.map[index5][0] === at) {
      editMap.map[index5][1] += remove;
      editMap.map[index5][2].push(...add);
      return;
    }
    index5 += 1;
  }
  editMap.map.push([at, remove, add]);
}

// node_modules/micromark-extension-gfm-table/dev/lib/infer.js
function gfmTableAlign(events, index5) {
  ok2(events[index5][1].type === "table", "expected table");
  let inDelimiterRow = false;
  const align = [];
  while (index5 < events.length) {
    const event = events[index5];
    if (inDelimiterRow) {
      if (event[0] === "enter") {
        if (event[1].type === "tableContent") {
          align.push(
            events[index5 + 1][1].type === "tableDelimiterMarker" ? "left" : "none"
          );
        }
      } else if (event[1].type === "tableContent") {
        if (events[index5 - 1][1].type === "tableDelimiterMarker") {
          const alignIndex = align.length - 1;
          align[alignIndex] = align[alignIndex] === "left" ? "center" : "right";
        }
      } else if (event[1].type === "tableDelimiterRow") {
        break;
      }
    } else if (event[0] === "enter" && event[1].type === "tableDelimiterRow") {
      inDelimiterRow = true;
    }
    index5 += 1;
  }
  return align;
}

// node_modules/micromark-extension-gfm-table/dev/lib/syntax.js
var gfmTable = {
  flow: { null: { tokenize: tokenizeTable, resolveAll: resolveTable } }
};
function tokenizeTable(effects, ok3, nok) {
  const self2 = this;
  let size = 0;
  let sizeB = 0;
  let seen;
  return start2;
  function start2(code3) {
    let index5 = self2.events.length - 1;
    while (index5 > -1) {
      const type = self2.events[index5][1].type;
      if (type === types.lineEnding || // Note: markdown-rs uses `whitespace` instead of `linePrefix`
      type === types.linePrefix)
        index5--;
      else
        break;
    }
    const tail = index5 > -1 ? self2.events[index5][1].type : null;
    const next = tail === "tableHead" || tail === "tableRow" ? bodyRowStart : headRowBefore;
    if (next === bodyRowStart && self2.parser.lazy[self2.now().line]) {
      return nok(code3);
    }
    return next(code3);
  }
  function headRowBefore(code3) {
    effects.enter("tableHead");
    effects.enter("tableRow");
    return headRowStart(code3);
  }
  function headRowStart(code3) {
    if (code3 === codes.verticalBar) {
      return headRowBreak(code3);
    }
    seen = true;
    sizeB += 1;
    return headRowBreak(code3);
  }
  function headRowBreak(code3) {
    if (code3 === codes.eof) {
      return nok(code3);
    }
    if (markdownLineEnding(code3)) {
      if (sizeB > 1) {
        sizeB = 0;
        self2.interrupt = true;
        effects.exit("tableRow");
        effects.enter(types.lineEnding);
        effects.consume(code3);
        effects.exit(types.lineEnding);
        return headDelimiterStart;
      }
      return nok(code3);
    }
    if (markdownSpace(code3)) {
      return factorySpace(effects, headRowBreak, types.whitespace)(code3);
    }
    sizeB += 1;
    if (seen) {
      seen = false;
      size += 1;
    }
    if (code3 === codes.verticalBar) {
      effects.enter("tableCellDivider");
      effects.consume(code3);
      effects.exit("tableCellDivider");
      seen = true;
      return headRowBreak;
    }
    effects.enter(types.data);
    return headRowData(code3);
  }
  function headRowData(code3) {
    if (code3 === codes.eof || code3 === codes.verticalBar || markdownLineEndingOrSpace(code3)) {
      effects.exit(types.data);
      return headRowBreak(code3);
    }
    effects.consume(code3);
    return code3 === codes.backslash ? headRowEscape : headRowData;
  }
  function headRowEscape(code3) {
    if (code3 === codes.backslash || code3 === codes.verticalBar) {
      effects.consume(code3);
      return headRowData;
    }
    return headRowData(code3);
  }
  function headDelimiterStart(code3) {
    self2.interrupt = false;
    if (self2.parser.lazy[self2.now().line]) {
      return nok(code3);
    }
    effects.enter("tableDelimiterRow");
    seen = false;
    if (markdownSpace(code3)) {
      ok2(self2.parser.constructs.disable.null, "expected `disabled.null`");
      return factorySpace(
        effects,
        headDelimiterBefore,
        types.linePrefix,
        self2.parser.constructs.disable.null.includes("codeIndented") ? void 0 : constants.tabSize
      )(code3);
    }
    return headDelimiterBefore(code3);
  }
  function headDelimiterBefore(code3) {
    if (code3 === codes.dash || code3 === codes.colon) {
      return headDelimiterValueBefore(code3);
    }
    if (code3 === codes.verticalBar) {
      seen = true;
      effects.enter("tableCellDivider");
      effects.consume(code3);
      effects.exit("tableCellDivider");
      return headDelimiterCellBefore;
    }
    return headDelimiterNok(code3);
  }
  function headDelimiterCellBefore(code3) {
    if (markdownSpace(code3)) {
      return factorySpace(
        effects,
        headDelimiterValueBefore,
        types.whitespace
      )(code3);
    }
    return headDelimiterValueBefore(code3);
  }
  function headDelimiterValueBefore(code3) {
    if (code3 === codes.colon) {
      sizeB += 1;
      seen = true;
      effects.enter("tableDelimiterMarker");
      effects.consume(code3);
      effects.exit("tableDelimiterMarker");
      return headDelimiterLeftAlignmentAfter;
    }
    if (code3 === codes.dash) {
      sizeB += 1;
      return headDelimiterLeftAlignmentAfter(code3);
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      return headDelimiterCellAfter(code3);
    }
    return headDelimiterNok(code3);
  }
  function headDelimiterLeftAlignmentAfter(code3) {
    if (code3 === codes.dash) {
      effects.enter("tableDelimiterFiller");
      return headDelimiterFiller(code3);
    }
    return headDelimiterNok(code3);
  }
  function headDelimiterFiller(code3) {
    if (code3 === codes.dash) {
      effects.consume(code3);
      return headDelimiterFiller;
    }
    if (code3 === codes.colon) {
      seen = true;
      effects.exit("tableDelimiterFiller");
      effects.enter("tableDelimiterMarker");
      effects.consume(code3);
      effects.exit("tableDelimiterMarker");
      return headDelimiterRightAlignmentAfter;
    }
    effects.exit("tableDelimiterFiller");
    return headDelimiterRightAlignmentAfter(code3);
  }
  function headDelimiterRightAlignmentAfter(code3) {
    if (markdownSpace(code3)) {
      return factorySpace(
        effects,
        headDelimiterCellAfter,
        types.whitespace
      )(code3);
    }
    return headDelimiterCellAfter(code3);
  }
  function headDelimiterCellAfter(code3) {
    if (code3 === codes.verticalBar) {
      return headDelimiterBefore(code3);
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      if (!seen || size !== sizeB) {
        return headDelimiterNok(code3);
      }
      effects.exit("tableDelimiterRow");
      effects.exit("tableHead");
      return ok3(code3);
    }
    return headDelimiterNok(code3);
  }
  function headDelimiterNok(code3) {
    return nok(code3);
  }
  function bodyRowStart(code3) {
    effects.enter("tableRow");
    return bodyRowBreak(code3);
  }
  function bodyRowBreak(code3) {
    if (code3 === codes.verticalBar) {
      effects.enter("tableCellDivider");
      effects.consume(code3);
      effects.exit("tableCellDivider");
      return bodyRowBreak;
    }
    if (code3 === codes.eof || markdownLineEnding(code3)) {
      effects.exit("tableRow");
      return ok3(code3);
    }
    if (markdownSpace(code3)) {
      return factorySpace(effects, bodyRowBreak, types.whitespace)(code3);
    }
    effects.enter(types.data);
    return bodyRowData(code3);
  }
  function bodyRowData(code3) {
    if (code3 === codes.eof || code3 === codes.verticalBar || markdownLineEndingOrSpace(code3)) {
      effects.exit(types.data);
      return bodyRowBreak(code3);
    }
    effects.consume(code3);
    return code3 === codes.backslash ? bodyRowEscape : bodyRowData;
  }
  function bodyRowEscape(code3) {
    if (code3 === codes.backslash || code3 === codes.verticalBar) {
      effects.consume(code3);
      return bodyRowData;
    }
    return bodyRowData(code3);
  }
}
function resolveTable(events, context) {
  let index5 = -1;
  let inFirstCellAwaitingPipe = true;
  let rowKind = 0;
  let lastCell = [0, 0, 0, 0];
  let cell = [0, 0, 0, 0];
  let afterHeadAwaitingFirstBodyRow = false;
  let lastTableEnd = 0;
  let currentTable;
  let currentBody;
  let currentCell;
  const map2 = new EditMap();
  while (++index5 < events.length) {
    const event = events[index5];
    const token = event[1];
    if (event[0] === "enter") {
      if (token.type === "tableHead") {
        afterHeadAwaitingFirstBodyRow = false;
        if (lastTableEnd !== 0) {
          ok2(currentTable, "there should be a table opening");
          flushTableEnd(map2, context, lastTableEnd, currentTable, currentBody);
          currentBody = void 0;
          lastTableEnd = 0;
        }
        currentTable = {
          type: "table",
          start: Object.assign({}, token.start),
          // Note: correct end is set later.
          end: Object.assign({}, token.end)
        };
        map2.add(index5, 0, [["enter", currentTable, context]]);
      } else if (token.type === "tableRow" || token.type === "tableDelimiterRow") {
        inFirstCellAwaitingPipe = true;
        currentCell = void 0;
        lastCell = [0, 0, 0, 0];
        cell = [0, index5 + 1, 0, 0];
        if (afterHeadAwaitingFirstBodyRow) {
          afterHeadAwaitingFirstBodyRow = false;
          currentBody = {
            type: "tableBody",
            start: Object.assign({}, token.start),
            // Note: correct end is set later.
            end: Object.assign({}, token.end)
          };
          map2.add(index5, 0, [["enter", currentBody, context]]);
        }
        rowKind = token.type === "tableDelimiterRow" ? 2 : currentBody ? 3 : 1;
      } else if (rowKind && (token.type === types.data || token.type === "tableDelimiterMarker" || token.type === "tableDelimiterFiller")) {
        inFirstCellAwaitingPipe = false;
        if (cell[2] === 0) {
          if (lastCell[1] !== 0) {
            cell[0] = cell[1];
            currentCell = flushCell(
              map2,
              context,
              lastCell,
              rowKind,
              void 0,
              currentCell
            );
            lastCell = [0, 0, 0, 0];
          }
          cell[2] = index5;
        }
      } else if (token.type === "tableCellDivider") {
        if (inFirstCellAwaitingPipe) {
          inFirstCellAwaitingPipe = false;
        } else {
          if (lastCell[1] !== 0) {
            cell[0] = cell[1];
            currentCell = flushCell(
              map2,
              context,
              lastCell,
              rowKind,
              void 0,
              currentCell
            );
          }
          lastCell = cell;
          cell = [lastCell[1], index5, 0, 0];
        }
      }
    } else if (token.type === "tableHead") {
      afterHeadAwaitingFirstBodyRow = true;
      lastTableEnd = index5;
    } else if (token.type === "tableRow" || token.type === "tableDelimiterRow") {
      lastTableEnd = index5;
      if (lastCell[1] !== 0) {
        cell[0] = cell[1];
        currentCell = flushCell(
          map2,
          context,
          lastCell,
          rowKind,
          index5,
          currentCell
        );
      } else if (cell[1] !== 0) {
        currentCell = flushCell(map2, context, cell, rowKind, index5, currentCell);
      }
      rowKind = 0;
    } else if (rowKind && (token.type === types.data || token.type === "tableDelimiterMarker" || token.type === "tableDelimiterFiller")) {
      cell[3] = index5;
    }
  }
  if (lastTableEnd !== 0) {
    ok2(currentTable, "expected table opening");
    flushTableEnd(map2, context, lastTableEnd, currentTable, currentBody);
  }
  map2.consume(context.events);
  index5 = -1;
  while (++index5 < context.events.length) {
    const event = context.events[index5];
    if (event[0] === "enter" && event[1].type === "table") {
      event[1]._align = gfmTableAlign(context.events, index5);
    }
  }
  return events;
}
function flushCell(map2, context, range, rowKind, rowEnd, previousCell) {
  const groupName = rowKind === 1 ? "tableHeader" : rowKind === 2 ? "tableDelimiter" : "tableData";
  const valueName = "tableContent";
  if (range[0] !== 0) {
    ok2(previousCell, "expected previous cell enter");
    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));
    map2.add(range[0], 0, [["exit", previousCell, context]]);
  }
  const now = getPoint(context.events, range[1]);
  previousCell = {
    type: groupName,
    start: Object.assign({}, now),
    // Note: correct end is set later.
    end: Object.assign({}, now)
  };
  map2.add(range[1], 0, [["enter", previousCell, context]]);
  if (range[2] !== 0) {
    const relatedStart = getPoint(context.events, range[2]);
    const relatedEnd = getPoint(context.events, range[3]);
    const valueToken = {
      type: valueName,
      start: Object.assign({}, relatedStart),
      end: Object.assign({}, relatedEnd)
    };
    map2.add(range[2], 0, [["enter", valueToken, context]]);
    ok2(range[3] !== 0);
    if (rowKind !== 2) {
      const start2 = context.events[range[2]];
      const end2 = context.events[range[3]];
      start2[1].end = Object.assign({}, end2[1].end);
      start2[1].type = types.chunkText;
      start2[1].contentType = constants.contentTypeText;
      if (range[3] > range[2] + 1) {
        const a = range[2] + 1;
        const b = range[3] - range[2] - 1;
        map2.add(a, b, []);
      }
    }
    map2.add(range[3] + 1, 0, [["exit", valueToken, context]]);
  }
  if (rowEnd !== void 0) {
    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));
    map2.add(rowEnd, 0, [["exit", previousCell, context]]);
    previousCell = void 0;
  }
  return previousCell;
}
function flushTableEnd(map2, context, index5, table2, tableBody) {
  const exits = [];
  const related = getPoint(context.events, index5);
  if (tableBody) {
    tableBody.end = Object.assign({}, related);
    exits.push(["exit", tableBody, context]);
  }
  table2.end = Object.assign({}, related);
  exits.push(["exit", table2, context]);
  map2.add(index5 + 1, 0, exits);
}
function getPoint(events, index5) {
  const event = events[index5];
  const side = event[0] === "enter" ? "start" : "end";
  return event[1][side];
}

// node_modules/micromark-extension-gfm-tagfilter/index.js
var reFlow = /<(\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\t\n\f\r />])/gi;
var reText = new RegExp("^" + reFlow.source, "i");

// node_modules/micromark-extension-gfm-task-list-item/dev/lib/syntax.js
var tasklistCheck = { tokenize: tokenizeTasklistCheck };
var gfmTaskListItem = {
  text: { [codes.leftSquareBracket]: tasklistCheck }
};
function tokenizeTasklistCheck(effects, ok3, nok) {
  const self2 = this;
  return open;
  function open(code3) {
    ok2(code3 === codes.leftSquareBracket, "expected `[`");
    if (
      // Exit if there’s stuff before.
      self2.previous !== codes.eof || // Exit if not in the first content that is the first child of a list
      // item.
      !self2._gfmTasklistFirstContentOfListItem
    ) {
      return nok(code3);
    }
    effects.enter("taskListCheck");
    effects.enter("taskListCheckMarker");
    effects.consume(code3);
    effects.exit("taskListCheckMarker");
    return inside;
  }
  function inside(code3) {
    if (markdownLineEndingOrSpace(code3)) {
      effects.enter("taskListCheckValueUnchecked");
      effects.consume(code3);
      effects.exit("taskListCheckValueUnchecked");
      return close;
    }
    if (code3 === codes.uppercaseX || code3 === codes.lowercaseX) {
      effects.enter("taskListCheckValueChecked");
      effects.consume(code3);
      effects.exit("taskListCheckValueChecked");
      return close;
    }
    return nok(code3);
  }
  function close(code3) {
    if (code3 === codes.rightSquareBracket) {
      effects.enter("taskListCheckMarker");
      effects.consume(code3);
      effects.exit("taskListCheckMarker");
      effects.exit("taskListCheck");
      return after;
    }
    return nok(code3);
  }
  function after(code3) {
    if (markdownLineEnding(code3)) {
      return ok3(code3);
    }
    if (markdownSpace(code3)) {
      return effects.check({ tokenize: spaceThenNonSpace }, ok3, nok)(code3);
    }
    return nok(code3);
  }
}
function spaceThenNonSpace(effects, ok3, nok) {
  return factorySpace(effects, after, types.whitespace);
  function after(code3) {
    return code3 === codes.eof ? nok(code3) : ok3(code3);
  }
}

// node_modules/micromark-extension-gfm/index.js
function gfm(options2) {
  return combineExtensions([
    gfmAutolinkLiteral,
    gfmFootnote(),
    gfmStrikethrough(options2),
    gfmTable,
    gfmTaskListItem
  ]);
}

// node_modules/ccount/index.js
function ccount(value, character) {
  const source = String(value);
  if (typeof character !== "string") {
    throw new TypeError("Expected character");
  }
  let count = 0;
  let index5 = source.indexOf(character);
  while (index5 !== -1) {
    count++;
    index5 = source.indexOf(character, index5 + character.length);
  }
  return count;
}

// node_modules/mdast-util-find-and-replace/lib/index.js
var own10 = {}.hasOwnProperty;
var findAndReplace2 = (
  /**
   * @type {(
   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &
   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)
   * )}
   **/
  /**
   * @template {Node} Tree
   * @param {Tree} tree
   * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find
   * @param {Replace | Options | null | undefined} [replace]
   * @param {Options | null | undefined} [options]
   * @returns {Tree}
   */
  function(tree, find4, replace2, options2) {
    let settings;
    let schema;
    if (typeof find4 === "string" || find4 instanceof RegExp) {
      schema = [[find4, replace2]];
      settings = options2;
    } else {
      schema = find4;
      settings = replace2;
    }
    if (!settings) {
      settings = {};
    }
    const ignored = convert(settings.ignore || []);
    const pairs = toPairs2(schema);
    let pairIndex = -1;
    while (++pairIndex < pairs.length) {
      visitParents(tree, "text", visitor3);
    }
    return tree;
    function visitor3(node2, parents) {
      let index5 = -1;
      let grandparent;
      while (++index5 < parents.length) {
        const parent = parents[index5];
        if (ignored(
          parent,
          // @ts-expect-error: TS doesn’t understand but it’s perfect.
          grandparent ? grandparent.children.indexOf(parent) : void 0,
          grandparent
        )) {
          return;
        }
        grandparent = parent;
      }
      if (grandparent) {
        return handler(node2, parents);
      }
    }
    function handler(node2, parents) {
      const parent = parents[parents.length - 1];
      const find5 = pairs[pairIndex][0];
      const replace3 = pairs[pairIndex][1];
      let start2 = 0;
      const index5 = parent.children.indexOf(node2);
      let change = false;
      let nodes = [];
      find5.lastIndex = 0;
      let match = find5.exec(node2.value);
      while (match) {
        const position4 = match.index;
        const matchObject = {
          index: match.index,
          input: match.input,
          // @ts-expect-error: stack is fine.
          stack: [...parents, node2]
        };
        let value = replace3(...match, matchObject);
        if (typeof value === "string") {
          value = value.length > 0 ? { type: "text", value } : void 0;
        }
        if (value !== false) {
          if (start2 !== position4) {
            nodes.push({
              type: "text",
              value: node2.value.slice(start2, position4)
            });
          }
          if (Array.isArray(value)) {
            nodes.push(...value);
          } else if (value) {
            nodes.push(value);
          }
          start2 = position4 + match[0].length;
          change = true;
        }
        if (!find5.global) {
          break;
        }
        match = find5.exec(node2.value);
      }
      if (change) {
        if (start2 < node2.value.length) {
          nodes.push({ type: "text", value: node2.value.slice(start2) });
        }
        parent.children.splice(index5, 1, ...nodes);
      } else {
        nodes = [node2];
      }
      return index5 + nodes.length;
    }
  }
);
function toPairs2(schema) {
  const result = [];
  if (typeof schema !== "object") {
    throw new TypeError("Expected array or object as schema");
  }
  if (Array.isArray(schema)) {
    let index5 = -1;
    while (++index5 < schema.length) {
      result.push([
        toExpression2(schema[index5][0]),
        toFunction2(schema[index5][1])
      ]);
    }
  } else {
    let key;
    for (key in schema) {
      if (own10.call(schema, key)) {
        result.push([toExpression2(key), toFunction2(schema[key])]);
      }
    }
  }
  return result;
}
function toExpression2(find4) {
  return typeof find4 === "string" ? new RegExp(escapeStringRegexp(find4), "g") : find4;
}
function toFunction2(replace2) {
  return typeof replace2 === "function" ? replace2 : () => replace2;
}

// node_modules/mdast-util-gfm-autolink-literal/lib/index.js
var inConstruct = "phrasing";
var notInConstruct = ["autolink", "link", "image", "label"];
var gfmAutolinkLiteralFromMarkdown = {
  transforms: [transformGfmAutolinkLiterals],
  enter: {
    literalAutolink: enterLiteralAutolink,
    literalAutolinkEmail: enterLiteralAutolinkValue,
    literalAutolinkHttp: enterLiteralAutolinkValue,
    literalAutolinkWww: enterLiteralAutolinkValue
  },
  exit: {
    literalAutolink: exitLiteralAutolink,
    literalAutolinkEmail: exitLiteralAutolinkEmail,
    literalAutolinkHttp: exitLiteralAutolinkHttp,
    literalAutolinkWww: exitLiteralAutolinkWww
  }
};
var gfmAutolinkLiteralToMarkdown = {
  unsafe: [
    {
      character: "@",
      before: "[+\\-.\\w]",
      after: "[\\-.\\w]",
      inConstruct,
      notInConstruct
    },
    {
      character: ".",
      before: "[Ww]",
      after: "[\\-.\\w]",
      inConstruct,
      notInConstruct
    },
    { character: ":", before: "[ps]", after: "\\/", inConstruct, notInConstruct }
  ]
};
function enterLiteralAutolink(token) {
  this.enter({ type: "link", title: null, url: "", children: [] }, token);
}
function enterLiteralAutolinkValue(token) {
  this.config.enter.autolinkProtocol.call(this, token);
}
function exitLiteralAutolinkHttp(token) {
  this.config.exit.autolinkProtocol.call(this, token);
}
function exitLiteralAutolinkWww(token) {
  this.config.exit.data.call(this, token);
  const node2 = (
    /** @type {Link} */
    this.stack[this.stack.length - 1]
  );
  node2.url = "http://" + this.sliceSerialize(token);
}
function exitLiteralAutolinkEmail(token) {
  this.config.exit.autolinkEmail.call(this, token);
}
function exitLiteralAutolink(token) {
  this.exit(token);
}
function transformGfmAutolinkLiterals(tree) {
  findAndReplace2(
    tree,
    [
      [/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi, findUrl],
      [/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g, findEmail]
    ],
    { ignore: ["link", "linkReference"] }
  );
}
function findUrl(_, protocol, domain3, path3, match) {
  let prefix = "";
  if (!previous2(match)) {
    return false;
  }
  if (/^w/i.test(protocol)) {
    domain3 = protocol + domain3;
    protocol = "";
    prefix = "http://";
  }
  if (!isCorrectDomain(domain3)) {
    return false;
  }
  const parts = splitUrl(domain3 + path3);
  if (!parts[0])
    return false;
  const result = {
    type: "link",
    title: null,
    url: prefix + protocol + parts[0],
    children: [{ type: "text", value: protocol + parts[0] }]
  };
  if (parts[1]) {
    return [result, { type: "text", value: parts[1] }];
  }
  return result;
}
function findEmail(_, atext, label, match) {
  if (
    // Not an expected previous character.
    !previous2(match, true) || // Label ends in not allowed character.
    /[-\d_]$/.test(label)
  ) {
    return false;
  }
  return {
    type: "link",
    title: null,
    url: "mailto:" + atext + "@" + label,
    children: [{ type: "text", value: atext + "@" + label }]
  };
}
function isCorrectDomain(domain3) {
  const parts = domain3.split(".");
  if (parts.length < 2 || parts[parts.length - 1] && (/_/.test(parts[parts.length - 1]) || !/[a-zA-Z\d]/.test(parts[parts.length - 1])) || parts[parts.length - 2] && (/_/.test(parts[parts.length - 2]) || !/[a-zA-Z\d]/.test(parts[parts.length - 2]))) {
    return false;
  }
  return true;
}
function splitUrl(url) {
  const trailExec = /[!"&'),.:;<>?\]}]+$/.exec(url);
  if (!trailExec) {
    return [url, void 0];
  }
  url = url.slice(0, trailExec.index);
  let trail2 = trailExec[0];
  let closingParenIndex = trail2.indexOf(")");
  const openingParens = ccount(url, "(");
  let closingParens = ccount(url, ")");
  while (closingParenIndex !== -1 && openingParens > closingParens) {
    url += trail2.slice(0, closingParenIndex + 1);
    trail2 = trail2.slice(closingParenIndex + 1);
    closingParenIndex = trail2.indexOf(")");
    closingParens++;
  }
  return [url, trail2];
}
function previous2(match, email) {
  const code3 = match.input.charCodeAt(match.index - 1);
  return (match.index === 0 || unicodeWhitespace(code3) || unicodePunctuation(code3)) && (!email || code3 !== 47);
}

// node_modules/mdast-util-to-markdown/lib/util/association.js
function association(node2) {
  if (node2.label || !node2.identifier) {
    return node2.label || "";
  }
  return decodeString(node2.identifier);
}

// node_modules/mdast-util-to-markdown/lib/util/container-flow.js
function containerFlow(parent, state, info) {
  const indexStack = state.indexStack;
  const children = parent.children || [];
  const tracker = state.createTracker(info);
  const results = [];
  let index5 = -1;
  indexStack.push(-1);
  while (++index5 < children.length) {
    const child = children[index5];
    indexStack[indexStack.length - 1] = index5;
    results.push(
      tracker.move(
        state.handle(child, parent, state, {
          before: "\n",
          after: "\n",
          ...tracker.current()
        })
      )
    );
    if (child.type !== "list") {
      state.bulletLastUsed = void 0;
    }
    if (index5 < children.length - 1) {
      results.push(
        tracker.move(between(child, children[index5 + 1], parent, state))
      );
    }
  }
  indexStack.pop();
  return results.join("");
}
function between(left2, right2, parent, state) {
  let index5 = state.join.length;
  while (index5--) {
    const result = state.join[index5](left2, right2, parent, state);
    if (result === true || result === 1) {
      break;
    }
    if (typeof result === "number") {
      return "\n".repeat(1 + result);
    }
    if (result === false) {
      return "\n\n<!---->\n\n";
    }
  }
  return "\n\n";
}

// node_modules/mdast-util-to-markdown/lib/util/indent-lines.js
var eol = /\r?\n|\r/g;
function indentLines(value, map2) {
  const result = [];
  let start2 = 0;
  let line2 = 0;
  let match;
  while (match = eol.exec(value)) {
    one3(value.slice(start2, match.index));
    result.push(match[0]);
    start2 = match.index + match[0].length;
    line2++;
  }
  one3(value.slice(start2));
  return result.join("");
  function one3(value2) {
    result.push(map2(value2, line2, !value2));
  }
}

// node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js
function patternCompile(pattern) {
  if (!pattern._compiled) {
    const before = (pattern.atBreak ? "[\\r\\n][\\t ]*" : "") + (pattern.before ? "(?:" + pattern.before + ")" : "");
    pattern._compiled = new RegExp(
      (before ? "(" + before + ")" : "") + (/[|\\{}()[\]^$+*?.-]/.test(pattern.character) ? "\\" : "") + pattern.character + (pattern.after ? "(?:" + pattern.after + ")" : ""),
      "g"
    );
  }
  return pattern._compiled;
}

// node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js
function patternInScope(stack, pattern) {
  return listInScope(stack, pattern.inConstruct, true) && !listInScope(stack, pattern.notInConstruct, false);
}
function listInScope(stack, list3, none) {
  if (typeof list3 === "string") {
    list3 = [list3];
  }
  if (!list3 || list3.length === 0) {
    return none;
  }
  let index5 = -1;
  while (++index5 < list3.length) {
    if (stack.includes(list3[index5])) {
      return true;
    }
  }
  return false;
}

// node_modules/mdast-util-to-markdown/lib/util/safe.js
function safe(state, input, config) {
  const value = (config.before || "") + (input || "") + (config.after || "");
  const positions = [];
  const result = [];
  const infos = {};
  let index5 = -1;
  while (++index5 < state.unsafe.length) {
    const pattern = state.unsafe[index5];
    if (!patternInScope(state.stack, pattern)) {
      continue;
    }
    const expression = patternCompile(pattern);
    let match;
    while (match = expression.exec(value)) {
      const before = "before" in pattern || Boolean(pattern.atBreak);
      const after = "after" in pattern;
      const position4 = match.index + (before ? match[1].length : 0);
      if (positions.includes(position4)) {
        if (infos[position4].before && !before) {
          infos[position4].before = false;
        }
        if (infos[position4].after && !after) {
          infos[position4].after = false;
        }
      } else {
        positions.push(position4);
        infos[position4] = { before, after };
      }
    }
  }
  positions.sort(numerical);
  let start2 = config.before ? config.before.length : 0;
  const end2 = value.length - (config.after ? config.after.length : 0);
  index5 = -1;
  while (++index5 < positions.length) {
    const position4 = positions[index5];
    if (position4 < start2 || position4 >= end2) {
      continue;
    }
    if (position4 + 1 < end2 && positions[index5 + 1] === position4 + 1 && infos[position4].after && !infos[position4 + 1].before && !infos[position4 + 1].after || positions[index5 - 1] === position4 - 1 && infos[position4].before && !infos[position4 - 1].before && !infos[position4 - 1].after) {
      continue;
    }
    if (start2 !== position4) {
      result.push(escapeBackslashes(value.slice(start2, position4), "\\"));
    }
    start2 = position4;
    if (/[!-/:-@[-`{-~]/.test(value.charAt(position4)) && (!config.encode || !config.encode.includes(value.charAt(position4)))) {
      result.push("\\");
    } else {
      result.push(
        "&#x" + value.charCodeAt(position4).toString(16).toUpperCase() + ";"
      );
      start2++;
    }
  }
  result.push(escapeBackslashes(value.slice(start2, end2), config.after));
  return result.join("");
}
function numerical(a, b) {
  return a - b;
}
function escapeBackslashes(value, after) {
  const expression = /\\(?=[!-/:-@[-`{-~])/g;
  const positions = [];
  const results = [];
  const whole = value + after;
  let index5 = -1;
  let start2 = 0;
  let match;
  while (match = expression.exec(whole)) {
    positions.push(match.index);
  }
  while (++index5 < positions.length) {
    if (start2 !== positions[index5]) {
      results.push(value.slice(start2, positions[index5]));
    }
    results.push("\\");
    start2 = positions[index5];
  }
  results.push(value.slice(start2));
  return results.join("");
}

// node_modules/mdast-util-to-markdown/lib/util/track.js
function track(config) {
  const options2 = config || {};
  const now = options2.now || {};
  let lineShift = options2.lineShift || 0;
  let line2 = now.line || 1;
  let column = now.column || 1;
  return { move, current, shift };
  function current() {
    return { now: { line: line2, column }, lineShift };
  }
  function shift(value) {
    lineShift += value;
  }
  function move(input) {
    const value = input || "";
    const chunks = value.split(/\r?\n|\r/g);
    const tail = chunks[chunks.length - 1];
    line2 += chunks.length - 1;
    column = chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift;
    return value;
  }
}

// node_modules/mdast-util-gfm-footnote/lib/index.js
footnoteReference2.peek = footnoteReferencePeek;
function gfmFootnoteFromMarkdown() {
  return {
    enter: {
      gfmFootnoteDefinition: enterFootnoteDefinition,
      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,
      gfmFootnoteCall: enterFootnoteCall,
      gfmFootnoteCallString: enterFootnoteCallString
    },
    exit: {
      gfmFootnoteDefinition: exitFootnoteDefinition,
      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,
      gfmFootnoteCall: exitFootnoteCall,
      gfmFootnoteCallString: exitFootnoteCallString
    }
  };
}
function gfmFootnoteToMarkdown() {
  return {
    // This is on by default already.
    unsafe: [{ character: "[", inConstruct: ["phrasing", "label", "reference"] }],
    handlers: { footnoteDefinition, footnoteReference: footnoteReference2 }
  };
}
function enterFootnoteDefinition(token) {
  this.enter(
    { type: "footnoteDefinition", identifier: "", label: "", children: [] },
    token
  );
}
function enterFootnoteDefinitionLabelString() {
  this.buffer();
}
function exitFootnoteDefinitionLabelString(token) {
  const label = this.resume();
  const node2 = (
    /** @type {FootnoteDefinition} */
    this.stack[this.stack.length - 1]
  );
  node2.label = label;
  node2.identifier = normalizeIdentifier(
    this.sliceSerialize(token)
  ).toLowerCase();
}
function exitFootnoteDefinition(token) {
  this.exit(token);
}
function enterFootnoteCall(token) {
  this.enter({ type: "footnoteReference", identifier: "", label: "" }, token);
}
function enterFootnoteCallString() {
  this.buffer();
}
function exitFootnoteCallString(token) {
  const label = this.resume();
  const node2 = (
    /** @type {FootnoteDefinition} */
    this.stack[this.stack.length - 1]
  );
  node2.label = label;
  node2.identifier = normalizeIdentifier(
    this.sliceSerialize(token)
  ).toLowerCase();
}
function exitFootnoteCall(token) {
  this.exit(token);
}
function footnoteReference2(node2, _, context, safeOptions) {
  const tracker = track(safeOptions);
  let value = tracker.move("[^");
  const exit3 = context.enter("footnoteReference");
  const subexit = context.enter("reference");
  value += tracker.move(
    safe(context, association(node2), {
      ...tracker.current(),
      before: value,
      after: "]"
    })
  );
  subexit();
  exit3();
  value += tracker.move("]");
  return value;
}
function footnoteReferencePeek() {
  return "[";
}
function footnoteDefinition(node2, _, context, safeOptions) {
  const tracker = track(safeOptions);
  let value = tracker.move("[^");
  const exit3 = context.enter("footnoteDefinition");
  const subexit = context.enter("label");
  value += tracker.move(
    safe(context, association(node2), {
      ...tracker.current(),
      before: value,
      after: "]"
    })
  );
  subexit();
  value += tracker.move(
    "]:" + (node2.children && node2.children.length > 0 ? " " : "")
  );
  tracker.shift(4);
  value += tracker.move(
    indentLines(containerFlow(node2, context, tracker.current()), map)
  );
  exit3();
  return value;
}
function map(line2, index5, blank) {
  if (index5 === 0) {
    return line2;
  }
  return (blank ? "" : "    ") + line2;
}

// node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js
function containerPhrasing(parent, state, info) {
  const indexStack = state.indexStack;
  const children = parent.children || [];
  const results = [];
  let index5 = -1;
  let before = info.before;
  indexStack.push(-1);
  let tracker = state.createTracker(info);
  while (++index5 < children.length) {
    const child = children[index5];
    let after;
    indexStack[indexStack.length - 1] = index5;
    if (index5 + 1 < children.length) {
      let handle = state.handle.handlers[children[index5 + 1].type];
      if (handle && handle.peek)
        handle = handle.peek;
      after = handle ? handle(children[index5 + 1], parent, state, {
        before: "",
        after: "",
        ...tracker.current()
      }).charAt(0) : "";
    } else {
      after = info.after;
    }
    if (results.length > 0 && (before === "\r" || before === "\n") && child.type === "html") {
      results[results.length - 1] = results[results.length - 1].replace(
        /(\r?\n|\r)$/,
        " "
      );
      before = " ";
      tracker = state.createTracker(info);
      tracker.move(results.join(""));
    }
    results.push(
      tracker.move(
        state.handle(child, parent, state, {
          ...tracker.current(),
          before,
          after
        })
      )
    );
    before = results[results.length - 1].slice(-1);
  }
  indexStack.pop();
  return results.join("");
}

// node_modules/mdast-util-gfm-strikethrough/lib/index.js
var constructsWithoutStrikethrough = [
  "autolink",
  "destinationLiteral",
  "destinationRaw",
  "reference",
  "titleQuote",
  "titleApostrophe"
];
handleDelete.peek = peekDelete;
var gfmStrikethroughFromMarkdown = {
  canContainEols: ["delete"],
  enter: { strikethrough: enterStrikethrough },
  exit: { strikethrough: exitStrikethrough }
};
var gfmStrikethroughToMarkdown = {
  unsafe: [
    {
      character: "~",
      inConstruct: "phrasing",
      notInConstruct: constructsWithoutStrikethrough
    }
  ],
  handlers: { delete: handleDelete }
};
function enterStrikethrough(token) {
  this.enter({ type: "delete", children: [] }, token);
}
function exitStrikethrough(token) {
  this.exit(token);
}
function handleDelete(node2, _, context, safeOptions) {
  const tracker = track(safeOptions);
  const exit3 = context.enter("strikethrough");
  let value = tracker.move("~~");
  value += containerPhrasing(node2, context, {
    ...tracker.current(),
    before: value,
    after: "~"
  });
  value += tracker.move("~~");
  exit3();
  return value;
}
function peekDelete() {
  return "~";
}

// node_modules/mdast-util-to-markdown/lib/handle/inline-code.js
inlineCode2.peek = inlineCodePeek;
function inlineCode2(node2, _, state) {
  let value = node2.value || "";
  let sequence = "`";
  let index5 = -1;
  while (new RegExp("(^|[^`])" + sequence + "([^`]|$)").test(value)) {
    sequence += "`";
  }
  if (/[^ \r\n]/.test(value) && (/^[ \r\n]/.test(value) && /[ \r\n]$/.test(value) || /^`|`$/.test(value))) {
    value = " " + value + " ";
  }
  while (++index5 < state.unsafe.length) {
    const pattern = state.unsafe[index5];
    const expression = patternCompile(pattern);
    let match;
    if (!pattern.atBreak)
      continue;
    while (match = expression.exec(value)) {
      let position4 = match.index;
      if (value.charCodeAt(position4) === 10 && value.charCodeAt(position4 - 1) === 13) {
        position4--;
      }
      value = value.slice(0, position4) + " " + value.slice(match.index + 1);
    }
  }
  return sequence + value + sequence;
}
function inlineCodePeek() {
  return "`";
}

// node_modules/markdown-table/index.js
function defaultStringLength(value) {
  return value.length;
}
function markdownTable(table2, options2) {
  const settings = options2 || {};
  const align = (settings.align || []).concat();
  const stringLength = settings.stringLength || defaultStringLength;
  const alignments = [];
  const cellMatrix = [];
  const sizeMatrix = [];
  const longestCellByColumn = [];
  let mostCellsPerRow = 0;
  let rowIndex = -1;
  while (++rowIndex < table2.length) {
    const row2 = [];
    const sizes2 = [];
    let columnIndex2 = -1;
    if (table2[rowIndex].length > mostCellsPerRow) {
      mostCellsPerRow = table2[rowIndex].length;
    }
    while (++columnIndex2 < table2[rowIndex].length) {
      const cell = serialize(table2[rowIndex][columnIndex2]);
      if (settings.alignDelimiters !== false) {
        const size = stringLength(cell);
        sizes2[columnIndex2] = size;
        if (longestCellByColumn[columnIndex2] === void 0 || size > longestCellByColumn[columnIndex2]) {
          longestCellByColumn[columnIndex2] = size;
        }
      }
      row2.push(cell);
    }
    cellMatrix[rowIndex] = row2;
    sizeMatrix[rowIndex] = sizes2;
  }
  let columnIndex = -1;
  if (typeof align === "object" && "length" in align) {
    while (++columnIndex < mostCellsPerRow) {
      alignments[columnIndex] = toAlignment(align[columnIndex]);
    }
  } else {
    const code3 = toAlignment(align);
    while (++columnIndex < mostCellsPerRow) {
      alignments[columnIndex] = code3;
    }
  }
  columnIndex = -1;
  const row = [];
  const sizes = [];
  while (++columnIndex < mostCellsPerRow) {
    const code3 = alignments[columnIndex];
    let before = "";
    let after = "";
    if (code3 === 99) {
      before = ":";
      after = ":";
    } else if (code3 === 108) {
      before = ":";
    } else if (code3 === 114) {
      after = ":";
    }
    let size = settings.alignDelimiters === false ? 1 : Math.max(
      1,
      longestCellByColumn[columnIndex] - before.length - after.length
    );
    const cell = before + "-".repeat(size) + after;
    if (settings.alignDelimiters !== false) {
      size = before.length + size + after.length;
      if (size > longestCellByColumn[columnIndex]) {
        longestCellByColumn[columnIndex] = size;
      }
      sizes[columnIndex] = size;
    }
    row[columnIndex] = cell;
  }
  cellMatrix.splice(1, 0, row);
  sizeMatrix.splice(1, 0, sizes);
  rowIndex = -1;
  const lines2 = [];
  while (++rowIndex < cellMatrix.length) {
    const row2 = cellMatrix[rowIndex];
    const sizes2 = sizeMatrix[rowIndex];
    columnIndex = -1;
    const line2 = [];
    while (++columnIndex < mostCellsPerRow) {
      const cell = row2[columnIndex] || "";
      let before = "";
      let after = "";
      if (settings.alignDelimiters !== false) {
        const size = longestCellByColumn[columnIndex] - (sizes2[columnIndex] || 0);
        const code3 = alignments[columnIndex];
        if (code3 === 114) {
          before = " ".repeat(size);
        } else if (code3 === 99) {
          if (size % 2) {
            before = " ".repeat(size / 2 + 0.5);
            after = " ".repeat(size / 2 - 0.5);
          } else {
            before = " ".repeat(size / 2);
            after = before;
          }
        } else {
          after = " ".repeat(size);
        }
      }
      if (settings.delimiterStart !== false && !columnIndex) {
        line2.push("|");
      }
      if (settings.padding !== false && // Don’t add the opening space if we’re not aligning and the cell is
      // empty: there will be a closing space.
      !(settings.alignDelimiters === false && cell === "") && (settings.delimiterStart !== false || columnIndex)) {
        line2.push(" ");
      }
      if (settings.alignDelimiters !== false) {
        line2.push(before);
      }
      line2.push(cell);
      if (settings.alignDelimiters !== false) {
        line2.push(after);
      }
      if (settings.padding !== false) {
        line2.push(" ");
      }
      if (settings.delimiterEnd !== false || columnIndex !== mostCellsPerRow - 1) {
        line2.push("|");
      }
    }
    lines2.push(
      settings.delimiterEnd === false ? line2.join("").replace(/ +$/, "") : line2.join("")
    );
  }
  return lines2.join("\n");
}
function serialize(value) {
  return value === null || value === void 0 ? "" : String(value);
}
function toAlignment(value) {
  const code3 = typeof value === "string" ? value.codePointAt(0) : 0;
  return code3 === 67 || code3 === 99 ? 99 : code3 === 76 || code3 === 108 ? 108 : code3 === 82 || code3 === 114 ? 114 : 0;
}

// node_modules/mdast-util-gfm-table/lib/index.js
var gfmTableFromMarkdown = {
  enter: {
    table: enterTable,
    tableData: enterCell,
    tableHeader: enterCell,
    tableRow: enterRow
  },
  exit: {
    codeText: exitCodeText,
    table: exitTable,
    tableData: exit2,
    tableHeader: exit2,
    tableRow: exit2
  }
};
function enterTable(token) {
  const align = token._align;
  this.enter(
    {
      type: "table",
      align: align.map((d) => d === "none" ? null : d),
      children: []
    },
    token
  );
  this.setData("inTable", true);
}
function exitTable(token) {
  this.exit(token);
  this.setData("inTable");
}
function enterRow(token) {
  this.enter({ type: "tableRow", children: [] }, token);
}
function exit2(token) {
  this.exit(token);
}
function enterCell(token) {
  this.enter({ type: "tableCell", children: [] }, token);
}
function exitCodeText(token) {
  let value = this.resume();
  if (this.getData("inTable")) {
    value = value.replace(/\\([\\|])/g, replace);
  }
  const node2 = (
    /** @type {InlineCode} */
    this.stack[this.stack.length - 1]
  );
  node2.value = value;
  this.exit(token);
}
function replace($0, $1) {
  return $1 === "|" ? $1 : $0;
}
function gfmTableToMarkdown(options2) {
  const settings = options2 || {};
  const padding = settings.tableCellPadding;
  const alignDelimiters = settings.tablePipeAlign;
  const stringLength = settings.stringLength;
  const around = padding ? " " : "|";
  return {
    unsafe: [
      { character: "\r", inConstruct: "tableCell" },
      { character: "\n", inConstruct: "tableCell" },
      // A pipe, when followed by a tab or space (padding), or a dash or colon
      // (unpadded delimiter row), could result in a table.
      { atBreak: true, character: "|", after: "[	 :-]" },
      // A pipe in a cell must be encoded.
      { character: "|", inConstruct: "tableCell" },
      // A colon must be followed by a dash, in which case it could start a
      // delimiter row.
      { atBreak: true, character: ":", after: "-" },
      // A delimiter row can also start with a dash, when followed by more
      // dashes, a colon, or a pipe.
      // This is a stricter version than the built in check for lists, thematic
      // breaks, and setex heading underlines though:
      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>
      { atBreak: true, character: "-", after: "[:|-]" }
    ],
    handlers: {
      table: handleTable,
      tableRow: handleTableRow,
      tableCell: handleTableCell,
      inlineCode: inlineCodeWithTable
    }
  };
  function handleTable(node2, _, context, safeOptions) {
    return serializeData(
      handleTableAsData(node2, context, safeOptions),
      node2.align
    );
  }
  function handleTableRow(node2, _, context, safeOptions) {
    const row = handleTableRowAsData(node2, context, safeOptions);
    const value = serializeData([row]);
    return value.slice(0, value.indexOf("\n"));
  }
  function handleTableCell(node2, _, context, safeOptions) {
    const exit3 = context.enter("tableCell");
    const subexit = context.enter("phrasing");
    const value = containerPhrasing(node2, context, {
      ...safeOptions,
      before: around,
      after: around
    });
    subexit();
    exit3();
    return value;
  }
  function serializeData(matrix, align) {
    return markdownTable(matrix, {
      align,
      // @ts-expect-error: `markdown-table` types should support `null`.
      alignDelimiters,
      // @ts-expect-error: `markdown-table` types should support `null`.
      padding,
      // @ts-expect-error: `markdown-table` types should support `null`.
      stringLength
    });
  }
  function handleTableAsData(node2, context, safeOptions) {
    const children = node2.children;
    let index5 = -1;
    const result = [];
    const subexit = context.enter("table");
    while (++index5 < children.length) {
      result[index5] = handleTableRowAsData(
        children[index5],
        context,
        safeOptions
      );
    }
    subexit();
    return result;
  }
  function handleTableRowAsData(node2, context, safeOptions) {
    const children = node2.children;
    let index5 = -1;
    const result = [];
    const subexit = context.enter("tableRow");
    while (++index5 < children.length) {
      result[index5] = handleTableCell(
        children[index5],
        node2,
        context,
        safeOptions
      );
    }
    subexit();
    return result;
  }
  function inlineCodeWithTable(node2, parent, context) {
    let value = inlineCode2(node2, parent, context);
    if (context.stack.includes("tableCell")) {
      value = value.replace(/\|/g, "\\$&");
    }
    return value;
  }
}

// node_modules/mdast-util-to-markdown/lib/util/check-bullet.js
function checkBullet(state) {
  const marker = state.options.bullet || "*";
  if (marker !== "*" && marker !== "+" && marker !== "-") {
    throw new Error(
      "Cannot serialize items with `" + marker + "` for `options.bullet`, expected `*`, `+`, or `-`"
    );
  }
  return marker;
}

// node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js
function checkListItemIndent(state) {
  const style = state.options.listItemIndent || "tab";
  if (style === 1 || style === "1") {
    return "one";
  }
  if (style !== "tab" && style !== "one" && style !== "mixed") {
    throw new Error(
      "Cannot serialize items with `" + style + "` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`"
    );
  }
  return style;
}

// node_modules/mdast-util-to-markdown/lib/handle/list-item.js
function listItem2(node2, parent, state, info) {
  const listItemIndent = checkListItemIndent(state);
  let bullet = state.bulletCurrent || checkBullet(state);
  if (parent && parent.type === "list" && parent.ordered) {
    bullet = (typeof parent.start === "number" && parent.start > -1 ? parent.start : 1) + (state.options.incrementListMarker === false ? 0 : parent.children.indexOf(node2)) + bullet;
  }
  let size = bullet.length + 1;
  if (listItemIndent === "tab" || listItemIndent === "mixed" && (parent && parent.type === "list" && parent.spread || node2.spread)) {
    size = Math.ceil(size / 4) * 4;
  }
  const tracker = state.createTracker(info);
  tracker.move(bullet + " ".repeat(size - bullet.length));
  tracker.shift(size);
  const exit3 = state.enter("listItem");
  const value = state.indentLines(
    state.containerFlow(node2, tracker.current()),
    map2
  );
  exit3();
  return value;
  function map2(line2, index5, blank) {
    if (index5) {
      return (blank ? "" : " ".repeat(size)) + line2;
    }
    return (blank ? bullet : bullet + " ".repeat(size - bullet.length)) + line2;
  }
}

// node_modules/mdast-util-gfm-task-list-item/lib/index.js
var gfmTaskListItemFromMarkdown = {
  exit: {
    taskListCheckValueChecked: exitCheck,
    taskListCheckValueUnchecked: exitCheck,
    paragraph: exitParagraphWithTaskListItem
  }
};
var gfmTaskListItemToMarkdown = {
  unsafe: [{ atBreak: true, character: "-", after: "[:|-]" }],
  handlers: { listItem: listItemWithTaskListItem }
};
function exitCheck(token) {
  const node2 = (
    /** @type {ListItem} */
    this.stack[this.stack.length - 2]
  );
  node2.checked = token.type === "taskListCheckValueChecked";
}
function exitParagraphWithTaskListItem(token) {
  const parent = (
    /** @type {Parents} */
    this.stack[this.stack.length - 2]
  );
  if (parent && parent.type === "listItem" && typeof parent.checked === "boolean") {
    const node2 = (
      /** @type {Paragraph} */
      this.stack[this.stack.length - 1]
    );
    const head = node2.children[0];
    if (head && head.type === "text") {
      const siblings = parent.children;
      let index5 = -1;
      let firstParaghraph;
      while (++index5 < siblings.length) {
        const sibling = siblings[index5];
        if (sibling.type === "paragraph") {
          firstParaghraph = sibling;
          break;
        }
      }
      if (firstParaghraph === node2) {
        head.value = head.value.slice(1);
        if (head.value.length === 0) {
          node2.children.shift();
        } else if (node2.position && head.position && typeof head.position.start.offset === "number") {
          head.position.start.column++;
          head.position.start.offset++;
          node2.position.start = Object.assign({}, head.position.start);
        }
      }
    }
  }
  this.exit(token);
}
function listItemWithTaskListItem(node2, parent, context, safeOptions) {
  const head = node2.children[0];
  const checkable = typeof node2.checked === "boolean" && head && head.type === "paragraph";
  const checkbox = "[" + (node2.checked ? "x" : " ") + "] ";
  const tracker = track(safeOptions);
  if (checkable) {
    tracker.move(checkbox);
  }
  let value = listItem2(node2, parent, context, {
    ...safeOptions,
    ...tracker.current()
  });
  if (checkable) {
    value = value.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/, check);
  }
  return value;
  function check($0) {
    return $0 + checkbox;
  }
}

// node_modules/mdast-util-gfm/lib/index.js
function gfmFromMarkdown() {
  return [
    gfmAutolinkLiteralFromMarkdown,
    gfmFootnoteFromMarkdown(),
    gfmStrikethroughFromMarkdown,
    gfmTableFromMarkdown,
    gfmTaskListItemFromMarkdown
  ];
}
function gfmToMarkdown(options2) {
  return {
    extensions: [
      gfmAutolinkLiteralToMarkdown,
      gfmFootnoteToMarkdown(),
      gfmStrikethroughToMarkdown,
      gfmTableToMarkdown(options2),
      gfmTaskListItemToMarkdown
    ]
  };
}

// node_modules/remark-gfm/index.js
function remarkGfm(options2 = {}) {
  const data = this.data();
  add("micromarkExtensions", gfm(options2));
  add("fromMarkdownExtensions", gfmFromMarkdown());
  add("toMarkdownExtensions", gfmToMarkdown(options2));
  function add(field, value) {
    const list3 = (
      /** @type {unknown[]} */
      // Other extensions
      /* c8 ignore next 2 */
      data[field] ? data[field] : data[field] = []
    );
    list3.push(value);
  }
}

// node_modules/stream-chat-react/dist/components/Message/renderText/Emoji.js
var import_react44 = __toESM(require_react());
var Emoji = function(_a) {
  var children = _a.children;
  return import_react44.default.createElement("span", { className: "inline-text-emoji", "data-testid": "inline-text-emoji" }, children);
};

// node_modules/stream-chat-react/dist/components/Message/renderText/Anchor.js
var import_react45 = __toESM(require_react());
var Anchor = function(_a) {
  var children = _a.children, href = _a.href;
  var isEmail = href === null || href === void 0 ? void 0 : href.startsWith("mailto:");
  var isUrl2 = href === null || href === void 0 ? void 0 : href.startsWith("http");
  if (!href || !isEmail && !isUrl2)
    return import_react45.default.createElement(import_react45.default.Fragment, null, children);
  return import_react45.default.createElement("a", { className: clsx_default({ "str-chat__message-url-link": isUrl2 }), href, rel: "nofollow noreferrer noopener", target: "_blank" }, children);
};

// node_modules/stream-chat-react/dist/components/Message/renderText/Mention.js
var import_react46 = __toESM(require_react());
var Mention = function(_a) {
  var children = _a.children, mentionedUser = _a.node.mentionedUser;
  return import_react46.default.createElement("span", { className: "str-chat__message-mention", "data-user-id": mentionedUser.id }, children);
};

// node_modules/stream-chat-react/dist/components/Message/renderText/renderText.js
var defaultAllowedTagNames = [
  "html",
  "text",
  "br",
  "p",
  "em",
  "strong",
  "a",
  "ol",
  "ul",
  "li",
  "code",
  "pre",
  "blockquote",
  "del",
  // custom types (tagNames)
  "emoji",
  "mention"
];
function formatUrlForDisplay(url) {
  try {
    return decodeURIComponent(url).replace(detectHttp, "");
  } catch (e) {
    return url;
  }
}
function encodeDecode(url) {
  try {
    return encodeURI(decodeURIComponent(url));
  } catch (error) {
    return url;
  }
}
var transformLinkUri = function(uri) {
  return uri.startsWith("app://") ? uri : uriTransformer(uri);
};
var getPluginsForward = function(plugins) {
  return plugins;
};
var markDownRenderers = {
  a: Anchor,
  emoji: Emoji,
  mention: Mention
};
var renderText = function(text5, mentionedUsers, _a) {
  var _b = _a === void 0 ? {} : _a, _c = _b.allowedTagNames, allowedTagNames = _c === void 0 ? defaultAllowedTagNames : _c, customMarkDownRenderers = _b.customMarkDownRenderers, _d = _b.getRehypePlugins, getRehypePlugins = _d === void 0 ? getPluginsForward : _d, _e = _b.getRemarkPlugins, getRemarkPlugins = _e === void 0 ? getPluginsForward : _e;
  if (!text5)
    return null;
  if (text5.trim().length === 1)
    return import_react47.default.createElement(import_react47.default.Fragment, null, text5);
  var newText = text5;
  var markdownLinks = matchMarkdownLinks(newText);
  var codeBlocks = messageCodeBlocks(newText);
  (0, import_lodash.default)(__spreadArray(__spreadArray([], find(newText, "email"), true), find(newText, "url"), true), "value").forEach(function(_a2) {
    var href = _a2.href, type = _a2.type, value = _a2.value;
    var linkIsInBlock = codeBlocks.some(function(block) {
      return block === null || block === void 0 ? void 0 : block.includes(value);
    });
    var noParsingNeeded = markdownLinks && markdownLinks.filter(function(text6) {
      var strippedHref = href === null || href === void 0 ? void 0 : href.replace(detectHttp, "");
      var strippedText = text6 === null || text6 === void 0 ? void 0 : text6.replace(detectHttp, "");
      if (!strippedHref || !strippedText)
        return false;
      return strippedHref.includes(strippedText) || strippedText.includes(strippedHref);
    });
    if (noParsingNeeded.length > 0 || linkIsInBlock)
      return;
    try {
      if (type === "email" && mentionedUsers) {
        var emailMatchesWithName = mentionedUsers.some(function(u2) {
          return u2.name === value;
        });
        if (emailMatchesWithName) {
          newText = newText.replace(new RegExp(escapeRegExp(value), "g"), function(match, position4) {
            var isMention = newText.charAt(position4 - 1) === "@";
            return isMention ? match : "[".concat(match, "](").concat(encodeDecode(href), ")");
          });
          return;
        }
      }
      var displayLink = type === "email" ? value : formatUrlForDisplay(href);
      newText = newText.replace(new RegExp(escapeRegExp(value), "g"), "[".concat(displayLink, "](").concat(encodeDecode(href), ")"));
    } catch (e) {
    }
  });
  var remarkPlugins = [[remarkGfm, { singleTilde: false }]];
  var rehypePlugins = [emojiMarkdownPlugin];
  if (mentionedUsers === null || mentionedUsers === void 0 ? void 0 : mentionedUsers.length) {
    rehypePlugins.push(mentionsMarkdownPlugin(mentionedUsers));
  }
  if (customMarkDownRenderers === null || customMarkDownRenderers === void 0 ? void 0 : customMarkDownRenderers.mention) {
    var MentionComponent_1 = customMarkDownRenderers["mention"];
    customMarkDownRenderers["mention"] = function(_a2) {
      var node2 = _a2.node, rest = __rest(_a2, ["node"]);
      return import_react47.default.createElement(
        MentionComponent_1,
        __assign({
          // @ts-ignore
          mentioned_user: node2.mentionedUser,
          // @ts-ignore
          node: __assign({ mentioned_user: node2.mentionedUser }, node2)
        }, rest)
      );
    };
  }
  var rehypeComponents = __assign(__assign({}, markDownRenderers), customMarkDownRenderers);
  return import_react47.default.createElement(ReactMarkdown, { allowedElements: allowedTagNames, components: rehypeComponents, rehypePlugins: getRehypePlugins(rehypePlugins), remarkPlugins: getRemarkPlugins(remarkPlugins), skipHtml: true, transformLinkUri, unwrapDisallowed: true }, newText);
};

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/List.js
var List = function(_a) {
  var className = _a.className, component = _a.component, currentTrigger = _a.currentTrigger, dropdownScroll = _a.dropdownScroll, getSelectedItem = _a.getSelectedItem, getTextToReplace = _a.getTextToReplace, PropHeader = _a.Header, itemClassName = _a.itemClassName, itemStyle = _a.itemStyle, onSelect = _a.onSelect, selectionEnd = _a.selectionEnd, style = _a.style, PropSuggestionItem = _a.SuggestionItem, propValue = _a.value, values2 = _a.values;
  var _b = useComponentContext("SuggestionList"), AutocompleteSuggestionHeader = _b.AutocompleteSuggestionHeader, AutocompleteSuggestionItem = _b.AutocompleteSuggestionItem;
  var themeVersion = useChatContext("SuggestionList").themeVersion;
  var SuggestionItem = PropSuggestionItem || AutocompleteSuggestionItem || Item;
  var SuggestionHeader = PropHeader || AutocompleteSuggestionHeader || DefaultSuggestionListHeader;
  var _c = (0, import_react48.useState)(void 0), selectedItem = _c[0], setSelectedItem = _c[1];
  var itemsRef = [];
  var isSelected = function(item) {
    return selectedItem === values2.findIndex(function(value) {
      return getId(value) === getId(item);
    });
  };
  var getId = function(item) {
    var textToReplace = getTextToReplace(item);
    if (textToReplace.key) {
      return textToReplace.key;
    }
    if (typeof item === "string" || !item.key) {
      return textToReplace.text;
    }
    return item.key;
  };
  var modifyText = function(value) {
    if (!value)
      return;
    onSelect(getTextToReplace(value));
    if (getSelectedItem)
      getSelectedItem(value);
  };
  var handleClick = function(e) {
    e === null || e === void 0 ? void 0 : e.preventDefault();
    modifyText(values2[selectedItem]);
  };
  var selectItem = (0, import_react48.useCallback)(function(item) {
    var index5 = values2.findIndex(function(value) {
      return value.id ? value.id === item.id : value.name === item.name;
    });
    setSelectedItem(index5);
  }, [values2]);
  var handleKeyDown = (0, import_react48.useCallback)(function(event) {
    if (event.key === "ArrowUp") {
      setSelectedItem(function(prevSelected) {
        if (prevSelected === void 0)
          return 0;
        var newID = prevSelected === 0 ? values2.length - 1 : prevSelected - 1;
        dropdownScroll(itemsRef[newID]);
        return newID;
      });
    }
    if (event.key === "ArrowDown") {
      setSelectedItem(function(prevSelected) {
        if (prevSelected === void 0)
          return 0;
        var newID = prevSelected === values2.length - 1 ? 0 : prevSelected + 1;
        dropdownScroll(itemsRef[newID]);
        return newID;
      });
    }
    if ((event.key === "Enter" || event.key === "Tab") && selectedItem !== void 0) {
      handleClick(event);
    }
    return null;
  }, [selectedItem, values2]);
  (0, import_react48.useEffect)(function() {
    document.addEventListener("keydown", handleKeyDown, false);
    return function() {
      return document.removeEventListener("keydown", handleKeyDown);
    };
  }, [handleKeyDown]);
  (0, import_react48.useEffect)(function() {
    if (values2 === null || values2 === void 0 ? void 0 : values2.length)
      selectItem(values2[0]);
  }, [values2]);
  var restructureItem = (0, import_react48.useCallback)(function(item) {
    var matched = item.name || item.id;
    var textBeforeCursor = propValue.slice(0, selectionEnd);
    var triggerIndex = textBeforeCursor.lastIndexOf(currentTrigger);
    var editedPropValue = escapeRegExp(textBeforeCursor.slice(triggerIndex + 1));
    var parts = matched.split(new RegExp("(".concat(editedPropValue, ")"), "gi"));
    var itemNameParts = { match: editedPropValue, parts };
    return __assign(__assign({}, item), { itemNameParts });
  }, [propValue, selectionEnd, currentTrigger]);
  var restructuredValues = (0, import_react48.useMemo)(function() {
    return values2.map(restructureItem);
  }, [values2, restructureItem]);
  return import_react48.default.createElement(
    "ul",
    { className: clsx_default("rta__list", className), style },
    themeVersion === "1" && import_react48.default.createElement(
      "li",
      { className: "rta__list-header" },
      import_react48.default.createElement(SuggestionHeader, { currentTrigger, value: propValue })
    ),
    restructuredValues.map(function(item, i) {
      return import_react48.default.createElement(SuggestionItem, { className: itemClassName, component, item, key: getId(item), onClickHandler: handleClick, onSelectHandler: selectItem, ref: function(ref) {
        itemsRef[i] = ref;
      }, selected: isSelected(item), style: itemStyle, value: propValue });
    })
  );
};

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js
var import_react54 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js
var React49 = __toESM(require_react());

// node_modules/use-latest/dist/use-latest.esm.js
var import_react49 = __toESM(require_react());
var useLatest = function useLatest2(value) {
  var ref = import_react49.default.useRef(value);
  index(function() {
    ref.current = value;
  });
  return ref;
};

// node_modules/use-composed-ref/dist/use-composed-ref.esm.js
var import_react50 = __toESM(require_react());
var updateRef = function updateRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
    return;
  }
  ref.current = value;
};
var useComposedRef = function useComposedRef2(libRef, userRef) {
  var prevUserRef = import_react50.default.useRef();
  return import_react50.default.useCallback(function(instance) {
    libRef.current = instance;
    if (prevUserRef.current) {
      updateRef(prevUserRef.current, null);
    }
    prevUserRef.current = userRef;
    if (!userRef) {
      return;
    }
    updateRef(userRef, instance);
  }, [userRef]);
};

// node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js
var HIDDEN_TEXTAREA_STYLE = {
  "min-height": "0",
  "max-height": "none",
  height: "0",
  visibility: "hidden",
  overflow: "hidden",
  position: "absolute",
  "z-index": "-1000",
  top: "0",
  right: "0",
  display: "block"
};
var forceHiddenStyles = function forceHiddenStyles2(node2) {
  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function(key) {
    node2.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], "important");
  });
};
var forceHiddenStyles$1 = forceHiddenStyles;
var hiddenTextarea = null;
var getHeight = function getHeight2(node2, sizingData) {
  var height = node2.scrollHeight;
  if (sizingData.sizingStyle.boxSizing === "border-box") {
    return height + sizingData.borderSize;
  }
  return height - sizingData.paddingSize;
};
function calculateNodeHeight(sizingData, value, minRows, maxRows) {
  if (minRows === void 0) {
    minRows = 1;
  }
  if (maxRows === void 0) {
    maxRows = Infinity;
  }
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    hiddenTextarea.setAttribute("tabindex", "-1");
    hiddenTextarea.setAttribute("aria-hidden", "true");
    forceHiddenStyles$1(hiddenTextarea);
  }
  if (hiddenTextarea.parentNode === null) {
    document.body.appendChild(hiddenTextarea);
  }
  var paddingSize = sizingData.paddingSize, borderSize = sizingData.borderSize, sizingStyle = sizingData.sizingStyle;
  var boxSizing = sizingStyle.boxSizing;
  Object.keys(sizingStyle).forEach(function(_key) {
    var key = _key;
    hiddenTextarea.style[key] = sizingStyle[key];
  });
  forceHiddenStyles$1(hiddenTextarea);
  hiddenTextarea.value = value;
  var height = getHeight(hiddenTextarea, sizingData);
  hiddenTextarea.value = value;
  height = getHeight(hiddenTextarea, sizingData);
  hiddenTextarea.value = "x";
  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;
  var minHeight = rowHeight * minRows;
  if (boxSizing === "border-box") {
    minHeight = minHeight + paddingSize + borderSize;
  }
  height = Math.max(minHeight, height);
  var maxHeight = rowHeight * maxRows;
  if (boxSizing === "border-box") {
    maxHeight = maxHeight + paddingSize + borderSize;
  }
  height = Math.min(maxHeight, height);
  return [height, rowHeight];
}
var noop3 = function noop4() {
};
var pick = function pick2(props, obj) {
  return props.reduce(function(acc, prop) {
    acc[prop] = obj[prop];
    return acc;
  }, {});
};
var SIZING_STYLE = [
  "borderBottomWidth",
  "borderLeftWidth",
  "borderRightWidth",
  "borderTopWidth",
  "boxSizing",
  "fontFamily",
  "fontSize",
  "fontStyle",
  "fontWeight",
  "letterSpacing",
  "lineHeight",
  "paddingBottom",
  "paddingLeft",
  "paddingRight",
  "paddingTop",
  // non-standard
  "tabSize",
  "textIndent",
  // non-standard
  "textRendering",
  "textTransform",
  "width",
  "wordBreak",
  "wordSpacing",
  "scrollbarGutter"
];
var isIE = !!document.documentElement.currentStyle;
var getSizingData = function getSizingData2(node2) {
  var style = window.getComputedStyle(node2);
  if (style === null) {
    return null;
  }
  var sizingStyle = pick(SIZING_STYLE, style);
  var boxSizing = sizingStyle.boxSizing;
  if (boxSizing === "") {
    return null;
  }
  if (isIE && boxSizing === "border-box") {
    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + "px";
  }
  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);
  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);
  return {
    sizingStyle,
    paddingSize,
    borderSize
  };
};
var getSizingData$1 = getSizingData;
function useListener(target, type, listener) {
  var latestListener = useLatest(listener);
  React49.useLayoutEffect(function() {
    var handler = function handler2(ev) {
      return latestListener.current(ev);
    };
    if (!target) {
      return;
    }
    target.addEventListener(type, handler);
    return function() {
      return target.removeEventListener(type, handler);
    };
  }, []);
}
var useFormResetListener = function useFormResetListener2(libRef, listener) {
  useListener(document.body, "reset", function(ev) {
    if (libRef.current.form === ev.target) {
      listener(ev);
    }
  });
};
var useWindowResizeListener = function useWindowResizeListener2(listener) {
  useListener(window, "resize", listener);
};
var useFontsLoadedListener = function useFontsLoadedListener2(listener) {
  useListener(document.fonts, "loadingdone", listener);
};
var _excluded5 = ["cacheMeasurements", "maxRows", "minRows", "onChange", "onHeightChange"];
var TextareaAutosize = function TextareaAutosize2(_ref, userRef) {
  var cacheMeasurements = _ref.cacheMeasurements, maxRows = _ref.maxRows, minRows = _ref.minRows, _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? noop3 : _ref$onChange, _ref$onHeightChange = _ref.onHeightChange, onHeightChange = _ref$onHeightChange === void 0 ? noop3 : _ref$onHeightChange, props = _objectWithoutPropertiesLoose(_ref, _excluded5);
  if (props.style) {
    if ("maxHeight" in props.style) {
      throw new Error("Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.");
    }
    if ("minHeight" in props.style) {
      throw new Error("Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.");
    }
  }
  var isControlled = props.value !== void 0;
  var libRef = React49.useRef(null);
  var ref = useComposedRef(libRef, userRef);
  var heightRef = React49.useRef(0);
  var measurementsCacheRef = React49.useRef();
  var resizeTextarea = function resizeTextarea2() {
    var node2 = libRef.current;
    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node2);
    if (!nodeSizingData) {
      return;
    }
    measurementsCacheRef.current = nodeSizingData;
    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node2.value || node2.placeholder || "x", minRows, maxRows), height = _calculateNodeHeight[0], rowHeight = _calculateNodeHeight[1];
    if (heightRef.current !== height) {
      heightRef.current = height;
      node2.style.setProperty("height", height + "px", "important");
      onHeightChange(height, {
        rowHeight
      });
    }
  };
  var handleChange = function handleChange2(event) {
    if (!isControlled) {
      resizeTextarea();
    }
    onChange(event);
  };
  {
    React49.useLayoutEffect(resizeTextarea);
    useFormResetListener(libRef, function() {
      if (!isControlled) {
        var node2 = libRef.current;
        var currentValue = node2.value;
        requestAnimationFrame(function() {
          if (currentValue !== node2.value) {
            resizeTextarea();
          }
        });
      }
    });
    useWindowResizeListener(resizeTextarea);
    useFontsLoadedListener(resizeTextarea);
    return React49.createElement("textarea", _extends({}, props, {
      onChange: handleChange,
      ref
    }));
  }
};
var index4 = React49.forwardRef(TextareaAutosize);

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js
var import_textarea_caret = __toESM(require_textarea_caret());
var import_react_is3 = __toESM(require_react_is2());

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/utils.js
var import_react_is2 = __toESM(require_react_is2());
var DEFAULT_CARET_POSITION = "next";
function defaultScrollToItem(container, item) {
  if (!item)
    return;
  var itemHeight = parseInt(getComputedStyle(item).getPropertyValue("height"), 10);
  var containerHight = parseInt(getComputedStyle(container).getPropertyValue("height"), 10) - itemHeight;
  var actualScrollTop = container.scrollTop;
  var itemOffsetTop = item.offsetTop;
  if (itemOffsetTop < actualScrollTop + containerHight && actualScrollTop < itemOffsetTop) {
    return;
  }
  container.scrollTop = itemOffsetTop;
}
var errorMessage = function(message) {
  return console.error("RTA: dataProvider fails: ".concat(message, "\n    \nCheck the documentation or create issue if you think it's bug. https://github.com/webscopeio/react-textarea-autocomplete/issues"));
};
var triggerPropsCheck = function(_a) {
  var trigger = _a.trigger;
  if (!trigger)
    return Error("Invalid prop trigger. Prop missing.");
  var triggers = Object.entries(trigger);
  for (var i = 0; i < triggers.length; i += 1) {
    var _b = triggers[i], triggerChar = _b[0], settings = _b[1];
    if (typeof triggerChar !== "string" || triggerChar.length !== 1) {
      return Error("Invalid prop trigger. Keys of the object has to be string / one character.");
    }
    var triggerSetting = settings;
    var callback = triggerSetting.callback, component = triggerSetting.component, dataProvider = triggerSetting.dataProvider, output = triggerSetting.output;
    if (!(0, import_react_is2.isValidElementType)(component)) {
      return Error("Invalid prop trigger: component should be defined.");
    }
    if (!dataProvider || typeof dataProvider !== "function") {
      return Error("Invalid prop trigger: dataProvider should be defined.");
    }
    if (output && typeof output !== "function") {
      return Error("Invalid prop trigger: output should be a function.");
    }
    if (callback && typeof callback !== "function") {
      return Error("Invalid prop trigger: callback should be a function.");
    }
  }
  return null;
};

// node_modules/stream-chat-react/dist/components/CommandItem/CommandItem.js
var import_react51 = __toESM(require_react());
var UnMemoizedCommandItem = function(props) {
  var entity = props.entity;
  return import_react51.default.createElement(
    "div",
    { className: "str-chat__slash-command" },
    import_react51.default.createElement(
      "span",
      { className: "str-chat__slash-command-header" },
      import_react51.default.createElement("strong", null, entity.name),
      " ",
      entity.args
    ),
    import_react51.default.createElement("br", null),
    import_react51.default.createElement("span", { className: "str-chat__slash-command-description" }, entity.description)
  );
};
var CommandItem = import_react51.default.memo(UnMemoizedCommandItem);

// node_modules/stream-chat-react/dist/components/UserItem/UserItem.js
var import_react53 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Avatar/Avatar.js
var import_react52 = __toESM(require_react());

// node_modules/stream-chat-react/dist/utils/getWholeChar.js
var getWholeChar = function(str, i) {
  var code3 = str.charCodeAt(i);
  if (Number.isNaN(code3))
    return "";
  if (code3 < 55296 || code3 > 57343)
    return str.charAt(i);
  if (55296 <= code3 && code3 <= 56319) {
    if (str.length <= i + 1) {
      throw "High surrogate without following low surrogate";
    }
    var next = str.charCodeAt(i + 1);
    if (56320 > next || next > 57343) {
      throw "High surrogate without following low surrogate";
    }
    return str.charAt(i) + str.charAt(i + 1);
  }
  if (i === 0) {
    throw "Low surrogate without preceding high surrogate";
  }
  var prev = str.charCodeAt(i - 1);
  if (55296 > prev || prev > 56319) {
    throw "Low surrogate without preceding high surrogate";
  }
  return "";
};

// node_modules/stream-chat-react/dist/components/Avatar/Avatar.js
var Avatar = function(props) {
  var image2 = props.image, name = props.name, _a = props.onClick, onClick = _a === void 0 ? function() {
    return void 0;
  } : _a, _b = props.onMouseOver, onMouseOver = _b === void 0 ? function() {
    return void 0;
  } : _b, _c = props.shape, shape = _c === void 0 ? "circle" : _c, _d = props.size, size = _d === void 0 ? 32 : _d;
  var _e = (0, import_react52.useState)(false), error = _e[0], setError = _e[1];
  var _f = (0, import_react52.useState)(false), loaded = _f[0], setLoaded = _f[1];
  (0, import_react52.useEffect)(function() {
    setError(false);
    setLoaded(false);
  }, [image2]);
  var nameStr = (name === null || name === void 0 ? void 0 : name.toString()) || "";
  var initials = getWholeChar(nameStr, 0);
  return import_react52.default.createElement("div", { className: "str-chat__avatar str-chat__avatar--".concat(shape, " str-chat__message-sender-avatar"), "data-testid": "avatar", onClick, onMouseOver, style: {
    flexBasis: "".concat(size, "px"),
    fontSize: "".concat(size / 2, "px"),
    height: "".concat(size, "px"),
    lineHeight: "".concat(size, "px"),
    width: "".concat(size, "px")
  }, title: name }, image2 && !error ? import_react52.default.createElement("img", { alt: initials, className: "str-chat__avatar-image".concat(loaded ? " str-chat__avatar-image--loaded" : ""), "data-testid": "avatar-img", onError: function() {
    return setError(true);
  }, onLoad: function() {
    return setLoaded(true);
  }, src: image2, style: {
    flexBasis: "".concat(size, "px"),
    height: "".concat(size, "px"),
    objectFit: "cover",
    width: "".concat(size, "px")
  } }) : import_react52.default.createElement("div", { className: "str-chat__avatar-fallback", "data-testid": "avatar-fallback" }, initials));
};

// node_modules/stream-chat-react/dist/components/UserItem/UserItem.js
var UnMemoizedUserItem = function(_a) {
  var _b = _a.Avatar, Avatar2 = _b === void 0 ? Avatar : _b, entity = _a.entity;
  var themeVersion = useChatContext("UserItem").themeVersion;
  var hasEntity = !!Object.keys(entity).length;
  var itemParts = entity === null || entity === void 0 ? void 0 : entity.itemNameParts;
  var renderName = function() {
    if (!hasEntity)
      return null;
    return itemParts.parts.map(function(part, i) {
      var matches = part.toLowerCase() === itemParts.match.toLowerCase();
      return import_react53.default.createElement("span", { className: clsx_default({
        "str-chat__emoji-item--highlight": matches,
        "str-chat__emoji-item--part": !matches
      }), key: "part-".concat(i) }, part);
    });
  };
  return import_react53.default.createElement(
    "div",
    { className: "str-chat__user-item" },
    import_react53.default.createElement(Avatar2, { image: entity.image, name: entity.name || entity.id, size: 20 }),
    import_react53.default.createElement("span", { className: "str-chat__user-item--name", "data-testid": "user-item-name" }, renderName()),
    themeVersion === "2" && import_react53.default.createElement("div", { className: "str-chat__user-item-at" }, "@")
  );
};
var UserItem = import_react53.default.memo(UnMemoizedUserItem);

// node_modules/stream-chat-react/dist/utils/browsers.js
var isSafari = function() {
  if (typeof navigator === "undefined")
    return false;
  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent || "");
};

// node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js
var ReactTextareaAutocomplete = (
  /** @class */
  function(_super) {
    __extends(ReactTextareaAutocomplete2, _super);
    function ReactTextareaAutocomplete2(props) {
      var _this = _super.call(this, props) || this;
      _this.getSelectionPosition = function() {
        if (!_this.textareaRef)
          return null;
        return {
          selectionEnd: _this.textareaRef.selectionEnd,
          selectionStart: _this.textareaRef.selectionStart
        };
      };
      _this.getSelectedText = function() {
        if (!_this.textareaRef)
          return null;
        var _a2 = _this.textareaRef, selectionEnd = _a2.selectionEnd, selectionStart = _a2.selectionStart;
        if (selectionStart === selectionEnd)
          return null;
        return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);
      };
      _this.setCaretPosition = function(position4) {
        if (position4 === void 0) {
          position4 = 0;
        }
        if (!_this.textareaRef)
          return;
        _this.textareaRef.focus();
        _this.textareaRef.setSelectionRange(position4, position4);
      };
      _this.getCaretPosition = function() {
        if (!_this.textareaRef)
          return 0;
        return _this.textareaRef.selectionEnd;
      };
      _this._defaultShouldSubmit = function(event) {
        return event.key === "Enter" && !event.shiftKey && !event.nativeEvent.isComposing;
      };
      _this._handleKeyDown = function(event) {
        var _a2 = _this.props.shouldSubmit, shouldSubmit = _a2 === void 0 ? _this._defaultShouldSubmit : _a2;
        if ((event.key === "ArrowUp" || event.key === "ArrowDown") && _this.dropdownRef)
          event.preventDefault();
        if (shouldSubmit === null || shouldSubmit === void 0 ? void 0 : shouldSubmit(event))
          return _this._onEnter(event);
        if (event.key === " ")
          return _this._onSpace(event);
        if (event.key === "Escape")
          return _this._closeAutocomplete();
      };
      _this._onEnter = function(event) {
        if (!_this.textareaRef)
          return;
        var trigger2 = _this.state.currentTrigger;
        if (!trigger2 || !_this.state.data) {
          _this._replaceWord();
          if (_this.textareaRef) {
            _this.textareaRef.selectionEnd = 0;
          }
          _this.props.handleSubmit(event);
          _this._closeAutocomplete();
        }
      };
      _this._onSpace = function() {
        if (!_this.props.replaceWord || !_this.textareaRef)
          return;
        var hasFocus = _this.textareaRef.matches(":focus");
        if (!hasFocus)
          return;
        _this._replaceWord();
      };
      _this._replaceWord = function() {
        var value2 = _this.state.value;
        var lastWordRegex = /([^\s]+)(\s*)$/;
        var match = lastWordRegex.exec(value2.slice(0, _this.getCaretPosition()));
        var lastWord = match && match[1];
        if (!lastWord)
          return;
        var spaces = match[2];
        var newWord = _this.props.replaceWord(lastWord);
        if (newWord == null)
          return;
        var textBeforeWord = value2.slice(0, _this.getCaretPosition() - match[0].length);
        var textAfterCaret = value2.slice(_this.getCaretPosition(), -1);
        var newText = textBeforeWord + newWord + spaces + textAfterCaret;
        _this.setState({
          value: newText
        }, function() {
          var e = new CustomEvent("change", { bubbles: true });
          _this.textareaRef.dispatchEvent(e);
          if (_this.props.onChange)
            _this.props.onChange(e);
        });
      };
      _this._onSelect = function(newToken) {
        var _a2 = _this.props, closeCommandsList = _a2.closeCommandsList, closeMentionsList = _a2.closeMentionsList, onChange = _a2.onChange, showCommandsList = _a2.showCommandsList, showMentionsList = _a2.showMentionsList;
        var _b = _this.state, stateTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, textareaValue = _b.value;
        var currentTrigger = showCommandsList ? "/" : showMentionsList ? "@" : stateTrigger;
        if (!currentTrigger)
          return;
        var computeCaretPosition = function(position4, token, startToken) {
          switch (position4) {
            case "start":
              return startToken;
            case "next":
            case "end":
              return startToken + token.length;
            default:
              if (!Number.isInteger(position4)) {
                throw new Error('RTA: caretPosition should be "start", "next", "end" or number.');
              }
              return position4;
          }
        };
        var textToModify = showCommandsList ? "/" : showMentionsList ? "@" : textareaValue.slice(0, selectionEnd);
        var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);
        var newTokenString = newToken.caretPosition === "next" ? "".concat(newToken.text, " ") : newToken.text;
        var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);
        var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;
        var valueToReplace = textareaValue.replace(textToModify, modifiedText);
        _this.setState({
          dataLoading: false,
          value: valueToReplace
        }, function() {
          var e = new CustomEvent("change", { bubbles: true });
          _this.textareaRef.dispatchEvent(e);
          if (onChange)
            onChange(e);
          _this.setCaretPosition(newCaretPosition);
        });
        _this._closeAutocomplete();
        if (showCommandsList)
          closeCommandsList();
        if (showMentionsList)
          closeMentionsList();
      };
      _this._getItemOnSelect = function(paramTrigger) {
        var stateTrigger = _this.state.currentTrigger;
        var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);
        var currentTrigger = paramTrigger || stateTrigger;
        if (!currentTrigger || !triggerSettings)
          return null;
        var callback = triggerSettings.callback;
        if (!callback)
          return null;
        return function(item) {
          if (typeof callback !== "function") {
            throw new Error('Output functor is not defined! You have to define "output" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');
          }
          if (callback) {
            return callback(item, currentTrigger);
          }
          return null;
        };
      };
      _this._getTextToReplace = function(paramTrigger) {
        var _a2 = _this.state, actualToken = _a2.actualToken, stateTrigger = _a2.currentTrigger;
        var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);
        var currentTrigger = paramTrigger || stateTrigger;
        if (!currentTrigger || !triggerSettings)
          return null;
        var output = triggerSettings.output;
        return function(item) {
          if (typeof item === "object" && (!output || typeof output !== "function")) {
            throw new Error('Output functor is not defined! If you are using items as object you have to define "output" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');
          }
          if (output) {
            var textToReplace = output(item, currentTrigger);
            if (!textToReplace || typeof textToReplace === "number") {
              throw new Error('Output functor should return string or object in shape {text: string, caretPosition: string | number}.\nGot "'.concat(String(textToReplace), '". Check the implementation for trigger "').concat(currentTrigger, '" and its token "').concat(actualToken, '"\n\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\n'));
            }
            if (typeof textToReplace === "string") {
              return {
                caretPosition: DEFAULT_CARET_POSITION,
                text: textToReplace
              };
            }
            if (!textToReplace.text && currentTrigger !== ":") {
              throw new Error('Output "text" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger "'.concat(currentTrigger, '" and its token "').concat(actualToken, '"\n'));
            }
            if (!textToReplace.caretPosition) {
              throw new Error('Output "caretPosition" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger "'.concat(currentTrigger, '" and its token "').concat(actualToken, '"\n'));
            }
            return textToReplace;
          }
          if (typeof item !== "string") {
            throw new Error("Output item should be string\n");
          }
          return {
            caretPosition: DEFAULT_CARET_POSITION,
            text: "".concat(currentTrigger).concat(item).concat(currentTrigger)
          };
        };
      };
      _this._getCurrentTriggerSettings = function(paramTrigger) {
        var stateTrigger = _this.state.currentTrigger;
        var currentTrigger = paramTrigger || stateTrigger;
        if (!currentTrigger)
          return null;
        return _this.props.trigger[currentTrigger];
      };
      _this._getValuesFromProvider = function() {
        var _a2 = _this.state, actualToken = _a2.actualToken, currentTrigger = _a2.currentTrigger;
        var triggerSettings = _this._getCurrentTriggerSettings();
        if (!currentTrigger || !triggerSettings)
          return;
        var component = triggerSettings.component, dataProvider = triggerSettings.dataProvider;
        if (typeof dataProvider !== "function") {
          throw new Error("Trigger provider has to be a function!");
        }
        _this.setState({ dataLoading: true });
        dataProvider(actualToken, _this.state.value, function(data, token) {
          if (token !== _this.state.actualToken)
            return;
          if (!Array.isArray(data)) {
            throw new Error("Trigger provider has to provide an array!");
          }
          if (!(0, import_react_is3.isValidElementType)(component)) {
            throw new Error("Component should be defined!");
          }
          if (currentTrigger !== _this.state.currentTrigger)
            return;
          if (!data.length) {
            _this._closeAutocomplete();
            return;
          }
          _this.setState({
            component,
            data,
            dataLoading: false
          });
        });
      };
      _this._getSuggestions = function(paramTrigger) {
        var _a2 = _this.state, stateTrigger = _a2.currentTrigger, data = _a2.data;
        var currentTrigger = paramTrigger || stateTrigger;
        if (!currentTrigger || !data || data && !data.length)
          return null;
        return data;
      };
      _this._closeAutocomplete = function() {
        _this.setState({
          currentTrigger: null,
          data: null,
          dataLoading: false,
          left: null,
          top: null
        });
      };
      _this._cleanUpProps = function() {
        var props2 = __assign({}, _this.props);
        var notSafe = [
          "additionalTextareaProps",
          "className",
          "closeCommandsList",
          "closeMentionsList",
          "closeOnClickOutside",
          "containerClassName",
          "containerStyle",
          "disableMentions",
          "dropdownClassName",
          "dropdownStyle",
          "grow",
          "handleSubmit",
          "innerRef",
          "itemClassName",
          "itemStyle",
          "listClassName",
          "listStyle",
          "loaderClassName",
          "loaderStyle",
          "loadingComponent",
          "minChar",
          "movePopupAsYouType",
          "onCaretPositionChange",
          "onChange",
          "ref",
          "replaceWord",
          "scrollToItem",
          "shouldSubmit",
          "showCommandsList",
          "showMentionsList",
          "SuggestionItem",
          "SuggestionList",
          "trigger",
          "value"
        ];
        for (var prop in props2) {
          if (notSafe.includes(prop))
            delete props2[prop];
        }
        return props2;
      };
      _this._isCommand = function(text5) {
        if (text5[0] !== "/")
          return false;
        var tokens = text5.split(" ");
        return tokens.length <= 1;
      };
      _this._changeHandler = function(e) {
        var _a2 = _this.props, minChar = _a2.minChar, movePopupAsYouType = _a2.movePopupAsYouType, onCaretPositionChange = _a2.onCaretPositionChange, onChange = _a2.onChange, trigger2 = _a2.trigger;
        var _b = _this.state, left2 = _b.left, top2 = _b.top;
        var textarea = e.target;
        var selectionEnd = textarea.selectionEnd, selectionStart = textarea.selectionStart, value2 = textarea.value;
        if (onChange) {
          e.persist();
          onChange(e);
        }
        if (onCaretPositionChange)
          onCaretPositionChange(_this.getCaretPosition());
        _this.setState({ value: value2 });
        var currentTrigger;
        var lastToken;
        if (_this._isCommand(value2)) {
          currentTrigger = "/";
          lastToken = value2;
        } else {
          var triggerTokens = Object.keys(trigger2).join().replace("/", "");
          var triggerNorWhitespace = "[^\\s".concat(triggerTokens, "]*");
          var regex = new RegExp("(?!^|\\W)?[".concat(triggerTokens, "]").concat(triggerNorWhitespace, "\\s?").concat(triggerNorWhitespace, "$"), "g");
          var tokenMatch = value2.slice(0, selectionEnd).match(regex);
          lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();
          currentTrigger = lastToken && Object.keys(trigger2).find(function(a) {
            return a === lastToken[0];
          }) || null;
        }
        if (!lastToken || lastToken.length <= minChar) {
          _this._closeAutocomplete();
          return;
        }
        var actualToken = lastToken.slice(1);
        if (!currentTrigger)
          return;
        if (movePopupAsYouType || top2 === null && left2 === null || // if we have single char - trigger it means we want to re-position the autocomplete
        lastToken.length === 1) {
          var _c = (0, import_textarea_caret.default)(textarea, selectionEnd), newLeft = _c.left, newTop = _c.top;
          _this.setState({
            // make position relative to textarea
            left: newLeft,
            top: newTop - _this.textareaRef.scrollTop || 0
          });
        }
        _this.setState({
          actualToken,
          currentTrigger,
          selectionEnd,
          selectionStart
        }, function() {
          try {
            _this._getValuesFromProvider();
          } catch (err) {
            errorMessage(err.message);
          }
        });
      };
      _this._selectHandler = function(e) {
        var _a2 = _this.props, onCaretPositionChange = _a2.onCaretPositionChange, onSelect = _a2.onSelect;
        if (onCaretPositionChange)
          onCaretPositionChange(_this.getCaretPosition());
        if (onSelect) {
          e.persist();
          onSelect(e);
        }
      };
      _this._onClickAndBlurHandler = function(e) {
        var _a2 = _this.props, closeOnClickOutside = _a2.closeOnClickOutside, onBlur = _a2.onBlur;
        var el = e.relatedTarget;
        var focusedAwayInSafari = isSafari() && e.type === "blur";
        if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el) || focusedAwayInSafari) {
          return;
        }
        if (closeOnClickOutside)
          _this._closeAutocomplete();
        if (onBlur) {
          e.persist();
          onBlur(e);
        }
      };
      _this._onScrollHandler = function() {
        return _this._closeAutocomplete();
      };
      _this._dropdownScroll = function(item) {
        var scrollToItem = _this.props.scrollToItem;
        if (!scrollToItem)
          return;
        if (scrollToItem === true) {
          defaultScrollToItem(_this.dropdownRef, item);
          return;
        }
        if (typeof scrollToItem !== "function" || scrollToItem.length !== 2) {
          throw new Error("`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.");
        }
        scrollToItem(_this.dropdownRef, item);
      };
      _this.getTriggerProps = function() {
        var _a2 = _this.props, showCommandsList = _a2.showCommandsList, showMentionsList = _a2.showMentionsList, trigger2 = _a2.trigger;
        var _b = _this.state, component = _b.component, currentTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, value2 = _b.value;
        var selectedItem = _this._getItemOnSelect();
        var suggestionData = _this._getSuggestions();
        var textToReplace = _this._getTextToReplace();
        var triggerProps = {
          component,
          currentTrigger,
          getSelectedItem: selectedItem,
          getTextToReplace: textToReplace,
          selectionEnd,
          value: value2,
          values: suggestionData
        };
        if (showCommandsList && trigger2["/"] || showMentionsList && trigger2["@"]) {
          var currentCommands_1;
          var getCommands = trigger2[showCommandsList ? "/" : "@"].dataProvider;
          getCommands === null || getCommands === void 0 ? void 0 : getCommands("", showCommandsList ? "/" : "@", function(data) {
            currentCommands_1 = data;
          });
          triggerProps.component = showCommandsList ? CommandItem : UserItem;
          triggerProps.currentTrigger = showCommandsList ? "/" : "@";
          triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? "/" : "@");
          triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? "/" : "@");
          triggerProps.selectionEnd = 1;
          triggerProps.value = showCommandsList ? "/" : "@";
          triggerProps.values = currentCommands_1;
        }
        return triggerProps;
      };
      _this.setDropdownRef = function(element3) {
        _this.dropdownRef = element3;
      };
      var _a = _this.props, loadingComponent = _a.loadingComponent, trigger = _a.trigger, value = _a.value;
      if (!loadingComponent) {
        throw new Error("RTA: loadingComponent is not defined");
      }
      if (!trigger) {
        throw new Error("RTA: trigger is not defined");
      }
      _this.state = {
        actualToken: "",
        component: null,
        currentTrigger: null,
        data: null,
        dataLoading: false,
        isComposing: false,
        left: null,
        selectionEnd: 0,
        selectionStart: 0,
        top: null,
        value: value || ""
      };
      return _this;
    }
    ReactTextareaAutocomplete2.getDerivedStateFromProps = function(props, state) {
      if (props.value !== state.propsValue || !state.value) {
        return { propsValue: props.value, value: props.value };
      } else {
        return null;
      }
    };
    ReactTextareaAutocomplete2.prototype.renderSuggestionListContainer = function() {
      var _a = this.props, disableMentions = _a.disableMentions, dropdownClassName = _a.dropdownClassName, dropdownStyle = _a.dropdownStyle, itemClassName = _a.itemClassName, itemStyle = _a.itemStyle, listClassName = _a.listClassName, SuggestionItem = _a.SuggestionItem, _b = _a.SuggestionList, SuggestionList = _b === void 0 ? List : _b;
      var isComposing = this.state.isComposing;
      var triggerProps = this.getTriggerProps();
      if (isComposing || !triggerProps.values || !triggerProps.currentTrigger || disableMentions && triggerProps.currentTrigger === "@")
        return null;
      return import_react54.default.createElement(
        "div",
        { className: clsx_default("rta__autocomplete", "str-chat__suggestion-list-container", dropdownClassName), ref: this.setDropdownRef, style: dropdownStyle },
        import_react54.default.createElement(SuggestionList, __assign({ className: clsx_default("str-chat__suggestion-list", listClassName), dropdownScroll: this._dropdownScroll, itemClassName: clsx_default("str-chat__suggestion-list-item", itemClassName), itemStyle, onSelect: this._onSelect, SuggestionItem }, triggerProps))
      );
    };
    ReactTextareaAutocomplete2.prototype.render = function() {
      var _this = this;
      var _a = this.props, className = _a.className, containerClassName = _a.containerClassName, containerStyle = _a.containerStyle, style = _a.style;
      var _b = this.props.additionalTextareaProps || {}, onBlur = _b.onBlur, onChange = _b.onChange, onClick = _b.onClick, onFocus = _b.onFocus, onKeyDown = _b.onKeyDown, onScroll = _b.onScroll, onSelect = _b.onSelect, restAdditionalTextareaProps = __rest(_b, ["onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onScroll", "onSelect"]);
      var maxRows = this.props.maxRows;
      var _c = this.state, dataLoading = _c.dataLoading, value = _c.value;
      if (!this.props.grow)
        maxRows = 1;
      return import_react54.default.createElement(
        "div",
        { className: clsx_default("rta", containerClassName, {
          "rta--loading": dataLoading
        }), style: containerStyle },
        this.renderSuggestionListContainer(),
        import_react54.default.createElement(index4, __assign({ "data-testid": "message-input" }, this._cleanUpProps(), { className: clsx_default("rta__textarea", className), maxRows, onBlur: function(e) {
          _this._onClickAndBlurHandler(e);
          onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
        }, onChange: function(e) {
          _this._changeHandler(e);
          onChange === null || onChange === void 0 ? void 0 : onChange(e);
        }, onClick: function(e) {
          _this._onClickAndBlurHandler(e);
          onClick === null || onClick === void 0 ? void 0 : onClick(e);
        }, onCompositionEnd: function() {
          return _this.setState(function(pv) {
            return __assign(__assign({}, pv), { isComposing: false });
          });
        }, onCompositionStart: function() {
          return _this.setState(function(pv) {
            return __assign(__assign({}, pv), { isComposing: true });
          });
        }, onFocus: function(e) {
          var _a2, _b2;
          (_b2 = (_a2 = _this.props).onFocus) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, e);
          onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);
        }, onKeyDown: function(e) {
          _this._handleKeyDown(e);
          onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);
        }, onScroll: function(e) {
          _this._onScrollHandler(e);
          onScroll === null || onScroll === void 0 ? void 0 : onScroll(e);
        }, onSelect: function(e) {
          _this._selectHandler(e);
          onSelect === null || onSelect === void 0 ? void 0 : onSelect(e);
        }, ref: function(ref) {
          var _a2;
          (_a2 = _this.props) === null || _a2 === void 0 ? void 0 : _a2.innerRef(ref);
          _this.textareaRef = ref;
        }, style, value }, restAdditionalTextareaProps, { defaultValue: void 0 }))
      );
    };
    ReactTextareaAutocomplete2.defaultProps = {
      closeOnClickOutside: true,
      maxRows: 10,
      minChar: 1,
      movePopupAsYouType: false,
      scrollToItem: true,
      value: ""
    };
    return ReactTextareaAutocomplete2;
  }(import_react54.default.Component)
);
ReactTextareaAutocomplete.propTypes = {
  className: import_prop_types3.default.string,
  closeOnClickOutside: import_prop_types3.default.bool,
  containerClassName: import_prop_types3.default.string,
  containerStyle: import_prop_types3.default.object,
  disableMentions: import_prop_types3.default.bool,
  dropdownClassName: import_prop_types3.default.string,
  dropdownStyle: import_prop_types3.default.object,
  itemClassName: import_prop_types3.default.string,
  itemStyle: import_prop_types3.default.object,
  listClassName: import_prop_types3.default.string,
  listStyle: import_prop_types3.default.object,
  loaderClassName: import_prop_types3.default.string,
  loaderStyle: import_prop_types3.default.object,
  loadingComponent: import_prop_types3.default.elementType,
  minChar: import_prop_types3.default.number,
  onBlur: import_prop_types3.default.func,
  onCaretPositionChange: import_prop_types3.default.func,
  onChange: import_prop_types3.default.func,
  onSelect: import_prop_types3.default.func,
  shouldSubmit: import_prop_types3.default.func,
  style: import_prop_types3.default.object,
  SuggestionList: import_prop_types3.default.elementType,
  trigger: triggerPropsCheck,
  value: import_prop_types3.default.string
};

// node_modules/stream-chat-react/dist/components/Channel/Channel.js
var import_react110 = __toESM(require_react());
var import_lodash4 = __toESM(require_lodash2());
var import_lodash5 = __toESM(require_lodash3());

// node_modules/nanoid/index.browser.js
var nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
  byte &= 63;
  if (byte < 36) {
    id += byte.toString(36);
  } else if (byte < 62) {
    id += (byte - 26).toString(36).toUpperCase();
  } else if (byte > 62) {
    id += "-";
  } else {
    id += "_";
  }
  return id;
}, "");

// node_modules/stream-chat-react/dist/components/Channel/channelState.js
var channelReducer = function(state, action) {
  var _a;
  switch (action.type) {
    case "closeThread": {
      return __assign(__assign({}, state), { thread: null, threadLoadingMore: false, threadMessages: [] });
    }
    case "copyMessagesFromChannel": {
      var channel = action.channel, parentId = action.parentId;
      return __assign(__assign({}, state), {
        messages: __spreadArray([], channel.state.messages, true),
        pinnedMessages: __spreadArray([], channel.state.pinnedMessages, true),
        // copying messages from channel happens with new message - this resets the suppressAutoscroll
        suppressAutoscroll: false,
        threadMessages: parentId ? __assign({}, channel.state.threads)[parentId] || [] : state.threadMessages
      });
    }
    case "copyStateFromChannelOnEvent": {
      var channel = action.channel;
      return __assign(__assign({}, state), { members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages, true), pinnedMessages: __spreadArray([], channel.state.pinnedMessages, true), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });
    }
    case "initStateFromChannel": {
      var channel = action.channel, hasMore = action.hasMore;
      return __assign(__assign({}, state), { hasMore, loading: false, members: __assign({}, channel.state.members), messages: __spreadArray([], channel.state.messages, true), pinnedMessages: __spreadArray([], channel.state.pinnedMessages, true), read: __assign({}, channel.state.read), watcherCount: channel.state.watcher_count, watchers: __assign({}, channel.state.watchers) });
    }
    case "jumpToLatestMessage": {
      return __assign(__assign({}, state), { hasMoreNewer: false, highlightedMessageId: void 0, loading: false, suppressAutoscroll: false });
    }
    case "jumpToMessageFinished": {
      return __assign(__assign({}, state), { hasMoreNewer: action.hasMoreNewer, highlightedMessageId: action.highlightedMessageId });
    }
    case "clearHighlightedMessage": {
      return __assign(__assign({}, state), { highlightedMessageId: void 0 });
    }
    case "loadMoreFinished": {
      var hasMore = action.hasMore, messages = action.messages;
      return __assign(__assign({}, state), { hasMore, loadingMore: false, messages, suppressAutoscroll: false });
    }
    case "loadMoreNewerFinished": {
      var hasMoreNewer = action.hasMoreNewer, messages = action.messages;
      return __assign(__assign({}, state), { hasMoreNewer, loadingMoreNewer: false, messages });
    }
    case "loadMoreThreadFinished": {
      var threadHasMore = action.threadHasMore, threadMessages = action.threadMessages;
      return __assign(__assign({}, state), { threadHasMore, threadLoadingMore: false, threadMessages });
    }
    case "openThread": {
      var channel = action.channel, message = action.message;
      return __assign(__assign({}, state), { thread: message, threadMessages: message.id ? __assign({}, channel.state.threads)[message.id] || [] : [], threadSuppressAutoscroll: false });
    }
    case "setError": {
      var error = action.error;
      return __assign(__assign({}, state), { error });
    }
    case "setLoadingMore": {
      var loadingMore = action.loadingMore;
      return __assign(__assign({}, state), { loadingMore, suppressAutoscroll: loadingMore });
    }
    case "setLoadingMoreNewer": {
      var loadingMoreNewer = action.loadingMoreNewer;
      return __assign(__assign({}, state), { loadingMoreNewer });
    }
    case "setThread": {
      var message = action.message;
      return __assign(__assign({}, state), { thread: message });
    }
    case "setTyping": {
      var channel = action.channel;
      return __assign(__assign({}, state), { typing: __assign({}, channel.state.typing) });
    }
    case "startLoadingThread": {
      return __assign(__assign({}, state), { threadLoadingMore: true, threadSuppressAutoscroll: true });
    }
    case "updateThreadOnEvent": {
      var channel = action.channel, message = action.message;
      if (!state.thread)
        return state;
      return __assign(__assign({}, state), { thread: (message === null || message === void 0 ? void 0 : message.id) === state.thread.id ? channel.state.formatMessage(message) : state.thread, threadMessages: ((_a = state.thread) === null || _a === void 0 ? void 0 : _a.id) ? __assign({}, channel.state.threads)[state.thread.id] || [] : [] });
    }
    default:
      return state;
  }
};
var initialState2 = {
  error: null,
  hasMore: true,
  hasMoreNewer: false,
  loading: true,
  loadingMore: false,
  members: {},
  messages: [],
  pinnedMessages: [],
  read: {},
  suppressAutoscroll: false,
  thread: null,
  threadHasMore: true,
  threadLoadingMore: false,
  threadMessages: [],
  threadSuppressAutoscroll: false,
  typing: {},
  watcherCount: 0,
  watchers: {}
};

// node_modules/stream-chat-react/dist/components/Channel/emojiData.js
var commonEmoji = {
  custom: true,
  emoticons: [],
  short_names: []
};
var emojiSetDef = {
  imageUrl: "",
  sheetColumns: 2,
  sheetRows: 3,
  sheetSize: 64,
  spriteUrl: "https://getstream.imgix.net/images/emoji-sprite.png"
};
var defaultMinimalEmojis = [
  __assign(__assign({ colons: ":+1:", id: "like", name: "like", sheet_x: 0, sheet_y: 0 }, commonEmoji), emojiSetDef),
  __assign(__assign({ colons: ":heart:", id: "love", name: "love", sheet_x: 1, sheet_y: 2 }, commonEmoji), emojiSetDef),
  __assign(__assign({ colons: ":joy:", id: "haha", name: "haha", sheet_x: 1, sheet_y: 0 }, commonEmoji), emojiSetDef),
  __assign(__assign({ colons: ":astonished:", id: "wow", name: "wow", sheet_x: 0, sheet_y: 2 }, commonEmoji), emojiSetDef),
  __assign(__assign({ colons: ":pensive:", id: "sad", name: "sad", sheet_x: 0, sheet_y: 1 }, commonEmoji), emojiSetDef),
  __assign(__assign({ colons: ":angry:", id: "angry", name: "angry", sheet_x: 1, sheet_y: 1 }, commonEmoji), emojiSetDef)
];
var getStrippedEmojiData = function(data) {
  return __assign(__assign({}, data), { emojis: {} });
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useCreateChannelStateContext.js
var import_react55 = __toESM(require_react());
var useCreateChannelStateContext = function(value) {
  var _a;
  var acceptedFiles = value.acceptedFiles, channel = value.channel, _b = value.channelCapabilitiesArray, channelCapabilitiesArray = _b === void 0 ? [] : _b, channelConfig = value.channelConfig, debounceURLEnrichmentMs = value.debounceURLEnrichmentMs, dragAndDropWindow = value.dragAndDropWindow, enrichURLForPreview = value.enrichURLForPreview, giphyVersion = value.giphyVersion, error = value.error, findURLFn = value.findURLFn, hasMore = value.hasMore, hasMoreNewer = value.hasMoreNewer, imageAttachmentSizeHandler = value.imageAttachmentSizeHandler, suppressAutoscroll = value.suppressAutoscroll, highlightedMessageId = value.highlightedMessageId, loading = value.loading, loadingMore = value.loadingMore, maxNumberOfFiles = value.maxNumberOfFiles, members = value.members, _c = value.messages, messages = _c === void 0 ? [] : _c, multipleUploads = value.multipleUploads, mutes = value.mutes, notifications = value.notifications, onLinkPreviewDismissed = value.onLinkPreviewDismissed, pinnedMessages = value.pinnedMessages, quotedMessage = value.quotedMessage, _d = value.read, read2 = _d === void 0 ? {} : _d, shouldGenerateVideoThumbnail = value.shouldGenerateVideoThumbnail, skipMessageDataMemoization = value.skipMessageDataMemoization, thread = value.thread, threadHasMore = value.threadHasMore, threadLoadingMore = value.threadLoadingMore, _e = value.threadMessages, threadMessages = _e === void 0 ? [] : _e, videoAttachmentSizeHandler = value.videoAttachmentSizeHandler, watcherCount = value.watcherCount, watcher_count = value.watcher_count, watchers = value.watchers;
  var channelId = channel.cid;
  var lastRead = channel.initialized && ((_a = channel.lastRead()) === null || _a === void 0 ? void 0 : _a.getTime());
  var membersLength = Object.keys(members || []).length;
  var notificationsLength = notifications.length;
  var readUsers = Object.values(read2);
  var readUsersLength = readUsers.length;
  var readUsersLastReads = readUsers.map(function(_a2) {
    var last_read = _a2.last_read;
    return last_read.toISOString();
  }).join();
  var threadMessagesLength = threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length;
  var channelCapabilities = {};
  channelCapabilitiesArray.forEach(function(capability) {
    channelCapabilities[capability] = true;
  });
  var memoizedMessageData = skipMessageDataMemoization ? messages : messages.map(function(_a2) {
    var deleted_at = _a2.deleted_at, latest_reactions = _a2.latest_reactions, pinned = _a2.pinned, reply_count = _a2.reply_count, status = _a2.status, updated_at = _a2.updated_at, user = _a2.user;
    return "".concat(deleted_at).concat(latest_reactions ? latest_reactions.map(function(_a3) {
      var type = _a3.type;
      return type;
    }).join() : "").concat(pinned).concat(reply_count).concat(status).concat(updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || "").concat(user === null || user === void 0 ? void 0 : user.updated_at);
  }).join();
  var memoizedThreadMessageData = threadMessages.map(function(_a2) {
    var deleted_at = _a2.deleted_at, latest_reactions = _a2.latest_reactions, pinned = _a2.pinned, status = _a2.status, updated_at = _a2.updated_at, user = _a2.user;
    return "".concat(deleted_at).concat(latest_reactions ? latest_reactions.map(function(_a3) {
      var type = _a3.type;
      return type;
    }).join() : "").concat(pinned).concat(status).concat(updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || "").concat(user === null || user === void 0 ? void 0 : user.updated_at);
  }).join();
  var channelStateContext = (0, import_react55.useMemo)(function() {
    return {
      acceptedFiles,
      channel,
      channelCapabilities,
      channelConfig,
      debounceURLEnrichmentMs,
      dragAndDropWindow,
      enrichURLForPreview,
      error,
      findURLFn,
      giphyVersion,
      hasMore,
      hasMoreNewer,
      highlightedMessageId,
      imageAttachmentSizeHandler,
      loading,
      loadingMore,
      maxNumberOfFiles,
      members,
      messages,
      multipleUploads,
      mutes,
      notifications,
      onLinkPreviewDismissed,
      pinnedMessages,
      quotedMessage,
      read: read2,
      shouldGenerateVideoThumbnail,
      suppressAutoscroll,
      thread,
      threadHasMore,
      threadLoadingMore,
      threadMessages,
      videoAttachmentSizeHandler,
      watcher_count,
      watcherCount,
      watchers
    };
  }, [
    channelId,
    debounceURLEnrichmentMs,
    enrichURLForPreview,
    error,
    findURLFn,
    hasMore,
    hasMoreNewer,
    highlightedMessageId,
    lastRead,
    loading,
    loadingMore,
    membersLength,
    memoizedMessageData,
    memoizedThreadMessageData,
    notificationsLength,
    onLinkPreviewDismissed,
    quotedMessage,
    readUsersLength,
    readUsersLastReads,
    shouldGenerateVideoThumbnail,
    skipMessageDataMemoization,
    suppressAutoscroll,
    thread,
    threadHasMore,
    threadLoadingMore,
    threadMessagesLength,
    watcherCount
  ]);
  return channelStateContext;
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useCreateTypingContext.js
var import_react56 = __toESM(require_react());
var useCreateTypingContext = function(value) {
  var typing = value.typing;
  var typingValue = Object.keys(typing || {}).join();
  var typingContext = (0, import_react56.useMemo)(function() {
    return {
      typing
    };
  }, [typingValue]);
  return typingContext;
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useEditMessageHandler.js
var useEditMessageHandler = function(doUpdateMessageRequest) {
  var _a = useChatContext("useEditMessageHandler"), channel = _a.channel, client = _a.client;
  return function(updatedMessage, options2) {
    if (doUpdateMessageRequest && channel) {
      return Promise.resolve(doUpdateMessageRequest(channel.cid, updatedMessage, options2));
    }
    return client.updateMessage(updatedMessage, void 0, options2);
  };
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useIsMounted.js
var import_react57 = __toESM(require_react());
var useIsMounted = function() {
  var isMounted = (0, import_react57.useRef)(false);
  (0, import_react57.useEffect)(function() {
    isMounted.current = true;
    return function() {
      isMounted.current = false;
    };
  }, []);
  return isMounted;
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useMentionsHandlers.js
var import_react58 = __toESM(require_react());
var useMentionsHandlers = function(onMentionsHover, onMentionsClick) {
  return (0, import_react58.useCallback)(function(event, mentioned_users) {
    if (!onMentionsHover && !onMentionsClick || !(event.target instanceof HTMLElement)) {
      return;
    }
    var target = event.target;
    var textContent = target.innerHTML.replace("*", "");
    if (textContent[0] === "@") {
      var userName_1 = textContent.replace("@", "");
      var user = mentioned_users === null || mentioned_users === void 0 ? void 0 : mentioned_users.find(function(_a) {
        var id = _a.id, name = _a.name;
        return name === userName_1 || id === userName_1;
      });
      if (onMentionsHover && typeof onMentionsHover === "function" && event.type === "mouseover") {
        onMentionsHover(event, user);
      }
      if (onMentionsClick && event.type === "click" && typeof onMentionsClick === "function") {
        onMentionsClick(event, user);
      }
    }
  }, [onMentionsClick, onMentionsHover]);
};

// node_modules/stream-chat-react/dist/components/Loading/LoadingChannels.js
var import_react59 = __toESM(require_react());
var LoadingItems = function() {
  return import_react59.default.createElement(
    "div",
    { className: "str-chat__loading-channels-item str-chat__channel-preview-loading" },
    import_react59.default.createElement("div", { className: "str-chat__loading-channels-avatar" }),
    import_react59.default.createElement(
      "div",
      { className: "str-chat__loading-channels-meta str-chat__channel-preview-end-loading" },
      import_react59.default.createElement("div", { className: "str-chat__loading-channels-username" }),
      import_react59.default.createElement("div", { className: "str-chat__loading-channels-status" })
    )
  );
};
var UnMemoizedLoadingChannels = function() {
  return import_react59.default.createElement(
    "div",
    { className: "str-chat__loading-channels" },
    import_react59.default.createElement(LoadingItems, null),
    import_react59.default.createElement(LoadingItems, null),
    import_react59.default.createElement(LoadingItems, null)
  );
};
var LoadingChannels = import_react59.default.memo(UnMemoizedLoadingChannels);

// node_modules/stream-chat-react/dist/components/Loading/LoadingErrorIndicator.js
var import_react60 = __toESM(require_react());
var UnMemoizedLoadingErrorIndicator = function(_a) {
  var error = _a.error;
  var t = useTranslationContext("LoadingErrorIndicator").t;
  if (!error)
    return null;
  return import_react60.default.createElement("div", null, t("Error: {{ errorMessage }}", { errorMessage: error.message }));
};
var LoadingErrorIndicator = import_react60.default.memo(UnMemoizedLoadingErrorIndicator, function(prevProps, nextProps) {
  var _a, _b;
  return ((_a = prevProps.error) === null || _a === void 0 ? void 0 : _a.message) === ((_b = nextProps.error) === null || _b === void 0 ? void 0 : _b.message);
});

// node_modules/stream-chat-react/dist/components/Loading/LoadingIndicator.js
var import_react61 = __toESM(require_react());
var UnMemoizedLoadingIndicator = function(props) {
  var _a = props.color, color2 = _a === void 0 ? "#006CFF" : _a, _b = props.size, size = _b === void 0 ? 15 : _b;
  return import_react61.default.createElement(
    "div",
    { className: "str-chat__loading-indicator", "data-testid": "loading-indicator-wrapper", style: { height: size, width: size } },
    import_react61.default.createElement(
      "svg",
      { height: size, viewBox: "0 0 30 30", width: size, xmlns: "http://www.w3.org/2000/svg" },
      import_react61.default.createElement(
        "defs",
        null,
        import_react61.default.createElement(
          "linearGradient",
          { id: "a", x1: "50%", x2: "50%", y1: "0%", y2: "100%" },
          import_react61.default.createElement("stop", { offset: "0%", stopColor: "#FFF", stopOpacity: "0" }),
          import_react61.default.createElement("stop", { "data-testid": "loading-indicator-circle", offset: "100%", stopColor: color2, stopOpacity: "1", style: { stopColor: color2 } })
        )
      ),
      import_react61.default.createElement("path", { d: "M2.518 23.321l1.664-1.11A12.988 12.988 0 0 0 15 28c7.18 0 13-5.82 13-13S22.18 2 15 2V0c8.284 0 15 6.716 15 15 0 8.284-6.716 15-15 15-5.206 0-9.792-2.652-12.482-6.679z", fill: "url(#a)", fillRule: "evenodd" })
    )
  );
};
var LoadingIndicator2 = import_react61.default.memo(UnMemoizedLoadingIndicator, function(prevProps, nextProps) {
  return prevProps.color === nextProps.color && prevProps.size === nextProps.size;
});

// node_modules/stream-chat-react/dist/components/Channel/LoadingChannel.js
var import_react62 = __toESM(require_react());
var LoadingMessage = function() {
  return import_react62.default.createElement(
    "div",
    { className: "str-chat__loading-channel-message" },
    import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-avatar" }),
    import_react62.default.createElement(
      "div",
      { className: "str-chat__loading-channel-message-end" },
      import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-sender" }),
      import_react62.default.createElement(
        "div",
        { className: "str-chat__loading-channel-message-last-row" },
        import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-text" }),
        import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-date" })
      )
    )
  );
};
var LoadingMessageInput = function() {
  return import_react62.default.createElement(
    "div",
    { className: "str-chat__loading-channel-message-input-row" },
    import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-input" }),
    import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-send" })
  );
};
var LoadingChannelHeader = function() {
  return import_react62.default.createElement(
    "div",
    { className: "str-chat__loading-channel-header" },
    import_react62.default.createElement("div", { className: "str-chat__loading-channel-header-avatar" }),
    import_react62.default.createElement(
      "div",
      { className: "str-chat__loading-channel-header-end" },
      import_react62.default.createElement("div", { className: "str-chat__loading-channel-header-name" }),
      import_react62.default.createElement("div", { className: "str-chat__loading-channel-header-info" })
    )
  );
};
var LoadingChannel = function() {
  return import_react62.default.createElement(
    "div",
    { className: "str-chat__loading-channel" },
    import_react62.default.createElement(LoadingChannelHeader, null),
    import_react62.default.createElement("div", { className: "str-chat__loading-channel-message-list" }, Array.from(Array(3)).map(function(_, i) {
      return import_react62.default.createElement(LoadingMessage, { key: "loading-message-".concat(i) });
    })),
    import_react62.default.createElement(LoadingMessageInput, null)
  );
};

// node_modules/stream-chat-react/dist/components/Message/MessageSimple.js
var import_react108 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Message/icons.js
var import_react63 = __toESM(require_react());
var ActionsIcon = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b;
  return import_react63.default.createElement(
    "svg",
    { className, height: "4", viewBox: "0 0 11 4", width: "11", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M1.5 3a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm4 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z", fillRule: "nonzero" })
  );
};
var ReplyIcon = function() {
  return import_react63.default.createElement(
    "svg",
    { "data-testid": "reply-icon", height: "15", width: "18", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M.56 10.946H.06l-.002-.498L.025.92a.5.5 0 1 1 1-.004l.032 9.029H9.06v-4l9 4.5-9 4.5v-4H.56z", fillRule: "nonzero" })
  );
};
var DeliveredCheckIcon = function() {
  return import_react63.default.createElement(
    "svg",
    { height: "16", width: "16", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm3.72 6.633a.955.955 0 1 0-1.352-1.352L6.986 8.663 5.633 7.31A.956.956 0 1 0 4.28 8.663l2.029 2.028a.956.956 0 0 0 1.353 0l4.058-4.058z", fill: "#006CFF", fillRule: "evenodd" })
  );
};
var ReactionIcon = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b;
  return import_react63.default.createElement(
    "svg",
    { className, height: "12", viewBox: "0 0 12 12", width: "12", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement(
      "g",
      { clipRule: "evenodd", fillRule: "evenodd" },
      import_react63.default.createElement("path", { d: "M6 1.2C3.3 1.2 1.2 3.3 1.2 6c0 2.7 2.1 4.8 4.8 4.8 2.7 0 4.8-2.1 4.8-4.8 0-2.7-2.1-4.8-4.8-4.8zM0 6c0-3.3 2.7-6 6-6s6 2.7 6 6-2.7 6-6 6-6-2.7-6-6z" }),
      import_react63.default.createElement("path", { d: "M5.4 4.5c0 .5-.4.9-.9.9s-.9-.4-.9-.9.4-.9.9-.9.9.4.9.9zM8.4 4.5c0 .5-.4.9-.9.9s-.9-.4-.9-.9.4-.9.9-.9.9.4.9.9zM3.3 6.7c.3-.2.6-.1.8.1.3.4.8.9 1.5 1 .6.2 1.4.1 2.4-1 .2-.2.6-.3.8 0 .2.2.3.6 0 .8-1.1 1.3-2.4 1.7-3.5 1.5-1-.2-1.8-.9-2.2-1.5-.2-.3-.1-.7.2-.9z" })
    )
  );
};
var ThreadIcon = function(_a) {
  var _b = _a.className, className = _b === void 0 ? "" : _b;
  return import_react63.default.createElement(
    "svg",
    { className, height: "10", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M8.516 3c4.78 0 4.972 6.5 4.972 6.5-1.6-2.906-2.847-3.184-4.972-3.184v2.872L3.772 4.994 8.516.5V3zM.484 5l4.5-4.237v1.78L2.416 5l2.568 2.125v1.828L.484 5z", fillRule: "evenodd" })
  );
};
var ErrorIcon = function() {
  return import_react63.default.createElement(
    "svg",
    { height: "14", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M7 0a7 7 0 1 0 0 14A7 7 0 0 0 7 0zm.875 10.938a.438.438 0 0 1-.438.437h-.875a.438.438 0 0 1-.437-.438v-.874c0-.242.196-.438.438-.438h.875c.241 0 .437.196.437.438v.874zm0-2.626a.438.438 0 0 1-.438.438h-.875a.438.438 0 0 1-.437-.438v-5.25c0-.241.196-.437.438-.437h.875c.241 0 .437.196.437.438v5.25z", fill: "#EA152F", fillRule: "evenodd" })
  );
};
var PinIcon = function() {
  return import_react63.default.createElement(
    "svg",
    { height: "13", viewBox: "0 0 14 13", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { d: "M13.3518 6.686L6.75251 0.0866699L5.80984 1.02867L6.75318 1.972V1.97334L3.45318 5.272L3.45251 5.27334L2.50984 4.32934L1.56718 5.27267L4.39584 8.10067L0.624512 11.8713L1.56718 12.814L5.33851 9.04334L8.16718 11.8713L9.10984 10.9293L8.16718 9.986L11.4672 6.686L12.4098 7.62867L13.3518 6.686ZM7.22451 9.04267L7.22385 9.04334L4.39584 6.21467L7.69518 2.91467L10.5232 5.74267L7.22451 9.04267Z", fillRule: "evenodd" })
  );
};
var PinIndicator = function(_a) {
  var _b, _c;
  var message = _a.message, t = _a.t;
  if (!message || !t)
    return null;
  return import_react63.default.createElement(
    "div",
    { style: { alignItems: "center", display: "flex" } },
    import_react63.default.createElement(PinIcon, null),
    import_react63.default.createElement("div", { style: {
      fontSize: "14px",
      marginBottom: "0",
      marginLeft: "8px",
      marginTop: "0"
    } }, message.pinned_by ? "".concat(t("Pinned by"), " ").concat(((_b = message.pinned_by) === null || _b === void 0 ? void 0 : _b.name) || ((_c = message.pinned_by) === null || _c === void 0 ? void 0 : _c.id)) : t("Message pinned"))
  );
};
var MessageDeliveredIcon = function() {
  return import_react63.default.createElement(
    "svg",
    { "data-testid": "delivered-icon", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react63.default.createElement("path", { clipRule: "evenodd", d: "M8.9999 16.2L4.7999 12L3.3999 13.4L8.9999 19L20.9999 6.99998L19.5999 5.59998L8.9999 16.2Z", fill: "black", fillRule: "evenodd" })
  );
};
var MessageErrorIcon = function() {
  return import_react63.default.createElement(
    "div",
    { className: "str-chat__message-error-icon" },
    import_react63.default.createElement(
      "svg",
      { "data-testid": "error", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
      import_react63.default.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2Z", fill: "black", id: "background" }),
      import_react63.default.createElement("path", { d: "M13 17H11V15H13V17ZM13 13H11V7H13V13Z", fill: "white" })
    )
  );
};

// node_modules/stream-chat-react/dist/components/Message/MessageDeleted.js
var import_react64 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js
var useUserRole = function(message, onlySenderCanEdit, disableQuotedMessages) {
  var _a, _b, _c;
  var _d = useChannelStateContext("useUserRole"), channel = _d.channel, _e = _d.channelCapabilities, channelCapabilities = _e === void 0 ? {} : _e;
  var client = useChatContext("useUserRole").client;
  var isAdmin = ((_a = client.user) === null || _a === void 0 ? void 0 : _a.role) === "admin" || channel.state.membership.role === "admin";
  var isOwner = channel.state.membership.role === "owner";
  var isModerator = ((_b = client.user) === null || _b === void 0 ? void 0 : _b.role) === "channel_moderator" || channel.state.membership.role === "channel_moderator" || channel.state.membership.role === "moderator" || channel.state.membership.is_moderator === true || channel.state.membership.channel_role === "channel_moderator";
  var isMyMessage = client.userID === ((_c = message.user) === null || _c === void 0 ? void 0 : _c.id);
  var canEdit = !onlySenderCanEdit && channelCapabilities["update-any-message"] || isMyMessage && channelCapabilities["update-own-message"];
  var canDelete = channelCapabilities["delete-any-message"] || isMyMessage && channelCapabilities["delete-own-message"];
  var canFlag = !isMyMessage && channelCapabilities["flag-message"];
  var canMute = !isMyMessage && channelCapabilities["mute-channel"];
  var canQuote = !disableQuotedMessages && channelCapabilities["quote-message"];
  var canReact = channelCapabilities["send-reaction"];
  var canReply = channelCapabilities["send-reply"];
  return {
    canDelete,
    canEdit,
    canFlag,
    canMute,
    canQuote,
    canReact,
    canReply,
    isAdmin,
    isModerator,
    isMyMessage,
    isOwner
  };
};

// node_modules/stream-chat-react/dist/components/Message/MessageDeleted.js
var MessageDeleted = function(props) {
  var message = props.message;
  var t = useTranslationContext("MessageDeleted").t;
  var isMyMessage = useUserRole(message).isMyMessage;
  var messageClasses = isMyMessage ? "str-chat__message str-chat__message--me str-chat__message-simple str-chat__message-simple--me" : "str-chat__message str-chat__message-simple str-chat__message--other";
  return import_react64.default.createElement(
    "div",
    { className: "".concat(messageClasses, " str-chat__message--deleted ").concat(message.type, " "), "data-testid": "message-deleted-component", key: message.id },
    import_react64.default.createElement("div", { className: "str-chat__message--deleted-inner" }, t("This message was deleted..."))
  );
};

// node_modules/stream-chat-react/dist/components/Message/MessageOptions.js
var import_react67 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Message/utils.js
var import_react_fast_compare = __toESM(require_react_fast_compare());
var import_emoji_regex2 = __toESM(require_emoji_regex());
var validateAndGetMessage = function(func, args) {
  if (!func || typeof func !== "function")
    return null;
  if (!(args instanceof Array)) {
    args = [args];
  }
  var returnValue = func.apply(void 0, args);
  if (typeof returnValue !== "string")
    return null;
  return returnValue;
};
var isUserMuted = function(message, mutes) {
  if (!mutes || !message)
    return false;
  var userMuted = mutes.filter(function(el) {
    var _a;
    return el.target.id === ((_a = message.user) === null || _a === void 0 ? void 0 : _a.id);
  });
  return !!userMuted.length;
};
var MESSAGE_ACTIONS = {
  delete: "delete",
  edit: "edit",
  flag: "flag",
  mute: "mute",
  pin: "pin",
  quote: "quote",
  react: "react",
  reply: "reply"
};
var defaultPinPermissions = {
  commerce: {
    admin: true,
    anonymous: false,
    channel_member: false,
    channel_moderator: true,
    guest: false,
    member: false,
    moderator: true,
    owner: true,
    user: false
  },
  gaming: {
    admin: true,
    anonymous: false,
    channel_member: false,
    channel_moderator: true,
    guest: false,
    member: false,
    moderator: true,
    owner: false,
    user: false
  },
  livestream: {
    admin: true,
    anonymous: false,
    channel_member: false,
    channel_moderator: true,
    guest: false,
    member: false,
    moderator: true,
    owner: true,
    user: false
  },
  messaging: {
    admin: true,
    anonymous: false,
    channel_member: true,
    channel_moderator: true,
    guest: false,
    member: true,
    moderator: true,
    owner: true,
    user: false
  },
  team: {
    admin: true,
    anonymous: false,
    channel_member: true,
    channel_moderator: true,
    guest: false,
    member: true,
    moderator: true,
    owner: true,
    user: false
  }
};
var getMessageActions = function(actions, _a) {
  var canDelete = _a.canDelete, canEdit = _a.canEdit, canFlag = _a.canFlag, canMute = _a.canMute, canPin = _a.canPin, canQuote = _a.canQuote, canReact = _a.canReact, canReply = _a.canReply;
  var messageActionsAfterPermission = [];
  var messageActions = [];
  if (actions && typeof actions === "boolean") {
    messageActions = Object.keys(MESSAGE_ACTIONS);
  } else if (actions && actions.length > 0) {
    messageActions = __spreadArray([], actions, true);
  } else {
    return [];
  }
  if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);
  }
  if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);
  }
  if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);
  }
  if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);
  }
  if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);
  }
  if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);
  }
  if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);
  }
  if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {
    messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);
  }
  return messageActionsAfterPermission;
};
var ACTIONS_NOT_WORKING_IN_THREAD = ["pin", "react", "reply"];
var showMessageActionsBox = function(actions, inThread) {
  if (actions.length === 0) {
    return false;
  }
  if (inThread && actions.filter(function(action) {
    return !ACTIONS_NOT_WORKING_IN_THREAD.includes(action);
  }).length === 0) {
    return false;
  }
  if (actions.length === 1 && (actions.includes("react") || actions.includes("reply"))) {
    return false;
  }
  if (actions.length === 2 && actions.includes("react") && actions.includes("reply")) {
    return false;
  }
  return true;
};
var areMessagesEqual = function(prevMessage, nextMessage) {
  var _a, _b, _c, _d, _e, _f;
  return prevMessage.deleted_at === nextMessage.deleted_at && ((_a = prevMessage.latest_reactions) === null || _a === void 0 ? void 0 : _a.length) === ((_b = nextMessage.latest_reactions) === null || _b === void 0 ? void 0 : _b.length) && ((_c = prevMessage.own_reactions) === null || _c === void 0 ? void 0 : _c.length) === ((_d = nextMessage.own_reactions) === null || _d === void 0 ? void 0 : _d.length) && prevMessage.pinned === nextMessage.pinned && prevMessage.reply_count === nextMessage.reply_count && prevMessage.status === nextMessage.status && prevMessage.text === nextMessage.text && prevMessage.type === nextMessage.type && prevMessage.updated_at === nextMessage.updated_at && ((_e = prevMessage.user) === null || _e === void 0 ? void 0 : _e.updated_at) === ((_f = nextMessage.user) === null || _f === void 0 ? void 0 : _f.updated_at);
};
var areMessagePropsEqual = function(prevProps, nextProps) {
  var prevMessage = prevProps.message, prevMessageUI = prevProps.Message;
  var nextMessage = nextProps.message, nextMessageUI = nextProps.Message;
  if (prevMessageUI !== nextMessageUI)
    return false;
  if (prevProps.endOfGroup !== nextProps.endOfGroup)
    return false;
  if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {
    return false;
  }
  var messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);
  if (!messagesAreEqual)
    return false;
  var deepEqualProps = (0, import_react_fast_compare.default)(nextProps.messageActions, prevProps.messageActions) && (0, import_react_fast_compare.default)(nextProps.readBy, prevProps.readBy) && (0, import_react_fast_compare.default)(nextProps.highlighted, prevProps.highlighted) && (0, import_react_fast_compare.default)(nextProps.groupStyles, prevProps.groupStyles) && // last 3 messages can have different group styles
  (0, import_react_fast_compare.default)(nextProps.mutes, prevProps.mutes) && (0, import_react_fast_compare.default)(nextProps.lastReceivedId, prevProps.lastReceivedId);
  if (!deepEqualProps)
    return false;
  return prevProps.messageListRect === nextProps.messageListRect;
};
var areMessageUIPropsEqual = function(prevProps, nextProps) {
  var _a, _b, _c, _d;
  var prevLastReceivedId = prevProps.lastReceivedId, prevMessage = prevProps.message;
  var nextLastReceivedId = nextProps.lastReceivedId, nextMessage = nextProps.message;
  if (prevProps.editing !== nextProps.editing)
    return false;
  if (prevProps.highlighted !== nextProps.highlighted)
    return false;
  if (prevProps.endOfGroup !== nextProps.endOfGroup)
    return false;
  if (((_a = prevProps.mutes) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = nextProps.mutes) === null || _b === void 0 ? void 0 : _b.length))
    return false;
  if (((_c = prevProps.readBy) === null || _c === void 0 ? void 0 : _c.length) !== ((_d = nextProps.readBy) === null || _d === void 0 ? void 0 : _d.length))
    return false;
  if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {
    return false;
  }
  if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) && prevLastReceivedId !== nextLastReceivedId) {
    return false;
  }
  return areMessagesEqual(prevMessage, nextMessage);
};
var messageHasReactions = function(message) {
  return !!(message === null || message === void 0 ? void 0 : message.latest_reactions) && !!message.latest_reactions.length;
};
var messageHasAttachments = function(message) {
  return !!(message === null || message === void 0 ? void 0 : message.attachments) && !!message.attachments.length;
};
var getImages = function(message) {
  if (!(message === null || message === void 0 ? void 0 : message.attachments)) {
    return [];
  }
  return message.attachments.filter(function(item) {
    return item.type === "image";
  });
};
var getNonImageAttachments = function(message) {
  if (!(message === null || message === void 0 ? void 0 : message.attachments)) {
    return [];
  }
  return message.attachments.filter(function(item) {
    return item.type !== "image";
  });
};
var mapToUserNameOrId = function(user) {
  return user.name || user.id;
};
var getReadByTooltipText = function(users, t, client, tooltipUserNameMapper) {
  var outStr = "";
  if (!t) {
    throw new Error("getReadByTooltipText was called, but translation function is not available");
  }
  if (!tooltipUserNameMapper) {
    throw new Error("getReadByTooltipText was called, but tooltipUserNameMapper function is not available");
  }
  var otherUsers = users.filter(function(item) {
    return item && (client === null || client === void 0 ? void 0 : client.user) && item.id !== client.user.id;
  }).map(tooltipUserNameMapper);
  var slicedArr = otherUsers.slice(0, 5);
  var restLength = otherUsers.length - slicedArr.length;
  if (slicedArr.length === 1) {
    outStr = "".concat(slicedArr[0], " ");
  } else if (slicedArr.length === 2) {
    outStr = t("{{ firstUser }} and {{ secondUser }}", {
      firstUser: slicedArr[0],
      secondUser: slicedArr[1]
    });
  } else if (slicedArr.length > 2) {
    if (restLength === 0) {
      var lastUser = slicedArr.splice(slicedArr.length - 1, 1);
      outStr = t("{{ commaSeparatedUsers }}, and {{ lastUser }}", {
        commaSeparatedUsers: slicedArr.join(", "),
        lastUser
      });
    } else {
      outStr = t("{{ commaSeparatedUsers }} and {{ moreCount }} more", {
        commaSeparatedUsers: slicedArr.join(", "),
        moreCount: restLength
      });
    }
  }
  return outStr;
};
var isOnlyEmojis = function(text5) {
  if (!text5)
    return false;
  var noEmojis = text5.replace((0, import_emoji_regex2.default)(), "");
  var noSpace = noEmojis.replace(/[\s\n]/gm, "");
  return !noSpace;
};

// node_modules/stream-chat-react/dist/components/MessageActions/MessageActions.js
var import_react66 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageActions/MessageActionsBox.js
var import_react65 = __toESM(require_react());
var CustomMessageActionsList = function(props) {
  var customMessageActions = props.customMessageActions, message = props.message;
  var customActionsArray = Object.keys(customMessageActions);
  return import_react65.default.createElement(import_react65.default.Fragment, null, customActionsArray.map(function(customAction) {
    var customHandler = customMessageActions[customAction];
    return import_react65.default.createElement("button", { "aria-selected": "false", className: "str-chat__message-actions-list-item str-chat__message-actions-list-item-button", key: customAction, onClick: function(event) {
      return customHandler(message, event);
    }, role: "option" }, customAction);
  }));
};
var UnMemoizedMessageActionsBox = function(props) {
  var getMessageActions2 = props.getMessageActions, handleDelete2 = props.handleDelete, handleEdit = props.handleEdit, handleFlag = props.handleFlag, handleMute = props.handleMute, handlePin = props.handlePin, isUserMuted2 = props.isUserMuted, mine = props.mine, _a = props.open, open = _a === void 0 ? false : _a;
  var setQuotedMessage = useChannelActionContext("MessageActionsBox").setQuotedMessage;
  var _b = useMessageContext("MessageActionsBox"), customMessageActions = _b.customMessageActions, message = _b.message, messageListRect = _b.messageListRect;
  var t = useTranslationContext("MessageActionsBox").t;
  var _c = (0, import_react65.useState)(false), reverse = _c[0], setReverse = _c[1];
  var messageActions = getMessageActions2();
  var checkIfReverse = (0, import_react65.useCallback)(function(containerElement) {
    if (!containerElement) {
      setReverse(false);
      return;
    }
    if (open) {
      var containerRect = containerElement.getBoundingClientRect();
      if (mine) {
        setReverse(!!messageListRect && containerRect.left < messageListRect.left);
      } else {
        setReverse(!!messageListRect && containerRect.right + 5 > messageListRect.right);
      }
    }
  }, [messageListRect, mine, open]);
  var handleQuote = function() {
    setQuotedMessage(message);
    var elements = message.parent_id ? document.querySelectorAll(".str-chat__thread .str-chat__textarea__textarea") : document.getElementsByClassName("str-chat__textarea__textarea");
    var textarea = elements.item(0);
    if (textarea instanceof HTMLTextAreaElement) {
      textarea.focus();
    }
  };
  var rootClassName = clsx_default("str-chat__message-actions-box", {
    "str-chat__message-actions-box--mine": mine,
    "str-chat__message-actions-box--open": open,
    "str-chat__message-actions-box--reverse": reverse
  });
  var buttonClassName = "str-chat__message-actions-list-item str-chat__message-actions-list-item-button";
  return import_react65.default.createElement(
    "div",
    { className: rootClassName, "data-testid": "message-actions-box", ref: checkIfReverse },
    import_react65.default.createElement(
      "div",
      { "aria-label": "Message Options", className: "str-chat__message-actions-list", role: "listbox" },
      customMessageActions && import_react65.default.createElement(CustomMessageActionsList, { customMessageActions, message }),
      messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1 && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handleQuote, role: "option" }, t("Reply")),
      messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1 && !message.parent_id && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handlePin, role: "option" }, !message.pinned ? t("Pin") : t("Unpin")),
      messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1 && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handleFlag, role: "option" }, t("Flag")),
      messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1 && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handleMute, role: "option" }, isUserMuted2() ? t("Unmute") : t("Mute")),
      messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1 && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handleEdit, role: "option" }, t("Edit Message")),
      messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1 && import_react65.default.createElement("button", { "aria-selected": "false", className: buttonClassName, onClick: handleDelete2, role: "option" }, t("Delete"))
    )
  );
};
var MessageActionsBox = import_react65.default.memo(UnMemoizedMessageActionsBox);

// node_modules/stream-chat-react/dist/components/MessageActions/MessageActions.js
var MessageActions = function(props) {
  var _a = props.ActionsIcon, ActionsIcon2 = _a === void 0 ? ActionsIcon : _a, _b = props.customWrapperClass, customWrapperClass = _b === void 0 ? "" : _b, propGetMessageActions = props.getMessageActions, propHandleDelete = props.handleDelete, propHandleFlag = props.handleFlag, propHandleMute = props.handleMute, propHandlePin = props.handlePin, inline = props.inline, propMessage = props.message, messageWrapperRef = props.messageWrapperRef, mine = props.mine;
  var mutes = useChatContext("MessageActions").mutes;
  var _c = useMessageContext("MessageActions"), customMessageActions = _c.customMessageActions, contextGetMessageActions = _c.getMessageActions, contextHandleDelete = _c.handleDelete, contextHandleFlag = _c.handleFlag, contextHandleMute = _c.handleMute, contextHandlePin = _c.handlePin, isMyMessage = _c.isMyMessage, contextMessage = _c.message, setEditingState = _c.setEditingState;
  var getMessageActions2 = propGetMessageActions || contextGetMessageActions;
  var handleDelete2 = propHandleDelete || contextHandleDelete;
  var handleFlag = propHandleFlag || contextHandleFlag;
  var handleMute = propHandleMute || contextHandleMute;
  var handlePin = propHandlePin || contextHandlePin;
  var message = propMessage || contextMessage;
  var _d = (0, import_react66.useState)(false), actionsBoxOpen = _d[0], setActionsBoxOpen = _d[1];
  var isMuted = (0, import_react66.useCallback)(function() {
    return isUserMuted(message, mutes);
  }, [message, mutes]);
  var hideOptions = (0, import_react66.useCallback)(function(event) {
    if (event instanceof KeyboardEvent && event.key !== "Escape") {
      return;
    }
    setActionsBoxOpen(false);
  }, []);
  var messageActions = getMessageActions2();
  var messageDeletedAt = !!(message === null || message === void 0 ? void 0 : message.deleted_at);
  (0, import_react66.useEffect)(function() {
    if (messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current) {
      messageWrapperRef.current.addEventListener("mouseleave", hideOptions);
    }
  }, [hideOptions, messageWrapperRef]);
  (0, import_react66.useEffect)(function() {
    if (messageDeletedAt) {
      document.removeEventListener("click", hideOptions);
    }
  }, [hideOptions, messageDeletedAt]);
  (0, import_react66.useEffect)(function() {
    if (!actionsBoxOpen)
      return;
    document.addEventListener("click", hideOptions);
    document.addEventListener("keyup", hideOptions);
    return function() {
      document.removeEventListener("click", hideOptions);
      document.removeEventListener("keyup", hideOptions);
    };
  }, [actionsBoxOpen, hideOptions]);
  if (!messageActions.length && !customMessageActions)
    return null;
  return import_react66.default.createElement(
    MessageActionsWrapper,
    { customWrapperClass, inline, setActionsBoxOpen },
    import_react66.default.createElement(MessageActionsBox, { getMessageActions: getMessageActions2, handleDelete: handleDelete2, handleEdit: setEditingState, handleFlag, handleMute, handlePin, isUserMuted: isMuted, mine: mine ? mine() : isMyMessage(), open: actionsBoxOpen }),
    import_react66.default.createElement(
      "button",
      { "aria-expanded": actionsBoxOpen, "aria-haspopup": "true", "aria-label": "Open Message Actions Menu", className: "str-chat__message-actions-box-button" },
      import_react66.default.createElement(ActionsIcon2, { className: "str-chat__message-action-icon" })
    )
  );
};
var MessageActionsWrapper = function(props) {
  var children = props.children, customWrapperClass = props.customWrapperClass, inline = props.inline, setActionsBoxOpen = props.setActionsBoxOpen;
  var defaultWrapperClass = "\n  str-chat__message-simple__actions__action\n  str-chat__message-simple__actions__action--options\n  str-chat__message-actions-container";
  var wrapperClass = customWrapperClass || defaultWrapperClass;
  var onClickOptionsAction = function(event) {
    event.stopPropagation();
    setActionsBoxOpen(function(prev) {
      return !prev;
    });
  };
  var wrapperProps = {
    className: wrapperClass,
    "data-testid": "message-actions",
    onClick: onClickOptionsAction
  };
  if (inline)
    return import_react66.default.createElement("span", __assign({}, wrapperProps), children);
  return import_react66.default.createElement("div", __assign({}, wrapperProps), children);
};

// node_modules/stream-chat-react/dist/components/Message/MessageOptions.js
var UnMemoizedMessageOptions = function(props) {
  var _a = props.ActionsIcon, ActionsIcon2 = _a === void 0 ? ActionsIcon : _a, _b = props.displayReplies, displayReplies = _b === void 0 ? true : _b, propHandleOpenThread = props.handleOpenThread, messageWrapperRef = props.messageWrapperRef, _c = props.ReactionIcon, ReactionIcon2 = _c === void 0 ? ReactionIcon : _c, _d = props.theme, theme = _d === void 0 ? "simple" : _d, _e = props.ThreadIcon, ThreadIcon2 = _e === void 0 ? ThreadIcon : _e;
  var _f = useMessageContext("MessageOptions"), customMessageActions = _f.customMessageActions, getMessageActions2 = _f.getMessageActions, contextHandleOpenThread = _f.handleOpenThread, initialMessage = _f.initialMessage, message = _f.message, onReactionListClick = _f.onReactionListClick, threadList = _f.threadList;
  var handleOpenThread = propHandleOpenThread || contextHandleOpenThread;
  var messageActions = getMessageActions2();
  var showActionsBox = showMessageActionsBox(messageActions, threadList) || !!customMessageActions;
  var shouldShowReactions = messageActions.indexOf(MESSAGE_ACTIONS.react) > -1;
  var shouldShowReplies = messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1 && displayReplies && !threadList;
  if (!message.type || message.type === "error" || message.type === "system" || message.type === "ephemeral" || message.status === "failed" || message.status === "sending" || initialMessage) {
    return null;
  }
  var rootClassName = "str-chat__message-".concat(theme, "__actions str-chat__message-options");
  return import_react67.default.createElement(
    "div",
    { className: rootClassName, "data-testid": "message-options" },
    showActionsBox && import_react67.default.createElement(MessageActions, { ActionsIcon: ActionsIcon2, messageWrapperRef }),
    shouldShowReplies && import_react67.default.createElement(
      "button",
      { "aria-label": "Open Thread", className: "str-chat__message-".concat(theme, "__actions__action str-chat__message-").concat(theme, "__actions__action--thread str-chat__message-reply-in-thread-button"), "data-testid": "thread-action", onClick: handleOpenThread },
      import_react67.default.createElement(ThreadIcon2, { className: "str-chat__message-action-icon" })
    ),
    shouldShowReactions && import_react67.default.createElement(
      "button",
      { "aria-label": "Open Reaction Selector", className: "str-chat__message-".concat(theme, "__actions__action str-chat__message-").concat(theme, "__actions__action--reactions str-chat__message-reactions-button"), "data-testid": "message-reaction-action", onClick: onReactionListClick },
      import_react67.default.createElement(ReactionIcon2, { className: "str-chat__message-action-icon" })
    )
  );
};
var MessageOptions = import_react67.default.memo(UnMemoizedMessageOptions);

// node_modules/stream-chat-react/dist/components/Message/MessageRepliesCountButton.js
var import_react68 = __toESM(require_react());
var UnMemoizedMessageRepliesCountButton = function(props) {
  var labelPlural = props.labelPlural, labelSingle = props.labelSingle, onClick = props.onClick, _a = props.reply_count, reply_count = _a === void 0 ? 0 : _a;
  var t = useTranslationContext("MessageRepliesCountButton").t;
  var themeVersion = useChatContext("MessageRepliesCountButton").themeVersion;
  if (!reply_count)
    return null;
  var replyCountText = t("replyCount", { count: reply_count });
  if (labelPlural && reply_count > 1) {
    replyCountText = "".concat(reply_count, " ").concat(labelPlural);
  } else if (labelSingle) {
    replyCountText = "1 ".concat(labelSingle);
  }
  return import_react68.default.createElement(
    "div",
    { className: "str-chat__message-simple-reply-button str-chat__message-replies-count-button-wrapper" },
    import_react68.default.createElement(
      "button",
      { className: "str-chat__message-replies-count-button", "data-testid": "replies-count-button", onClick },
      themeVersion === "1" && import_react68.default.createElement(ReplyIcon, null),
      replyCountText
    )
  );
};
var MessageRepliesCountButton = import_react68.default.memo(UnMemoizedMessageRepliesCountButton);

// node_modules/stream-chat-react/dist/components/Message/MessageStatus.js
var import_react71 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Tooltip/Tooltip.js
var import_react69 = __toESM(require_react());

// node_modules/react-popper/lib/esm/Popper.js
var React67 = __toESM(require_react());

// node_modules/react-popper/lib/esm/Manager.js
var React64 = __toESM(require_react());
var ManagerReferenceNodeContext = React64.createContext();
var ManagerReferenceNodeSetterContext = React64.createContext();

// node_modules/react-popper/lib/esm/utils.js
var React65 = __toESM(require_react());
var fromEntries = function fromEntries2(entries) {
  return entries.reduce(function(acc, _ref) {
    var key = _ref[0], value = _ref[1];
    acc[key] = value;
    return acc;
  }, {});
};
var useIsomorphicLayoutEffect = typeof window !== "undefined" && window.document && window.document.createElement ? React65.useLayoutEffect : React65.useEffect;

// node_modules/react-popper/lib/esm/usePopper.js
var React66 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element3) {
  return element3 ? (element3.nodeName || "").toLowerCase() : null;
}

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node2) {
  if (node2 == null) {
    return window;
  }
  if (node2.toString() !== "[object Window]") {
    var ownerDocument = node2.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node2;
}

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node2) {
  var OwnElement = getWindow(node2).Element;
  return node2 instanceof OwnElement || node2 instanceof Element;
}
function isHTMLElement(node2) {
  var OwnElement = getWindow(node2).HTMLElement;
  return node2 instanceof OwnElement || node2 instanceof HTMLElement;
}
function isShadowRoot(node2) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node2).ShadowRoot;
  return node2 instanceof OwnElement || node2 instanceof ShadowRoot;
}

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element3 = state.elements[name];
    if (!isHTMLElement(element3) || !getNodeName(element3)) {
      return;
    }
    Object.assign(element3.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element3.removeAttribute(name2);
      } else {
        element3.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element3 = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element3) || !getNodeName(element3)) {
        return;
      }
      Object.assign(element3.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element3.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}

// node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element3, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element3.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element3)) {
    scaleX = element3.offsetWidth > 0 ? round(clientRect.width) / element3.offsetWidth || 1 : 1;
    scaleY = element3.offsetHeight > 0 ? round(clientRect.height) / element3.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element3) ? getWindow(element3) : window, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element3) {
  var clientRect = getBoundingClientRect(element3);
  var width = element3.offsetWidth;
  var height = element3.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element3.offsetLeft,
    y: element3.offsetTop,
    width,
    height
  };
}

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element3) {
  return getWindow(element3).getComputedStyle(element3);
}

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element3) {
  return ["table", "td", "th"].indexOf(getNodeName(element3)) >= 0;
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element3) {
  return ((isElement(element3) ? element3.ownerDocument : (
    // $FlowFixMe[prop-missing]
    element3.document
  )) || window.document).documentElement;
}

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element3) {
  if (getNodeName(element3) === "html") {
    return element3;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element3.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element3.parentNode || // DOM Element detected
    (isShadowRoot(element3) ? element3.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(element3)
  );
}

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element3) {
  if (!isHTMLElement(element3) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle2(element3).position === "fixed") {
    return null;
  }
  return element3.offsetParent;
}
function getContainingBlock(element3) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE2 = /Trident/i.test(getUAString());
  if (isIE2 && isHTMLElement(element3)) {
    var elementCss = getComputedStyle2(element3);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element3);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle2(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element3) {
  var window2 = getWindow(element3);
  var offsetParent = getTrueOffsetParent(element3);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element3) || window2;
}

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}

// node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
function withinMaxClamp(min2, value, max2) {
  var v = within(min2, value, max2);
  return v > max2 ? max2 : v;
}

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys2) {
  return keys2.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
};
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options2 = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options2.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options2 = _ref2.options;
  var _options$element = options2.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    return;
  }
  state.elements.arrow = arrowElement;
}
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref, win) {
  var x = _ref.x, y = _ref.y;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position4 = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position4 === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        offsetParent[heightProp]
      );
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        offsetParent[widthProp]
      );
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position: position4
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }, getWindow(popper2)) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options2 = _ref5.options;
  var _options$gpuAccelerat = options2.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options2.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options2.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options2 = _ref.options;
  var _options$scroll = options2.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options2.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function fn() {
  },
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node2) {
  var win = getWindow(node2);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element3) {
  return getBoundingClientRect(getDocumentElement(element3)).left + getWindowScroll(element3).scrollLeft;
}

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element3, strategy) {
  var win = getWindow(element3);
  var html4 = getDocumentElement(element3);
  var visualViewport = win.visualViewport;
  var width = html4.clientWidth;
  var height = html4.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element3),
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element3) {
  var _element$ownerDocumen;
  var html4 = getDocumentElement(element3);
  var winScroll = getWindowScroll(element3);
  var body = (_element$ownerDocumen = element3.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html4.scrollWidth, html4.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html4.scrollHeight, html4.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element3);
  var y = -winScroll.scrollTop;
  if (getComputedStyle2(body || html4).direction === "rtl") {
    x += max(html4.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element3) {
  var _getComputedStyle = getComputedStyle2(element3), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node2) {
  if (["html", "body", "#document"].indexOf(getNodeName(node2)) >= 0) {
    return node2.ownerDocument.body;
  }
  if (isHTMLElement(node2) && isScrollParent(node2)) {
    return node2;
  }
  return getScrollParent(getParentNode(node2));
}

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element3, list3) {
  var _element$ownerDocumen;
  if (list3 === void 0) {
    list3 = [];
  }
  var scrollParent = getScrollParent(element3);
  var isBody = scrollParent === ((_element$ownerDocumen = element3.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list3.concat(target);
  return isBody ? updatedList : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    updatedList.concat(listScrollParents(getParentNode(target)))
  );
}

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element3, strategy) {
  var rect = getBoundingClientRect(element3, false, strategy === "fixed");
  rect.top = rect.top + element3.clientTop;
  rect.left = rect.left + element3.clientLeft;
  rect.bottom = rect.top + element3.clientHeight;
  rect.right = rect.left + element3.clientWidth;
  rect.width = element3.clientWidth;
  rect.height = element3.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element3, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element3, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element3)));
}
function getClippingParents(element3) {
  var clippingParents2 = listScrollParents(getParentNode(element3));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element3).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element3) ? getOffsetParent(element3) : element3;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element3, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element3) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element3, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element3, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element3 = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element3.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element3.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element3.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element3.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element3[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element3[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _options = options2, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element3 = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element3) ? element3 : element3.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _options = options2, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options2 = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options2.fallbackPlacements, padding = options2.padding, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, _options$flipVariatio = options2.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options2.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i = 0; i < placements2.length; i++) {
    var placement = placements2[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks2 = [];
    if (checkMainAxis) {
      checks2.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks2.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks2.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks2);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks3 = checksMap.get(placement2);
        if (checks3) {
          return checks3.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options2 = _ref2.options, name = _ref2.name;
  var _options$offset = options2.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options2 = _ref.options, name = _ref.name;
  var _options$mainAxis = options2.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options2.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options2.boundary, rootBoundary = options2.rootBoundary, altBoundary = options2.altBoundary, padding = options2.padding, _options$tether = options2.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options2.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element3) {
  return {
    scrollLeft: element3.scrollLeft,
    scrollTop: element3.scrollTop
  };
}

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node2) {
  if (node2 === getWindow(node2) || !isHTMLElement(node2)) {
    return getWindowScroll(node2);
  } else {
    return getHTMLElementScroll(node2);
  }
}

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element3) {
  var rect = element3.getBoundingClientRect();
  var scaleX = round(rect.width) / element3.offsetWidth || 1;
  var scaleY = round(rect.height) / element3.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
    isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order2(modifiers) {
  var map2 = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map2.set(modifier.name, modifier);
  });
  function sort2(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map2.get(dep);
        if (depModifier) {
          sort2(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort2(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order2(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element3) {
    return !(element3 && typeof element3.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers3 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper4(reference2, popper2, options2) {
    if (options2 === void 0) {
      options2 = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options3 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options3);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers3, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        runModifierEffects();
        return instance.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        for (var index5 = 0; index5 < state.orderedModifiers.length; index5++) {
          if (state.reset === true) {
            state.reset = false;
            index5 = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index5], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      return instance;
    }
    instance.setOptions(options2).then(function(state2) {
      if (!isDestroyed && options2.onFirstUpdate) {
        options2.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref) {
        var name = _ref.name, _ref$options = _ref.options, options3 = _ref$options === void 0 ? {} : _ref$options, effect4 = _ref.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options3
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var createPopper = popperGenerator();

// node_modules/@popperjs/core/lib/popper-lite.js
var defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default];
var createPopper2 = popperGenerator({
  defaultModifiers
});

// node_modules/@popperjs/core/lib/popper.js
var defaultModifiers2 = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
var createPopper3 = popperGenerator({
  defaultModifiers: defaultModifiers2
});

// node_modules/react-popper/lib/esm/usePopper.js
var import_react_fast_compare2 = __toESM(require_react_fast_compare());
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper2(referenceElement, popperElement, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var prevOptions = React66.useRef(null);
  var optionsWithDefaults = {
    onFirstUpdate: options2.onFirstUpdate,
    placement: options2.placement || "bottom",
    strategy: options2.strategy || "absolute",
    modifiers: options2.modifiers || EMPTY_MODIFIERS
  };
  var _React$useState = React66.useState({
    styles: {
      popper: {
        position: optionsWithDefaults.strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), state = _React$useState[0], setState = _React$useState[1];
  var updateStateModifier = React66.useMemo(function() {
    return {
      name: "updateState",
      enabled: true,
      phase: "write",
      fn: function fn2(_ref) {
        var state2 = _ref.state;
        var elements = Object.keys(state2.elements);
        ReactDOM.flushSync(function() {
          setState({
            styles: fromEntries(elements.map(function(element3) {
              return [element3, state2.styles[element3] || {}];
            })),
            attributes: fromEntries(elements.map(function(element3) {
              return [element3, state2.attributes[element3]];
            }))
          });
        });
      },
      requires: ["computeStyles"]
    };
  }, []);
  var popperOptions = React66.useMemo(function() {
    var newOptions = {
      onFirstUpdate: optionsWithDefaults.onFirstUpdate,
      placement: optionsWithDefaults.placement,
      strategy: optionsWithDefaults.strategy,
      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
        name: "applyStyles",
        enabled: false
      }])
    };
    if ((0, import_react_fast_compare2.default)(prevOptions.current, newOptions)) {
      return prevOptions.current || newOptions;
    } else {
      prevOptions.current = newOptions;
      return newOptions;
    }
  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
  var popperInstanceRef = React66.useRef();
  useIsomorphicLayoutEffect(function() {
    if (popperInstanceRef.current) {
      popperInstanceRef.current.setOptions(popperOptions);
    }
  }, [popperOptions]);
  useIsomorphicLayoutEffect(function() {
    if (referenceElement == null || popperElement == null) {
      return;
    }
    var createPopper4 = options2.createPopper || createPopper3;
    var popperInstance = createPopper4(referenceElement, popperElement, popperOptions);
    popperInstanceRef.current = popperInstance;
    return function() {
      popperInstance.destroy();
      popperInstanceRef.current = null;
    };
  }, [referenceElement, popperElement, options2.createPopper]);
  return {
    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
    styles: state.styles,
    attributes: state.attributes,
    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
  };
};

// node_modules/react-popper/lib/esm/Reference.js
var React68 = __toESM(require_react());
var import_warning = __toESM(require_warning());

// node_modules/stream-chat-react/dist/components/Tooltip/Tooltip.js
var Tooltip = function(_a) {
  var children = _a.children, rest = __rest(_a, ["children"]);
  return import_react69.default.createElement("div", __assign({ className: "str-chat__tooltip" }, rest), children);
};
var PopperTooltip = function(_a) {
  var children = _a.children, _b = _a.offset, offset2 = _b === void 0 ? [0, 10] : _b, referenceElement = _a.referenceElement, _c = _a.placement, placement = _c === void 0 ? "top" : _c, _d = _a.visible, visible = _d === void 0 ? false : _d;
  var _e = (0, import_react69.useState)(null), popperElement = _e[0], setPopperElement = _e[1];
  var _f = usePopper(referenceElement, popperElement, {
    modifiers: [
      {
        name: "offset",
        options: {
          offset: offset2
        }
      }
    ],
    placement
  }), attributes = _f.attributes, styles = _f.styles;
  if (!visible)
    return null;
  return import_react69.default.createElement("div", __assign({ className: "str-chat__tooltip", ref: setPopperElement, style: styles.popper }, attributes.popper), children);
};

// node_modules/stream-chat-react/dist/components/Tooltip/hooks/useEnterLeaveHandlers.js
var import_react70 = __toESM(require_react());
var useEnterLeaveHandlers = function(_a) {
  var _b = _a === void 0 ? {} : _a, onMouseEnter = _b.onMouseEnter, onMouseLeave = _b.onMouseLeave;
  var _c = (0, import_react70.useState)(false), tooltipVisible = _c[0], setTooltipVisible = _c[1];
  var handleEnter = (0, import_react70.useCallback)(function(e) {
    setTooltipVisible(true);
    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(e);
  }, [onMouseEnter]);
  var handleLeave = (0, import_react70.useCallback)(function(e) {
    setTooltipVisible(false);
    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(e);
  }, [onMouseLeave]);
  return { handleEnter, handleLeave, tooltipVisible };
};

// node_modules/stream-chat-react/dist/components/Message/MessageStatus.js
var UnMemoizedMessageStatus = function(props) {
  var _a;
  var propAvatar = props.Avatar, _b = props.messageType, messageType = _b === void 0 ? "simple" : _b, _c = props.tooltipUserNameMapper, tooltipUserNameMapper = _c === void 0 ? mapToUserNameOrId : _c;
  var _d = useEnterLeaveHandlers(), handleEnter = _d.handleEnter, handleLeave = _d.handleLeave, tooltipVisible = _d.tooltipVisible;
  var client = useChatContext("MessageStatus").client;
  var contextAvatar = useComponentContext("MessageStatus").Avatar;
  var _e = useMessageContext("MessageStatus"), isMyMessage = _e.isMyMessage, lastReceivedId = _e.lastReceivedId, message = _e.message, readBy = _e.readBy, threadList = _e.threadList;
  var t = useTranslationContext("MessageStatus").t;
  var themeVersion = useChatContext("MessageStatus").themeVersion;
  var _f = (0, import_react71.useState)(null), referenceElement = _f[0], setReferenceElement = _f[1];
  var Avatar2 = propAvatar || contextAvatar || Avatar;
  if (!isMyMessage() || message.type === "error")
    return null;
  var justReadByMe = (readBy === null || readBy === void 0 ? void 0 : readBy.length) === 1 && readBy[0].id === ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);
  var rootClassName = "str-chat__message-".concat(messageType, "-status str-chat__message-status");
  var sending = message.status === "sending";
  var delivered = message.status === "received" && message.id === lastReceivedId && !threadList;
  var deliveredAndRead = !!((readBy === null || readBy === void 0 ? void 0 : readBy.length) && !threadList && !justReadByMe);
  var lastReadUser = (deliveredAndRead ? readBy.filter(function(item) {
    var _a2;
    return item.id !== ((_a2 = client.user) === null || _a2 === void 0 ? void 0 : _a2.id);
  }) : [])[0];
  return import_react71.default.createElement(
    "span",
    { className: rootClassName, "data-testid": clsx_default({
      "message-status-read-by": deliveredAndRead,
      "message-status-received": delivered && !deliveredAndRead,
      "message-status-sending": sending
    }), onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement },
    sending && import_react71.default.createElement(
      import_react71.default.Fragment,
      null,
      themeVersion === "1" && import_react71.default.createElement(Tooltip, null, t("Sending...")),
      themeVersion === "2" && import_react71.default.createElement(PopperTooltip, { offset: [0, 5], referenceElement, visible: tooltipVisible }, t("Sending...")),
      import_react71.default.createElement(LoadingIndicator2, null)
    ),
    delivered && !deliveredAndRead && import_react71.default.createElement(
      import_react71.default.Fragment,
      null,
      themeVersion === "1" && import_react71.default.createElement(Tooltip, null, t("Delivered")),
      themeVersion === "2" && import_react71.default.createElement(PopperTooltip, { offset: [0, 5], referenceElement, visible: tooltipVisible }, t("Delivered")),
      themeVersion === "2" ? import_react71.default.createElement(MessageDeliveredIcon, null) : import_react71.default.createElement(DeliveredCheckIcon, null)
    ),
    deliveredAndRead && import_react71.default.createElement(
      import_react71.default.Fragment,
      null,
      themeVersion === "1" && import_react71.default.createElement(Tooltip, null, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper)),
      themeVersion === "2" && import_react71.default.createElement(PopperTooltip, { offset: [0, 5], referenceElement, visible: tooltipVisible }, getReadByTooltipText(readBy, t, client, tooltipUserNameMapper)),
      import_react71.default.createElement(Avatar2, { image: lastReadUser.image, name: lastReadUser.name || lastReadUser.id, size: 15, user: lastReadUser }),
      readBy.length > 2 && import_react71.default.createElement("span", { className: "str-chat__message-".concat(messageType, "-status-number"), "data-testid": "message-status-read-by-many" }, readBy.length - 1)
    )
  );
};
var MessageStatus = import_react71.default.memo(UnMemoizedMessageStatus);

// node_modules/stream-chat-react/dist/components/Message/MessageText.js
var import_react73 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Message/QuotedMessage.js
var import_react72 = __toESM(require_react());
var QuotedMessage = function() {
  var _a, _b, _c;
  var _d = useComponentContext("QuotedMessage"), Attachment2 = _d.Attachment, ContextAvatar = _d.Avatar;
  var _e = useMessageContext("QuotedMessage"), isMyMessage = _e.isMyMessage, message = _e.message;
  var _f = useTranslationContext("QuotedMessage"), t = _f.t, userLanguage = _f.userLanguage;
  var jumpToMessage = useChannelActionContext("QuotedMessage").jumpToMessage;
  var Avatar2 = ContextAvatar || Avatar;
  var quoted_message = message.quoted_message;
  if (!quoted_message)
    return null;
  var quotedMessageDeleted = quoted_message.deleted_at || quoted_message.type === "deleted";
  var quotedMessageText = quotedMessageDeleted ? t("This message was deleted...") : ((_a = quoted_message.i18n) === null || _a === void 0 ? void 0 : _a["".concat(userLanguage, "_text")]) || quoted_message.text;
  var quotedMessageAttachment = ((_b = quoted_message.attachments) === null || _b === void 0 ? void 0 : _b.length) && !quotedMessageDeleted ? quoted_message.attachments[0] : null;
  if (!quotedMessageText && !quotedMessageAttachment)
    return null;
  return import_react72.default.createElement(
    import_react72.default.Fragment,
    null,
    import_react72.default.createElement(
      "div",
      { className: clsx_default("str-chat__quoted-message-preview quoted-message", { mine: isMyMessage() }), "data-testid": "quoted-message", onClickCapture: function(e) {
        e.stopPropagation();
        e.preventDefault();
        jumpToMessage(quoted_message.id);
      } },
      quoted_message.user && import_react72.default.createElement(Avatar2, { image: quoted_message.user.image, name: quoted_message.user.name || quoted_message.user.id, size: 20, user: quoted_message.user }),
      import_react72.default.createElement(
        "div",
        { className: "quoted-message-inner str-chat__quoted-message-bubble", "data-testid": "quoted-message-contents" },
        quotedMessageAttachment && import_react72.default.createElement(Attachment2, { attachments: [quotedMessageAttachment] }),
        import_react72.default.createElement("div", { "data-testid": "quoted-message-text" }, quotedMessageText)
      )
    ),
    ((_c = message.attachments) === null || _c === void 0 ? void 0 : _c.length) ? import_react72.default.createElement(Attachment2, { attachments: message.attachments }) : null
  );
};

// node_modules/stream-chat-react/dist/components/Message/MessageText.js
var UnMemoizedMessageTextComponent = function(props) {
  var _a, _b;
  var customInnerClass = props.customInnerClass, _c = props.customWrapperClass, customWrapperClass = _c === void 0 ? "" : _c, propMessage = props.message, propsRenderText = props.renderText, _d = props.theme, theme = _d === void 0 ? "simple" : _d;
  var _e = useComponentContext("MessageText").QuotedMessage, QuotedMessage2 = _e === void 0 ? QuotedMessage : _e;
  var _f = useMessageContext("MessageText"), contextMessage = _f.message, onMentionsClickMessage = _f.onMentionsClickMessage, onMentionsHoverMessage = _f.onMentionsHoverMessage, contextRenderText = _f.renderText, unsafeHTML = _f.unsafeHTML;
  var renderText2 = (_a = propsRenderText !== null && propsRenderText !== void 0 ? propsRenderText : contextRenderText) !== null && _a !== void 0 ? _a : renderText;
  var _g = useTranslationContext("MessageText"), t = _g.t, userLanguage = _g.userLanguage;
  var message = propMessage || contextMessage;
  var hasAttachment = messageHasAttachments(message);
  var messageTextToRender = ((_b = message.i18n) === null || _b === void 0 ? void 0 : _b["".concat(userLanguage, "_text")]) || message.text;
  var messageText = (0, import_react73.useMemo)(function() {
    return renderText2(messageTextToRender, message.mentioned_users);
  }, [
    message.mentioned_users,
    messageTextToRender
  ]);
  var wrapperClass = customWrapperClass || "str-chat__message-text";
  var innerClass = customInnerClass || "str-chat__message-text-inner str-chat__message-".concat(theme, "-text-inner");
  if (!messageTextToRender && !message.quoted_message)
    return null;
  return import_react73.default.createElement(
    "div",
    { className: wrapperClass, tabIndex: 0 },
    import_react73.default.createElement(
      "div",
      { className: "\n          ".concat(innerClass, "\n          ").concat(hasAttachment ? " str-chat__message-".concat(theme, "-text-inner--has-attachment") : "", "\n          ").concat(isOnlyEmojis(message.text) && !message.quoted_message ? " str-chat__message-".concat(theme, "-text-inner--is-emoji") : "", "\n        ").trim(), "data-testid": "message-text-inner-wrapper", onClick: onMentionsClickMessage, onMouseOver: onMentionsHoverMessage },
      message.quoted_message && import_react73.default.createElement(QuotedMessage2, null),
      message.type === "error" && import_react73.default.createElement("div", { className: "str-chat__".concat(theme, "-message--error-message str-chat__message--error-message") }, t("Error · Unsent")),
      message.status === "failed" && import_react73.default.createElement("div", { className: "str-chat__".concat(theme, "-message--error-message str-chat__message--error-message") }, message.errorStatusCode !== 403 ? t("Message Failed · Click to try again") : t("Message Failed · Unauthorized")),
      unsafeHTML && message.html ? import_react73.default.createElement("div", { dangerouslySetInnerHTML: { __html: message.html } }) : import_react73.default.createElement("div", null, messageText)
    )
  );
};
var MessageText = import_react73.default.memo(UnMemoizedMessageTextComponent);

// node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js
var import_react74 = __toESM(require_react());

// node_modules/stream-chat-react/dist/i18n/utils.js
var notValidDateWarning = "MessageTimestamp was called without a message, or message has invalid created_at date.";
var noParsingFunctionWarning = "MessageTimestamp was called but there is no datetime parsing function available";
function getDateString(_a) {
  var calendar = _a.calendar, format = _a.format, formatDate = _a.formatDate, messageCreatedAt = _a.messageCreatedAt, tDateTimeParser = _a.tDateTimeParser;
  if (!messageCreatedAt || typeof messageCreatedAt === "string" && !Date.parse(messageCreatedAt)) {
    console.warn(notValidDateWarning);
    return null;
  }
  if (typeof formatDate === "function") {
    return formatDate(new Date(messageCreatedAt));
  }
  if (!tDateTimeParser) {
    console.warn(noParsingFunctionWarning);
    return null;
  }
  var parsedTime = tDateTimeParser(messageCreatedAt);
  if (isDayOrMoment(parsedTime)) {
    return calendar && parsedTime.calendar ? parsedTime.calendar() : parsedTime.format(format);
  }
  if (isDate(parsedTime)) {
    return parsedTime.toDateString();
  }
  if (isNumberOrString(parsedTime)) {
    return parsedTime;
  }
  return null;
}

// node_modules/stream-chat-react/dist/components/Message/MessageTimestamp.js
var defaultTimestampFormat = "h:mmA";
var UnMemoizedMessageTimestamp = function(props) {
  var _a = props.calendar, calendar = _a === void 0 ? false : _a, _b = props.customClass, customClass = _b === void 0 ? "" : _b, _c = props.format, format = _c === void 0 ? defaultTimestampFormat : _c, propMessage = props.message;
  var _d = useMessageContext("MessageTimestamp"), formatDate = _d.formatDate, contextMessage = _d.message;
  var tDateTimeParser = useTranslationContext("MessageTimestamp").tDateTimeParser;
  var message = propMessage || contextMessage;
  var messageCreatedAt = message.created_at && isDate(message.created_at) ? message.created_at.toISOString() : message.created_at;
  var when = (0, import_react74.useMemo)(function() {
    return getDateString({ calendar, format, formatDate, messageCreatedAt, tDateTimeParser });
  }, [formatDate, calendar, tDateTimeParser, format, messageCreatedAt]);
  if (!when)
    return null;
  return import_react74.default.createElement("time", { className: customClass, dateTime: messageCreatedAt, title: messageCreatedAt }, when);
};
var MessageTimestamp = import_react74.default.memo(UnMemoizedMessageTimestamp);

// node_modules/stream-chat-react/dist/constants/messageTypes.js
var CUSTOM_MESSAGE_TYPE = {
  date: "message.date",
  intro: "channel.intro"
};

// node_modules/stream-chat-react/dist/components/MessageInput/AttachmentPreviewList.js
var import_react77 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useFileState.js
var import_react75 = __toESM(require_react());
var useFileState = function(file) {
  return (0, import_react75.useMemo)(function() {
    return {
      failed: file.state === "failed",
      finished: file.state === "finished",
      uploading: file.state === "uploading"
    };
  }, [file.state]);
};

// node_modules/stream-chat-react/dist/components/MessageInput/icons.js
var import_react76 = __toESM(require_react());
var EmojiIconLarge = function() {
  var t = useTranslationContext("EmojiIconLarge").t;
  return import_react76.default.createElement(
    "svg",
    { height: "28", width: "28", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Open emoji picker")),
    import_react76.default.createElement(
      "g",
      { clipRule: "evenodd", fillRule: "evenodd" },
      import_react76.default.createElement("path", { d: "M14 4.4C8.6 4.4 4.4 8.6 4.4 14c0 5.4 4.2 9.6 9.6 9.6c5.4 0 9.6-4.2 9.6-9.6c0-5.4-4.2-9.6-9.6-9.6zM2 14c0-6.6 5.4-12 12-12s12 5.4 12 12s-5.4 12-12 12s-12-5.4-12-12zM12.8 11c0 1-.8 1.8-1.8 1.8s-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8s1.8.8 1.8 1.8zM18.8 11c0 1-.8 1.8-1.8 1.8s-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8s1.8.8 1.8 1.8zM8.6 15.4c.6-.4 1.2-.2 1.6.2c.6.8 1.6 1.8 3 2c1.2.4 2.8.2 4.8-2c.4-.4 1.2-.6 1.6 0c.4.4.6 1.2 0 1.6c-2.2 2.6-4.8 3.4-7 3c-2-.4-3.6-1.8-4.4-3c-.4-.6-.2-1.2.4-1.8z" })
    )
  );
};
var EmojiIconSmall = function() {
  var t = useTranslationContext("EmojiIconSmall").t;
  return import_react76.default.createElement(
    "svg",
    { height: "14", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Open emoji picker")),
    import_react76.default.createElement(
      "g",
      { clipRule: "evenodd", fillRule: "evenodd" },
      import_react76.default.createElement("path", { d: "M6.7 1.42C3.73 1.42 1.42 3.73 1.42 6.7c0 2.97 2.31 5.28 5.28 5.28c2.97 0 5.28-2.31 5.28-5.28c0-2.97-2.31-5.28-5.28-5.28zM.1 6.7c0-3.63 2.97-6.6 6.6-6.6s6.6 2.97 6.6 6.6s-2.97 6.6-6.6 6.6s-6.6-2.97-6.6-6.6zM6.04 5.05c0 .55-.44.99-.99.99s-.99-.44-.99-.99s.44-.99.99-.99s.99.44.99.99zM9.34 5.05c0 .55-.44.99-.99.99s-.99-.44-.99-.99s.44-.99.99-.99s.99.44.99.99zM3.73 7.47c.33-.22.66-.11.88.11c.33.44.88.99 1.65 1.1c.66.22 1.54.11 2.64-1.1c.22-.22.66-.33.88 0c.22.22.33.66 0 .88c-1.21 1.43-2.64 1.87-3.85 1.65c-1.1-.22-1.98-.99-2.42-1.65c-.22-.33-.11-.66.22-.99z" })
    )
  );
};
var EmojiPickerIcon = function() {
  return import_react76.default.createElement(
    "svg",
    { preserveAspectRatio: "xMinYMin", viewBox: "0 0 28 28", width: "100%", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement(
      "g",
      { clipRule: "evenodd", fillRule: "evenodd" },
      import_react76.default.createElement("path", { d: "M14 4.4C8.6 4.4 4.4 8.6 4.4 14c0 5.4 4.2 9.6 9.6 9.6c5.4 0 9.6-4.2 9.6-9.6c0-5.4-4.2-9.6-9.6-9.6zM2 14c0-6.6 5.4-12 12-12s12 5.4 12 12s-5.4 12-12 12s-12-5.4-12-12zM12.8 11c0 1-.8 1.8-1.8 1.8s-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8s1.8.8 1.8 1.8zM18.8 11c0 1-.8 1.8-1.8 1.8s-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8s1.8.8 1.8 1.8zM8.6 15.4c.6-.4 1.2-.2 1.6.2c.6.8 1.6 1.8 3 2c1.2.4 2.8.2 4.8-2c.4-.4 1.2-.6 1.6 0c.4.4.6 1.2 0 1.6c-2.2 2.6-4.8 3.4-7 3c-2-.4-3.6-1.8-4.4-3c-.4-.6-.2-1.2.4-1.8z" })
    )
  );
};
var FileUploadIcon = function() {
  var t = useTranslationContext("FileUploadIcon").t;
  return import_react76.default.createElement(
    "svg",
    { height: "14", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Attach files")),
    import_react76.default.createElement("path", { d: "M7 .5c3.59 0 6.5 2.91 6.5 6.5s-2.91 6.5-6.5 6.5S.5 10.59.5 7 3.41.5 7 .5zm0 12c3.031 0 5.5-2.469 5.5-5.5S10.031 1.5 7 1.5A5.506 5.506 0 0 0 1.5 7c0 3.034 2.469 5.5 5.5 5.5zM7.506 3v3.494H11v1.05H7.506V11h-1.05V7.544H3v-1.05h3.456V3h1.05z", fillRule: "nonzero" })
  );
};
var FileUploadIconFlat = function() {
  var t = useTranslationContext("FileUploadIconFlat").t;
  return import_react76.default.createElement(
    "svg",
    { height: "14", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Attach files")),
    import_react76.default.createElement("path", { d: "M1.667.333h10.666c.737 0 1.334.597 1.334 1.334v10.666c0 .737-.597 1.334-1.334 1.334H1.667a1.333 1.333 0 0 1-1.334-1.334V1.667C.333.93.93.333 1.667.333zm2 1.334a1.667 1.667 0 1 0 0 3.333 1.667 1.667 0 0 0 0-3.333zm-2 9.333v1.333h10.666v-4l-2-2-4 4-2-2L1.667 11z", fillRule: "nonzero" })
  );
};
var LoadingIndicatorIcon = function(_a) {
  var _b = _a.size, size = _b === void 0 ? 20 : _b;
  var id = (0, import_react76.useMemo)(function() {
    return nanoid();
  }, []);
  return import_react76.default.createElement(
    "div",
    { className: "str-chat__loading-indicator" },
    import_react76.default.createElement(
      "svg",
      { "data-testid": "loading-indicator", height: size, viewBox: "0 0 30 30", width: size, xmlns: "http://www.w3.org/2000/svg" },
      import_react76.default.createElement(
        "defs",
        null,
        import_react76.default.createElement(
          "linearGradient",
          { id: "".concat(id, "-linear-gradient"), x1: "50%", x2: "50%", y1: "0%", y2: "100%" },
          import_react76.default.createElement("stop", { offset: "0%", stopColor: "#FFF", stopOpacity: "0" }),
          import_react76.default.createElement("stop", { "data-testid": "stop-color", offset: "100%", stopOpacity: "1" })
        )
      ),
      import_react76.default.createElement("path", { d: "M2.518 23.321l1.664-1.11A12.988 12.988 0 0 0 15 28c7.18 0 13-5.82 13-13S22.18 2 15 2V0c8.284 0 15 6.716 15 15 0 8.284-6.716 15-15 15-5.206 0-9.792-2.652-12.482-6.679z", fill: "url(#".concat(id, "-linear-gradient)"), fillRule: "evenodd" })
    )
  );
};
var UploadIcon = function() {
  return import_react76.default.createElement(
    "svg",
    { "data-testid": "attach", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement(
      "g",
      { clipPath: "url(#clip0_10878_5)" },
      import_react76.default.createElement("path", { d: "M12.9997 6.99993L10.9997 6.99993L10.9997 10.9999L6.99972 10.9999L6.99972 12.9999L10.9997 12.9999L10.9997 16.9999L12.9997 16.9999L12.9997 12.9999L16.9997 12.9999L16.9997 10.9999L12.9997 10.9999L12.9997 6.99993ZM11.9997 1.99992C6.47972 1.99992 1.99972 6.47993 1.99972 11.9999C1.99972 17.5199 6.47972 21.9999 11.9997 21.9999C17.5197 21.9999 21.9997 17.5199 21.9997 11.9999C21.9997 6.47993 17.5197 1.99992 11.9997 1.99992ZM11.9997 19.9999C7.58972 19.9999 3.99972 16.4099 3.99972 11.9999C3.99972 7.58993 7.58972 3.99993 11.9997 3.99993C16.4097 3.99993 19.9997 7.58993 19.9997 11.9999C19.9997 16.4099 16.4097 19.9999 11.9997 19.9999Z", fill: "black" })
    ),
    import_react76.default.createElement(
      "defs",
      null,
      import_react76.default.createElement(
        "clipPath",
        { id: "clip0_10878_5" },
        import_react76.default.createElement("rect", { fill: "white", height: "24", width: "24" })
      )
    )
  );
};
var CloseIcon2 = function() {
  return import_react76.default.createElement(
    "svg",
    { "data-testid": "close-no-outline", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("path", { d: "M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z", fill: "black" })
  );
};
var RetryIcon2 = function() {
  return import_react76.default.createElement(
    "svg",
    { "data-testid": "retry", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("path", { d: "M17.6449 6.35C16.1949 4.9 14.2049 4 11.9949 4C7.57488 4 4.00488 7.58 4.00488 12C4.00488 16.42 7.57488 20 11.9949 20C15.7249 20 18.8349 17.45 19.7249 14H17.6449C16.8249 16.33 14.6049 18 11.9949 18C8.68488 18 5.99488 15.31 5.99488 12C5.99488 8.69 8.68488 6 11.9949 6C13.6549 6 15.1349 6.69 16.2149 7.78L12.9949 11H19.9949V4L17.6449 6.35Z", fill: "black" })
  );
};
var DownloadIcon2 = function() {
  return import_react76.default.createElement(
    "svg",
    { "data-testid": "download", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("path", { d: "M19.35 10.04C18.67 6.59 15.64 4 12 4C9.11 4 6.6 5.64 5.35 8.04C2.34 8.36 0 10.91 0 14C0 17.31 2.69 20 6 20H19C21.76 20 24 17.76 24 15C24 12.36 21.95 10.22 19.35 10.04ZM19 18H6C3.79 18 2 16.21 2 14C2 11.95 3.53 10.24 5.56 10.03L6.63 9.92L7.13 8.97C8.08 7.14 9.94 6 12 6C14.62 6 16.88 7.86 17.39 10.43L17.69 11.93L19.22 12.04C20.78 12.14 22 13.45 22 15C22 16.65 20.65 18 19 18ZM13.45 10H10.55V13H8L12 17L16 13H13.45V10Z", fill: "black" })
  );
};
var LinkIcon = function() {
  return import_react76.default.createElement(
    "svg",
    { fill: "none", height: "11", viewBox: "0 0 20 11", width: "20", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("path", { clipRule: "evenodd", d: "M1.9 5.5C1.9 3.79 3.29 2.4 5 2.4H8.05C8.57467 2.4 9 1.97467 9 1.45C9 0.925329 8.57467 0.5 8.05 0.5H5C2.24 0.5 0 2.74 0 5.5C0 8.26 2.24 10.5 5 10.5H8.05C8.57467 10.5 9 10.0747 9 9.55C9 9.02533 8.57467 8.6 8.05 8.6H5C3.29 8.6 1.9 7.21 1.9 5.5ZM6 5.5C6 6.05228 6.44772 6.5 7 6.5H13C13.5523 6.5 14 6.05228 14 5.5C14 4.94772 13.5523 4.5 13 4.5H7C6.44772 4.5 6 4.94772 6 5.5ZM15 0.5H11.95C11.4253 0.5 11 0.925329 11 1.45C11 1.97467 11.4253 2.4 11.95 2.4H15C16.71 2.4 18.1 3.79 18.1 5.5C18.1 7.21 16.71 8.6 15 8.6H11.95C11.4253 8.6 11 9.02533 11 9.55C11 10.0747 11.4253 10.5 11.95 10.5H15C17.76 10.5 20 8.26 20 5.5C20 2.74 17.76 0.5 15 0.5Z", fill: "#005DFF", fillRule: "evenodd" })
  );
};
var SendIconV1 = function() {
  var t = useTranslationContext("SendButton").t;
  return import_react76.default.createElement(
    "svg",
    { height: "17", viewBox: "0 0 18 17", width: "18", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Send")),
    import_react76.default.createElement("path", { d: "M0 17.015l17.333-8.508L0 0v6.617l12.417 1.89L0 10.397z", fill: "#006cff", fillRule: "evenodd" })
  );
};
var SendIconV2 = function() {
  var t = useTranslationContext("SendButton").t;
  return import_react76.default.createElement(
    "svg",
    { "data-testid": "send", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react76.default.createElement("title", null, t("Send")),
    import_react76.default.createElement("path", { d: "M4.00952 22L24 12L4.00952 2L4 9.77778L18.2857 12L4 14.2222L4.00952 22Z", fill: "black" })
  );
};
var SendButton = function(_a) {
  var sendMessage = _a.sendMessage, rest = __rest(_a, ["sendMessage"]);
  var themeVersion = useChatContext("SendButton").themeVersion;
  return import_react76.default.createElement("button", __assign({ "aria-label": "Send", className: "str-chat__send-button", "data-testid": "send-button", onClick: sendMessage, type: "button" }, rest), themeVersion === "2" ? import_react76.default.createElement(SendIconV2, null) : import_react76.default.createElement(SendIconV1, null));
};

// node_modules/stream-chat-react/dist/components/MessageInput/AttachmentPreviewList.js
var AttachmentPreviewList = function() {
  var _a = useMessageInputContext("AttachmentPreviewList"), fileOrder = _a.fileOrder, imageOrder = _a.imageOrder;
  return import_react77.default.createElement(
    "div",
    { className: "str-chat__attachment-preview-list" },
    import_react77.default.createElement(
      "div",
      { className: "str-chat__attachment-list-scroll-container", "data-testid": "attachment-list-scroll-container" },
      imageOrder.map(function(id) {
        return import_react77.default.createElement(ImagePreviewItem, { id, key: id });
      }),
      fileOrder.map(function(id) {
        return import_react77.default.createElement(FilePreviewItem, { id, key: id });
      })
    )
  );
};
var ImagePreviewItem = function(_a) {
  var _b;
  var id = _a.id;
  var _c = useComponentContext("ImagePreviewItem").BaseImage, BaseImage3 = _c === void 0 ? BaseImage : _c;
  var _d = useMessageInputContext("ImagePreviewItem"), imageUploads = _d.imageUploads, removeImage = _d.removeImage, uploadImage = _d.uploadImage;
  var _e = (0, import_react77.useState)(false), previewError = _e[0], setPreviewError = _e[1];
  var handleRemove = (0, import_react77.useCallback)(function(e) {
    e.stopPropagation();
    removeImage(id);
  }, [removeImage, id]);
  var handleRetry = (0, import_react77.useCallback)(function() {
    return uploadImage(id);
  }, [uploadImage, id]);
  var handleLoadError = (0, import_react77.useCallback)(function() {
    return setPreviewError(true);
  }, []);
  var image2 = imageUploads[id];
  if (!image2 || image2.og_scrape_url)
    return null;
  return import_react77.default.createElement(
    "div",
    { className: clsx_default("str-chat__attachment-preview-image", {
      "str-chat__attachment-preview-image--error": previewError
    }), "data-testid": "attachment-preview-image" },
    import_react77.default.createElement(
      "button",
      { className: "str-chat__attachment-preview-delete", "data-testid": "image-preview-item-delete-button", disabled: image2.state === "uploading", onClick: handleRemove },
      import_react77.default.createElement(CloseIcon2, null)
    ),
    image2.state === "failed" && import_react77.default.createElement(
      "button",
      { className: "str-chat__attachment-preview-error str-chat__attachment-preview-error-image", "data-testid": "image-preview-item-retry-button", onClick: handleRetry },
      import_react77.default.createElement(RetryIcon2, null)
    ),
    image2.state === "uploading" && import_react77.default.createElement(
      "div",
      { className: "str-chat__attachment-preview-image-loading" },
      import_react77.default.createElement(LoadingIndicatorIcon, { size: 17 })
    ),
    (image2.previewUri || image2.url) && import_react77.default.createElement(BaseImage3, { alt: image2.file.name, className: "str-chat__attachment-preview-thumbnail", onError: handleLoadError, src: (_b = image2.previewUri) !== null && _b !== void 0 ? _b : image2.url, title: image2.file.name })
  );
};
var FilePreviewItem = function(_a) {
  var id = _a.id;
  var _b = useMessageInputContext("FilePreviewItem"), fileUploads = _b.fileUploads, removeFile = _b.removeFile, uploadFile = _b.uploadFile;
  var handleRemove = (0, import_react77.useCallback)(function(e) {
    e.stopPropagation();
    removeFile(id);
  }, [removeFile, id]);
  var handleRetry = (0, import_react77.useCallback)(function() {
    return uploadFile(id);
  }, [uploadFile, id]);
  var file = fileUploads[id];
  var state = useFileState(file);
  if (!file)
    return null;
  return import_react77.default.createElement(
    "div",
    { className: "str-chat__attachment-preview-file", "data-testid": "attachment-preview-file" },
    import_react77.default.createElement(
      "div",
      { className: "str-chat__attachment-preview-file-icon" },
      import_react77.default.createElement(FileIcon, { filename: file.file.name, mimeType: file.file.type, version: "2" })
    ),
    import_react77.default.createElement(
      "button",
      { className: "str-chat__attachment-preview-delete", "data-testid": "file-preview-item-delete-button", disabled: state.uploading, onClick: handleRemove },
      import_react77.default.createElement(CloseIcon2, null)
    ),
    state.failed && import_react77.default.createElement(
      "button",
      { className: "str-chat__attachment-preview-error str-chat__attachment-preview-error-file", "data-testid": "file-preview-item-retry-button", onClick: handleRetry },
      import_react77.default.createElement(RetryIcon2, null)
    ),
    import_react77.default.createElement(
      "div",
      { className: "str-chat__attachment-preview-file-end" },
      import_react77.default.createElement("div", { className: "str-chat__attachment-preview-file-name" }, file.file.name),
      state.finished && import_react77.default.createElement(
        "a",
        { className: "str-chat__attachment-preview-file-download", download: true, href: file.url, rel: "noreferrer", target: "_blank" },
        import_react77.default.createElement(DownloadIcon2, null)
      ),
      state.uploading && import_react77.default.createElement(LoadingIndicatorIcon, { size: 17 })
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/CooldownTimer.js
var import_react78 = __toESM(require_react());
var CooldownTimer = function(_a) {
  var cooldownInterval = _a.cooldownInterval, setCooldownRemaining = _a.setCooldownRemaining;
  var _b = (0, import_react78.useState)(cooldownInterval), seconds = _b[0], setSeconds = _b[1];
  (0, import_react78.useEffect)(function() {
    var countdownInterval = setInterval(function() {
      if (seconds > 0) {
        setSeconds(seconds - 1);
      } else {
        setCooldownRemaining(0);
      }
    }, 1e3);
    return function() {
      return clearInterval(countdownInterval);
    };
  });
  return import_react78.default.createElement("div", { className: "str-chat__message-input-cooldown", "data-testid": "cooldown-timer" }, seconds);
};

// node_modules/stream-chat-react/dist/components/MessageInput/DefaultTriggerProvider.js
var import_react81 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCommandTrigger.js
var useCommandTrigger = function() {
  var themeVersion = useChatContext("useCommandTrigger").themeVersion;
  var channelConfig = useChannelStateContext("useCommandTrigger").channelConfig;
  var t = useTranslationContext("useCommandTrigger").t;
  var commands = channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.commands;
  return {
    component: CommandItem,
    dataProvider: function(query, text5, onReady) {
      if (text5.indexOf("/") !== 0 || !commands) {
        return [];
      }
      var selectedCommands = commands.filter(function(command) {
        var _a;
        return ((_a = command.name) === null || _a === void 0 ? void 0 : _a.indexOf(query)) !== -1;
      });
      selectedCommands.sort(function(a, b) {
        var _a, _b;
        var nameA = (_a = a.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();
        var nameB = (_b = b.name) === null || _b === void 0 ? void 0 : _b.toLowerCase();
        if ((nameA === null || nameA === void 0 ? void 0 : nameA.indexOf(query)) === 0) {
          nameA = "0".concat(nameA);
        }
        if ((nameB === null || nameB === void 0 ? void 0 : nameB.indexOf(query)) === 0) {
          nameB = "0".concat(nameB);
        }
        if (nameA != null && nameB != null) {
          if (nameA < nameB) {
            return -1;
          }
          if (nameA > nameB) {
            return 1;
          }
        }
        return 0;
      });
      var result = selectedCommands.slice(0, themeVersion === "2" ? 5 : 10);
      if (onReady)
        onReady(result.filter(function(result2) {
          return result2.name !== void 0;
        }).map(function(commandData) {
          var translatedCommandData = {
            name: commandData.name
          };
          if (commandData.args)
            translatedCommandData.args = t("".concat(commandData.name, "-command-args"), {
              defaultValue: commandData.args
            });
          if (commandData.description)
            translatedCommandData.description = t("".concat(commandData.name, "-command-description"), {
              defaultValue: commandData.description
            });
          return translatedCommandData;
        }), query);
      return result;
    },
    output: function(entity) {
      return {
        caretPosition: "next",
        key: entity.name,
        text: "/".concat(entity.name)
      };
    }
  };
};

// node_modules/stream-chat-react/dist/components/EmoticonItem/EmoticonItem.js
var import_react79 = __toESM(require_react());
var UnMemoizedEmoticonItem = function(props) {
  var entity = props.entity;
  var hasEntity = Object.keys(entity).length;
  var itemParts = entity === null || entity === void 0 ? void 0 : entity.itemNameParts;
  var renderName = function() {
    if (!hasEntity)
      return null;
    return hasEntity && itemParts.parts.map(function(part, i) {
      return part.toLowerCase() === itemParts.match.toLowerCase() ? import_react79.default.createElement("span", { className: "str-chat__emoji-item--highlight", key: "part-".concat(i) }, part) : import_react79.default.createElement("span", { className: "str-chat__emoji-item--part", key: "part-".concat(i) }, part);
    });
  };
  return import_react79.default.createElement(
    "div",
    { className: "str-chat__emoji-item" },
    import_react79.default.createElement("span", { className: "str-chat__emoji-item--entity" }, entity.native),
    import_react79.default.createElement("span", { className: "str-chat__emoji-item--name" }, renderName())
  );
};
var EmoticonItem = import_react79.default.memo(UnMemoizedEmoticonItem);

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useEmojiTrigger.js
var useEmojiTrigger = function(emojiIndex) {
  var themeVersion = useChatContext("useEmojiTrigger").themeVersion;
  return {
    component: EmoticonItem,
    dataProvider: function(query, _, onReady) {
      if (query.length === 0 || query.charAt(0).match(/[^a-zA-Z0-9+-]/)) {
        return [];
      }
      var emojis = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(query)) || [];
      var result = emojis.filter(Boolean).slice(0, themeVersion === "2" ? 7 : 10);
      if (onReady)
        onReady(result, query);
      return result;
    },
    output: function(entity) {
      return {
        caretPosition: "next",
        key: entity.id,
        text: "".concat("native" in entity ? entity.native : "")
      };
    }
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useUserTrigger.js
var import_react80 = __toESM(require_react());
var import_lodash2 = __toESM(require_lodash3());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/utils.js
var accentsMap = {
  a: "á|à|ã|â|À|Á|Ã|Â",
  c: "ç|Ç",
  e: "é|è|ê|É|È|Ê",
  i: "í|ì|î|Í|Ì|Î",
  n: "ñ|Ñ",
  o: "ó|ò|ô|ő|õ|Ó|Ò|Ô|Õ",
  u: "ú|ù|û|ü|Ú|Ù|Û|Ü"
};
var removeDiacritics = function(text5) {
  if (!text5)
    return "";
  return Object.keys(accentsMap).reduce(function(acc, current) {
    return acc.replace(new RegExp(accentsMap[current], "g"), current);
  }, text5);
};
var calculateLevenshtein = function(query, name) {
  if (query.length === 0)
    return name.length;
  if (name.length === 0)
    return query.length;
  var matrix = [];
  var i;
  for (i = 0; i <= name.length; i++) {
    matrix[i] = [i];
  }
  var j;
  for (j = 0; j <= query.length; j++) {
    matrix[0][j] = j;
  }
  for (i = 1; i <= name.length; i++) {
    for (j = 1; j <= query.length; j++) {
      if (name.charAt(i - 1) === query.charAt(j - 1)) {
        matrix[i][j] = matrix[i - 1][j - 1];
      } else {
        matrix[i][j] = Math.min(
          matrix[i - 1][j - 1] + 1,
          // substitution
          Math.min(
            matrix[i][j - 1] + 1,
            // insertion
            matrix[i - 1][j] + 1
          )
        );
      }
    }
  }
  return matrix[name.length][query.length];
};
var searchLocalUsers = function(params) {
  var ownUserId = params.ownUserId, query = params.query, text5 = params.text, useMentionsTransliteration = params.useMentionsTransliteration, users = params.users;
  var matchingUsers = users.filter(function(user) {
    if (user.id === ownUserId)
      return false;
    if (!query)
      return true;
    var updatedId = removeDiacritics(user.id).toLowerCase();
    var updatedName = removeDiacritics(user.name).toLowerCase();
    var updatedQuery = removeDiacritics(query).toLowerCase();
    if (useMentionsTransliteration) {
      (function() {
        return __awaiter(void 0, void 0, void 0, function() {
          var transliterate;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, import("./index.modern-KDKB65M2.js")];
              case 1:
                transliterate = _a.sent().default;
                updatedName = transliterate(user.name || "").toLowerCase();
                updatedQuery = transliterate(query).toLowerCase();
                updatedId = transliterate(user.id).toLowerCase();
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      })();
    }
    var maxDistance = 3;
    var lastDigits = text5.slice(-(maxDistance + 1)).includes("@");
    if (updatedName) {
      var levenshtein_1 = calculateLevenshtein(updatedQuery, updatedName);
      if (updatedName.includes(updatedQuery) || levenshtein_1 <= maxDistance && lastDigits) {
        return true;
      }
    }
    var levenshtein = calculateLevenshtein(updatedQuery, updatedId);
    return updatedId.includes(updatedQuery) || levenshtein <= maxDistance && lastDigits;
  });
  return matchingUsers;
};
var checkUploadPermissions = function(params) {
  return __awaiter(void 0, void 0, void 0, function() {
    var addNotification, file, getAppSettings, t, uploadType, appSettings, _a, allowed_file_extensions, allowed_mime_types, blocked_file_extensions, blocked_mime_types, sendErrorNotification, allowed, blocked, allowed, blocked;
    var _b, _c;
    return __generator(this, function(_d) {
      switch (_d.label) {
        case 0:
          addNotification = params.addNotification, file = params.file, getAppSettings = params.getAppSettings, t = params.t, uploadType = params.uploadType;
          appSettings = null;
          return [4, getAppSettings()];
        case 1:
          appSettings = _d.sent();
          _a = (uploadType === "image" ? (_b = appSettings === null || appSettings === void 0 ? void 0 : appSettings.app) === null || _b === void 0 ? void 0 : _b.image_upload_config : (_c = appSettings === null || appSettings === void 0 ? void 0 : appSettings.app) === null || _c === void 0 ? void 0 : _c.file_upload_config) || {}, allowed_file_extensions = _a.allowed_file_extensions, allowed_mime_types = _a.allowed_mime_types, blocked_file_extensions = _a.blocked_file_extensions, blocked_mime_types = _a.blocked_mime_types;
          sendErrorNotification = function() {
            return addNotification(t('Upload type: "{{ type }}" is not allowed', { type: file.type || "unknown type" }), "error");
          };
          if (allowed_file_extensions === null || allowed_file_extensions === void 0 ? void 0 : allowed_file_extensions.length) {
            allowed = allowed_file_extensions.some(function(ext) {
              return file.name.toLowerCase().endsWith(ext.toLowerCase());
            });
            if (!allowed) {
              sendErrorNotification();
              return [2, false];
            }
          }
          if (blocked_file_extensions === null || blocked_file_extensions === void 0 ? void 0 : blocked_file_extensions.length) {
            blocked = blocked_file_extensions.some(function(ext) {
              return file.name.toLowerCase().endsWith(ext.toLowerCase());
            });
            if (blocked) {
              sendErrorNotification();
              return [2, false];
            }
          }
          if (allowed_mime_types === null || allowed_mime_types === void 0 ? void 0 : allowed_mime_types.length) {
            allowed = allowed_mime_types.some(function(type) {
              var _a2;
              return type.toLowerCase() === ((_a2 = file.type) === null || _a2 === void 0 ? void 0 : _a2.toLowerCase());
            });
            if (!allowed) {
              sendErrorNotification();
              return [2, false];
            }
          }
          if (blocked_mime_types === null || blocked_mime_types === void 0 ? void 0 : blocked_mime_types.length) {
            blocked = blocked_mime_types.some(function(type) {
              var _a2;
              return type.toLowerCase() === ((_a2 = file.type) === null || _a2 === void 0 ? void 0 : _a2.toLowerCase());
            });
            if (blocked) {
              sendErrorNotification();
              return [2, false];
            }
          }
          return [2, true];
      }
    });
  });
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useUserTrigger.js
var useUserTrigger = function(params) {
  var disableMentions = params.disableMentions, mentionAllAppUsers = params.mentionAllAppUsers, _a = params.mentionQueryParams, mentionQueryParams = _a === void 0 ? {} : _a, onSelectUser = params.onSelectUser, useMentionsTransliteration = params.useMentionsTransliteration;
  var _b = (0, import_react80.useState)(false), searching = _b[0], setSearching = _b[1];
  var _c = useChatContext("useUserTrigger"), client = _c.client, mutes = _c.mutes, themeVersion = _c.themeVersion;
  var channel = useChannelStateContext("useUserTrigger").channel;
  var members = channel.state.members;
  var watchers = channel.state.watchers;
  var getMembersAndWatchers = (0, import_react80.useCallback)(function() {
    var memberUsers = members ? Object.values(members).map(function(_a2) {
      var user = _a2.user;
      return user;
    }) : [];
    var watcherUsers = watchers ? Object.values(watchers) : [];
    var users = __spreadArray(__spreadArray([], memberUsers, true), watcherUsers, true);
    var uniqueUsers = {};
    users.forEach(function(user) {
      if (user && !uniqueUsers[user.id]) {
        uniqueUsers[user.id] = user;
      }
    });
    return Object.values(uniqueUsers);
  }, [members, watchers]);
  var queryMembersThrottled = (0, import_react80.useCallback)((0, import_lodash2.default)(function(query, onReady) {
    return __awaiter(void 0, void 0, void 0, function() {
      var response, users, error_1;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            _a2.trys.push([0, 2, , 3]);
            return [4, channel.queryMembers({
              name: { $autocomplete: query }
            })];
          case 1:
            response = _a2.sent();
            users = response.members.map(function(member) {
              return member.user;
            });
            if (onReady && users.length) {
              onReady(users);
            } else {
              onReady([]);
            }
            return [3, 3];
          case 2:
            error_1 = _a2.sent();
            console.log({ error: error_1 });
            return [3, 3];
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, 200), [channel]);
  var queryUsers = function(query, onReady) {
    return __awaiter(void 0, void 0, void 0, function() {
      var users, error_2;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!query || searching)
              return [
                2
                /*return*/
              ];
            setSearching(true);
            _a2.label = 1;
          case 1:
            _a2.trys.push([1, 3, , 4]);
            return [4, client.queryUsers(__assign({ $or: [{ id: { $autocomplete: query } }, { name: { $autocomplete: query } }], id: { $ne: client.userID } }, typeof mentionQueryParams.filters === "function" ? mentionQueryParams.filters(query) : mentionQueryParams.filters), Array.isArray(mentionQueryParams.sort) ? __spreadArray([{ id: 1 }], mentionQueryParams.sort, true) : __assign({ id: 1 }, mentionQueryParams.sort), __assign({ limit: 10 }, mentionQueryParams.options))];
          case 2:
            users = _a2.sent().users;
            if (onReady && users.length) {
              onReady(users);
            } else {
              onReady([]);
            }
            return [3, 4];
          case 3:
            error_2 = _a2.sent();
            console.log({ error: error_2 });
            return [3, 4];
          case 4:
            setSearching(false);
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var queryUsersThrottled = (0, import_lodash2.default)(queryUsers, 200);
  return {
    callback: function(item) {
      return onSelectUser(item);
    },
    component: UserItem,
    dataProvider: function(query, text5, onReady) {
      var _a2, _b2;
      if (disableMentions)
        return;
      var filterMutes = function(data2) {
        if (text5.includes("/unmute") && !mutes.length) {
          return [];
        }
        if (!mutes.length)
          return data2;
        if (text5.includes("/unmute")) {
          return data2.filter(function(suggestion) {
            return mutes.some(function(mute) {
              return mute.target.id === suggestion.id;
            });
          });
        }
        return data2.filter(function(suggestion) {
          return mutes.every(function(mute) {
            return mute.target.id !== suggestion.id;
          });
        });
      };
      if (mentionAllAppUsers) {
        return queryUsersThrottled(query, function(data2) {
          if (onReady)
            onReady(filterMutes(data2), query);
        });
      }
      if (!query || Object.values(members || {}).length < 100) {
        var users = getMembersAndWatchers();
        var params_1 = {
          ownUserId: client.userID,
          query,
          text: text5,
          useMentionsTransliteration,
          users
        };
        var matchingUsers = searchLocalUsers(params_1);
        var usersToShow = (_b2 = (_a2 = mentionQueryParams.options) === null || _a2 === void 0 ? void 0 : _a2.limit) !== null && _b2 !== void 0 ? _b2 : themeVersion === "2" ? 7 : 10;
        var data = matchingUsers.slice(0, usersToShow);
        if (onReady)
          onReady(filterMutes(data), query);
        return data;
      }
      return queryMembersThrottled(query, function(data2) {
        if (onReady)
          onReady(filterMutes(data2), query);
      });
    },
    output: function(entity) {
      return {
        caretPosition: "next",
        key: entity.id,
        text: "@".concat(entity.name || entity.id)
      };
    }
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/DefaultTriggerProvider.js
var DefaultTriggerProvider = function(_a) {
  var children = _a.children;
  var currentValue = useMessageInputContext("DefaultTriggerProvider");
  var defaultAutocompleteTriggers = {
    "/": useCommandTrigger(),
    ":": useEmojiTrigger(currentValue.emojiIndex),
    "@": useUserTrigger({
      disableMentions: currentValue.disableMentions,
      mentionAllAppUsers: currentValue.mentionAllAppUsers,
      mentionQueryParams: currentValue.mentionQueryParams,
      onSelectUser: currentValue.onSelectUser,
      useMentionsTransliteration: currentValue.useMentionsTransliteration
    })
  };
  var newValue = __assign(__assign({}, currentValue), { autocompleteTriggers: defaultAutocompleteTriggers });
  return import_react81.default.createElement(MessageInputContextProvider, { value: newValue }, children);
};

// node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js
var import_react88 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/EmojiPicker.js
var import_react82 = __toESM(require_react());
var filterEmoji = function(emoji2) {
  return !(emoji2.name === "White Smiling Face" || emoji2.name === "White Frowning Face");
};
var EmojiPicker = function(_a) {
  var small = _a.small;
  var _b = useEmojiContext("EmojiPicker"), emojiConfig = _b.emojiConfig, EmojiPickerComponent = _b.EmojiPicker;
  var t = useTranslationContext("EmojiPicker").t;
  var _c = useMessageInputContext("EmojiPicker"), emojiPickerIsOpen = _c.emojiPickerIsOpen, emojiPickerRef = _c.emojiPickerRef, onSelectEmoji = _c.onSelectEmoji;
  var emojiData = (emojiConfig || {}).emojiData;
  if (!emojiPickerIsOpen || !emojiData)
    return null;
  return import_react82.default.createElement(
    "div",
    { className: clsx_default("str-chat__emoji-picker-container", {
      "str-chat__input--emojipicker": !small,
      "str-chat__small-message-input-emojipicker": small
    }), ref: emojiPickerRef },
    import_react82.default.createElement(
      import_react82.Suspense,
      { fallback: null },
      import_react82.default.createElement(EmojiPickerComponent, { color: "#006CFF", data: emojiData, emoji: "point_up", emojisToShowFilter: filterEmoji, native: true, onSelect: onSelectEmoji, set: "facebook", showPreview: false, showSkinTones: false, title: t("Pick your emoji"), useButton: true })
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/UploadsPreview.js
var import_react83 = __toESM(require_react());
var UploadsPreview = function() {
  var themeVersion = useChatContext("UploadsPreview").themeVersion;
  var _a = useChannelStateContext("UploadsPreview"), _b = _a.maxNumberOfFiles, maxNumberOfFiles = _b === void 0 ? 0 : _b, multipleUploads = _a.multipleUploads;
  var _c = useMessageInputContext("UploadsPreview"), fileOrder = _c.fileOrder, fileUploads = _c.fileUploads, imageOrder = _c.imageOrder, imageUploads = _c.imageUploads, _d = _c.numberOfUploads, numberOfUploads = _d === void 0 ? 0 : _d, removeFile = _c.removeFile, removeImage = _c.removeImage, uploadFile = _c.uploadFile, uploadImage = _c.uploadImage, uploadNewFiles = _c.uploadNewFiles;
  var imagesToPreview = imageOrder.map(function(id) {
    return imageUploads[id];
  }).filter(function(image2) {
    return !image2.og_scrape_url;
  });
  var filesToPreview = fileOrder.map(function(id) {
    return fileUploads[id];
  });
  return import_react83.default.createElement(
    import_react83.default.Fragment,
    null,
    imageOrder.length > 0 && import_react83.default.createElement(ImagePreviewer, { disabled: !multipleUploads || numberOfUploads >= maxNumberOfFiles, handleFiles: uploadNewFiles, handleRemove: removeImage, handleRetry: uploadImage, imageUploads: imagesToPreview, multiple: multipleUploads }),
    fileOrder.length > 0 && import_react83.default.createElement(FilePreviewer, { fileIconProps: {
      className: "str-chat__file-icon",
      version: themeVersion
    }, handleFiles: uploadNewFiles, handleRemove: removeFile, handleRetry: uploadFile, uploads: filesToPreview })
  );
};

// node_modules/stream-chat-react/dist/components/ChatAutoComplete/ChatAutoComplete.js
var import_react84 = __toESM(require_react());
var UnMemoizedChatAutoComplete = function(props) {
  var _a = useComponentContext("ChatAutoComplete"), SuggestionItem = _a.AutocompleteSuggestionItem, SuggestionList = _a.AutocompleteSuggestionList;
  var t = useTranslationContext("ChatAutoComplete").t;
  var messageInput = useMessageInputContext("ChatAutoComplete");
  var cooldownRemaining = messageInput.cooldownRemaining, disabled = messageInput.disabled, emojiIndex = messageInput.emojiIndex, innerRef = messageInput.textareaRef;
  var placeholder = props.placeholder || t("Type your message");
  var emojiReplace = props.wordReplace ? function(word) {
    var _a2;
    return (_a2 = props.wordReplace) === null || _a2 === void 0 ? void 0 : _a2.call(props, word, emojiIndex);
  } : function(word) {
    var found = (emojiIndex === null || emojiIndex === void 0 ? void 0 : emojiIndex.search(word)) || [];
    var emoji2 = found.filter(Boolean).slice(0, 10).find(function(_a2) {
      var emoticons = _a2.emoticons;
      return !!(emoticons === null || emoticons === void 0 ? void 0 : emoticons.includes(word));
    });
    if (!emoji2 || !("native" in emoji2))
      return null;
    return emoji2.native;
  };
  var updateInnerRef = (0, import_react84.useCallback)(function(ref) {
    if (innerRef) {
      innerRef.current = ref;
    }
  }, [innerRef]);
  return import_react84.default.createElement(ReactTextareaAutocomplete, { additionalTextareaProps: messageInput.additionalTextareaProps, "aria-label": cooldownRemaining ? t("Slow Mode ON") : placeholder, className: "str-chat__textarea__textarea str-chat__message-textarea", closeCommandsList: messageInput.closeCommandsList, closeMentionsList: messageInput.closeMentionsList, containerClassName: "str-chat__textarea str-chat__message-textarea-react-host", disabled: disabled || !!cooldownRemaining, disableMentions: messageInput.disableMentions, dropdownClassName: "str-chat__emojisearch", grow: messageInput.grow, handleSubmit: props.handleSubmit || messageInput.handleSubmit, innerRef: updateInnerRef, itemClassName: "str-chat__emojisearch__item", listClassName: "str-chat__emojisearch__list", loadingComponent: LoadingIndicator2, maxRows: messageInput.maxRows, minChar: 0, onBlur: props.onBlur, onChange: props.onChange || messageInput.handleChange, onFocus: props.onFocus, onPaste: props.onPaste || messageInput.onPaste, placeholder: cooldownRemaining ? t("Slow Mode ON") : placeholder, replaceWord: emojiReplace, rows: props.rows || 1, shouldSubmit: messageInput.shouldSubmit, showCommandsList: messageInput.showCommandsList, showMentionsList: messageInput.showMentionsList, SuggestionItem, SuggestionList, trigger: messageInput.autocompleteTriggers || {}, value: props.value || messageInput.text });
};
var ChatAutoComplete = import_react84.default.memo(UnMemoizedChatAutoComplete);

// node_modules/stream-chat-react/dist/components/MessageInput/MessageInputFlat.js
var import_react87 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/QuotedMessagePreview.js
var import_react85 = __toESM(require_react());
var QuotedMessagePreviewHeader = function() {
  var setQuotedMessage = useChannelActionContext("QuotedMessagePreview").setQuotedMessage;
  var t = useTranslationContext("QuotedMessagePreview").t;
  return import_react85.default.createElement(
    "div",
    { className: "quoted-message-preview-header str-chat__quoted-message-preview-header" },
    import_react85.default.createElement("div", { className: "str-chat__quoted-message-reply-to-message" }, t("Reply to Message")),
    import_react85.default.createElement(
      "button",
      { "aria-label": "Cancel Reply", className: "str-chat__square-button str-chat__quoted-message-remove", onClick: function() {
        return setQuotedMessage(void 0);
      } },
      import_react85.default.createElement(CloseIcon2, null)
    )
  );
};
var QuotedMessagePreview = function(_a) {
  var _b;
  var quotedMessage = _a.quotedMessage;
  var _c = useComponentContext("QuotedMessagePreview"), Attachment2 = _c.Attachment, _d = _c.Avatar, Avatar2 = _d === void 0 ? Avatar : _d;
  var userLanguage = useTranslationContext("QuotedMessagePreview").userLanguage;
  var themeVersion = useChatContext("QuotedMessagePreview").themeVersion;
  var quotedMessageText = ((_b = quotedMessage.i18n) === null || _b === void 0 ? void 0 : _b["".concat(userLanguage, "_text")]) || quotedMessage.text;
  var quotedMessageAttachment = (0, import_react85.useMemo)(function() {
    var _a2;
    var attachment = ((_a2 = quotedMessage.attachments) !== null && _a2 !== void 0 ? _a2 : [])[0];
    return attachment ? [attachment] : [];
  }, [quotedMessage.attachments]);
  if (!quotedMessageText && !quotedMessageAttachment)
    return null;
  return import_react85.default.createElement(
    "div",
    { className: "quoted-message-preview", "data-testid": "quoted-message-preview" },
    themeVersion === "1" && import_react85.default.createElement(QuotedMessagePreviewHeader, null),
    import_react85.default.createElement(
      "div",
      { className: "quoted-message-preview-content str-chat__quoted-message-preview" },
      quotedMessage.user && import_react85.default.createElement(Avatar2, { image: quotedMessage.user.image, name: quotedMessage.user.name || quotedMessage.user.id, size: 20, user: quotedMessage.user }),
      import_react85.default.createElement(
        "div",
        { className: "quoted-message-preview-content-inner str-chat__quoted-message-bubble" },
        !!quotedMessageAttachment.length && import_react85.default.createElement(Attachment2, { attachments: quotedMessageAttachment }),
        import_react85.default.createElement(
          "div",
          { className: "str-chat__quoted-message-text", "data-testid": "quoted-message-text" },
          themeVersion === "2" && import_react85.default.createElement("p", null, quotedMessageText),
          themeVersion === "1" && import_react85.default.createElement(import_react85.default.Fragment, null, quotedMessageText)
        )
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/LinkPreviewList.js
var import_react86 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/types.js
var LinkPreviewState;
(function(LinkPreviewState2) {
  LinkPreviewState2["DISMISSED"] = "dismissed";
  LinkPreviewState2["FAILED"] = "failed";
  LinkPreviewState2["LOADED"] = "loaded";
  LinkPreviewState2["LOADING"] = "loading";
  LinkPreviewState2["QUEUED"] = "queued";
})(LinkPreviewState || (LinkPreviewState = {}));
var SetLinkPreviewMode;
(function(SetLinkPreviewMode2) {
  SetLinkPreviewMode2[SetLinkPreviewMode2["UPSERT"] = 0] = "UPSERT";
  SetLinkPreviewMode2[SetLinkPreviewMode2["SET"] = 1] = "SET";
  SetLinkPreviewMode2[SetLinkPreviewMode2["REMOVE"] = 2] = "REMOVE";
})(SetLinkPreviewMode || (SetLinkPreviewMode = {}));

// node_modules/stream-chat-react/dist/components/MessageInput/LinkPreviewList.js
var LinkPreviewList = function(_a) {
  var linkPreviews = _a.linkPreviews;
  var quotedMessage = useChannelStateContext().quotedMessage;
  var showLinkPreviews = linkPreviews.length > 0 && !quotedMessage;
  if (!showLinkPreviews)
    return null;
  return import_react86.default.createElement("div", { className: "str-chat__link-preview-list" }, Array.from(linkPreviews.values()).map(function(linkPreview) {
    return linkPreview.state === LinkPreviewState.LOADED ? import_react86.default.createElement(LinkPreviewCard, { key: linkPreview.og_scrape_url, linkPreview }) : null;
  }));
};
var LinkPreviewCard = function(_a) {
  var linkPreview = _a.linkPreview;
  var dismissLinkPreview = useMessageInputContext().dismissLinkPreview;
  var _b = useEnterLeaveHandlers(), handleEnter = _b.handleEnter, handleLeave = _b.handleLeave, tooltipVisible = _b.tooltipVisible;
  var _c = (0, import_react86.useState)(null), referenceElement = _c[0], setReferenceElement = _c[1];
  return import_react86.default.createElement(
    "div",
    { className: clsx_default("str-chat__link-preview-card", {
      "str-chat__link-preview-card--loading": linkPreview.state === LinkPreviewState.LOADING
    }), "data-testid": "link-preview-card" },
    import_react86.default.createElement(PopperTooltip, { offset: [0, 5], referenceElement, visible: tooltipVisible }, linkPreview.og_scrape_url),
    import_react86.default.createElement(
      "div",
      { className: "str-chat__link-preview-card__icon-container", onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement },
      import_react86.default.createElement(LinkIcon, null)
    ),
    import_react86.default.createElement(
      "div",
      { className: "str-chat__link-preview-card__content" },
      import_react86.default.createElement("div", { className: "str-chat__link-preview-card__content-title" }, linkPreview.title),
      import_react86.default.createElement("div", { className: "str-chat__link-preview-card__content-description" }, linkPreview.text)
    ),
    import_react86.default.createElement(
      "button",
      { className: "str-chat__link-preview-card__dismiss-button", "data-testid": "link-preview-card-dismiss-btn", onClick: function() {
        return dismissLinkPreview(linkPreview);
      } },
      import_react86.default.createElement(CloseIcon2, null)
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/MessageInputFlat.js
var MessageInputFlat = function() {
  var quotedMessage = useChannelStateContext("MessageInputFlat").quotedMessage;
  var setQuotedMessage = useChannelActionContext("MessageInputFlat").setQuotedMessage;
  var _a = useChatContext("MessageInputFlat"), channel = _a.channel, themeVersion = _a.themeVersion;
  (0, import_react87.useEffect)(function() {
    var handleQuotedMessageUpdate = function(e) {
      var _a2;
      if (((_a2 = e.message) === null || _a2 === void 0 ? void 0 : _a2.id) !== (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.id))
        return;
      if (e.type === "message.deleted") {
        setQuotedMessage(void 0);
        return;
      }
      setQuotedMessage(e.message);
    };
    channel === null || channel === void 0 ? void 0 : channel.on("message.deleted", handleQuotedMessageUpdate);
    channel === null || channel === void 0 ? void 0 : channel.on("message.updated", handleQuotedMessageUpdate);
    return function() {
      channel === null || channel === void 0 ? void 0 : channel.off("message.deleted", handleQuotedMessageUpdate);
      channel === null || channel === void 0 ? void 0 : channel.off("message.updated", handleQuotedMessageUpdate);
    };
  }, [channel, quotedMessage]);
  return themeVersion === "2" ? import_react87.default.createElement(MessageInputV2, null) : import_react87.default.createElement(MessageInputV1, null);
};
var MessageInputV1 = function() {
  var _a = useChannelStateContext("MessageInputFlat"), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;
  var t = useTranslationContext("MessageInputFlat").t;
  var _b = useMessageInputContext("MessageInputFlat"), closeEmojiPicker = _b.closeEmojiPicker, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, hideSendButton = _b.hideSendButton, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, numberOfUploads = _b.numberOfUploads, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;
  var _c = useComponentContext("MessageInputFlat"), _d = _c.CooldownTimer, CooldownTimer2 = _d === void 0 ? CooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? EmojiIconLarge : _e, _f = _c.FileUploadIcon, FileUploadIcon2 = _f === void 0 ? FileUploadIconFlat : _f, _g = _c.QuotedMessagePreview, QuotedMessagePreview2 = _g === void 0 ? QuotedMessagePreview : _g, _h = _c.SendButton, SendButton2 = _h === void 0 ? SendButton : _h, _j = _c.AttachmentPreviewList, AttachmentPreviewList2 = _j === void 0 ? UploadsPreview : _j;
  return import_react87.default.createElement(
    "div",
    { className: clsx_default("str-chat__input-flat", "str-chat__message-input", {
      "str-chat__input-flat--send-button-active": !!SendButton2,
      "str-chat__input-flat-has-attachments": numberOfUploads,
      "str-chat__input-flat-quoted": quotedMessage && !quotedMessage.parent_id
    }) },
    import_react87.default.createElement(
      ImageDropzone,
      { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },
      quotedMessage && !quotedMessage.parent_id && import_react87.default.createElement(QuotedMessagePreview2, { quotedMessage }),
      import_react87.default.createElement(
        "div",
        { className: "str-chat__input-flat-wrapper" },
        isUploadEnabled && import_react87.default.createElement(AttachmentPreviewList2, null),
        import_react87.default.createElement(
          "div",
          { className: "str-chat__input-flat--textarea-wrapper" },
          import_react87.default.createElement(
            "div",
            { className: "str-chat__emojiselect-wrapper" },
            import_react87.default.createElement(Tooltip, null, emojiPickerIsOpen ? t("Close emoji picker") : t("Open emoji picker")),
            import_react87.default.createElement("button", { "aria-label": "Emoji picker", className: "str-chat__input-flat-emojiselect", onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker }, cooldownRemaining ? import_react87.default.createElement(
              "div",
              { className: "str-chat__input-flat-cooldown" },
              import_react87.default.createElement(CooldownTimer2, { cooldownInterval: cooldownRemaining, setCooldownRemaining })
            ) : import_react87.default.createElement(EmojiIcon, null))
          ),
          import_react87.default.createElement(EmojiPicker, null),
          import_react87.default.createElement(ChatAutoComplete, null),
          isUploadEnabled && !cooldownRemaining && import_react87.default.createElement(
            "div",
            { className: "str-chat__fileupload-wrapper", "data-testid": "fileinput" },
            import_react87.default.createElement(Tooltip, null, maxFilesLeft ? t("Attach files") : t("You've reached the maximum number of files")),
            import_react87.default.createElement(
              FileUploadButton,
              { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },
              import_react87.default.createElement(
                "span",
                { className: "str-chat__input-flat-fileupload" },
                import_react87.default.createElement(FileUploadIcon2, null)
              )
            )
          )
        ),
        !(cooldownRemaining || hideSendButton) && import_react87.default.createElement(SendButton2, { sendMessage: handleSubmit })
      )
    )
  );
};
var MessageInputV2 = function() {
  var _a = useChannelStateContext("MessageInputV2"), _b = _a.acceptedFiles, acceptedFiles = _b === void 0 ? [] : _b, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;
  var t = useTranslationContext("MessageInputV2").t;
  var _c = useMessageInputContext("MessageInputV2"), closeEmojiPicker = _c.closeEmojiPicker, cooldownRemaining = _c.cooldownRemaining, emojiPickerIsOpen = _c.emojiPickerIsOpen, findAndEnqueueURLsToEnrich = _c.findAndEnqueueURLsToEnrich, handleSubmit = _c.handleSubmit, hideSendButton = _c.hideSendButton, isUploadEnabled = _c.isUploadEnabled, linkPreviews = _c.linkPreviews, maxFilesLeft = _c.maxFilesLeft, message = _c.message, numberOfUploads = _c.numberOfUploads, openEmojiPicker = _c.openEmojiPicker, setCooldownRemaining = _c.setCooldownRemaining, text5 = _c.text, uploadNewFiles = _c.uploadNewFiles;
  var _d = useComponentContext("MessageInputV2"), _e = _d.AttachmentPreviewList, AttachmentPreviewList2 = _e === void 0 ? AttachmentPreviewList : _e, _f = _d.CooldownTimer, CooldownTimer2 = _f === void 0 ? CooldownTimer : _f, _g = _d.EmojiIcon, EmojiIcon = _g === void 0 ? EmojiPickerIcon : _g, _h = _d.FileUploadIcon, FileUploadIcon2 = _h === void 0 ? UploadIcon : _h, _j = _d.LinkPreviewList, LinkPreviewList2 = _j === void 0 ? LinkPreviewList : _j, _k = _d.QuotedMessagePreview, QuotedMessagePreview2 = _k === void 0 ? QuotedMessagePreview : _k, _l = _d.SendButton, SendButton2 = _l === void 0 ? SendButton : _l;
  var _m = (0, import_react87.useState)(null), referenceElement = _m[0], setReferenceElement = _m[1];
  var _o = (0, import_react87.useState)(null), popperElement = _o[0], setPopperElement = _o[1];
  var _p = usePopper(referenceElement, popperElement, {
    placement: "top-end"
  }), attributes = _p.attributes, styles = _p.styles;
  var id = (0, import_react87.useMemo)(function() {
    return nanoid();
  }, []);
  var accept = (0, import_react87.useMemo)(function() {
    return acceptedFiles.reduce(function(mediaTypeMap, mediaType) {
      var _a2;
      (_a2 = mediaTypeMap[mediaType]) !== null && _a2 !== void 0 ? _a2 : mediaTypeMap[mediaType] = [];
      return mediaTypeMap;
    }, {});
  }, [acceptedFiles]);
  var _q = useDropzone({
    accept,
    disabled: !isUploadEnabled || maxFilesLeft === 0,
    multiple: multipleUploads,
    noClick: true,
    onDrop: uploadNewFiles
  }), getRootProps = _q.getRootProps, isDragActive = _q.isDragActive, isDragReject = _q.isDragReject;
  var displayQuotedMessage = !message && quotedMessage && !quotedMessage.parent_id;
  return import_react87.default.createElement(
    import_react87.default.Fragment,
    null,
    import_react87.default.createElement(
      "div",
      __assign({}, getRootProps({ className: "str-chat__message-input" })),
      findAndEnqueueURLsToEnrich && import_react87.default.createElement(LinkPreviewList2, { linkPreviews: Array.from(linkPreviews.values()) }),
      isDragActive && import_react87.default.createElement(
        "div",
        { className: clsx_default("str-chat__dropzone-container", {
          "str-chat__dropzone-container--not-accepted": isDragReject
        }) },
        !isDragReject && import_react87.default.createElement("p", null, t("Drag your files here")),
        isDragReject && import_react87.default.createElement("p", null, t("Some of the files will not be accepted"))
      ),
      displayQuotedMessage && import_react87.default.createElement(QuotedMessagePreviewHeader, null),
      import_react87.default.createElement(
        "div",
        { className: "str-chat__message-input-inner" },
        import_react87.default.createElement(
          "div",
          { className: "str-chat__file-input-container", "data-testid": "file-upload-button" },
          import_react87.default.createElement(UploadButton, { accept: acceptedFiles === null || acceptedFiles === void 0 ? void 0 : acceptedFiles.join(","), "aria-label": "File upload", className: "str-chat__file-input", "data-testid": "file-input", disabled: !isUploadEnabled || maxFilesLeft === 0, id, multiple: multipleUploads, onFileChange: uploadNewFiles }),
          import_react87.default.createElement(
            "label",
            { className: "str-chat__file-input-label", htmlFor: id },
            import_react87.default.createElement(FileUploadIcon2, null)
          )
        ),
        import_react87.default.createElement(
          "div",
          { className: "str-chat__message-textarea-container" },
          displayQuotedMessage && import_react87.default.createElement(QuotedMessagePreview2, { quotedMessage }),
          isUploadEnabled && !!numberOfUploads && import_react87.default.createElement(AttachmentPreviewList2, null),
          import_react87.default.createElement(
            "div",
            { className: "str-chat__message-textarea-with-emoji-picker" },
            import_react87.default.createElement(ChatAutoComplete, null),
            import_react87.default.createElement(
              "div",
              { className: "str-chat__message-textarea-emoji-picker" },
              emojiPickerIsOpen && import_react87.default.createElement(
                "div",
                __assign({ className: "str-chat__message-textarea-emoji-picker-container", style: styles.popper }, attributes.popper, { ref: setPopperElement }),
                import_react87.default.createElement(EmojiPicker, null)
              ),
              import_react87.default.createElement(
                "button",
                { "aria-label": "Emoji picker", className: "str-chat__emoji-picker-button", onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker, ref: setReferenceElement, type: "button" },
                import_react87.default.createElement(EmojiIcon, null)
              )
            )
          )
        ),
        !hideSendButton && import_react87.default.createElement(import_react87.default.Fragment, null, cooldownRemaining ? import_react87.default.createElement(CooldownTimer2, { cooldownInterval: cooldownRemaining, setCooldownRemaining }) : import_react87.default.createElement(SendButton2, { disabled: !numberOfUploads && !text5.length, sendMessage: handleSubmit }))
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js
var EditMessageForm = function() {
  var _a = useChannelStateContext("EditMessageForm"), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads;
  var t = useTranslationContext("EditMessageForm").t;
  var _b = useMessageInputContext("EditMessageForm"), clearEditingState = _b.clearEditingState, closeEmojiPicker = _b.closeEmojiPicker, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, uploadNewFiles = _b.uploadNewFiles;
  var _c = useComponentContext("EditMessageForm"), _d = _c.EmojiIcon, EmojiIcon = _d === void 0 ? EmojiIconSmall : _d, _e = _c.FileUploadIcon, FileUploadIcon2 = _e === void 0 ? FileUploadIcon : _e;
  var themeVersion = useChatContext("EditMessageForm").themeVersion;
  (0, import_react88.useEffect)(function() {
    var onKeyDown = function(event) {
      if (event.key === "Escape")
        clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();
    };
    document.addEventListener("keydown", onKeyDown);
    return function() {
      return document.removeEventListener("keydown", onKeyDown);
    };
  }, [clearEditingState]);
  if (themeVersion === "2")
    return import_react88.default.createElement(
      "form",
      { className: "str-chat__edit-message-form", onSubmit: handleSubmit },
      import_react88.default.createElement(MessageInputFlat, null),
      import_react88.default.createElement(
        "div",
        { className: "str-chat__edit-message-form-options" },
        import_react88.default.createElement("button", { className: "str-chat__edit-message-cancel", "data-testid": "cancel-button", onClick: clearEditingState }, t("Cancel")),
        import_react88.default.createElement("button", { className: "str-chat__edit-message-send", "data-testid": "send-button", type: "submit" }, t("Send"))
      )
    );
  return import_react88.default.createElement(
    "div",
    { className: "str-chat__edit-message-form" },
    import_react88.default.createElement(
      ImageDropzone,
      { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },
      import_react88.default.createElement(
        "form",
        { onSubmit: handleSubmit },
        isUploadEnabled && import_react88.default.createElement(UploadsPreview, null),
        import_react88.default.createElement(EmojiPicker, { small: true }),
        import_react88.default.createElement(ChatAutoComplete, null),
        import_react88.default.createElement(
          "div",
          { className: "str-chat__message-team-form-footer" },
          import_react88.default.createElement(
            "div",
            { className: "str-chat__edit-message-form-options" },
            import_react88.default.createElement(
              "button",
              { "aria-label": "Open Emoji Picker", className: "str-chat__input-emojiselect", onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker },
              import_react88.default.createElement(EmojiIcon, null)
            ),
            isUploadEnabled && import_react88.default.createElement(
              "div",
              { className: "str-chat__fileupload-wrapper", "data-testid": "fileinput" },
              import_react88.default.createElement(Tooltip, null, maxFilesLeft ? t("Attach files") : t("You've reached the maximum number of files")),
              import_react88.default.createElement(
                FileUploadButton,
                { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },
                import_react88.default.createElement(
                  "span",
                  { className: "str-chat__input-fileupload" },
                  import_react88.default.createElement(FileUploadIcon2, null)
                )
              )
            )
          ),
          import_react88.default.createElement(
            "div",
            null,
            import_react88.default.createElement("button", { className: "str-chat__edit-message-cancel", onClick: clearEditingState }, t("Cancel")),
            import_react88.default.createElement("button", { className: "str-chat__edit-message-send", type: "submit" }, t("Send"))
          )
        )
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCooldownTimer.js
var import_react89 = __toESM(require_react());
var useCooldownTimer = function() {
  var _a;
  var _b = useChatContext("useCooldownTimer"), client = _b.client, latestMessageDatesByChannels = _b.latestMessageDatesByChannels;
  var _c = useChannelStateContext("useCooldownTimer"), channel = _c.channel, _d = _c.messages, messages = _d === void 0 ? [] : _d;
  var _e = (0, import_react89.useState)(), cooldownRemaining = _e[0], setCooldownRemaining = _e[1];
  var _f = channel.data || {}, _g = _f.cooldown, cooldownInterval = _g === void 0 ? 0 : _g, own_capabilities = _f.own_capabilities;
  var skipCooldown = own_capabilities === null || own_capabilities === void 0 ? void 0 : own_capabilities.includes("skip-slow-mode");
  var ownLatestMessageDate = (0, import_react89.useMemo)(function() {
    var _a2, _b2;
    return (_a2 = latestMessageDatesByChannels[channel.cid]) !== null && _a2 !== void 0 ? _a2 : (_b2 = __spreadArray([], messages, true).sort(function(a, b) {
      var _a3, _b3;
      return ((_a3 = b.created_at) === null || _a3 === void 0 ? void 0 : _a3.getTime()) - ((_b3 = a.created_at) === null || _b3 === void 0 ? void 0 : _b3.getTime());
    }).find(function(v) {
      var _a3, _b3;
      return ((_a3 = v.user) === null || _a3 === void 0 ? void 0 : _a3.id) === ((_b3 = client.user) === null || _b3 === void 0 ? void 0 : _b3.id);
    })) === null || _b2 === void 0 ? void 0 : _b2.created_at;
  }, [messages, (_a = client.user) === null || _a === void 0 ? void 0 : _a.id, latestMessageDatesByChannels, channel.cid]);
  (0, import_react89.useEffect)(function() {
    var timeSinceOwnLastMessage = ownLatestMessageDate ? (
      // prevent negative values
      Math.max(0, ((/* @__PURE__ */ new Date()).getTime() - ownLatestMessageDate.getTime()) / 1e3)
    ) : void 0;
    setCooldownRemaining(!skipCooldown && typeof timeSinceOwnLastMessage !== "undefined" && cooldownInterval > timeSinceOwnLastMessage ? Math.round(cooldownInterval - timeSinceOwnLastMessage) : 0);
  }, [cooldownInterval, ownLatestMessageDate, skipCooldown]);
  return {
    cooldownInterval,
    cooldownRemaining,
    setCooldownRemaining
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputState.js
var import_react99 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useEmojiIndex.js
var import_react90 = __toESM(require_react());
var useEmojiIndex = function() {
  var _a = useEmojiContext("useEmojiIndex"), emojiConfig = _a.emojiConfig, EmojiIndex = _a.EmojiIndex;
  var emojiData = (emojiConfig || {}).emojiData;
  var emojiIndex = (0, import_react90.useMemo)(function() {
    if (EmojiIndex) {
      return new EmojiIndex(emojiData);
    }
  }, [emojiData, EmojiIndex]);
  return emojiIndex;
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useAttachments.js
var import_react93 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useImageUploads.js
var import_react91 = __toESM(require_react());
var useImageUploads = function(props, state, dispatch) {
  var doImageUploadRequest = props.doImageUploadRequest, errorHandler = props.errorHandler;
  var imageUploads = state.imageUploads;
  var channel = useChannelStateContext("useImageUploads").channel;
  var getAppSettings = useChatContext("useImageUploads").getAppSettings;
  var addNotification = useChannelActionContext("useImageUploads").addNotification;
  var t = useTranslationContext("useImageUploads").t;
  var removeImage = (0, import_react91.useCallback)(function(id) {
    dispatch({ id, type: "removeImageUpload" });
  }, []);
  var uploadImage = (0, import_react91.useCallback)(function(id) {
    return __awaiter(void 0, void 0, void 0, function() {
      var img, file, canUpload, response, error_1, errorMessage2, alreadyRemoved;
      var _a;
      return __generator(this, function(_b) {
        switch (_b.label) {
          case 0:
            img = imageUploads[id];
            if (!img)
              return [
                2
                /*return*/
              ];
            file = img.file;
            if (img.state !== "uploading") {
              dispatch({ id, state: "uploading", type: "setImageUpload" });
            }
            return [4, checkUploadPermissions({
              addNotification,
              file,
              getAppSettings,
              t,
              uploadType: "image"
            })];
          case 1:
            canUpload = _b.sent();
            if (!canUpload)
              return [2, removeImage(id)];
            _b.label = 2;
          case 2:
            _b.trys.push([2, 7, , 8]);
            if (!doImageUploadRequest)
              return [3, 4];
            return [4, doImageUploadRequest(file, channel)];
          case 3:
            response = _b.sent();
            return [3, 6];
          case 4:
            return [4, channel.sendImage(file)];
          case 5:
            response = _b.sent();
            _b.label = 6;
          case 6:
            return [3, 8];
          case 7:
            error_1 = _b.sent();
            errorMessage2 = typeof error_1.message === "string" ? error_1.message : t("Error uploading image");
            addNotification(errorMessage2, "error");
            alreadyRemoved = false;
            if (!imageUploads[id]) {
              alreadyRemoved = true;
            } else {
              dispatch({ id, state: "failed", type: "setImageUpload" });
            }
            if (!alreadyRemoved && errorHandler) {
              errorHandler(error_1, "upload-image", __assign(__assign({}, file), { id }));
            }
            return [
              2
              /*return*/
            ];
          case 8:
            if (!response) {
              removeImage(id);
              return [
                2
                /*return*/
              ];
            }
            if (img.previewUri)
              (_a = URL.revokeObjectURL) === null || _a === void 0 ? void 0 : _a.call(URL, img.previewUri);
            dispatch({
              id,
              previewUri: void 0,
              state: "finished",
              type: "setImageUpload",
              url: response.file
            });
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [imageUploads, channel, doImageUploadRequest, errorHandler, removeImage]);
  (0, import_react91.useEffect)(function() {
    var upload = Object.values(imageUploads).find(function(imageUpload) {
      return imageUpload.state === "uploading" && imageUpload.file;
    });
    if (!upload)
      return;
    uploadImage(upload.id);
  }, [imageUploads, uploadImage]);
  return {
    removeImage,
    uploadImage
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useFileUploads.js
var import_react92 = __toESM(require_react());
var useFileUploads = function(props, state, dispatch) {
  var doFileUploadRequest = props.doFileUploadRequest, errorHandler = props.errorHandler;
  var fileUploads = state.fileUploads;
  var channel = useChannelStateContext("useFileUploads").channel;
  var addNotification = useChannelActionContext("useFileUploads").addNotification;
  var getAppSettings = useChatContext("useFileUploads").getAppSettings;
  var t = useTranslationContext("useFileUploads").t;
  var uploadFile = (0, import_react92.useCallback)(function(id) {
    dispatch({ id, state: "uploading", type: "setFileUpload" });
  }, []);
  var removeFile = (0, import_react92.useCallback)(function(id) {
    dispatch({ id, type: "removeFileUpload" });
  }, []);
  (0, import_react92.useEffect)(function() {
    (function() {
      return __awaiter(void 0, void 0, void 0, function() {
        var upload, file, id, canUpload, response, error_1, errorMessage2, alreadyRemoved;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              upload = Object.values(fileUploads).find(function(fileUpload) {
                return fileUpload.state === "uploading" && fileUpload.file;
              });
              if (!upload)
                return [
                  2
                  /*return*/
                ];
              file = upload.file, id = upload.id;
              return [4, checkUploadPermissions({
                addNotification,
                file,
                getAppSettings,
                t,
                uploadType: "file"
              })];
            case 1:
              canUpload = _a.sent();
              if (!canUpload)
                return [2, removeFile(id)];
              _a.label = 2;
            case 2:
              _a.trys.push([2, 7, , 8]);
              if (!doFileUploadRequest)
                return [3, 4];
              return [4, doFileUploadRequest(file, channel)];
            case 3:
              response = _a.sent();
              return [3, 6];
            case 4:
              return [4, channel.sendFile(file)];
            case 5:
              response = _a.sent();
              _a.label = 6;
            case 6:
              return [3, 8];
            case 7:
              error_1 = _a.sent();
              errorMessage2 = typeof error_1.message === "string" ? error_1.message : t("Error uploading file");
              addNotification(errorMessage2, "error");
              alreadyRemoved = false;
              if (!fileUploads[id]) {
                alreadyRemoved = true;
              } else {
                dispatch({ id, state: "failed", type: "setFileUpload" });
              }
              if (!alreadyRemoved && errorHandler) {
                errorHandler(error_1, "upload-file", file);
              }
              return [
                2
                /*return*/
              ];
            case 8:
              if (!response) {
                removeFile(id);
                return [
                  2
                  /*return*/
                ];
              }
              dispatch({
                id,
                state: "finished",
                thumb_url: response.thumb_url,
                type: "setFileUpload",
                url: response.file
              });
              return [
                2
                /*return*/
              ];
          }
        });
      });
    })();
  }, [fileUploads, channel, doFileUploadRequest, errorHandler, removeFile]);
  return {
    removeFile,
    uploadFile
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useAttachments.js
var apiMaxNumberOfFiles = 10;
var useAttachments = function(props, state, dispatch, textareaRef) {
  var noFiles = props.noFiles;
  var fileUploads = state.fileUploads, imageUploads = state.imageUploads;
  var _a = useChannelStateContext("useAttachments"), maxNumberOfFiles = _a.maxNumberOfFiles, multipleUploads = _a.multipleUploads;
  var _b = useFileUploads(props, state, dispatch), removeFile = _b.removeFile, uploadFile = _b.uploadFile;
  var _c = useImageUploads(props, state, dispatch), removeImage = _c.removeImage, uploadImage = _c.uploadImage;
  var maxFilesAllowed = !multipleUploads ? 1 : maxNumberOfFiles || apiMaxNumberOfFiles;
  var numberOfImages = Object.values(imageUploads).filter(function(_a2) {
    var og_scrape_url = _a2.og_scrape_url, state2 = _a2.state;
    return state2 !== "failed" && !og_scrape_url;
  }).length;
  var numberOfFiles = Object.values(fileUploads).filter(function(_a2) {
    var state2 = _a2.state;
    return state2 !== "failed";
  }).length;
  var numberOfUploads = numberOfImages + numberOfFiles;
  var maxFilesLeft = maxFilesAllowed - numberOfUploads;
  var uploadNewFiles = (0, import_react93.useCallback)(function(files) {
    var _a2;
    Array.from(files).slice(0, maxFilesLeft).forEach(function(file) {
      var _a3;
      var id = nanoid();
      if (file.type.startsWith("image/") && !file.type.endsWith(".photoshop")) {
        dispatch({
          file,
          id,
          previewUri: (_a3 = URL.createObjectURL) === null || _a3 === void 0 ? void 0 : _a3.call(URL, file),
          state: "uploading",
          type: "setImageUpload"
        });
      } else if (file instanceof File && !noFiles) {
        dispatch({ file, id, state: "uploading", type: "setFileUpload" });
      }
    });
    (_a2 = textareaRef === null || textareaRef === void 0 ? void 0 : textareaRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  }, [maxFilesLeft, noFiles]);
  return {
    maxFilesLeft,
    numberOfUploads,
    removeFile,
    removeImage,
    uploadFile,
    uploadImage,
    uploadNewFiles
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputText.js
var import_react94 = __toESM(require_react());
var useMessageInputText = function(props, state, dispatch, findAndEnqueueURLsToEnrich) {
  var channel = useChannelStateContext("useMessageInputText").channel;
  var additionalTextareaProps = props.additionalTextareaProps, focus = props.focus, parent = props.parent, _a = props.publishTypingEvent, publishTypingEvent = _a === void 0 ? true : _a;
  var text5 = state.text;
  var textareaRef = (0, import_react94.useRef)();
  (0, import_react94.useEffect)(function() {
    if (focus && textareaRef.current) {
      textareaRef.current.focus();
    }
  }, [focus]);
  var newCursorPosition = (0, import_react94.useRef)();
  var insertText = (0, import_react94.useCallback)(function(textToInsert) {
    var maxLength = (additionalTextareaProps || {}).maxLength;
    if (!textareaRef.current) {
      dispatch({
        getNewText: function(text6) {
          var updatedText = text6 + textToInsert;
          if (maxLength && updatedText.length > maxLength) {
            return updatedText.slice(0, maxLength);
          }
          return updatedText;
        },
        type: "setText"
      });
      return;
    }
    var _a2 = textareaRef.current, selectionEnd = _a2.selectionEnd, selectionStart = _a2.selectionStart;
    newCursorPosition.current = selectionStart + textToInsert.length;
    dispatch({
      getNewText: function(prevText) {
        var updatedText = prevText.slice(0, selectionStart) + textToInsert + prevText.slice(selectionEnd);
        if (maxLength && updatedText.length > maxLength) {
          return updatedText.slice(0, maxLength);
        }
        return updatedText;
      },
      type: "setText"
    });
  }, [additionalTextareaProps, newCursorPosition, textareaRef]);
  (0, import_react94.useEffect)(function() {
    var textareaElement = textareaRef.current;
    if (textareaElement && newCursorPosition.current !== void 0) {
      textareaElement.selectionStart = newCursorPosition.current;
      textareaElement.selectionEnd = newCursorPosition.current;
      newCursorPosition.current = void 0;
    }
  }, [text5, newCursorPosition]);
  var handleChange = (0, import_react94.useCallback)(function(event) {
    event.preventDefault();
    if (!event || !event.target) {
      return;
    }
    var newText = event.target.value;
    dispatch({
      getNewText: function() {
        return newText;
      },
      type: "setText"
    });
    findAndEnqueueURLsToEnrich === null || findAndEnqueueURLsToEnrich === void 0 ? void 0 : findAndEnqueueURLsToEnrich(newText);
    if (publishTypingEvent && newText && channel) {
      logChatPromiseExecution(channel.keystroke(parent === null || parent === void 0 ? void 0 : parent.id), "start typing event");
    }
  }, [channel, findAndEnqueueURLsToEnrich, parent, publishTypingEvent]);
  return {
    handleChange,
    insertText,
    textareaRef
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useEmojiPicker.js
var import_react95 = __toESM(require_react());
var useEmojiPicker = function(state, dispatch, insertText, textareaRef, closeEmojiPickerOnClick) {
  var emojiPickerRef = (0, import_react95.useRef)(null);
  var closeEmojiPicker = (0, import_react95.useCallback)(function(event) {
    event.preventDefault();
    if (emojiPickerRef.current && !emojiPickerRef.current.contains(event.target)) {
      dispatch({
        type: "setEmojiPickerIsOpen",
        value: false
      });
    }
  }, [emojiPickerRef]);
  var openEmojiPicker = (0, import_react95.useCallback)(function(event) {
    event.preventDefault();
    dispatch({
      type: "setEmojiPickerIsOpen",
      value: true
    });
    event.stopPropagation();
  }, []);
  var handleEmojiKeyDown = function(event) {
    if (event.key === " " || event.key === "Enter" || event.key === "Spacebar") {
      event.preventDefault();
      openEmojiPicker(event);
    }
  };
  var handleEmojiEscape = function(event) {
    if (event.key === "Escape") {
      dispatch({
        type: "setEmojiPickerIsOpen",
        value: false
      });
    }
  };
  (0, import_react95.useEffect)(function() {
    if (state.emojiPickerIsOpen) {
      document.addEventListener("click", closeEmojiPicker, false);
      document.addEventListener("keydown", handleEmojiEscape);
    }
    return function() {
      document.removeEventListener("click", closeEmojiPicker, false);
      document.removeEventListener("keydown", handleEmojiEscape);
    };
  }, [closeEmojiPicker, state.emojiPickerIsOpen]);
  var onSelectEmoji = (0, import_react95.useCallback)(function(emoji2) {
    var _a;
    insertText(emoji2.native);
    if (closeEmojiPickerOnClick) {
      dispatch({
        type: "setEmojiPickerIsOpen",
        value: false
      });
    }
    (_a = textareaRef === null || textareaRef === void 0 ? void 0 : textareaRef.current) === null || _a === void 0 ? void 0 : _a.focus();
  }, [insertText]);
  return {
    closeEmojiPicker,
    emojiPickerRef,
    handleEmojiKeyDown,
    onSelectEmoji,
    openEmojiPicker
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useSubmitHandler.js
var import_react96 = __toESM(require_react());
var getAttachmentTypeFromMime = function(mime) {
  if (mime.includes("video/"))
    return "video";
  if (mime.includes("audio/"))
    return "audio";
  return "file";
};
var useSubmitHandler = function(props, state, dispatch, numberOfUploads, enrichURLsController) {
  var clearEditingState = props.clearEditingState, message = props.message, overrideSubmitHandler = props.overrideSubmitHandler, parent = props.parent, publishTypingEvent = props.publishTypingEvent;
  var attachments = state.attachments, fileOrder = state.fileOrder, fileUploads = state.fileUploads, imageOrder = state.imageOrder, imageUploads = state.imageUploads, linkPreviews = state.linkPreviews, mentioned_users = state.mentioned_users, text5 = state.text;
  var cancelURLEnrichment = enrichURLsController.cancelURLEnrichment, findAndEnqueueURLsToEnrich = enrichURLsController.findAndEnqueueURLsToEnrich;
  var channel = useChannelStateContext("useSubmitHandler").channel;
  var _a = useChannelActionContext("useSubmitHandler"), addNotification = _a.addNotification, editMessage = _a.editMessage, sendMessage = _a.sendMessage;
  var t = useTranslationContext("useSubmitHandler").t;
  var textReference = (0, import_react96.useRef)({ hasChanged: false, initialText: text5 });
  (0, import_react96.useEffect)(function() {
    if (!textReference.current.initialText.length) {
      textReference.current.initialText = text5;
      return;
    }
    textReference.current.hasChanged = text5 !== textReference.current.initialText;
  }, [text5]);
  var getAttachmentsFromUploads = function() {
    var imageAttachments = imageOrder.map(function(id) {
      return imageUploads[id];
    }).filter(function(upload) {
      return upload.state !== "failed";
    }).filter(function(_a2, _, self2) {
      var id = _a2.id, url = _a2.url;
      return self2.every(function(upload) {
        return upload.id === id || upload.url !== url;
      });
    }).filter(function(upload) {
      if (!textReference.current.hasChanged)
        return true;
      return !upload.og_scrape_url;
    }).map(function(_a2) {
      var name = _a2.file.name, url = _a2.url, rest = __rest(_a2, ["file", "url"]);
      return {
        author_name: rest.author_name,
        fallback: name,
        image_url: url,
        og_scrape_url: rest.og_scrape_url,
        text: rest.text,
        title: rest.title,
        title_link: rest.title_link,
        type: "image"
      };
    });
    var fileAttachments = fileOrder.map(function(id) {
      return fileUploads[id];
    }).filter(function(upload) {
      return upload.state !== "failed";
    }).map(function(upload) {
      return {
        asset_url: upload.url,
        file_size: upload.file.size,
        mime_type: upload.file.type,
        thumb_url: upload.thumb_url,
        title: upload.file.name,
        type: getAttachmentTypeFromMime(upload.file.type || "")
      };
    });
    return __spreadArray(__spreadArray(__spreadArray([], attachments, true), imageAttachments, true), fileAttachments, true);
  };
  var handleSubmit = function(event, customMessageData) {
    return __awaiter(void 0, void 0, void 0, function() {
      var trimmedMessage, isEmptyMessage, someAttachmentsUploading, attachmentsFromUploads, attachmentsFromLinkPreviews, someLinkPreviewsLoading, someLinkPreviewsDismissed, newAttachments, actualMentionedUsers, updatedMessage, linkPreviewsEnabled, skip_enrich_url, sendOptions, err_1, err_2;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            event.preventDefault();
            trimmedMessage = text5.trim();
            isEmptyMessage = trimmedMessage === "" || trimmedMessage === ">" || trimmedMessage === "``````" || trimmedMessage === "``" || trimmedMessage === "**" || trimmedMessage === "____" || trimmedMessage === "__" || trimmedMessage === "****";
            if (isEmptyMessage && numberOfUploads === 0)
              return [
                2
                /*return*/
              ];
            someAttachmentsUploading = Object.values(imageUploads).some(function(upload) {
              return upload.state === "uploading";
            }) || Object.values(fileUploads).some(function(upload) {
              return upload.state === "uploading";
            });
            if (someAttachmentsUploading) {
              return [2, addNotification(t("Wait until all attachments have uploaded"), "error")];
            }
            attachmentsFromUploads = getAttachmentsFromUploads();
            attachmentsFromLinkPreviews = [];
            if (findAndEnqueueURLsToEnrich) {
              attachmentsFromUploads = attachmentsFromUploads.filter(function(attachment) {
                return !attachment.og_scrape_url;
              });
              cancelURLEnrichment();
              someLinkPreviewsLoading = Array.from(linkPreviews.values()).some(function(linkPreview) {
                return [LinkPreviewState.QUEUED, LinkPreviewState.LOADING].includes(linkPreview.state);
              });
              someLinkPreviewsDismissed = Array.from(linkPreviews.values()).some(function(linkPreview) {
                return linkPreview.state === LinkPreviewState.DISMISSED;
              });
              if (!someLinkPreviewsLoading) {
                attachmentsFromLinkPreviews = Array.from(linkPreviews.values()).filter(function(linkPreview) {
                  return linkPreview.state === LinkPreviewState.LOADED && !attachmentsFromUploads.find(function(attFromUpload) {
                    return attFromUpload.og_scrape_url === linkPreview.og_scrape_url;
                  });
                }).map(function(_a3) {
                  var linkPreviewState = _a3.state, ogAttachment = __rest(_a3, ["state"]);
                  return ogAttachment;
                });
              }
            }
            newAttachments = __spreadArray(__spreadArray([], attachmentsFromUploads, true), attachmentsFromLinkPreviews, true);
            actualMentionedUsers = Array.from(new Set(mentioned_users.filter(function(_a3) {
              var id = _a3.id, name = _a3.name;
              return text5.includes("@".concat(id)) || text5.includes("@".concat(name));
            })));
            updatedMessage = {
              attachments: newAttachments,
              mentioned_users: actualMentionedUsers,
              text: text5
            };
            linkPreviewsEnabled = !!findAndEnqueueURLsToEnrich;
            skip_enrich_url = linkPreviewsEnabled && (!someLinkPreviewsLoading && attachmentsFromLinkPreviews.length > 0 || someLinkPreviewsDismissed);
            sendOptions = linkPreviewsEnabled ? { skip_enrich_url } : void 0;
            if (!message)
              return [3, 5];
            delete message.i18n;
            _a2.label = 1;
          case 1:
            _a2.trys.push([1, 3, , 4]);
            return [4, editMessage(__assign(__assign(__assign({}, message), updatedMessage), customMessageData), sendOptions)];
          case 2:
            _a2.sent();
            clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();
            dispatch({ type: "clear" });
            return [3, 4];
          case 3:
            err_1 = _a2.sent();
            addNotification(t("Edit message request failed"), "error");
            return [3, 4];
          case 4:
            return [3, 13];
          case 5:
            _a2.trys.push([5, 12, , 13]);
            dispatch({ type: "clear" });
            if (!overrideSubmitHandler)
              return [3, 7];
            return [4, overrideSubmitHandler(__assign(__assign({}, updatedMessage), { parent }), channel.cid, customMessageData, sendOptions)];
          case 6:
            _a2.sent();
            return [3, 9];
          case 7:
            return [4, sendMessage(__assign(__assign({}, updatedMessage), { parent }), customMessageData, sendOptions)];
          case 8:
            _a2.sent();
            _a2.label = 9;
          case 9:
            if (!publishTypingEvent)
              return [3, 11];
            return [4, channel.stopTyping()];
          case 10:
            _a2.sent();
            _a2.label = 11;
          case 11:
            return [3, 13];
          case 12:
            err_2 = _a2.sent();
            dispatch({
              getNewText: function() {
                return text5;
              },
              type: "setText"
            });
            actualMentionedUsers === null || actualMentionedUsers === void 0 ? void 0 : actualMentionedUsers.forEach(function(user) {
              dispatch({ type: "addMentionedUser", user });
            });
            addNotification(t("Send message request failed"), "error");
            return [3, 13];
          case 13:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  return { handleSubmit };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/usePasteHandler.js
var import_react97 = __toESM(require_react());
var usePasteHandler = function(uploadNewFiles, insertText, isUploadEnabled, findAndEnqueueURLsToEnrich) {
  var onPaste = (0, import_react97.useCallback)(function(clipboardEvent) {
    if (!isUploadEnabled)
      return;
    (function(event) {
      return __awaiter(void 0, void 0, void 0, function() {
        var items, plainTextPromise, _loop_1, i, state_1, fileLikes, pastedText;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              items = event.clipboardData.items;
              if (!dataTransferItemsHaveFiles(Array.from(items)))
                return [
                  2
                  /*return*/
                ];
              event.preventDefault();
              plainTextPromise = void 0;
              _loop_1 = function(i2) {
                var item = items[i2];
                if (item.kind === "string" && item.type === "text/plain") {
                  plainTextPromise = new Promise(function(resolve) {
                    item.getAsString(function(string3) {
                      resolve(string3);
                    });
                  });
                  return "break";
                }
              };
              for (i = 0; i < items.length; i++) {
                state_1 = _loop_1(i);
                if (state_1 === "break")
                  break;
              }
              return [4, dataTransferItemsToFiles(Array.from(items))];
            case 1:
              fileLikes = _a.sent();
              if (fileLikes.length) {
                uploadNewFiles(fileLikes);
                return [
                  2
                  /*return*/
                ];
              }
              if (!plainTextPromise)
                return [3, 3];
              return [4, plainTextPromise];
            case 2:
              pastedText = _a.sent();
              insertText(pastedText);
              findAndEnqueueURLsToEnrich === null || findAndEnqueueURLsToEnrich === void 0 ? void 0 : findAndEnqueueURLsToEnrich(pastedText, SetLinkPreviewMode.UPSERT);
              findAndEnqueueURLsToEnrich === null || findAndEnqueueURLsToEnrich === void 0 ? void 0 : findAndEnqueueURLsToEnrich.flush();
              _a.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    })(clipboardEvent);
  }, [insertText, uploadNewFiles]);
  return { onPaste };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useLinkPreviews.js
var import_react98 = __toESM(require_react());
var import_lodash3 = __toESM(require_lodash2());
var useLinkPreviews = function(_a) {
  var _b;
  var debounceURLEnrichmentMsInputContext = _a.debounceURLEnrichmentMs, dispatch = _a.dispatch, _c = _a.enrichURLForPreview, enrichURLForPreview = _c === void 0 ? false : _c, findURLFnInputContext = _a.findURLFn, linkPreviews = _a.linkPreviews, onLinkPreviewDismissedInputContext = _a.onLinkPreviewDismissed;
  var client = useChatContext().client;
  var _d = useChannelStateContext(), channelConfig = _d.channelConfig, debounceURLEnrichmentMsChannelContext = _d.debounceURLEnrichmentMs, findURLFnChannelContext = _d.findURLFn, onLinkPreviewDismissedChannelContext = _d.onLinkPreviewDismissed;
  var shouldDiscardEnrichQueries = (0, import_react98.useRef)(false);
  var findURLFn = findURLFnInputContext !== null && findURLFnInputContext !== void 0 ? findURLFnInputContext : findURLFnChannelContext;
  var onLinkPreviewDismissed = onLinkPreviewDismissedInputContext !== null && onLinkPreviewDismissedInputContext !== void 0 ? onLinkPreviewDismissedInputContext : onLinkPreviewDismissedChannelContext;
  var debounceURLEnrichmentMs = (_b = debounceURLEnrichmentMsInputContext !== null && debounceURLEnrichmentMsInputContext !== void 0 ? debounceURLEnrichmentMsInputContext : debounceURLEnrichmentMsChannelContext) !== null && _b !== void 0 ? _b : 1500;
  var dismissLinkPreview = (0, import_react98.useCallback)(function(linkPreview) {
    onLinkPreviewDismissed === null || onLinkPreviewDismissed === void 0 ? void 0 : onLinkPreviewDismissed(linkPreview);
    var previewToRemoveMap = /* @__PURE__ */ new Map();
    linkPreview.state = LinkPreviewState.DISMISSED;
    previewToRemoveMap.set(linkPreview.og_scrape_url, linkPreview);
    dispatch({
      linkPreviews: previewToRemoveMap,
      mode: SetLinkPreviewMode.UPSERT,
      type: "setLinkPreviews"
    });
  }, [onLinkPreviewDismissed]);
  var findAndEnqueueURLsToEnrich = (0, import_react98.useCallback)((0, import_lodash3.default)(function(text5, mode) {
    if (mode === void 0) {
      mode = SetLinkPreviewMode.SET;
    }
    var urls = findURLFn ? findURLFn(text5) : find(text5, "url").reduce(function(acc, link2) {
      if (link2.isLink)
        acc.push(link2.href);
      return acc;
    }, []);
    shouldDiscardEnrichQueries.current = urls.length === 0;
    dispatch({
      linkPreviews: urls.reduce(function(acc, url) {
        acc.set(url, { og_scrape_url: url, state: LinkPreviewState.QUEUED });
        return acc;
      }, /* @__PURE__ */ new Map()),
      mode,
      type: "setLinkPreviews"
    });
  }, debounceURLEnrichmentMs, { leading: false, trailing: true }), [debounceURLEnrichmentMs, shouldDiscardEnrichQueries, findURLFn]);
  var cancelURLEnrichment = (0, import_react98.useCallback)(function() {
    findAndEnqueueURLsToEnrich.cancel();
    findAndEnqueueURLsToEnrich("");
    findAndEnqueueURLsToEnrich.flush();
  }, [findAndEnqueueURLsToEnrich]);
  (0, import_react98.useEffect)(function() {
    var enqueuedLinks = Array.from(linkPreviews.values()).reduce(function(acc, linkPreview) {
      if (linkPreview.state === "queued") {
        var loadingLinkPreview = __assign(__assign({}, linkPreview), { state: LinkPreviewState.LOADING });
        acc.set(linkPreview.og_scrape_url, loadingLinkPreview);
      }
      return acc;
    }, /* @__PURE__ */ new Map());
    if (!enqueuedLinks.size)
      return;
    dispatch({
      linkPreviews: enqueuedLinks,
      mode: SetLinkPreviewMode.UPSERT,
      type: "setLinkPreviews"
    });
    enqueuedLinks.forEach(function(linkPreview) {
      client.enrichURL(linkPreview.og_scrape_url).then(function(_a2) {
        var duration = _a2.duration, ogAttachment = __rest(_a2, ["duration"]);
        if (shouldDiscardEnrichQueries.current)
          return;
        var linkPreviewsMap = /* @__PURE__ */ new Map();
        linkPreviewsMap.set(linkPreview.og_scrape_url, __assign(__assign({}, ogAttachment), { state: LinkPreviewState.LOADED }));
        dispatch({
          linkPreviews: linkPreviewsMap,
          mode: SetLinkPreviewMode.UPSERT,
          type: "setLinkPreviews"
        });
      }).catch(function() {
        var linkPreviewsMap = /* @__PURE__ */ new Map();
        linkPreviewsMap.set(linkPreview.og_scrape_url, __assign(__assign({}, linkPreview), { state: LinkPreviewState.FAILED }));
        dispatch({
          linkPreviews: linkPreviewsMap,
          mode: SetLinkPreviewMode.UPSERT,
          type: "setLinkPreviews"
        });
      });
    });
  }, [shouldDiscardEnrichQueries, linkPreviews]);
  return {
    cancelURLEnrichment,
    dismissLinkPreview,
    findAndEnqueueURLsToEnrich: (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.url_enrichment) && enrichURLForPreview ? findAndEnqueueURLsToEnrich : void 0
  };
};

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputState.js
var makeEmptyMessageInputState = function() {
  return {
    attachments: [],
    emojiPickerIsOpen: false,
    fileOrder: [],
    fileUploads: {},
    imageOrder: [],
    imageUploads: {},
    linkPreviews: /* @__PURE__ */ new Map(),
    mentioned_users: [],
    setText: function() {
      return null;
    },
    text: ""
  };
};
var initState = function(message) {
  var _a, _b, _c, _d, _e, _f, _g;
  if (!message) {
    return makeEmptyMessageInputState();
  }
  var imageUploads = (_b = (_a = message.attachments) === null || _a === void 0 ? void 0 : _a.filter(function(_a2) {
    var type = _a2.type;
    return type === "image";
  }).reduce(function(acc, _a2) {
    var author_name = _a2.author_name, _b2 = _a2.fallback, fallback = _b2 === void 0 ? "" : _b2, image_url = _a2.image_url, og_scrape_url = _a2.og_scrape_url, text5 = _a2.text, title = _a2.title, title_link = _a2.title_link;
    var id = nanoid();
    acc[id] = {
      author_name,
      file: {
        name: fallback
      },
      id,
      og_scrape_url,
      state: "finished",
      text: text5,
      title,
      title_link,
      url: image_url
    };
    return acc;
  }, {})) !== null && _b !== void 0 ? _b : {};
  var fileUploads = (_d = (_c = message.attachments) === null || _c === void 0 ? void 0 : _c.filter(function(_a2) {
    var type = _a2.type;
    return type === "file";
  }).reduce(function(acc, _a2) {
    var asset_url = _a2.asset_url, file_size = _a2.file_size, mime_type = _a2.mime_type, thumb_url = _a2.thumb_url, _b2 = _a2.title, title = _b2 === void 0 ? "" : _b2;
    var id = nanoid();
    acc[id] = {
      file: {
        name: title,
        size: file_size,
        type: mime_type
      },
      id,
      state: "finished",
      thumb_url,
      url: asset_url
    };
    return acc;
  }, {})) !== null && _d !== void 0 ? _d : {};
  var linkPreviews = (_f = (_e = message.attachments) === null || _e === void 0 ? void 0 : _e.reduce(function(acc, attachment) {
    if (!attachment.og_scrape_url)
      return acc;
    acc.set(attachment.og_scrape_url, __assign(__assign({}, attachment), { state: LinkPreviewState.LOADED }));
    return acc;
  }, /* @__PURE__ */ new Map())) !== null && _f !== void 0 ? _f : /* @__PURE__ */ new Map();
  var imageOrder = Object.keys(imageUploads);
  var fileOrder = Object.keys(fileUploads);
  var attachments = ((_g = message.attachments) === null || _g === void 0 ? void 0 : _g.filter(function(_a2) {
    var type = _a2.type;
    return type !== "file" && type !== "image";
  })) || [];
  var mentioned_users = message.mentioned_users || [];
  return {
    attachments,
    emojiPickerIsOpen: false,
    fileOrder,
    fileUploads,
    imageOrder,
    imageUploads,
    linkPreviews,
    mentioned_users,
    setText: function() {
      return null;
    },
    text: message.text || ""
  };
};
var messageInputReducer = function(state, action) {
  var _a, _b;
  switch (action.type) {
    case "setEmojiPickerIsOpen":
      return __assign(__assign({}, state), { emojiPickerIsOpen: action.value });
    case "setText":
      return __assign(__assign({}, state), { text: action.getNewText(state.text) });
    case "clear":
      return makeEmptyMessageInputState();
    case "setImageUpload": {
      var imageAlreadyExists = state.imageUploads[action.id];
      if (!imageAlreadyExists && !action.file)
        return state;
      var imageOrder = imageAlreadyExists ? state.imageOrder : state.imageOrder.concat(action.id);
      var newUploadFields = __assign({}, action);
      delete newUploadFields.type;
      return __assign(__assign({}, state), { imageOrder, imageUploads: __assign(__assign({}, state.imageUploads), (_a = {}, _a[action.id] = __assign(__assign({}, state.imageUploads[action.id]), newUploadFields), _a)) });
    }
    case "setFileUpload": {
      var fileAlreadyExists = state.fileUploads[action.id];
      if (!fileAlreadyExists && !action.file)
        return state;
      var fileOrder = fileAlreadyExists ? state.fileOrder : state.fileOrder.concat(action.id);
      var newUploadFields = __assign({}, action);
      delete newUploadFields.type;
      return __assign(__assign({}, state), { fileOrder, fileUploads: __assign(__assign({}, state.fileUploads), (_b = {}, _b[action.id] = __assign(__assign({}, state.fileUploads[action.id]), newUploadFields), _b)) });
    }
    case "setLinkPreviews": {
      var linkPreviews_1 = new Map(state.linkPreviews);
      if (action.mode === SetLinkPreviewMode.REMOVE) {
        Array.from(action.linkPreviews.keys()).forEach(function(key) {
          linkPreviews_1.delete(key);
        });
      } else {
        Array.from(action.linkPreviews.values()).reduce(function(acc, linkPreview) {
          var existingPreview = acc.get(linkPreview.og_scrape_url);
          var alreadyEnqueued = linkPreview.state === LinkPreviewState.QUEUED && (existingPreview === null || existingPreview === void 0 ? void 0 : existingPreview.state) !== LinkPreviewState.FAILED;
          if (existingPreview && alreadyEnqueued)
            return acc;
          acc.set(linkPreview.og_scrape_url, linkPreview);
          return acc;
        }, linkPreviews_1);
        if (action.mode === SetLinkPreviewMode.SET) {
          Array.from(state.linkPreviews.keys()).forEach(function(key) {
            if (!action.linkPreviews.get(key))
              linkPreviews_1.delete(key);
          });
        }
      }
      return __assign(__assign({}, state), { linkPreviews: linkPreviews_1 });
    }
    case "removeImageUpload": {
      if (!state.imageUploads[action.id])
        return state;
      var newImageUploads = __assign({}, state.imageUploads);
      delete newImageUploads[action.id];
      return __assign(__assign({}, state), { imageOrder: state.imageOrder.filter(function(_id) {
        return _id !== action.id;
      }), imageUploads: newImageUploads });
    }
    case "removeFileUpload": {
      if (!state.fileUploads[action.id])
        return state;
      var newFileUploads = __assign({}, state.fileUploads);
      delete newFileUploads[action.id];
      return __assign(__assign({}, state), { fileOrder: state.fileOrder.filter(function(_id) {
        return _id !== action.id;
      }), fileUploads: newFileUploads });
    }
    case "addMentionedUser":
      return __assign(__assign({}, state), { mentioned_users: state.mentioned_users.concat(action.user) });
    default:
      return state;
  }
};
var useMessageInputState = function(props) {
  var _a;
  var additionalTextareaProps = props.additionalTextareaProps, closeEmojiPickerOnClick = props.closeEmojiPickerOnClick, getDefaultValue = props.getDefaultValue, message = props.message, urlEnrichmentConfig = props.urlEnrichmentConfig;
  var _b = useChannelStateContext("useMessageInputState"), _c = _b.channelCapabilities, channelCapabilities = _c === void 0 ? {} : _c, channelConfig = _b.channelConfig, enrichURLForPreviewChannelContext = _b.enrichURLForPreview;
  var defaultValue = (getDefaultValue === null || getDefaultValue === void 0 ? void 0 : getDefaultValue()) || (additionalTextareaProps === null || additionalTextareaProps === void 0 ? void 0 : additionalTextareaProps.defaultValue);
  var initialStateValue = message || (Array.isArray(defaultValue) ? { text: defaultValue.join("") } : { text: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.toString() });
  var _d = (0, import_react99.useReducer)(messageInputReducer, initialStateValue, initState), state = _d[0], dispatch = _d[1];
  var enrichURLsController = useLinkPreviews(__assign(__assign({ dispatch, linkPreviews: state.linkPreviews }, urlEnrichmentConfig), { enrichURLForPreview: (_a = urlEnrichmentConfig === null || urlEnrichmentConfig === void 0 ? void 0 : urlEnrichmentConfig.enrichURLForPreview) !== null && _a !== void 0 ? _a : enrichURLForPreviewChannelContext }));
  var _e = useMessageInputText(props, state, dispatch, enrichURLsController.findAndEnqueueURLsToEnrich), handleChange = _e.handleChange, insertText = _e.insertText, textareaRef = _e.textareaRef;
  var _f = (0, import_react99.useState)(false), showCommandsList = _f[0], setShowCommandsList = _f[1];
  var _g = (0, import_react99.useState)(false), showMentionsList = _g[0], setShowMentionsList = _g[1];
  var openCommandsList = function() {
    dispatch({
      getNewText: function() {
        return "/";
      },
      type: "setText"
    });
    setShowCommandsList(true);
  };
  var closeCommandsList = function() {
    return setShowCommandsList(false);
  };
  var openMentionsList = function() {
    dispatch({
      getNewText: function(currentText) {
        return currentText + "@";
      },
      type: "setText"
    });
    setShowMentionsList(true);
  };
  var closeMentionsList = function() {
    return setShowMentionsList(false);
  };
  var _h = useEmojiPicker(state, dispatch, insertText, textareaRef, closeEmojiPickerOnClick), closeEmojiPicker = _h.closeEmojiPicker, emojiPickerRef = _h.emojiPickerRef, handleEmojiKeyDown = _h.handleEmojiKeyDown, onSelectEmoji = _h.onSelectEmoji, openEmojiPicker = _h.openEmojiPicker;
  var _j = useAttachments(props, state, dispatch, textareaRef), maxFilesLeft = _j.maxFilesLeft, numberOfUploads = _j.numberOfUploads, removeFile = _j.removeFile, removeImage = _j.removeImage, uploadFile = _j.uploadFile, uploadImage = _j.uploadImage, uploadNewFiles = _j.uploadNewFiles;
  var handleSubmit = useSubmitHandler(props, state, dispatch, numberOfUploads, enrichURLsController).handleSubmit;
  var isUploadEnabled = (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.uploads) !== false && channelCapabilities["upload-file"] !== false;
  var onPaste = usePasteHandler(uploadNewFiles, insertText, isUploadEnabled, enrichURLsController.findAndEnqueueURLsToEnrich).onPaste;
  var onSelectUser = (0, import_react99.useCallback)(function(item) {
    dispatch({ type: "addMentionedUser", user: item });
  }, []);
  var setText = (0, import_react99.useCallback)(function(text5) {
    dispatch({ getNewText: function() {
      return text5;
    }, type: "setText" });
  }, []);
  return __assign(__assign(__assign({}, state), enrichURLsController), {
    closeCommandsList,
    /**
     * TODO: fix the below at some point because this type casting is wrong
     * and just forced to not have warnings currently with the unknown casting
     */
    closeEmojiPicker,
    closeMentionsList,
    emojiIndex: useEmojiIndex(),
    emojiPickerRef,
    handleChange,
    handleEmojiKeyDown,
    handleSubmit,
    insertText,
    isUploadEnabled,
    maxFilesLeft,
    numberOfUploads,
    onPaste,
    onSelectEmoji,
    onSelectUser,
    openCommandsList,
    openEmojiPicker,
    openMentionsList,
    removeFile,
    removeImage,
    setText,
    showCommandsList,
    showMentionsList,
    textareaRef,
    uploadFile,
    uploadImage,
    uploadNewFiles
  });
};

// node_modules/stream-chat-react/dist/components/MessageInput/MessageInput.js
var import_react101 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCreateMessageInputContext.js
var import_react100 = __toESM(require_react());
var useCreateMessageInputContext = function(value) {
  var additionalTextareaProps = value.additionalTextareaProps, attachments = value.attachments, autocompleteTriggers = value.autocompleteTriggers, cancelURLEnrichment = value.cancelURLEnrichment, clearEditingState = value.clearEditingState, closeCommandsList = value.closeCommandsList, closeEmojiPicker = value.closeEmojiPicker, closeMentionsList = value.closeMentionsList, cooldownInterval = value.cooldownInterval, cooldownRemaining = value.cooldownRemaining, disabled = value.disabled, disableMentions = value.disableMentions, dismissLinkPreview = value.dismissLinkPreview, doFileUploadRequest = value.doFileUploadRequest, doImageUploadRequest = value.doImageUploadRequest, emojiIndex = value.emojiIndex, emojiPickerIsOpen = value.emojiPickerIsOpen, emojiPickerRef = value.emojiPickerRef, errorHandler = value.errorHandler, fileOrder = value.fileOrder, fileUploads = value.fileUploads, findAndEnqueueURLsToEnrich = value.findAndEnqueueURLsToEnrich, focus = value.focus, grow = value.grow, handleChange = value.handleChange, handleEmojiKeyDown = value.handleEmojiKeyDown, handleSubmit = value.handleSubmit, hideSendButton = value.hideSendButton, imageOrder = value.imageOrder, imageUploads = value.imageUploads, insertText = value.insertText, isUploadEnabled = value.isUploadEnabled, linkPreviews = value.linkPreviews, maxFilesLeft = value.maxFilesLeft, maxRows = value.maxRows, mentionAllAppUsers = value.mentionAllAppUsers, mentioned_users = value.mentioned_users, mentionQueryParams = value.mentionQueryParams, message = value.message, noFiles = value.noFiles, numberOfUploads = value.numberOfUploads, onPaste = value.onPaste, onSelectEmoji = value.onSelectEmoji, onSelectUser = value.onSelectUser, openCommandsList = value.openCommandsList, openEmojiPicker = value.openEmojiPicker, openMentionsList = value.openMentionsList, overrideSubmitHandler = value.overrideSubmitHandler, parent = value.parent, publishTypingEvent = value.publishTypingEvent, removeFile = value.removeFile, removeImage = value.removeImage, setCooldownRemaining = value.setCooldownRemaining, setText = value.setText, shouldSubmit = value.shouldSubmit, showCommandsList = value.showCommandsList, showMentionsList = value.showMentionsList, text5 = value.text, textareaRef = value.textareaRef, uploadFile = value.uploadFile, uploadImage = value.uploadImage, uploadNewFiles = value.uploadNewFiles, useMentionsTransliteration = value.useMentionsTransliteration;
  var editing = message === null || message === void 0 ? void 0 : message.editing;
  var fileUploadsValue = Object.entries(fileUploads).map(function(_a) {
    var _ = _a[0], value2 = _a[1];
    return value2.state;
  }).join();
  var imageUploadsValue = Object.entries(imageUploads).map(function(_a) {
    var _ = _a[0], value2 = _a[1];
    return value2.state;
  }).join();
  var linkPreviewsValue = Array.from(linkPreviews.values()).join();
  var mentionedUsersLength = mentioned_users.length;
  var parentId = parent === null || parent === void 0 ? void 0 : parent.id;
  var messageInputContext = (0, import_react100.useMemo)(function() {
    return {
      additionalTextareaProps,
      attachments,
      autocompleteTriggers,
      cancelURLEnrichment,
      clearEditingState,
      closeCommandsList,
      closeEmojiPicker,
      closeMentionsList,
      cooldownInterval,
      cooldownRemaining,
      disabled,
      disableMentions,
      dismissLinkPreview,
      doFileUploadRequest,
      doImageUploadRequest,
      emojiIndex,
      emojiPickerIsOpen,
      emojiPickerRef,
      errorHandler,
      fileOrder,
      fileUploads,
      findAndEnqueueURLsToEnrich,
      focus,
      grow,
      handleChange,
      handleEmojiKeyDown,
      handleSubmit,
      hideSendButton,
      imageOrder,
      imageUploads,
      insertText,
      isUploadEnabled,
      linkPreviews,
      maxFilesLeft,
      maxRows,
      mentionAllAppUsers,
      mentioned_users,
      mentionQueryParams,
      message,
      noFiles,
      numberOfUploads,
      onPaste,
      onSelectEmoji,
      onSelectUser,
      openCommandsList,
      openEmojiPicker,
      openMentionsList,
      overrideSubmitHandler,
      parent,
      publishTypingEvent,
      removeFile,
      removeImage,
      setCooldownRemaining,
      setText,
      shouldSubmit,
      showCommandsList,
      showMentionsList,
      text: text5,
      textareaRef,
      uploadFile,
      uploadImage,
      uploadNewFiles,
      useMentionsTransliteration
    };
  }, [
    cancelURLEnrichment,
    cooldownInterval,
    cooldownRemaining,
    dismissLinkPreview,
    editing,
    emojiPickerIsOpen,
    fileUploadsValue,
    findAndEnqueueURLsToEnrich,
    hideSendButton,
    imageUploadsValue,
    isUploadEnabled,
    linkPreviewsValue,
    mentionedUsersLength,
    parentId,
    publishTypingEvent,
    showCommandsList,
    showMentionsList,
    text5,
    handleSubmit
  ]);
  return messageInputContext;
};

// node_modules/stream-chat-react/dist/components/MessageInput/MessageInput.js
var MessageInputProvider = function(props) {
  var cooldownTimerState = useCooldownTimer();
  var messageInputState = useMessageInputState(props);
  var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));
  return import_react101.default.createElement(MessageInputContextProvider, { value: messageInputContextValue }, props.children);
};
var UnMemoizedMessageInput = function(props) {
  var PropInput = props.Input;
  var dragAndDropWindow = useChannelStateContext().dragAndDropWindow;
  var _a = useComponentContext("MessageInput"), ContextInput = _a.Input, _b = _a.TriggerProvider, TriggerProvider = _b === void 0 ? DefaultTriggerProvider : _b;
  var Input = PropInput || ContextInput || MessageInputFlat;
  if (dragAndDropWindow)
    return import_react101.default.createElement(
      import_react101.default.Fragment,
      null,
      import_react101.default.createElement(
        TriggerProvider,
        null,
        import_react101.default.createElement(Input, null)
      )
    );
  return import_react101.default.createElement(
    MessageInputProvider,
    __assign({}, props),
    import_react101.default.createElement(
      TriggerProvider,
      null,
      import_react101.default.createElement(Input, null)
    )
  );
};
var MessageInput = import_react101.default.memo(UnMemoizedMessageInput);

// node_modules/stream-chat-react/dist/components/MessageInput/MessageInputSmall.js
var import_react102 = __toESM(require_react());
var MessageInputSmall = function() {
  var _a = useChannelStateContext("MessageInputSmall"), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;
  var setQuotedMessage = useChannelActionContext("MessageInputSmall").setQuotedMessage;
  var t = useTranslationContext("MessageInputSmall").t;
  var channel = useChatContext("MessageInputSmall").channel;
  var _b = useMessageInputContext("MessageInputSmall"), closeEmojiPicker = _b.closeEmojiPicker, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, hideSendButton = _b.hideSendButton, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, numberOfUploads = _b.numberOfUploads, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;
  var _c = useComponentContext("MessageInputSmall"), _d = _c.CooldownTimer, CooldownTimer2 = _d === void 0 ? CooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? EmojiIconSmall : _e, _f = _c.FileUploadIcon, FileUploadIcon2 = _f === void 0 ? FileUploadIconFlat : _f, _g = _c.SendButton, SendButton2 = _g === void 0 ? SendButton : _g, _h = _c.QuotedMessagePreview, QuotedMessagePreview2 = _h === void 0 ? QuotedMessagePreview : _h;
  (0, import_react102.useEffect)(function() {
    var handleQuotedMessageUpdate = function(e) {
      var _a2;
      if (!(quotedMessage && ((_a2 = e.message) === null || _a2 === void 0 ? void 0 : _a2.id) === quotedMessage.id))
        return;
      if (e.type === "message.deleted") {
        setQuotedMessage(void 0);
        return;
      }
      setQuotedMessage(e.message);
    };
    channel === null || channel === void 0 ? void 0 : channel.on("message.deleted", handleQuotedMessageUpdate);
    channel === null || channel === void 0 ? void 0 : channel.on("message.updated", handleQuotedMessageUpdate);
    return function() {
      channel === null || channel === void 0 ? void 0 : channel.off("message.deleted", handleQuotedMessageUpdate);
      channel === null || channel === void 0 ? void 0 : channel.off("message.updated", handleQuotedMessageUpdate);
    };
  }, [channel, quotedMessage]);
  return import_react102.default.createElement(
    "div",
    { className: "str-chat__small-message-input__wrapper" },
    import_react102.default.createElement(
      ImageDropzone,
      { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },
      import_react102.default.createElement(
        "div",
        { className: "str-chat__small-message-input ".concat(SendButton2 ? "str-chat__small-message-input--send-button-active" : "", " ").concat(quotedMessage && quotedMessage.parent_id ? "str-chat__input-flat-quoted" : "", " ").concat(numberOfUploads ? "str-chat__small-message-input-has-attachments" : "", " ") },
        quotedMessage && quotedMessage.parent_id && import_react102.default.createElement(QuotedMessagePreview2, { quotedMessage }),
        isUploadEnabled && import_react102.default.createElement(UploadsPreview, null),
        import_react102.default.createElement(
          "div",
          { className: "str-chat__small-message-input--textarea-wrapper" },
          import_react102.default.createElement(ChatAutoComplete, null),
          cooldownRemaining ? import_react102.default.createElement(
            "div",
            { className: "str-chat__input-small-cooldown" },
            import_react102.default.createElement(CooldownTimer2, { cooldownInterval: cooldownRemaining, setCooldownRemaining })
          ) : import_react102.default.createElement(
            import_react102.default.Fragment,
            null,
            isUploadEnabled && import_react102.default.createElement(
              "div",
              { className: "str-chat__fileupload-wrapper", "data-testid": "fileinput" },
              import_react102.default.createElement(Tooltip, null, maxFilesLeft ? t("Attach files") : t("You've reached the maximum number of files")),
              import_react102.default.createElement(
                FileUploadButton,
                { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },
                import_react102.default.createElement(
                  "span",
                  { className: "str-chat__small-message-input-fileupload" },
                  import_react102.default.createElement(FileUploadIcon2, null)
                )
              )
            ),
            import_react102.default.createElement(
              "div",
              { className: "str-chat__emojiselect-wrapper" },
              import_react102.default.createElement(Tooltip, null, emojiPickerIsOpen ? t("Close emoji picker") : t("Open emoji picker")),
              import_react102.default.createElement(
                "button",
                { "aria-label": "Emoji picker", className: "str-chat__small-message-input-emojiselect", onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker },
                import_react102.default.createElement(EmojiIcon, null)
              )
            )
          ),
          import_react102.default.createElement(EmojiPicker, { small: true })
        ),
        !(cooldownRemaining || hideSendButton) && import_react102.default.createElement(SendButton2, { sendMessage: handleSubmit })
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/MML/MML.js
var import_react103 = __toESM(require_react());
var MMLReact = import_react103.default.lazy(function() {
  return __awaiter(void 0, void 0, void 0, function() {
    var mml;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, import("./mml-react.esm-4O2N3YTI.js")];
        case 1:
          mml = _a.sent();
          return [2, { default: mml.MML }];
      }
    });
  });
});
var MML = function(props) {
  var actionHandler = props.actionHandler, _a = props.align, align = _a === void 0 ? "right" : _a, source = props.source;
  var theme = useChatContext("MML").theme;
  return import_react103.default.createElement(
    import_react103.Suspense,
    { fallback: null },
    import_react103.default.createElement(MMLReact, { className: "mml-align-".concat(align), Loading: null, onSubmit: actionHandler, source, Success: null, theme: (theme || "").replace(" ", "-") })
  );
};

// node_modules/stream-chat-react/dist/components/Reactions/ReactionSelector.js
var import_react104 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Reactions/utils/utils.js
var isMutableRef = function(ref) {
  if (ref) {
    return ref.current !== void 0;
  }
  return false;
};

// node_modules/stream-chat-react/dist/components/Reactions/ReactionSelector.js
var UnMemoizedReactionSelector = import_react104.default.forwardRef(function(props, ref) {
  var _a;
  var _b = props.additionalEmojiProps, additionalEmojiProps = _b === void 0 ? {} : _b, propAvatar = props.Avatar, _c = props.detailedView, detailedView = _c === void 0 ? true : _c, propHandleReaction = props.handleReaction, propLatestReactions = props.latest_reactions, propOwnReactions = props.own_reactions, propReactionCounts = props.reaction_counts, propReactionOptions = props.reactionOptions, _d = props.reverse, reverse = _d === void 0 ? false : _d;
  var contextAvatar = useComponentContext("ReactionSelector").Avatar;
  var _e = useEmojiContext("ReactionSelector"), Emoji2 = _e.Emoji, emojiConfig = _e.emojiConfig;
  var _f = useMessageContext("ReactionSelector"), contextHandleReaction = _f.handleReaction, message = _f.message;
  var _g = emojiConfig || {}, defaultMinimalEmojis2 = _g.defaultMinimalEmojis, fullEmojiData = _g.emojiData, emojiSetDef2 = _g.emojiSetDef;
  var Avatar2 = propAvatar || contextAvatar || Avatar;
  var handleReaction = propHandleReaction || contextHandleReaction;
  var latestReactions = propLatestReactions || (message === null || message === void 0 ? void 0 : message.latest_reactions) || [];
  var ownReactions = propOwnReactions || (message === null || message === void 0 ? void 0 : message.own_reactions) || [];
  var reactionCounts = propReactionCounts || (message === null || message === void 0 ? void 0 : message.reaction_counts) || {};
  var reactionOptions = propReactionOptions || defaultMinimalEmojis2;
  var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);
  var emojiData = (0, import_react104.useMemo)(function() {
    return reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData);
  }, [fullEmojiData, reactionsAreCustom]);
  var _h = (0, import_react104.useState)(null), tooltipReactionType = _h[0], setTooltipReactionType = _h[1];
  var _j = (0, import_react104.useState)(null), tooltipPositions = _j[0], setTooltipPositions = _j[1];
  var targetRef = (0, import_react104.useRef)(null);
  var tooltipRef = (0, import_react104.useRef)(null);
  var showTooltip = (0, import_react104.useCallback)(function(event, reactionType) {
    targetRef.current = event.currentTarget;
    setTooltipReactionType(reactionType);
  }, []);
  var hideTooltip = (0, import_react104.useCallback)(function() {
    setTooltipReactionType(null);
    setTooltipPositions(null);
  }, []);
  (0, import_react104.useEffect)(function() {
    var _a2, _b2, _c2;
    if (tooltipReactionType) {
      var tooltip = (_a2 = tooltipRef.current) === null || _a2 === void 0 ? void 0 : _a2.getBoundingClientRect();
      var target = (_b2 = targetRef.current) === null || _b2 === void 0 ? void 0 : _b2.getBoundingClientRect();
      var container = isMutableRef(ref) ? (_c2 = ref.current) === null || _c2 === void 0 ? void 0 : _c2.getBoundingClientRect() : null;
      if (!tooltip || !target || !container)
        return;
      var tooltipPosition = tooltip.width === container.width || tooltip.x < container.x ? 0 : target.left + target.width / 2 - container.left - tooltip.width / 2;
      var arrowPosition = target.x - tooltip.x + target.width / 2 - tooltipPosition;
      setTooltipPositions({
        arrow: arrowPosition,
        tooltip: tooltipPosition
      });
    }
  }, [tooltipReactionType, ref]);
  var getUsersPerReactionType = function(type) {
    return latestReactions.map(function(reaction) {
      var _a2, _b2;
      if (reaction.type === type) {
        return ((_a2 = reaction.user) === null || _a2 === void 0 ? void 0 : _a2.name) || ((_b2 = reaction.user) === null || _b2 === void 0 ? void 0 : _b2.id);
      }
      return null;
    }).filter(Boolean);
  };
  var iHaveReactedWithReaction = function(reactionType) {
    return ownReactions.find(function(reaction) {
      return reaction.type === reactionType;
    });
  };
  var getLatestUserForReactionType = function(type) {
    var _a2;
    return ((_a2 = latestReactions.find(function(reaction) {
      return reaction.type === type && !!reaction.user;
    })) === null || _a2 === void 0 ? void 0 : _a2.user) || void 0;
  };
  return import_react104.default.createElement(
    "div",
    { className: clsx_default("str-chat__reaction-selector str-chat__message-reaction-selector", {
      "str-chat__reaction-selector--reverse": reverse
    }), "data-testid": "reaction-selector", ref },
    !!tooltipReactionType && detailedView && import_react104.default.createElement(
      "div",
      { className: "str-chat__reaction-selector-tooltip", ref: tooltipRef, style: {
        left: tooltipPositions === null || tooltipPositions === void 0 ? void 0 : tooltipPositions.tooltip,
        visibility: tooltipPositions ? "visible" : "hidden"
      } },
      import_react104.default.createElement("div", { className: "arrow", style: { left: tooltipPositions === null || tooltipPositions === void 0 ? void 0 : tooltipPositions.arrow } }),
      (_a = getUsersPerReactionType(tooltipReactionType)) === null || _a === void 0 ? void 0 : _a.map(function(user, i, users) {
        return import_react104.default.createElement("span", { className: "latest-user-username", key: "key-".concat(i, "-").concat(user) }, "".concat(user).concat(i < users.length - 1 ? ", " : ""));
      })
    ),
    import_react104.default.createElement("ul", { className: "str-chat__message-reactions-list str-chat__message-reactions-options" }, reactionOptions.map(function(reactionOption) {
      var latestUser = getLatestUserForReactionType(reactionOption.id);
      var count = reactionCounts && reactionCounts[reactionOption.id];
      return import_react104.default.createElement(
        "li",
        { key: "item-".concat(reactionOption.id) },
        import_react104.default.createElement(
          "button",
          { "aria-label": "Select Reaction: ".concat(reactionOption.name), className: clsx_default("str-chat__message-reactions-list-item str-chat__message-reactions-option", {
            "str-chat__message-reactions-option-selected": iHaveReactedWithReaction(reactionOption.id)
          }), "data-text": reactionOption.id, onClick: function(event) {
            return handleReaction(reactionOption.id, event);
          } },
          !!count && detailedView && import_react104.default.createElement("div", { className: "latest-user str-chat__message-reactions-last-user", onClick: hideTooltip, onMouseEnter: function(e) {
            return showTooltip(e, reactionOption.id);
          }, onMouseLeave: hideTooltip }, latestUser ? import_react104.default.createElement(Avatar2, { image: latestUser.image, name: latestUser.name, size: 20, user: latestUser }) : import_react104.default.createElement("div", { className: "latest-user-not-found" })),
          import_react104.default.createElement(
            import_react104.Suspense,
            { fallback: null },
            import_react104.default.createElement(
              "span",
              { className: "str-chat__message-reaction-emoji" },
              import_react104.default.createElement(Emoji2, __assign({ data: emojiData, emoji: reactionOption, size: 20 }, reactionsAreCustom ? additionalEmojiProps : emojiSetDef2))
            )
          ),
          Boolean(count) && detailedView && import_react104.default.createElement("span", { className: "str-chat__message-reactions-list-item__count" }, count || "")
        )
      );
    }))
  );
});
var ReactionSelector = import_react104.default.memo(UnMemoizedReactionSelector);

// node_modules/stream-chat-react/dist/components/Reactions/ReactionsList.js
var import_react106 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Reactions/hooks/useProcessReactions.js
var import_react105 = __toESM(require_react());
var useProcessReactions = function(params) {
  var _a = params.additionalEmojiProps, additionalEmojiProps = _a === void 0 ? {} : _a, emojiConfig = params.emojiConfig, propOwnReactions = params.own_reactions, propReactionCounts = params.reaction_counts, propReactionOptions = params.reactionOptions, propReactions = params.reactions;
  var message = useMessageContext("ReactionsList").message;
  var _b = emojiConfig || {}, defaultMinimalEmojis2 = _b.defaultMinimalEmojis, fullEmojiData = _b.emojiData, emojiSetDef2 = _b.emojiSetDef;
  var latestReactions = propReactions || message.latest_reactions || [];
  var ownReactions = propOwnReactions || (message === null || message === void 0 ? void 0 : message.own_reactions) || [];
  var reactionCounts = propReactionCounts || message.reaction_counts || {};
  var reactionOptions = propReactionOptions || defaultMinimalEmojis2;
  var reactionsAreCustom = !!(propReactionOptions === null || propReactionOptions === void 0 ? void 0 : propReactionOptions.length);
  var iHaveReactedWithReaction = (0, import_react105.useCallback)(function(reactionType) {
    return ownReactions.find(function(reaction) {
      return reaction.type === reactionType;
    });
  }, [ownReactions]);
  var getEmojiByReactionType = (0, import_react105.useCallback)(function(type) {
    return reactionOptions.find(function(option) {
      return option.id === type;
    });
  }, [reactionOptions]);
  var emojiData = (0, import_react105.useMemo)(function() {
    return reactionsAreCustom ? fullEmojiData : getStrippedEmojiData(fullEmojiData);
  }, [fullEmojiData, reactionsAreCustom]);
  var latestReactionTypes = (0, import_react105.useMemo)(function() {
    return latestReactions.reduce(function(reactionTypes, _a2) {
      var type = _a2.type;
      if (reactionTypes.indexOf(type) === -1) {
        reactionTypes.push(type);
      }
      return reactionTypes;
    }, []);
  }, [latestReactions]);
  var supportedReactionMap = (0, import_react105.useMemo)(function() {
    return reactionOptions.reduce(function(acc, _a2) {
      var id = _a2.id;
      acc[id] = true;
      return acc;
    }, {});
  }, [reactionOptions]);
  var supportedReactionsArePresent = (0, import_react105.useMemo)(function() {
    return latestReactionTypes.some(function(type) {
      return supportedReactionMap[type];
    });
  }, [latestReactionTypes, supportedReactionMap]);
  var totalReactionCount = (0, import_react105.useMemo)(function() {
    return supportedReactionsArePresent ? Object.values(reactionCounts).reduce(function(total, count) {
      return total + count;
    }, 0) : 0;
  }, [reactionCounts, supportedReactionsArePresent]);
  var aggregatedUserNamesByType = (0, import_react105.useMemo)(function() {
    return latestReactions.reduce(function(typeMap, _a2) {
      var _b2;
      var type = _a2.type, user = _a2.user;
      (_b2 = typeMap[type]) !== null && _b2 !== void 0 ? _b2 : typeMap[type] = [];
      typeMap[type].push((user === null || user === void 0 ? void 0 : user.name) || user.id);
      return typeMap;
    }, {});
  }, [latestReactions]);
  return {
    additionalEmojiProps: reactionsAreCustom ? additionalEmojiProps : emojiSetDef2,
    aggregatedUserNamesByType,
    emojiData,
    getEmojiByReactionType,
    iHaveReactedWithReaction,
    latestReactions,
    latestReactionTypes,
    reactionCounts,
    supportedReactionsArePresent,
    totalReactionCount
  };
};

// node_modules/stream-chat-react/dist/components/Reactions/ReactionsList.js
var ButtonWithTooltip = function(_a) {
  var children = _a.children, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, rest = __rest(_a, ["children", "onMouseEnter", "onMouseLeave"]);
  var _b = (0, import_react106.useState)(null), referenceElement = _b[0], setReferenceElement = _b[1];
  var _c = useEnterLeaveHandlers({
    onMouseEnter,
    onMouseLeave
  }), handleEnter = _c.handleEnter, handleLeave = _c.handleLeave, tooltipVisible = _c.tooltipVisible;
  var themeVersion = useChatContext("ButtonWithTooltip").themeVersion;
  return import_react106.default.createElement(
    import_react106.default.Fragment,
    null,
    themeVersion === "2" && import_react106.default.createElement(PopperTooltip, { referenceElement, visible: tooltipVisible }, rest.title),
    import_react106.default.createElement("button", __assign({ onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement }, rest), children)
  );
};
var UnMemoizedReactionsList = function(props) {
  var onClick = props.onClick, _a = props.reverse, reverse = _a === void 0 ? false : _a, rest = __rest(props, ["onClick", "reverse"]);
  var _b = useEmojiContext("ReactionsList"), Emoji2 = _b.Emoji, emojiConfig = _b.emojiConfig;
  var onReactionListClick = useMessageContext("ReactionsList").onReactionListClick;
  var _c = useProcessReactions(__assign({ emojiConfig }, rest)), additionalEmojiProps = _c.additionalEmojiProps, aggregatedUserNamesByType = _c.aggregatedUserNamesByType, emojiData = _c.emojiData, getEmojiByReactionType = _c.getEmojiByReactionType, iHaveReactedWithReaction = _c.iHaveReactedWithReaction, latestReactions = _c.latestReactions, latestReactionTypes = _c.latestReactionTypes, reactionCounts = _c.reactionCounts, supportedReactionsArePresent = _c.supportedReactionsArePresent, totalReactionCount = _c.totalReactionCount;
  if (!latestReactions.length)
    return null;
  if (!supportedReactionsArePresent)
    return null;
  return import_react106.default.createElement(
    "div",
    { "aria-label": "Reaction list", className: clsx_default("str-chat__reaction-list str-chat__message-reactions-container", {
      "str-chat__reaction-list--reverse": reverse
    }), "data-testid": "reaction-list", onClick: onClick || onReactionListClick, onKeyUp: onClick || onReactionListClick, role: "figure" },
    import_react106.default.createElement(
      "ul",
      { className: "str-chat__message-reactions" },
      latestReactionTypes.map(function(reactionType) {
        var emojiObject = getEmojiByReactionType(reactionType);
        var isOwnReaction = iHaveReactedWithReaction(reactionType);
        return emojiObject ? import_react106.default.createElement(
          "li",
          { className: clsx_default("str-chat__message-reaction", {
            "str-chat__message-reaction-own": isOwnReaction
          }), key: emojiObject.id },
          import_react106.default.createElement(
            ButtonWithTooltip,
            { "aria-label": "Reactions: ".concat(reactionType), title: aggregatedUserNamesByType[reactionType].join(", "), type: "button" },
            import_react106.default.createElement(
              import_react106.Suspense,
              { fallback: null },
              import_react106.default.createElement(
                "span",
                { className: "str-chat__message-reaction-emoji" },
                import_react106.default.createElement(Emoji2, __assign({ data: emojiData, emoji: emojiObject, size: 16 }, additionalEmojiProps))
              )
            ),
            " ",
            import_react106.default.createElement("span", { className: "str-chat__message-reaction-count", "data-testclass": "reaction-list-reaction-count" }, reactionCounts[reactionType])
          )
        ) : null;
      }),
      import_react106.default.createElement(
        "li",
        null,
        import_react106.default.createElement("span", { className: "str-chat__reaction-list--counter" }, totalReactionCount)
      )
    )
  );
};
var ReactionsList = import_react106.default.memo(UnMemoizedReactionsList);

// node_modules/stream-chat-react/dist/components/Reactions/SimpleReactionsList.js
var import_react107 = __toESM(require_react());
var WithTooltip = function(_a) {
  var children = _a.children, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, title = _a.title;
  var _b = (0, import_react107.useState)(null), referenceElement = _b[0], setReferenceElement = _b[1];
  var _c = useEnterLeaveHandlers({
    onMouseEnter,
    onMouseLeave
  }), handleEnter = _c.handleEnter, handleLeave = _c.handleLeave, tooltipVisible = _c.tooltipVisible;
  var themeVersion = useChatContext("WithTooltip").themeVersion;
  return import_react107.default.createElement(
    import_react107.default.Fragment,
    null,
    themeVersion === "2" && import_react107.default.createElement(PopperTooltip, { referenceElement, visible: tooltipVisible }, title),
    import_react107.default.createElement("span", { onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement }, children)
  );
};
var UnMemoizedSimpleReactionsList = function(props) {
  var propHandleReaction = props.handleReaction, rest = __rest(props, ["handleReaction"]);
  var _a = useEmojiContext("SimpleReactionsList"), Emoji2 = _a.Emoji, emojiConfig = _a.emojiConfig;
  var contextHandleReaction = useMessageContext("SimpleReactionsList").handleReaction;
  var _b = useProcessReactions(__assign({ emojiConfig }, rest)), additionalEmojiProps = _b.additionalEmojiProps, emojiData = _b.emojiData, getEmojiByReactionType = _b.getEmojiByReactionType, iHaveReactedWithReaction = _b.iHaveReactedWithReaction, latestReactions = _b.latestReactions, latestReactionTypes = _b.latestReactionTypes, supportedReactionsArePresent = _b.supportedReactionsArePresent, totalReactionCount = _b.totalReactionCount;
  var _c = (0, import_react107.useState)(void 0), tooltipReactionType = _c[0], setTooltipReactionType = _c[1];
  var themeVersion = useChatContext("SimpleReactionsList").themeVersion;
  var handleReaction = propHandleReaction || contextHandleReaction;
  if (!latestReactions.length)
    return null;
  if (!supportedReactionsArePresent)
    return null;
  var getUsersPerReactionType = function(type) {
    return latestReactions.map(function(reaction) {
      var _a2, _b2;
      if (type && reaction.type === type) {
        return ((_a2 = reaction.user) === null || _a2 === void 0 ? void 0 : _a2.name) || ((_b2 = reaction.user) === null || _b2 === void 0 ? void 0 : _b2.id);
      }
      return null;
    }).filter(Boolean);
  };
  return import_react107.default.createElement(
    "div",
    { className: "str-chat__message-reactions-container" },
    import_react107.default.createElement(
      "ul",
      { className: "str-chat__simple-reactions-list str-chat__message-reactions", "data-testid": "simple-reaction-list", onMouseLeave: function() {
        return setTooltipReactionType(void 0);
      } },
      latestReactionTypes.map(function(reactionType, i) {
        var _a2;
        var emojiObject = getEmojiByReactionType(reactionType);
        var isOwnReaction = iHaveReactedWithReaction(reactionType);
        var tooltipVisible = emojiObject && tooltipReactionType === (emojiObject === null || emojiObject === void 0 ? void 0 : emojiObject.id);
        var tooltipContent = (_a2 = getUsersPerReactionType(tooltipReactionType)) === null || _a2 === void 0 ? void 0 : _a2.join(", ");
        return emojiObject ? import_react107.default.createElement(
          "li",
          { className: clsx_default("str-chat__simple-reactions-list-item", {
            "str-chat__message-reaction-own": isOwnReaction
          }), key: "".concat(emojiObject.id, "-").concat(i), onClick: function(event) {
            return handleReaction(reactionType, event);
          }, onKeyUp: function(event) {
            return handleReaction(reactionType, event);
          } },
          import_react107.default.createElement(
            WithTooltip,
            { onMouseEnter: function() {
              return setTooltipReactionType(reactionType);
            }, onMouseLeave: function() {
              return setTooltipReactionType(void 0);
            }, title: tooltipContent },
            import_react107.default.createElement(
              import_react107.Suspense,
              { fallback: null },
              import_react107.default.createElement(Emoji2, __assign({ data: emojiData, emoji: emojiObject, size: 13 }, additionalEmojiProps))
            ),
            " ",
            tooltipVisible && themeVersion === "1" && import_react107.default.createElement(
              "div",
              { className: "str-chat__simple-reactions-list-tooltip" },
              import_react107.default.createElement("div", { className: "arrow" }),
              tooltipContent
            )
          )
        ) : null;
      }),
      import_react107.default.createElement("li", { className: "str-chat__simple-reactions-list-item--last-number" }, totalReactionCount)
    )
  );
};
var SimpleReactionsList = import_react107.default.memo(UnMemoizedSimpleReactionsList);

// node_modules/stream-chat-react/dist/components/Message/MessageSimple.js
var MessageSimpleWithContext = function(props) {
  var _a;
  var additionalMessageInputProps = props.additionalMessageInputProps, clearEditingState = props.clearEditingState, editing = props.editing, endOfGroup = props.endOfGroup, firstOfGroup = props.firstOfGroup, groupedByUser = props.groupedByUser, handleAction = props.handleAction, handleOpenThread = props.handleOpenThread, handleRetry = props.handleRetry, highlighted = props.highlighted, isMyMessage = props.isMyMessage, isReactionEnabled = props.isReactionEnabled, message = props.message, onUserClick = props.onUserClick, onUserHover = props.onUserHover, reactionSelectorRef = props.reactionSelectorRef, renderText2 = props.renderText, showDetailedReactions = props.showDetailedReactions, threadList = props.threadList;
  var _b = useComponentContext("MessageSimple"), Attachment2 = _b.Attachment, _c = _b.Avatar, Avatar2 = _c === void 0 ? Avatar : _c, _d = _b.EditMessageInput, EditMessageInput = _d === void 0 ? EditMessageForm : _d, _e = _b.MessageDeleted, MessageDeleted2 = _e === void 0 ? MessageDeleted : _e, _f = _b.MessageOptions, MessageOptions2 = _f === void 0 ? MessageOptions : _f, _g = _b.MessageRepliesCountButton, MessageRepliesCountButton2 = _g === void 0 ? MessageRepliesCountButton : _g, _h = _b.MessageStatus, MessageStatus2 = _h === void 0 ? MessageStatus : _h, _j = _b.MessageTimestamp, MessageTimestamp2 = _j === void 0 ? MessageTimestamp : _j, _k = _b.ReactionSelector, ReactionSelector2 = _k === void 0 ? ReactionSelector : _k, _l = _b.ReactionsList, ReactionsList2 = _l === void 0 ? ReactionsList : _l;
  var themeVersion = useChatContext("MessageSimple").themeVersion;
  var hasAttachment = messageHasAttachments(message);
  var hasReactions = messageHasReactions(message);
  if (message.customType === CUSTOM_MESSAGE_TYPE.date) {
    return null;
  }
  if (message.deleted_at || message.type === "deleted") {
    return import_react108.default.createElement(MessageDeleted2, { message });
  }
  var canReact = isReactionEnabled;
  var canShowReactions = hasReactions;
  var showMetadata = !groupedByUser || endOfGroup;
  var showReplyCountButton = !threadList && !!message.reply_count;
  var allowRetry = message.status === "failed" && message.errorStatusCode !== 403;
  var rootClassName = clsx_default("str-chat__message str-chat__message-simple", "str-chat__message--".concat(message.type), "str-chat__message--".concat(message.status), isMyMessage() ? "str-chat__message--me str-chat__message-simple--me" : "str-chat__message--other", message.text ? "str-chat__message--has-text" : "has-no-text", {
    "pinned-message": message.pinned,
    "str-chat__message--has-attachment": hasAttachment,
    "str-chat__message--highlighted": highlighted,
    "str-chat__message--with-reactions str-chat__message-with-thread-link": canShowReactions,
    "str-chat__message-send-can-be-retried": (message === null || message === void 0 ? void 0 : message.status) === "failed" && (message === null || message === void 0 ? void 0 : message.errorStatusCode) !== 403,
    "str-chat__virtual-message__wrapper--end": endOfGroup,
    "str-chat__virtual-message__wrapper--first": firstOfGroup,
    "str-chat__virtual-message__wrapper--group": groupedByUser
  });
  return import_react108.default.createElement(
    import_react108.default.Fragment,
    null,
    editing && import_react108.default.createElement(
      Modal,
      { onClose: clearEditingState, open: editing },
      import_react108.default.createElement(MessageInput, __assign({ clearEditingState, grow: true, hideSendButton: true, Input: EditMessageInput, message }, additionalMessageInputProps))
    ),
    import_react108.default.createElement(
      "div",
      { className: rootClassName, key: message.id },
      themeVersion === "1" && import_react108.default.createElement(MessageStatus2, null),
      message.user && import_react108.default.createElement(Avatar2, { image: message.user.image, name: message.user.name || message.user.id, onClick: onUserClick, onMouseOver: onUserHover, user: message.user }),
      import_react108.default.createElement(
        "div",
        { className: clsx_default("str-chat__message-inner", {
          "str-chat__simple-message--error-failed": allowRetry
        }), "data-testid": "message-inner", onClick: allowRetry ? function() {
          return handleRetry(message);
        } : void 0, onKeyUp: allowRetry ? function() {
          return handleRetry(message);
        } : void 0 },
        import_react108.default.createElement(MessageOptions2, null),
        import_react108.default.createElement(
          "div",
          { className: "str-chat__message-reactions-host" },
          canShowReactions && import_react108.default.createElement(ReactionsList2, { reverse: true }),
          showDetailedReactions && canReact && import_react108.default.createElement(ReactionSelector2, { ref: reactionSelectorRef })
        ),
        import_react108.default.createElement(
          "div",
          { className: "str-chat__message-bubble" },
          ((_a = message.attachments) === null || _a === void 0 ? void 0 : _a.length) && !message.quoted_message ? import_react108.default.createElement(Attachment2, { actionHandler: handleAction, attachments: message.attachments }) : null,
          import_react108.default.createElement(MessageText, { message, renderText: renderText2 }),
          message.mml && import_react108.default.createElement(MML, { actionHandler: handleAction, align: isMyMessage() ? "right" : "left", source: message.mml }),
          themeVersion === "2" && import_react108.default.createElement(MessageErrorIcon, null)
        ),
        showReplyCountButton && themeVersion === "1" && import_react108.default.createElement(MessageRepliesCountButton2, { onClick: handleOpenThread, reply_count: message.reply_count }),
        showMetadata && themeVersion === "1" && import_react108.default.createElement(
          "div",
          { className: "str-chat__message-data str-chat__message-simple-data" },
          !isMyMessage() && message.user ? import_react108.default.createElement("span", { className: "str-chat__message-simple-name" }, message.user.name || message.user.id) : null,
          import_react108.default.createElement(MessageTimestamp2, { calendar: true, customClass: "str-chat__message-simple-timestamp" })
        )
      ),
      showReplyCountButton && themeVersion === "2" && import_react108.default.createElement(MessageRepliesCountButton2, { onClick: handleOpenThread, reply_count: message.reply_count }),
      showMetadata && themeVersion === "2" && import_react108.default.createElement(
        "div",
        { className: "str-chat__message-data str-chat__message-simple-data str-chat__message-metadata" },
        import_react108.default.createElement(MessageStatus2, null),
        !isMyMessage() && !!message.user && import_react108.default.createElement("span", { className: "str-chat__message-simple-name" }, message.user.name || message.user.id),
        import_react108.default.createElement(MessageTimestamp2, { calendar: true, customClass: "str-chat__message-simple-timestamp" })
      )
    )
  );
};
var MemoizedMessageSimple = import_react108.default.memo(MessageSimpleWithContext, areMessageUIPropsEqual);
var MessageSimple = function(props) {
  var messageContext = useMessageContext("MessageSimple");
  return import_react108.default.createElement(MemoizedMessageSimple, __assign({}, messageContext, props));
};

// node_modules/stream-chat-react/dist/components/MessageInput/DropzoneProvider.js
var import_react109 = __toESM(require_react());
var DropzoneInner = function(_a) {
  var children = _a.children;
  var _b = useChannelStateContext("DropzoneProvider"), acceptedFiles = _b.acceptedFiles, multipleUploads = _b.multipleUploads;
  var _c = useMessageInputContext("DropzoneProvider"), cooldownRemaining = _c.cooldownRemaining, isUploadEnabled = _c.isUploadEnabled, maxFilesLeft = _c.maxFilesLeft, uploadNewFiles = _c.uploadNewFiles;
  return import_react109.default.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads }, children);
};
var DropzoneProvider = function(props) {
  var cooldownTimerState = useCooldownTimer();
  var messageInputState = useMessageInputState(props);
  var messageInputContextValue = useCreateMessageInputContext(__assign(__assign(__assign({}, cooldownTimerState), messageInputState), props));
  return import_react109.default.createElement(
    MessageInputContextProvider,
    { value: messageInputContextValue },
    import_react109.default.createElement(DropzoneInner, null, props.children)
  );
};

// node_modules/stream-chat-react/dist/constants/limits.js
var DEFAULT_INITIAL_CHANNEL_PAGE_SIZE = 25;
var DEFAULT_NEXT_CHANNEL_PAGE_SIZE = 100;
var DEFAULT_THREAD_PAGE_SIZE = 50;

// node_modules/stream-chat-react/dist/components/MessageList/utils.js
var processMessages = function(params) {
  var _a, _b;
  var enableDateSeparator = params.enableDateSeparator, hideDeletedMessages = params.hideDeletedMessages, hideNewMessageSeparator = params.hideNewMessageSeparator, lastRead = params.lastRead, messages = params.messages, setGiphyPreviewMessage = params.setGiphyPreviewMessage, userId = params.userId;
  var unread = false;
  var ephemeralMessagePresent = false;
  var lastDateSeparator;
  var newMessages = [];
  for (var i = 0; i < messages.length; i += 1) {
    var message = messages[i];
    if (hideDeletedMessages && message.type === "deleted") {
      continue;
    }
    if (setGiphyPreviewMessage && message.type === "ephemeral" && message.command === "giphy") {
      ephemeralMessagePresent = true;
      setGiphyPreviewMessage(message);
      continue;
    }
    var messageDate = message.created_at && isDate(message.created_at) && message.created_at.toDateString() || "";
    var previousMessage = messages[i - 1];
    var prevMessageDate = messageDate;
    if (enableDateSeparator && (previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.created_at) && isDate(previousMessage.created_at)) {
      prevMessageDate = previousMessage.created_at.toDateString();
    }
    if (!unread && !hideNewMessageSeparator) {
      unread = lastRead && message.created_at && new Date(lastRead) < message.created_at || false;
      if (enableDateSeparator && unread && ((_a = message.user) === null || _a === void 0 ? void 0 : _a.id) !== userId) {
        newMessages.push({
          customType: CUSTOM_MESSAGE_TYPE.date,
          date: message.created_at,
          id: makeDateMessageId(message.created_at),
          unread
        });
      }
    }
    if (enableDateSeparator && (i === 0 || // always put date separator before the first message
    messageDate !== prevMessageDate || // add date separator btw. 2 messages created on different date
    // if hiding deleted messages replace the previous deleted message(s) with A separator if the last rendered message was created on different date
    hideDeletedMessages && (previousMessage === null || previousMessage === void 0 ? void 0 : previousMessage.type) === "deleted" && lastDateSeparator !== messageDate) && ((_b = newMessages === null || newMessages === void 0 ? void 0 : newMessages[newMessages.length - 1]) === null || _b === void 0 ? void 0 : _b.customType) !== CUSTOM_MESSAGE_TYPE.date) {
      lastDateSeparator = messageDate;
      newMessages.push({
        customType: CUSTOM_MESSAGE_TYPE.date,
        date: message.created_at,
        id: makeDateMessageId(message.created_at)
      }, message);
    } else {
      newMessages.push(message);
    }
  }
  if (setGiphyPreviewMessage && !ephemeralMessagePresent) {
    setGiphyPreviewMessage(void 0);
  }
  return newMessages;
};
var makeDateMessageId = function(date) {
  var idSuffix;
  try {
    idSuffix = !date ? nanoid() : date instanceof Date ? date.toISOString() : date;
  } catch (e) {
    idSuffix = nanoid();
  }
  return "".concat(CUSTOM_MESSAGE_TYPE.date, "-").concat(idSuffix);
};
var getLastReceived = function(messages) {
  for (var i = messages.length - 1; i > 0; i -= 1) {
    if (messages[i].status === "received") {
      return messages[i].id;
    }
  }
  return null;
};
var getReadStates = function(messages, read2, returnAllReadData) {
  if (read2 === void 0) {
    read2 = {};
  }
  var readData = {};
  Object.values(read2).forEach(function(readState) {
    if (!readState.last_read)
      return;
    var userLastReadMsgId;
    messages.forEach(function(msg) {
      if (msg.created_at && msg.created_at < readState.last_read) {
        userLastReadMsgId = msg.id;
        if (returnAllReadData) {
          if (!readData[userLastReadMsgId]) {
            readData[userLastReadMsgId] = [];
          }
          readData[userLastReadMsgId].push(readState.user);
        }
      }
    });
    if (userLastReadMsgId && !returnAllReadData) {
      if (!readData[userLastReadMsgId]) {
        readData[userLastReadMsgId] = [];
      }
      readData[userLastReadMsgId].push(readState.user);
    }
  });
  return readData;
};
var insertIntro = function(messages, headerPosition) {
  var newMessages = messages;
  var intro = {
    customType: CUSTOM_MESSAGE_TYPE.intro
  };
  if (!headerPosition) {
    newMessages.unshift(intro);
    return newMessages;
  }
  if (!newMessages.length) {
    newMessages.unshift(intro);
    return newMessages;
  }
  for (var i = 0; i < messages.length; i += 1) {
    var message = messages[i];
    var messageTime = message.created_at && isDate(message.created_at) ? message.created_at.getTime() : null;
    var nextMessage = messages[i + 1];
    var nextMessageTime = nextMessage.created_at && isDate(nextMessage.created_at) ? nextMessage.created_at.getTime() : null;
    if (messageTime && messageTime < headerPosition) {
      if (nextMessageTime && nextMessageTime < headerPosition) {
        if (messages[i + 1] && messages[i + 1].customType === CUSTOM_MESSAGE_TYPE.date)
          continue;
        if (!nextMessageTime) {
          newMessages.push(intro);
          return newMessages;
        }
      } else {
        newMessages.splice(i + 1, 0, intro);
        return newMessages;
      }
    }
  }
  return newMessages;
};
var getGroupStyles = function(message, previousMessage, nextMessage, noGroupByUser) {
  var _a, _b, _c, _d, _e, _f, _g;
  if (message.customType === CUSTOM_MESSAGE_TYPE.date)
    return "";
  if (message.customType === CUSTOM_MESSAGE_TYPE.intro)
    return "";
  if (noGroupByUser || ((_a = message.attachments) === null || _a === void 0 ? void 0 : _a.length) !== 0)
    return "single";
  var isTopMessage = !previousMessage || previousMessage.customType === CUSTOM_MESSAGE_TYPE.intro || previousMessage.customType === CUSTOM_MESSAGE_TYPE.date || previousMessage.type === "system" || ((_b = previousMessage.attachments) === null || _b === void 0 ? void 0 : _b.length) !== 0 || ((_c = message.user) === null || _c === void 0 ? void 0 : _c.id) !== ((_d = previousMessage.user) === null || _d === void 0 ? void 0 : _d.id) || previousMessage.type === "error" || previousMessage.deleted_at || message.reaction_counts && Object.keys(message.reaction_counts).length > 0;
  var isBottomMessage = !nextMessage || nextMessage.customType === CUSTOM_MESSAGE_TYPE.date || nextMessage.type === "system" || nextMessage.customType === CUSTOM_MESSAGE_TYPE.intro || ((_e = nextMessage.attachments) === null || _e === void 0 ? void 0 : _e.length) !== 0 || ((_f = message.user) === null || _f === void 0 ? void 0 : _f.id) !== ((_g = nextMessage.user) === null || _g === void 0 ? void 0 : _g.id) || nextMessage.type === "error" || nextMessage.deleted_at || nextMessage.reaction_counts && Object.keys(nextMessage.reaction_counts).length > 0;
  if (!isTopMessage && !isBottomMessage) {
    if (message.deleted_at || message.type === "error")
      return "single";
    return "middle";
  }
  if (isBottomMessage) {
    if (isTopMessage || message.deleted_at || message.type === "error")
      return "single";
    return "bottom";
  }
  if (isTopMessage)
    return "top";
  return "";
};
var hasMoreMessagesProbably = function(returnedCountMessages, limit) {
  return returnedCountMessages === limit;
};
var hasNotMoreMessages = function(returnedCountMessages, limit) {
  return returnedCountMessages < limit;
};

// node_modules/stream-chat-react/dist/stream-emoji.json
var stream_emoji_default = { compressed: true, categories: [{ id: "people", name: "Smileys & People", emojis: ["grinning", "smiley", "smile", "grin", "laughing", "sweat_smile", "rolling_on_the_floor_laughing", "joy", "slightly_smiling_face", "upside_down_face", "wink", "blush", "innocent", "smiling_face_with_3_hearts", "heart_eyes", "star-struck", "kissing_heart", "kissing", "relaxed", "kissing_closed_eyes", "kissing_smiling_eyes", "yum", "stuck_out_tongue", "stuck_out_tongue_winking_eye", "zany_face", "stuck_out_tongue_closed_eyes", "money_mouth_face", "hugging_face", "face_with_hand_over_mouth", "shushing_face", "thinking_face", "zipper_mouth_face", "face_with_raised_eyebrow", "neutral_face", "expressionless", "no_mouth", "smirk", "unamused", "face_with_rolling_eyes", "grimacing", "lying_face", "relieved", "pensive", "sleepy", "drooling_face", "sleeping", "mask", "face_with_thermometer", "face_with_head_bandage", "nauseated_face", "face_vomiting", "sneezing_face", "hot_face", "cold_face", "woozy_face", "dizzy_face", "exploding_head", "face_with_cowboy_hat", "partying_face", "sunglasses", "nerd_face", "face_with_monocle", "confused", "worried", "slightly_frowning_face", "white_frowning_face", "open_mouth", "hushed", "astonished", "flushed", "pleading_face", "frowning", "anguished", "fearful", "cold_sweat", "disappointed_relieved", "cry", "sob", "scream", "confounded", "persevere", "disappointed", "sweat", "weary", "tired_face", "yawning_face", "triumph", "rage", "angry", "face_with_symbols_on_mouth", "smiling_imp", "imp", "skull", "skull_and_crossbones", "hankey", "clown_face", "japanese_ogre", "japanese_goblin", "ghost", "alien", "space_invader", "robot_face", "smiley_cat", "smile_cat", "joy_cat", "heart_eyes_cat", "smirk_cat", "kissing_cat", "scream_cat", "crying_cat_face", "pouting_cat", "see_no_evil", "hear_no_evil", "speak_no_evil", "wave", "raised_back_of_hand", "raised_hand_with_fingers_splayed", "hand", "spock-hand", "ok_hand", "pinching_hand", "v", "crossed_fingers", "i_love_you_hand_sign", "the_horns", "call_me_hand", "point_left", "point_right", "point_up_2", "middle_finger", "point_down", "point_up", "+1", "-1", "fist", "facepunch", "left-facing_fist", "right-facing_fist", "clap", "raised_hands", "open_hands", "palms_up_together", "handshake", "pray", "writing_hand", "nail_care", "selfie", "muscle", "mechanical_arm", "mechanical_leg", "leg", "foot", "ear", "ear_with_hearing_aid", "nose", "brain", "tooth", "bone", "eyes", "eye", "tongue", "lips", "baby", "child", "boy", "girl", "adult", "man", "bearded_person", "red_haired_man", "curly_haired_man", "white_haired_man", "bald_man", "woman", "red_haired_woman", "curly_haired_woman", "white_haired_woman", "bald_woman", "blond-haired-woman", "blond-haired-man", "older_adult", "older_man", "older_woman", "man-frowning", "woman-frowning", "man-pouting", "woman-pouting", "man-gesturing-no", "woman-gesturing-no", "man-gesturing-ok", "woman-gesturing-ok", "man-tipping-hand", "woman-tipping-hand", "man-raising-hand", "woman-raising-hand", "deaf_person", "deaf_man", "deaf_woman", "man-bowing", "woman-bowing", "man-facepalming", "woman-facepalming", "man-shrugging", "woman-shrugging", "male-doctor", "female-doctor", "male-student", "female-student", "male-teacher", "female-teacher", "male-judge", "female-judge", "male-farmer", "female-farmer", "male-cook", "female-cook", "male-mechanic", "female-mechanic", "male-factory-worker", "female-factory-worker", "male-office-worker", "female-office-worker", "male-scientist", "female-scientist", "male-technologist", "female-technologist", "male-singer", "female-singer", "male-artist", "female-artist", "male-pilot", "female-pilot", "male-astronaut", "female-astronaut", "male-firefighter", "female-firefighter", "male-police-officer", "female-police-officer", "male-guard", "female-guard", "male-construction-worker", "female-construction-worker", "prince", "princess", "man-wearing-turban", "woman-wearing-turban", "man_with_gua_pi_mao", "person_with_headscarf", "man_in_tuxedo", "bride_with_veil", "pregnant_woman", "breast-feeding", "angel", "santa", "mrs_claus", "superhero", "male_superhero", "female_superhero", "supervillain", "male_supervillain", "female_supervillain", "mage", "male_mage", "female_mage", "fairy", "male_fairy", "female_fairy", "vampire", "male_vampire", "female_vampire", "merperson", "merman", "mermaid", "elf", "male_elf", "female_elf", "genie", "male_genie", "female_genie", "zombie", "male_zombie", "female_zombie", "man-getting-massage", "woman-getting-massage", "man-getting-haircut", "woman-getting-haircut", "man-walking", "woman-walking", "standing_person", "man_standing", "woman_standing", "kneeling_person", "man_kneeling", "woman_kneeling", "man_with_probing_cane", "woman_with_probing_cane", "man_in_motorized_wheelchair", "woman_in_motorized_wheelchair", "man_in_manual_wheelchair", "woman_in_manual_wheelchair", "man-running", "woman-running", "dancer", "man_dancing", "man_in_business_suit_levitating", "dancers", "man-with-bunny-ears-partying", "woman-with-bunny-ears-partying", "person_in_steamy_room", "man_in_steamy_room", "woman_in_steamy_room", "person_climbing", "man_climbing", "woman_climbing", "fencer", "horse_racing", "skier", "snowboarder", "man-surfing", "woman-surfing", "man-rowing-boat", "woman-rowing-boat", "man-swimming", "woman-swimming", "man-biking", "woman-biking", "man-mountain-biking", "woman-mountain-biking", "man-cartwheeling", "woman-cartwheeling", "wrestlers", "man-wrestling", "woman-wrestling", "man-playing-water-polo", "woman-playing-water-polo", "man-playing-handball", "woman-playing-handball", "juggling", "man-juggling", "woman-juggling", "person_in_lotus_position", "man_in_lotus_position", "woman_in_lotus_position", "bath", "sleeping_accommodation", "people_holding_hands", "two_women_holding_hands", "couple", "two_men_holding_hands", "couplekiss", "woman-kiss-man", "man-kiss-man", "woman-kiss-woman", "couple_with_heart", "woman-heart-man", "man-heart-man", "woman-heart-woman", "family", "man-woman-boy", "man-woman-girl", "man-woman-girl-boy", "man-woman-boy-boy", "man-woman-girl-girl", "man-man-boy", "man-man-girl", "man-man-girl-boy", "man-man-boy-boy", "man-man-girl-girl", "woman-woman-boy", "woman-woman-girl", "woman-woman-girl-boy", "woman-woman-boy-boy", "woman-woman-girl-girl", "man-boy", "man-boy-boy", "man-girl", "man-girl-boy", "man-girl-girl", "woman-boy", "woman-boy-boy", "woman-girl", "woman-girl-boy", "woman-girl-girl", "speaking_head_in_silhouette", "bust_in_silhouette", "busts_in_silhouette", "footprints", "kiss", "love_letter", "cupid", "gift_heart", "sparkling_heart", "heartpulse", "heartbeat", "revolving_hearts", "two_hearts", "heart_decoration", "heavy_heart_exclamation_mark_ornament", "broken_heart", "heart", "orange_heart", "yellow_heart", "green_heart", "blue_heart", "purple_heart", "brown_heart", "black_heart", "white_heart", "100", "anger", "boom", "dizzy", "sweat_drops", "dash", "hole", "bomb", "speech_balloon", "left_speech_bubble", "right_anger_bubble", "thought_balloon", "zzz"] }, { id: "nature", name: "Animals & Nature", emojis: ["monkey_face", "monkey", "gorilla", "orangutan", "dog", "dog2", "guide_dog", "service_dog", "poodle", "wolf", "fox_face", "raccoon", "cat", "cat2", "lion_face", "tiger", "tiger2", "leopard", "horse", "racehorse", "unicorn_face", "zebra_face", "deer", "cow", "ox", "water_buffalo", "cow2", "pig", "pig2", "boar", "pig_nose", "ram", "sheep", "goat", "dromedary_camel", "camel", "llama", "giraffe_face", "elephant", "rhinoceros", "hippopotamus", "mouse", "mouse2", "rat", "hamster", "rabbit", "rabbit2", "chipmunk", "hedgehog", "bat", "bear", "koala", "panda_face", "sloth", "otter", "skunk", "kangaroo", "badger", "feet", "turkey", "chicken", "rooster", "hatching_chick", "baby_chick", "hatched_chick", "bird", "penguin", "dove_of_peace", "eagle", "duck", "swan", "owl", "flamingo", "peacock", "parrot", "frog", "crocodile", "turtle", "lizard", "snake", "dragon_face", "dragon", "sauropod", "t-rex", "whale", "whale2", "dolphin", "fish", "tropical_fish", "blowfish", "shark", "octopus", "shell", "snail", "butterfly", "bug", "ant", "bee", "beetle", "cricket", "spider", "spider_web", "scorpion", "mosquito", "microbe", "bouquet", "cherry_blossom", "white_flower", "rosette", "rose", "wilted_flower", "hibiscus", "sunflower", "blossom", "tulip", "seedling", "evergreen_tree", "deciduous_tree", "palm_tree", "cactus", "ear_of_rice", "herb", "shamrock", "four_leaf_clover", "maple_leaf", "fallen_leaf", "leaves"] }, { id: "foods", name: "Food & Drink", emojis: ["grapes", "melon", "watermelon", "tangerine", "lemon", "banana", "pineapple", "mango", "apple", "green_apple", "pear", "peach", "cherries", "strawberry", "kiwifruit", "tomato", "coconut", "avocado", "eggplant", "potato", "carrot", "corn", "hot_pepper", "cucumber", "leafy_green", "broccoli", "garlic", "onion", "mushroom", "peanuts", "chestnut", "bread", "croissant", "baguette_bread", "pretzel", "bagel", "pancakes", "waffle", "cheese_wedge", "meat_on_bone", "poultry_leg", "cut_of_meat", "bacon", "hamburger", "fries", "pizza", "hotdog", "sandwich", "taco", "burrito", "stuffed_flatbread", "falafel", "egg", "fried_egg", "shallow_pan_of_food", "stew", "bowl_with_spoon", "green_salad", "popcorn", "butter", "salt", "canned_food", "bento", "rice_cracker", "rice_ball", "rice", "curry", "ramen", "spaghetti", "sweet_potato", "oden", "sushi", "fried_shrimp", "fish_cake", "moon_cake", "dango", "dumpling", "fortune_cookie", "takeout_box", "crab", "lobster", "shrimp", "squid", "oyster", "icecream", "shaved_ice", "ice_cream", "doughnut", "cookie", "birthday", "cake", "cupcake", "pie", "chocolate_bar", "candy", "lollipop", "custard", "honey_pot", "baby_bottle", "glass_of_milk", "coffee", "tea", "sake", "champagne", "wine_glass", "cocktail", "tropical_drink", "beer", "beers", "clinking_glasses", "tumbler_glass", "cup_with_straw", "beverage_box", "mate_drink", "ice_cube", "chopsticks", "knife_fork_plate", "fork_and_knife", "spoon", "hocho", "amphora"] }, { id: "activity", name: "Activities", emojis: ["jack_o_lantern", "christmas_tree", "fireworks", "sparkler", "firecracker", "sparkles", "balloon", "tada", "confetti_ball", "tanabata_tree", "bamboo", "dolls", "flags", "wind_chime", "rice_scene", "red_envelope", "ribbon", "gift", "reminder_ribbon", "admission_tickets", "ticket", "medal", "trophy", "sports_medal", "first_place_medal", "second_place_medal", "third_place_medal", "soccer", "baseball", "softball", "basketball", "volleyball", "football", "rugby_football", "tennis", "flying_disc", "bowling", "cricket_bat_and_ball", "field_hockey_stick_and_ball", "ice_hockey_stick_and_puck", "lacrosse", "table_tennis_paddle_and_ball", "badminton_racquet_and_shuttlecock", "boxing_glove", "martial_arts_uniform", "goal_net", "golf", "ice_skate", "fishing_pole_and_fish", "diving_mask", "running_shirt_with_sash", "ski", "sled", "curling_stone", "dart", "yo-yo", "kite", "8ball", "crystal_ball", "nazar_amulet", "video_game", "joystick", "slot_machine", "game_die", "jigsaw", "teddy_bear", "spades", "hearts", "diamonds", "clubs", "chess_pawn", "black_joker", "mahjong", "flower_playing_cards", "performing_arts", "frame_with_picture", "art", "thread", "yarn"] }, { id: "places", name: "Travel & Places", emojis: ["earth_africa", "earth_americas", "earth_asia", "globe_with_meridians", "world_map", "japan", "compass", "snow_capped_mountain", "mountain", "volcano", "mount_fuji", "camping", "beach_with_umbrella", "desert", "desert_island", "national_park", "stadium", "classical_building", "building_construction", "bricks", "house_buildings", "derelict_house_building", "house", "house_with_garden", "office", "post_office", "european_post_office", "hospital", "bank", "hotel", "love_hotel", "convenience_store", "school", "department_store", "factory", "japanese_castle", "european_castle", "wedding", "tokyo_tower", "statue_of_liberty", "church", "mosque", "hindu_temple", "synagogue", "shinto_shrine", "kaaba", "fountain", "tent", "foggy", "night_with_stars", "cityscape", "sunrise_over_mountains", "sunrise", "city_sunset", "city_sunrise", "bridge_at_night", "hotsprings", "carousel_horse", "ferris_wheel", "roller_coaster", "barber", "circus_tent", "steam_locomotive", "railway_car", "bullettrain_side", "bullettrain_front", "train2", "metro", "light_rail", "station", "tram", "monorail", "mountain_railway", "train", "bus", "oncoming_bus", "trolleybus", "minibus", "ambulance", "fire_engine", "police_car", "oncoming_police_car", "taxi", "oncoming_taxi", "car", "oncoming_automobile", "blue_car", "truck", "articulated_lorry", "tractor", "racing_car", "racing_motorcycle", "motor_scooter", "manual_wheelchair", "motorized_wheelchair", "auto_rickshaw", "bike", "scooter", "skateboard", "busstop", "motorway", "railway_track", "oil_drum", "fuelpump", "rotating_light", "traffic_light", "vertical_traffic_light", "octagonal_sign", "construction", "anchor", "boat", "canoe", "speedboat", "passenger_ship", "ferry", "motor_boat", "ship", "airplane", "small_airplane", "airplane_departure", "airplane_arriving", "parachute", "seat", "helicopter", "suspension_railway", "mountain_cableway", "aerial_tramway", "satellite", "rocket", "flying_saucer", "bellhop_bell", "luggage", "hourglass", "hourglass_flowing_sand", "watch", "alarm_clock", "stopwatch", "timer_clock", "mantelpiece_clock", "clock12", "clock1230", "clock1", "clock130", "clock2", "clock230", "clock3", "clock330", "clock4", "clock430", "clock5", "clock530", "clock6", "clock630", "clock7", "clock730", "clock8", "clock830", "clock9", "clock930", "clock10", "clock1030", "clock11", "clock1130", "new_moon", "waxing_crescent_moon", "first_quarter_moon", "moon", "full_moon", "waning_gibbous_moon", "last_quarter_moon", "waning_crescent_moon", "crescent_moon", "new_moon_with_face", "first_quarter_moon_with_face", "last_quarter_moon_with_face", "thermometer", "sunny", "full_moon_with_face", "sun_with_face", "ringed_planet", "star", "star2", "stars", "milky_way", "cloud", "partly_sunny", "thunder_cloud_and_rain", "mostly_sunny", "barely_sunny", "partly_sunny_rain", "rain_cloud", "snow_cloud", "lightning", "tornado", "fog", "wind_blowing_face", "cyclone", "rainbow", "closed_umbrella", "umbrella", "umbrella_with_rain_drops", "umbrella_on_ground", "zap", "snowflake", "snowman", "snowman_without_snow", "comet", "fire", "droplet", "ocean"] }, { id: "objects", name: "Objects", emojis: ["eyeglasses", "dark_sunglasses", "goggles", "lab_coat", "safety_vest", "necktie", "shirt", "jeans", "scarf", "gloves", "coat", "socks", "dress", "kimono", "sari", "one-piece_swimsuit", "briefs", "shorts", "bikini", "womans_clothes", "purse", "handbag", "pouch", "shopping_bags", "school_satchel", "mans_shoe", "athletic_shoe", "hiking_boot", "womans_flat_shoe", "high_heel", "sandal", "ballet_shoes", "boot", "crown", "womans_hat", "tophat", "mortar_board", "billed_cap", "helmet_with_white_cross", "prayer_beads", "lipstick", "ring", "gem", "mute", "speaker", "sound", "loud_sound", "loudspeaker", "mega", "postal_horn", "bell", "no_bell", "musical_score", "musical_note", "notes", "studio_microphone", "level_slider", "control_knobs", "microphone", "headphones", "radio", "saxophone", "guitar", "musical_keyboard", "trumpet", "violin", "banjo", "drum_with_drumsticks", "iphone", "calling", "phone", "telephone_receiver", "pager", "fax", "battery", "electric_plug", "computer", "desktop_computer", "printer", "keyboard", "three_button_mouse", "trackball", "minidisc", "floppy_disk", "cd", "dvd", "abacus", "movie_camera", "film_frames", "film_projector", "clapper", "tv", "camera", "camera_with_flash", "video_camera", "vhs", "mag", "mag_right", "candle", "bulb", "flashlight", "izakaya_lantern", "diya_lamp", "notebook_with_decorative_cover", "closed_book", "book", "green_book", "blue_book", "orange_book", "books", "notebook", "ledger", "page_with_curl", "scroll", "page_facing_up", "newspaper", "rolled_up_newspaper", "bookmark_tabs", "bookmark", "label", "moneybag", "yen", "dollar", "euro", "pound", "money_with_wings", "credit_card", "receipt", "chart", "currency_exchange", "heavy_dollar_sign", "email", "e-mail", "incoming_envelope", "envelope_with_arrow", "outbox_tray", "inbox_tray", "package", "mailbox", "mailbox_closed", "mailbox_with_mail", "mailbox_with_no_mail", "postbox", "ballot_box_with_ballot", "pencil2", "black_nib", "lower_left_fountain_pen", "lower_left_ballpoint_pen", "lower_left_paintbrush", "lower_left_crayon", "memo", "briefcase", "file_folder", "open_file_folder", "card_index_dividers", "date", "calendar", "spiral_note_pad", "spiral_calendar_pad", "card_index", "chart_with_upwards_trend", "chart_with_downwards_trend", "bar_chart", "clipboard", "pushpin", "round_pushpin", "paperclip", "linked_paperclips", "straight_ruler", "triangular_ruler", "scissors", "card_file_box", "file_cabinet", "wastebasket", "lock", "unlock", "lock_with_ink_pen", "closed_lock_with_key", "key", "old_key", "hammer", "axe", "pick", "hammer_and_pick", "hammer_and_wrench", "dagger_knife", "crossed_swords", "gun", "bow_and_arrow", "shield", "wrench", "nut_and_bolt", "gear", "compression", "scales", "probing_cane", "link", "chains", "toolbox", "magnet", "alembic", "test_tube", "petri_dish", "dna", "microscope", "telescope", "satellite_antenna", "syringe", "drop_of_blood", "pill", "adhesive_bandage", "stethoscope", "door", "bed", "couch_and_lamp", "chair", "toilet", "shower", "bathtub", "razor", "lotion_bottle", "safety_pin", "broom", "basket", "roll_of_paper", "soap", "sponge", "fire_extinguisher", "shopping_trolley", "smoking", "coffin", "funeral_urn", "moyai"] }, { id: "symbols", name: "Symbols", emojis: ["atm", "put_litter_in_its_place", "potable_water", "wheelchair", "mens", "womens", "restroom", "baby_symbol", "wc", "passport_control", "customs", "baggage_claim", "left_luggage", "warning", "children_crossing", "no_entry", "no_entry_sign", "no_bicycles", "no_smoking", "do_not_litter", "non-potable_water", "no_pedestrians", "no_mobile_phones", "underage", "radioactive_sign", "biohazard_sign", "arrow_up", "arrow_upper_right", "arrow_right", "arrow_lower_right", "arrow_down", "arrow_lower_left", "arrow_left", "arrow_upper_left", "arrow_up_down", "left_right_arrow", "leftwards_arrow_with_hook", "arrow_right_hook", "arrow_heading_up", "arrow_heading_down", "arrows_clockwise", "arrows_counterclockwise", "back", "end", "on", "soon", "top", "place_of_worship", "atom_symbol", "om_symbol", "star_of_david", "wheel_of_dharma", "yin_yang", "latin_cross", "orthodox_cross", "star_and_crescent", "peace_symbol", "menorah_with_nine_branches", "six_pointed_star", "aries", "taurus", "gemini", "cancer", "leo", "virgo", "libra", "scorpius", "sagittarius", "capricorn", "aquarius", "pisces", "ophiuchus", "twisted_rightwards_arrows", "repeat", "repeat_one", "arrow_forward", "fast_forward", "black_right_pointing_double_triangle_with_vertical_bar", "black_right_pointing_triangle_with_double_vertical_bar", "arrow_backward", "rewind", "black_left_pointing_double_triangle_with_vertical_bar", "arrow_up_small", "arrow_double_up", "arrow_down_small", "arrow_double_down", "double_vertical_bar", "black_square_for_stop", "black_circle_for_record", "eject", "cinema", "low_brightness", "high_brightness", "signal_strength", "vibration_mode", "mobile_phone_off", "female_sign", "male_sign", "medical_symbol", "infinity", "recycle", "fleur_de_lis", "trident", "name_badge", "beginner", "o", "white_check_mark", "ballot_box_with_check", "heavy_check_mark", "heavy_multiplication_x", "x", "negative_squared_cross_mark", "heavy_plus_sign", "heavy_minus_sign", "heavy_division_sign", "curly_loop", "loop", "part_alternation_mark", "eight_spoked_asterisk", "eight_pointed_black_star", "sparkle", "bangbang", "interrobang", "question", "grey_question", "grey_exclamation", "exclamation", "wavy_dash", "tm", "keycap_ten", "capital_abcd", "abcd", "1234", "symbols", "abc", "a", "ab", "b", "cl", "cool", "free", "information_source", "id", "m", "new", "ng", "o2", "ok", "parking", "sos", "up", "vs", "koko", "sa", "u6708", "u6709", "u6307", "ideograph_advantage", "u5272", "u7121", "u7981", "accept", "u7533", "u5408", "u7a7a", "congratulations", "secret", "u55b6", "u6e80", "red_circle", "large_orange_circle", "large_yellow_circle", "large_green_circle", "large_blue_circle", "large_purple_circle", "large_brown_circle", "black_circle", "white_circle", "large_red_square", "large_orange_square", "large_yellow_square", "large_green_square", "large_blue_square", "large_purple_square", "large_brown_square", "black_large_square", "white_large_square", "black_medium_square", "white_medium_square", "black_medium_small_square", "white_medium_small_square", "black_small_square", "white_small_square", "large_orange_diamond", "large_blue_diamond", "small_orange_diamond", "small_blue_diamond", "small_red_triangle", "small_red_triangle_down", "diamond_shape_with_a_dot_inside", "radio_button", "white_square_button", "black_square_button"] }, { id: "flags", name: "Flags", emojis: ["checkered_flag", "cn", "crossed_flags", "de", "es", "flag-ac", "flag-ad", "flag-ae", "flag-af", "flag-ag", "flag-ai", "flag-al", "flag-am", "flag-ao", "flag-aq", "flag-ar", "flag-as", "flag-at", "flag-au", "flag-aw", "flag-ax", "flag-az", "flag-ba", "flag-bb", "flag-bd", "flag-be", "flag-bf", "flag-bg", "flag-bh", "flag-bi", "flag-bj", "flag-bl", "flag-bm", "flag-bn", "flag-bo", "flag-bq", "flag-br", "flag-bs", "flag-bt", "flag-bv", "flag-bw", "flag-by", "flag-bz", "flag-ca", "flag-cc", "flag-cd", "flag-cf", "flag-cg", "flag-ch", "flag-ci", "flag-ck", "flag-cl", "flag-cm", "flag-co", "flag-cp", "flag-cr", "flag-cu", "flag-cv", "flag-cw", "flag-cx", "flag-cy", "flag-cz", "flag-dg", "flag-dj", "flag-dk", "flag-dm", "flag-do", "flag-dz", "flag-ea", "flag-ec", "flag-ee", "flag-eg", "flag-eh", "flag-england", "flag-er", "flag-et", "flag-eu", "flag-fi", "flag-fj", "flag-fk", "flag-fm", "flag-fo", "flag-ga", "flag-gd", "flag-ge", "flag-gf", "flag-gg", "flag-gh", "flag-gi", "flag-gl", "flag-gm", "flag-gn", "flag-gp", "flag-gq", "flag-gr", "flag-gs", "flag-gt", "flag-gu", "flag-gw", "flag-gy", "flag-hk", "flag-hm", "flag-hn", "flag-hr", "flag-ht", "flag-hu", "flag-ic", "flag-id", "flag-ie", "flag-il", "flag-im", "flag-in", "flag-io", "flag-iq", "flag-ir", "flag-is", "flag-je", "flag-jm", "flag-jo", "flag-ke", "flag-kg", "flag-kh", "flag-ki", "flag-km", "flag-kn", "flag-kp", "flag-kw", "flag-ky", "flag-kz", "flag-la", "flag-lb", "flag-lc", "flag-li", "flag-lk", "flag-lr", "flag-ls", "flag-lt", "flag-lu", "flag-lv", "flag-ly", "flag-ma", "flag-mc", "flag-md", "flag-me", "flag-mf", "flag-mg", "flag-mh", "flag-mk", "flag-ml", "flag-mm", "flag-mn", "flag-mo", "flag-mp", "flag-mq", "flag-mr", "flag-ms", "flag-mt", "flag-mu", "flag-mv", "flag-mw", "flag-mx", "flag-my", "flag-mz", "flag-na", "flag-nc", "flag-ne", "flag-nf", "flag-ng", "flag-ni", "flag-nl", "flag-no", "flag-np", "flag-nr", "flag-nu", "flag-nz", "flag-om", "flag-pa", "flag-pe", "flag-pf", "flag-pg", "flag-ph", "flag-pk", "flag-pl", "flag-pm", "flag-pn", "flag-pr", "flag-ps", "flag-pt", "flag-pw", "flag-py", "flag-qa", "flag-re", "flag-ro", "flag-rs", "flag-rw", "flag-sa", "flag-sb", "flag-sc", "flag-scotland", "flag-sd", "flag-se", "flag-sg", "flag-sh", "flag-si", "flag-sj", "flag-sk", "flag-sl", "flag-sm", "flag-sn", "flag-so", "flag-sr", "flag-ss", "flag-st", "flag-sv", "flag-sx", "flag-sy", "flag-sz", "flag-ta", "flag-tc", "flag-td", "flag-tf", "flag-tg", "flag-th", "flag-tj", "flag-tk", "flag-tl", "flag-tm", "flag-tn", "flag-to", "flag-tr", "flag-tt", "flag-tv", "flag-tw", "flag-tz", "flag-ua", "flag-ug", "flag-um", "flag-uy", "flag-uz", "flag-va", "flag-vc", "flag-ve", "flag-vg", "flag-vi", "flag-vn", "flag-vu", "flag-wales", "flag-wf", "flag-ws", "flag-xk", "flag-ye", "flag-yt", "flag-za", "flag-zm", "flag-zw", "fr", "gb", "it", "jp", "kr", "pirate_flag", "rainbow-flag", "ru", "triangular_flag_on_post", "us", "waving_black_flag", "waving_white_flag"] }], emojis: { "100": { a: "Hundred Points Symbol", b: "1F4AF", j: ["score", "perfect", "numbers", "century", "exam", "quiz", "test", "pass", "hundred"], k: [26, 5], o: 2 }, "1234": { a: "Input Symbol for Numbers", b: "1F522", j: ["numbers", "blue-square"], k: [28, 5], o: 2 }, grinning: { a: "Grinning Face", b: "1F600", j: ["face", "smile", "happy", "joy", ":D", "grin"], k: [30, 35], m: ":D", o: 2 }, monkey_face: { a: "Monkey Face", b: "1F435", j: ["animal", "nature", "circus"], k: [12, 25], l: [":o)"], o: 2 }, grapes: { a: "Grapes", b: "1F347", j: ["fruit", "food", "wine"], k: [6, 31], o: 2 }, eyeglasses: { a: "Eyeglasses", b: "1F453", j: ["fashion", "accessories", "eyesight", "nerdy", "dork", "geek"], k: [14, 7], o: 2 }, checkered_flag: { a: "Chequered Flag", b: "1F3C1", j: ["contest", "finishline", "race", "gokart"], k: [8, 39], o: 2 }, jack_o_lantern: { a: "Jack-O-Lantern", b: "1F383", j: ["halloween", "light", "pumpkin", "creepy", "fall"], k: [7, 34], o: 2 }, wave: { a: "Waving Hand Sign", b: "1F44B", j: ["hands", "gesture", "goodbye", "solong", "farewell", "hello", "hi", "palm"], k: [13, 26], o: 2 }, earth_africa: { a: "Earth Globe Europe-Africa", b: "1F30D", j: ["globe", "world", "international"], k: [5, 32], o: 2 }, atm: { a: "Automated Teller Machine", b: "1F3E7", j: ["money", "sales", "cash", "blue-square", "payment", "bank"], k: [11, 1], o: 2 }, melon: { a: "Melon", b: "1F348", j: ["fruit", "nature", "food"], k: [6, 32], o: 2 }, triangular_flag_on_post: { a: "Triangular Flag on Post", b: "1F6A9", j: ["mark", "milestone", "place"], k: [35, 0], o: 2 }, put_litter_in_its_place: { a: "Put Litter in Its Place Symbol", b: "1F6AE", j: ["blue-square", "sign", "human", "info"], k: [35, 5], o: 2 }, christmas_tree: { a: "Christmas Tree", b: "1F384", j: ["festival", "vacation", "december", "xmas", "celebration"], k: [7, 35], o: 2 }, monkey: { a: "Monkey", b: "1F412", j: ["animal", "nature", "banana", "circus"], k: [11, 46], o: 2 }, earth_americas: { a: "Earth Globe Americas", b: "1F30E", j: ["globe", "world", "USA", "international"], k: [5, 33], o: 2 }, dark_sunglasses: { a: "Dark Sunglasses", b: "1F576-FE0F", c: "1F576", j: ["face", "cool", "accessories"], k: [29, 33], o: 2 }, raised_back_of_hand: { a: "Raised Back of Hand", b: "1F91A", j: ["fingers", "raised", "backhand"], k: [37, 43], o: 4 }, smiley: { a: "Smiling Face with Open Mouth", b: "1F603", j: ["face", "happy", "joy", "haha", ":D", ":)", "smile", "funny"], k: [30, 38], l: ["=)", "=-)"], m: ":)", o: 2 }, earth_asia: { a: "Earth Globe Asia-Australia", b: "1F30F", j: ["globe", "world", "east", "international"], k: [5, 34], o: 2 }, crossed_flags: { a: "Crossed Flags", b: "1F38C", j: ["japanese", "nation", "country", "border"], k: [7, 48], o: 2 }, watermelon: { a: "Watermelon", b: "1F349", j: ["fruit", "food", "picnic", "summer"], k: [6, 33], o: 2 }, goggles: { a: "Goggles", b: "1F97D", k: [42, 15], o: 11 }, raised_hand_with_fingers_splayed: { a: "Raised Hand with Fingers Splayed", b: "1F590-FE0F", c: "1F590", j: ["hand", "fingers", "palm"], k: [29, 48], o: 2 }, smile: { a: "Smiling Face with Open Mouth and Smiling Eyes", b: "1F604", j: ["face", "happy", "joy", "funny", "haha", "laugh", "like", ":D", ":)"], k: [30, 39], l: ["C:", "c:", ":D", ":-D"], m: ":)", o: 2 }, potable_water: { a: "Potable Water Symbol", b: "1F6B0", j: ["blue-square", "liquid", "restroom", "cleaning", "faucet"], k: [35, 7], o: 2 }, fireworks: { a: "Fireworks", b: "1F386", j: ["photo", "festival", "carnival", "congratulations"], k: [7, 42], o: 2 }, gorilla: { a: "Gorilla", b: "1F98D", j: ["animal", "nature", "circus"], k: [42, 31], o: 4 }, lab_coat: { a: "Lab Coat", b: "1F97C", k: [42, 14], o: 11 }, tangerine: { a: "Tangerine", b: "1F34A", j: ["food", "fruit", "nature", "orange"], k: [6, 34], o: 2 }, wheelchair: { a: "Wheelchair Symbol", b: "267F", j: ["blue-square", "disabled", "a11y", "accessibility"], k: [53, 40], o: 2 }, waving_black_flag: { a: "Waving Black Flag", b: "1F3F4", k: [11, 17], o: 2 }, orangutan: { a: "Orangutan", b: "1F9A7", k: [42, 55], o: 12 }, sparkler: { a: "Firework Sparkler", b: "1F387", j: ["stars", "night", "shine"], k: [7, 43], o: 2 }, globe_with_meridians: { a: "Globe with Meridians", b: "1F310", j: ["earth", "international", "world", "internet", "interweb", "i18n"], k: [5, 35], o: 2 }, grin: { a: "Grinning Face with Smiling Eyes", b: "1F601", j: ["face", "happy", "smile", "joy", "kawaii"], k: [30, 36], o: 2 }, hand: { a: "Raised Hand", b: "270B", k: [54, 49], n: ["raised_hand"], o: 2 }, firecracker: { a: "Firecracker", b: "1F9E8", k: [51, 27], o: 11 }, lemon: { a: "Lemon", b: "1F34B", j: ["fruit", "nature"], k: [6, 35], o: 2 }, dog: { a: "Dog Face", b: "1F436", j: ["animal", "friend", "nature", "woof", "puppy", "pet", "faithful"], k: [12, 26], o: 2 }, mens: { a: "Mens Symbol", b: "1F6B9", j: ["toilet", "restroom", "wc", "blue-square", "gender", "male"], k: [36, 10], o: 2 }, "spock-hand": { a: "Raised Hand with Part Between Middle and Ring Fingers", b: "1F596", k: [30, 3], o: 2 }, world_map: { a: "World Map", b: "1F5FA-FE0F", c: "1F5FA", j: ["location", "direction"], k: [30, 29], o: 2 }, laughing: { a: "Smiling Face with Open Mouth and Tightly-Closed Eyes", b: "1F606", j: ["happy", "joy", "lol", "satisfied", "haha", "face", "glad", "XD", "laugh"], k: [30, 41], l: [":>", ":->"], n: ["satisfied"], o: 2 }, waving_white_flag: { a: "Waving White Flag", b: "1F3F3-FE0F", c: "1F3F3", k: [11, 12], o: 2 }, safety_vest: { a: "Safety Vest", b: "1F9BA", k: [43, 54], o: 12 }, sweat_smile: { a: "Smiling Face with Open Mouth and Cold Sweat", b: "1F605", j: ["face", "hot", "happy", "laugh", "sweat", "smile", "relief"], k: [30, 40], o: 2 }, sparkles: { a: "Sparkles", b: "2728", j: ["stars", "shine", "shiny", "cool", "awesome", "good", "magic"], k: [55, 16], o: 2 }, banana: { a: "Banana", b: "1F34C", j: ["fruit", "food", "monkey"], k: [6, 36], o: 2 }, "rainbow-flag": { a: "Rainbow Flag", b: "1F3F3-FE0F-200D-1F308", c: "1F3F3-200D-1F308", k: [11, 11], o: 4 }, ok_hand: { a: "Ok Hand Sign", b: "1F44C", j: ["fingers", "limbs", "perfect", "ok", "okay"], k: [13, 32], o: 2 }, japan: { a: "Silhouette of Japan", b: "1F5FE", j: ["nation", "country", "japanese", "asia"], k: [30, 33], o: 2 }, dog2: { a: "Dog", b: "1F415", j: ["animal", "nature", "friend", "doge", "pet", "faithful"], k: [11, 50], o: 2 }, womens: { a: "Womens Symbol", b: "1F6BA", j: ["purple-square", "woman", "female", "toilet", "loo", "restroom", "gender"], k: [36, 11], o: 2 }, necktie: { a: "Necktie", b: "1F454", j: ["shirt", "suitup", "formal", "fashion", "cloth", "business"], k: [14, 8], o: 2 }, pirate_flag: { a: "Pirate Flag", b: "1F3F4-200D-2620-FE0F", c: "1F3F4-200D-2620", k: [11, 13], o: 11 }, guide_dog: { a: "Guide Dog", b: "1F9AE", k: [43, 2], o: 12 }, restroom: { a: "Restroom", b: "1F6BB", j: ["blue-square", "toilet", "refresh", "wc", "gender"], k: [36, 12], o: 2 }, compass: { a: "Compass", b: "1F9ED", k: [51, 32], o: 11 }, rolling_on_the_floor_laughing: { a: "Rolling on the Floor Laughing", b: "1F923", k: [38, 20], o: 4 }, balloon: { a: "Balloon", b: "1F388", j: ["party", "celebration", "birthday", "circus"], k: [7, 44], o: 2 }, pinching_hand: { a: "Pinching Hand", b: "1F90F", k: [37, 17], o: 12 }, pineapple: { a: "Pineapple", b: "1F34D", j: ["fruit", "nature", "food"], k: [6, 37], o: 2 }, shirt: { a: "T-Shirt", b: "1F455", k: [14, 9], n: ["tshirt"], o: 2 }, service_dog: { a: "Service Dog", b: "1F415-200D-1F9BA", k: [11, 49], o: 12 }, baby_symbol: { a: "Baby Symbol", b: "1F6BC", j: ["orange-square", "child"], k: [36, 13], o: 2 }, joy: { a: "Face with Tears of Joy", b: "1F602", j: ["face", "cry", "tears", "weep", "happy", "happytears", "haha"], k: [30, 37], o: 2 }, tada: { a: "Party Popper", b: "1F389", j: ["party", "congratulations", "birthday", "magic", "circus", "celebration"], k: [7, 45], o: 2 }, mango: { a: "Mango", b: "1F96D", k: [42, 3], o: 11 }, v: { a: "Victory Hand", b: "270C-FE0F", c: "270C", j: ["fingers", "ohyeah", "hand", "peace", "victory", "two"], k: [54, 55], o: 2 }, snow_capped_mountain: { a: "Snow Capped Mountain", b: "1F3D4-FE0F", c: "1F3D4", k: [10, 39], o: 2 }, "flag-ac": { a: "Ascension Island Flag", b: "1F1E6-1F1E8", k: [0, 31], o: 2 }, jeans: { a: "Jeans", b: "1F456", j: ["fashion", "shopping"], k: [14, 10], o: 2 }, poodle: { a: "Poodle", b: "1F429", j: ["dog", "animal", "101", "nature", "pet"], k: [12, 13], o: 2 }, crossed_fingers: { a: "Hand with Index and Middle Fingers Crossed", b: "1F91E", j: ["good", "lucky"], k: [38, 5], n: ["hand_with_index_and_middle_fingers_crossed"], o: 4 }, "flag-ad": { a: "Andorra Flag", b: "1F1E6-1F1E9", k: [0, 32], o: 2 }, slightly_smiling_face: { a: "Slightly Smiling Face", b: "1F642", j: ["face", "smile"], k: [31, 44], l: [":)", "(:", ":-)"], o: 2 }, apple: { a: "Red Apple", b: "1F34E", j: ["fruit", "mac", "school"], k: [6, 38], o: 2 }, wc: { a: "Water Closet", b: "1F6BE", j: ["toilet", "restroom", "blue-square"], k: [36, 15], o: 2 }, scarf: { a: "Scarf", b: "1F9E3", k: [51, 22], o: 5 }, mountain: { a: "Mountain", b: "26F0-FE0F", c: "26F0", j: ["photo", "nature", "environment"], k: [54, 11], o: 2 }, confetti_ball: { a: "Confetti Ball", b: "1F38A", j: ["festival", "party", "birthday", "circus"], k: [7, 46], o: 2 }, i_love_you_hand_sign: { a: "I Love You Hand Sign", b: "1F91F", k: [38, 11], o: 5 }, wolf: { a: "Wolf Face", b: "1F43A", j: ["animal", "nature", "wild"], k: [12, 30], o: 2 }, gloves: { a: "Gloves", b: "1F9E4", k: [51, 23], o: 5 }, "flag-ae": { a: "United Arab Emirates Flag", b: "1F1E6-1F1EA", k: [0, 33], o: 2 }, upside_down_face: { a: "Upside-Down Face", b: "1F643", j: ["face", "flipped", "silly", "smile"], k: [31, 45], o: 2 }, green_apple: { a: "Green Apple", b: "1F34F", j: ["fruit", "nature"], k: [6, 39], o: 2 }, passport_control: { a: "Passport Control", b: "1F6C2", j: ["custom", "blue-square"], k: [36, 24], o: 2 }, volcano: { a: "Volcano", b: "1F30B", j: ["photo", "nature", "disaster"], k: [5, 30], o: 2 }, tanabata_tree: { a: "Tanabata Tree", b: "1F38B", j: ["plant", "nature", "branch", "summer"], k: [7, 47], o: 2 }, customs: { a: "Customs", b: "1F6C3", j: ["passport", "border", "blue-square"], k: [36, 25], o: 2 }, coat: { a: "Coat", b: "1F9E5", k: [51, 24], o: 5 }, wink: { a: "Winking Face", b: "1F609", j: ["face", "happy", "mischievous", "secret", ";)", "smile", "eye"], k: [30, 44], l: [";)", ";-)"], m: ";)", o: 2 }, bamboo: { a: "Pine Decoration", b: "1F38D", j: ["plant", "nature", "vegetable", "panda", "pine_decoration"], k: [7, 49], o: 2 }, "flag-af": { a: "Afghanistan Flag", b: "1F1E6-1F1EB", k: [0, 34], o: 2 }, fox_face: { a: "Fox Face", b: "1F98A", j: ["animal", "nature", "face"], k: [42, 28], o: 4 }, pear: { a: "Pear", b: "1F350", j: ["fruit", "nature", "food"], k: [6, 40], o: 2 }, mount_fuji: { a: "Mount Fuji", b: "1F5FB", j: ["photo", "mountain", "nature", "japanese"], k: [30, 30], o: 2 }, the_horns: { a: "Sign of the Horns", b: "1F918", k: [37, 31], n: ["sign_of_the_horns"], o: 2 }, call_me_hand: { a: "Call Me Hand", b: "1F919", j: ["hands", "gesture"], k: [37, 37], o: 4 }, "flag-ag": { a: "Antigua & Barbuda Flag", b: "1F1E6-1F1EC", k: [0, 35], o: 2 }, raccoon: { a: "Raccoon", b: "1F99D", k: [42, 47], o: 11 }, dolls: { a: "Japanese Dolls", b: "1F38E", j: ["japanese", "toy", "kimono"], k: [7, 50], o: 2 }, blush: { a: "Smiling Face with Smiling Eyes", b: "1F60A", j: ["face", "smile", "happy", "flushed", "crush", "embarrassed", "shy", "joy"], k: [30, 45], m: ":)", o: 2 }, peach: { a: "Peach", b: "1F351", j: ["fruit", "nature", "food"], k: [6, 41], o: 2 }, baggage_claim: { a: "Baggage Claim", b: "1F6C4", j: ["blue-square", "airport", "transport"], k: [36, 26], o: 2 }, socks: { a: "Socks", b: "1F9E6", k: [51, 25], o: 5 }, camping: { a: "Camping", b: "1F3D5-FE0F", c: "1F3D5", j: ["photo", "outdoors", "tent"], k: [10, 40], o: 2 }, dress: { a: "Dress", b: "1F457", j: ["clothes", "fashion", "shopping"], k: [14, 11], o: 2 }, beach_with_umbrella: { a: "Beach with Umbrella", b: "1F3D6-FE0F", c: "1F3D6", k: [10, 41], o: 2 }, cherries: { a: "Cherries", b: "1F352", j: ["food", "fruit"], k: [6, 42], o: 2 }, cat: { a: "Cat Face", b: "1F431", j: ["animal", "meow", "nature", "pet", "kitten"], k: [12, 21], o: 2 }, point_left: { a: "White Left Pointing Backhand Index", b: "1F448", j: ["direction", "fingers", "hand", "left"], k: [13, 8], o: 2 }, left_luggage: { a: "Left Luggage", b: "1F6C5", j: ["blue-square", "travel"], k: [36, 27], o: 2 }, "flag-ai": { a: "Anguilla Flag", b: "1F1E6-1F1EE", k: [0, 36], o: 2 }, innocent: { a: "Smiling Face with Halo", b: "1F607", j: ["face", "angel", "heaven", "halo"], k: [30, 42], o: 2 }, flags: { a: "Carp Streamer", b: "1F38F", j: ["fish", "japanese", "koinobori", "carp", "banner"], k: [7, 51], o: 2 }, warning: { a: "Warning Sign", b: "26A0-FE0F", c: "26A0", j: ["exclamation", "wip", "alert", "error", "problem", "issue"], k: [53, 50], o: 2 }, strawberry: { a: "Strawberry", b: "1F353", j: ["fruit", "food", "nature"], k: [6, 43], o: 2 }, point_right: { a: "White Right Pointing Backhand Index", b: "1F449", j: ["fingers", "hand", "direction", "right"], k: [13, 14], o: 2 }, desert: { a: "Desert", b: "1F3DC-FE0F", c: "1F3DC", j: ["photo", "warm", "saharah"], k: [10, 47], o: 2 }, kimono: { a: "Kimono", b: "1F458", j: ["dress", "fashion", "women", "female", "japanese"], k: [14, 12], o: 2 }, "flag-al": { a: "Albania Flag", b: "1F1E6-1F1F1", k: [0, 37], o: 2 }, wind_chime: { a: "Wind Chime", b: "1F390", j: ["nature", "ding", "spring", "bell"], k: [7, 52], o: 2 }, smiling_face_with_3_hearts: { a: "Smiling Face with Smiling Eyes and Three Hearts", b: "1F970", k: [42, 6], o: 11 }, cat2: { a: "Cat", b: "1F408", j: ["animal", "meow", "pet", "cats"], k: [11, 36], o: 2 }, rice_scene: { a: "Moon Viewing Ceremony", b: "1F391", j: ["photo", "japan", "asia", "tsukimi"], k: [7, 53], o: 2 }, heart_eyes: { a: "Smiling Face with Heart-Shaped Eyes", b: "1F60D", j: ["face", "love", "like", "affection", "valentines", "infatuation", "crush", "heart"], k: [30, 48], o: 2 }, sari: { a: "Sari", b: "1F97B", k: [42, 13], o: 12 }, "flag-am": { a: "Armenia Flag", b: "1F1E6-1F1F2", k: [0, 38], o: 2 }, lion_face: { a: "Lion Face", b: "1F981", k: [42, 19], o: 2 }, desert_island: { a: "Desert Island", b: "1F3DD-FE0F", c: "1F3DD", j: ["photo", "tropical", "mojito"], k: [10, 48], o: 2 }, point_up_2: { a: "White Up Pointing Backhand Index", b: "1F446", j: ["fingers", "hand", "direction", "up"], k: [12, 53], o: 2 }, kiwifruit: { a: "Kiwifruit", b: "1F95D", k: [41, 44], o: 4 }, children_crossing: { a: "Children Crossing", b: "1F6B8", j: ["school", "warning", "danger", "sign", "driving", "yellow-diamond"], k: [36, 9], o: 2 }, national_park: { a: "National Park", b: "1F3DE-FE0F", c: "1F3DE", j: ["photo", "environment", "nature"], k: [10, 49], o: 2 }, no_entry: { a: "No Entry", b: "26D4", j: ["limit", "security", "privacy", "bad", "denied", "stop", "circle"], k: [54, 8], o: 2 }, "one-piece_swimsuit": { a: "One-Piece Swimsuit", b: "1FA71", k: [51, 52], o: 12 }, tiger: { a: "Tiger Face", b: "1F42F", j: ["animal", "cat", "danger", "wild", "nature", "roar"], k: [12, 19], o: 2 }, red_envelope: { a: "Red Gift Envelope", b: "1F9E7", k: [51, 26], o: 11 }, "star-struck": { a: "Grinning Face with Star Eyes", b: "1F929", k: [38, 43], n: ["grinning_face_with_star_eyes"], o: 5 }, middle_finger: { a: "Reversed Hand with Middle Finger Extended", b: "1F595", k: [29, 54], n: ["reversed_hand_with_middle_finger_extended"], o: 2 }, "flag-ao": { a: "Angola Flag", b: "1F1E6-1F1F4", k: [0, 39], o: 2 }, tomato: { a: "Tomato", b: "1F345", j: ["fruit", "vegetable", "nature", "food"], k: [6, 29], o: 2 }, coconut: { a: "Coconut", b: "1F965", k: [41, 52], o: 5 }, ribbon: { a: "Ribbon", b: "1F380", j: ["decoration", "pink", "girl", "bowtie"], k: [7, 31], o: 2 }, no_entry_sign: { a: "No Entry Sign", b: "1F6AB", j: ["forbid", "stop", "limit", "denied", "disallow", "circle"], k: [35, 2], o: 2 }, point_down: { a: "White Down Pointing Backhand Index", b: "1F447", j: ["fingers", "hand", "direction", "down"], k: [13, 2], o: 2 }, "flag-aq": { a: "Antarctica Flag", b: "1F1E6-1F1F6", k: [0, 40], o: 2 }, briefs: { a: "Briefs", b: "1FA72", k: [51, 53], o: 12 }, kissing_heart: { a: "Face Throwing a Kiss", b: "1F618", j: ["face", "love", "like", "affection", "valentines", "infatuation", "kiss"], k: [31, 2], l: [":*", ":-*"], o: 2 }, tiger2: { a: "Tiger", b: "1F405", j: ["animal", "nature", "roar"], k: [11, 33], o: 2 }, stadium: { a: "Stadium", b: "1F3DF-FE0F", c: "1F3DF", j: ["photo", "place", "sports", "concert", "venue"], k: [10, 50], o: 2 }, leopard: { a: "Leopard", b: "1F406", j: ["animal", "nature"], k: [11, 34], o: 2 }, no_bicycles: { a: "No Bicycles", b: "1F6B3", j: ["cyclist", "prohibited", "circle"], k: [35, 10], o: 2 }, kissing: { a: "Kissing Face", b: "1F617", j: ["love", "like", "face", "3", "valentines", "infatuation", "kiss"], k: [31, 1], o: 2 }, "flag-ar": { a: "Argentina Flag", b: "1F1E6-1F1F7", k: [0, 41], o: 2 }, avocado: { a: "Avocado", b: "1F951", j: ["fruit", "food"], k: [41, 32], o: 4 }, point_up: { a: "White Up Pointing Index", b: "261D-FE0F", c: "261D", j: ["hand", "fingers", "direction", "up"], k: [53, 2], o: 2 }, gift: { a: "Wrapped Present", b: "1F381", j: ["present", "birthday", "christmas", "xmas"], k: [7, 32], o: 2 }, classical_building: { a: "Classical Building", b: "1F3DB-FE0F", c: "1F3DB", j: ["art", "culture", "history"], k: [10, 46], o: 2 }, shorts: { a: "Shorts", b: "1FA73", k: [51, 54], o: 12 }, "+1": { a: "Thumbs Up Sign", b: "1F44D", j: ["thumbsup", "yes", "awesome", "good", "agree", "accept", "cool", "hand", "like"], k: [13, 38], n: ["thumbsup"], o: 2 }, horse: { a: "Horse Face", b: "1F434", j: ["animal", "brown", "nature"], k: [12, 24], o: 2 }, bikini: { a: "Bikini", b: "1F459", j: ["swimming", "female", "woman", "girl", "fashion", "beach", "summer"], k: [14, 13], o: 2 }, no_smoking: { a: "No Smoking Symbol", b: "1F6AD", j: ["cigarette", "blue-square", "smell", "smoke"], k: [35, 4], o: 2 }, eggplant: { a: "Aubergine", b: "1F346", j: ["vegetable", "nature", "food", "aubergine"], k: [6, 30], o: 2 }, "flag-as": { a: "American Samoa Flag", b: "1F1E6-1F1F8", k: [0, 42], o: 2 }, reminder_ribbon: { a: "Reminder Ribbon", b: "1F397-FE0F", c: "1F397", j: ["sports", "cause", "support", "awareness"], k: [8, 0], o: 2 }, building_construction: { a: "Building Construction", b: "1F3D7-FE0F", c: "1F3D7", j: ["wip", "working", "progress"], k: [10, 42], o: 2 }, relaxed: { a: "White Smiling Face", b: "263A-FE0F", c: "263A", j: ["face", "blush", "massage", "happiness"], k: [53, 17], o: 2 }, kissing_closed_eyes: { a: "Kissing Face with Closed Eyes", b: "1F61A", j: ["face", "love", "like", "affection", "valentines", "infatuation", "kiss"], k: [31, 4], o: 2 }, "-1": { a: "Thumbs Down Sign", b: "1F44E", j: ["thumbsdown", "no", "dislike", "hand"], k: [13, 44], n: ["thumbsdown"], o: 2 }, admission_tickets: { a: "Admission Tickets", b: "1F39F-FE0F", c: "1F39F", k: [8, 5], o: 2 }, "flag-at": { a: "Austria Flag", b: "1F1E6-1F1F9", k: [0, 43], o: 2 }, womans_clothes: { a: "Womans Clothes", b: "1F45A", j: ["fashion", "shopping_bags", "female"], k: [14, 14], o: 2 }, do_not_litter: { a: "Do Not Litter Symbol", b: "1F6AF", j: ["trash", "bin", "garbage", "circle"], k: [35, 6], o: 2 }, potato: { a: "Potato", b: "1F954", j: ["food", "tuber", "vegatable", "starch"], k: [41, 35], o: 4 }, racehorse: { a: "Horse", b: "1F40E", j: ["animal", "gamble", "luck"], k: [11, 42], o: 2 }, bricks: { a: "Brick", b: "1F9F1", k: [51, 36], o: 11 }, fist: { a: "Raised Fist", b: "270A", j: ["fingers", "hand", "grasp"], k: [54, 43], o: 2 }, house_buildings: { a: "House Buildings", b: "1F3D8-FE0F", c: "1F3D8", k: [10, 43], o: 2 }, carrot: { a: "Carrot", b: "1F955", j: ["vegetable", "food", "orange"], k: [41, 36], o: 4 }, ticket: { a: "Ticket", b: "1F3AB", j: ["event", "concert", "pass"], k: [8, 17], o: 2 }, "flag-au": { a: "Australia Flag", b: "1F1E6-1F1FA", k: [0, 44], o: 2 }, "non-potable_water": { a: "Non-Potable Water Symbol", b: "1F6B1", j: ["drink", "faucet", "tap", "circle"], k: [35, 8], o: 2 }, purse: { a: "Purse", b: "1F45B", j: ["fashion", "accessories", "money", "sales", "shopping"], k: [14, 15], o: 2 }, unicorn_face: { a: "Unicorn Face", b: "1F984", k: [42, 22], o: 2 }, kissing_smiling_eyes: { a: "Kissing Face with Smiling Eyes", b: "1F619", j: ["face", "affection", "valentines", "infatuation", "kiss"], k: [31, 3], o: 2 }, facepunch: { a: "Fisted Hand Sign", b: "1F44A", j: ["angry", "violence", "fist", "hit", "attack", "hand"], k: [13, 20], n: ["punch"], o: 2 }, medal: { a: "Medal", b: "1F396-FE0F", c: "1F396", k: [7, 56], o: 2 }, zebra_face: { a: "Zebra Face", b: "1F993", k: [42, 37], o: 5 }, handbag: { a: "Handbag", b: "1F45C", j: ["fashion", "accessory", "accessories", "shopping"], k: [14, 16], o: 2 }, derelict_house_building: { a: "Derelict House Building", b: "1F3DA-FE0F", c: "1F3DA", k: [10, 45], o: 2 }, yum: { a: "Face Savouring Delicious Food", b: "1F60B", j: ["happy", "joy", "tongue", "smile", "face", "silly", "yummy", "nom", "delicious", "savouring"], k: [30, 46], o: 2 }, corn: { a: "Ear of Maize", b: "1F33D", j: ["food", "vegetable", "plant"], k: [6, 21], o: 2 }, "flag-aw": { a: "Aruba Flag", b: "1F1E6-1F1FC", k: [0, 45], o: 2 }, no_pedestrians: { a: "No Pedestrians", b: "1F6B7", j: ["rules", "crossing", "walking", "circle"], k: [36, 8], o: 2 }, house: { a: "House Building", b: "1F3E0", j: ["building", "home"], k: [10, 51], o: 2 }, hot_pepper: { a: "Hot Pepper", b: "1F336-FE0F", c: "1F336", j: ["food", "spicy", "chilli", "chili"], k: [6, 14], o: 2 }, "flag-ax": { a: "Åland Islands Flag", b: "1F1E6-1F1FD", k: [0, 46], o: 2 }, trophy: { a: "Trophy", b: "1F3C6", j: ["win", "award", "contest", "place", "ftw", "ceremony"], k: [9, 26], o: 2 }, deer: { a: "Deer", b: "1F98C", j: ["animal", "nature", "horns", "venison"], k: [42, 30], o: 4 }, "left-facing_fist": { a: "Left-Facing Fist", b: "1F91B", k: [37, 49], o: 4 }, stuck_out_tongue: { a: "Face with Stuck-out Tongue", b: "1F61B", j: ["face", "prank", "childish", "playful", "mischievous", "smile", "tongue"], k: [31, 5], l: [":p", ":-p", ":P", ":-P", ":b", ":-b"], m: ":p", o: 2 }, pouch: { a: "Pouch", b: "1F45D", j: ["bag", "accessories", "shopping"], k: [14, 17], o: 2 }, no_mobile_phones: { a: "No Mobile Phones", b: "1F4F5", j: ["iphone", "mute", "circle"], k: [27, 18], o: 2 }, stuck_out_tongue_winking_eye: { a: "Face with Stuck-out Tongue and Winking Eye", b: "1F61C", j: ["face", "prank", "childish", "playful", "mischievous", "smile", "wink", "tongue"], k: [31, 6], l: [";p", ";-p", ";b", ";-b", ";P", ";-P"], m: ";p", o: 2 }, sports_medal: { a: "Sports Medal", b: "1F3C5", k: [9, 25], o: 2 }, cucumber: { a: "Cucumber", b: "1F952", j: ["fruit", "food", "pickle"], k: [41, 33], o: 4 }, cow: { a: "Cow Face", b: "1F42E", j: ["beef", "ox", "animal", "nature", "moo", "milk"], k: [12, 18], o: 2 }, underage: { a: "No One Under Eighteen Symbol", b: "1F51E", j: ["18", "drink", "pub", "night", "minor", "circle"], k: [28, 1], o: 2 }, "flag-az": { a: "Azerbaijan Flag", b: "1F1E6-1F1FF", k: [0, 47], o: 2 }, shopping_bags: { a: "Shopping Bags", b: "1F6CD-FE0F", c: "1F6CD", k: [36, 35], o: 2 }, "right-facing_fist": { a: "Right-Facing Fist", b: "1F91C", k: [37, 55], o: 4 }, house_with_garden: { a: "House with Garden", b: "1F3E1", j: ["home", "plant", "nature"], k: [10, 52], o: 2 }, clap: { a: "Clapping Hands Sign", b: "1F44F", j: ["hands", "praise", "applause", "congrats", "yay"], k: [13, 50], o: 2 }, leafy_green: { a: "Leafy Green", b: "1F96C", k: [42, 2], o: 11 }, office: { a: "Office Building", b: "1F3E2", j: ["building", "bureau", "work"], k: [10, 53], o: 2 }, "flag-ba": { a: "Bosnia & Herzegovina Flag", b: "1F1E7-1F1E6", k: [0, 48], o: 2 }, zany_face: { a: "Grinning Face with One Large and One Small Eye", b: "1F92A", k: [38, 44], n: ["grinning_face_with_one_large_and_one_small_eye"], o: 5 }, first_place_medal: { a: "First Place Medal", b: "1F947", k: [41, 22], o: 4 }, ox: { a: "Ox", b: "1F402", j: ["animal", "cow", "beef"], k: [11, 30], o: 2 }, school_satchel: { a: "School Satchel", b: "1F392", j: ["student", "education", "bag", "backpack"], k: [7, 54], o: 2 }, radioactive_sign: { a: "Radioactive Sign", b: "2622-FE0F", c: "2622", k: [53, 9], o: 2 }, second_place_medal: { a: "Second Place Medal", b: "1F948", k: [41, 23], o: 4 }, stuck_out_tongue_closed_eyes: { a: "Face with Stuck-out Tongue and Tightly-Closed Eyes", b: "1F61D", j: ["face", "prank", "playful", "mischievous", "smile", "tongue"], k: [31, 7], o: 2 }, broccoli: { a: "Broccoli", b: "1F966", k: [41, 53], o: 5 }, biohazard_sign: { a: "Biohazard Sign", b: "2623-FE0F", c: "2623", k: [53, 10], o: 2 }, mans_shoe: { a: "Mans Shoe", b: "1F45E", j: ["fashion", "male"], k: [14, 18], n: ["shoe"], o: 2 }, raised_hands: { a: "Person Raising Both Hands in Celebration", b: "1F64C", j: ["gesture", "hooray", "yea", "celebration", "hands"], k: [33, 8], o: 2 }, post_office: { a: "Japanese Post Office", b: "1F3E3", j: ["building", "envelope", "communication"], k: [10, 54], o: 2 }, "flag-bb": { a: "Barbados Flag", b: "1F1E7-1F1E7", k: [0, 49], o: 2 }, water_buffalo: { a: "Water Buffalo", b: "1F403", j: ["animal", "nature", "ox", "cow"], k: [11, 31], o: 2 }, third_place_medal: { a: "Third Place Medal", b: "1F949", k: [41, 24], o: 4 }, european_post_office: { a: "European Post Office", b: "1F3E4", j: ["building", "email"], k: [10, 55], o: 2 }, athletic_shoe: { a: "Athletic Shoe", b: "1F45F", j: ["shoes", "sports", "sneakers"], k: [14, 19], o: 2 }, arrow_up: { a: "Upwards Black Arrow", b: "2B06-FE0F", c: "2B06", j: ["blue-square", "continue", "top", "direction"], k: [55, 38], o: 2 }, cow2: { a: "Cow", b: "1F404", j: ["beef", "ox", "animal", "nature", "moo", "milk"], k: [11, 32], o: 2 }, open_hands: { a: "Open Hands Sign", b: "1F450", j: ["fingers", "butterfly", "hands", "open"], k: [13, 56], o: 2 }, garlic: { a: "Garlic", b: "1F9C4", k: [44, 12], o: 12 }, money_mouth_face: { a: "Money-Mouth Face", b: "1F911", j: ["face", "rich", "dollar", "money"], k: [37, 24], o: 2 }, "flag-bd": { a: "Bangladesh Flag", b: "1F1E7-1F1E9", k: [0, 50], o: 2 }, soccer: { a: "Soccer Ball", b: "26BD", j: ["sports", "football"], k: [53, 56], o: 2 }, hugging_face: { a: "Hugging Face", b: "1F917", k: [37, 30], o: 2 }, onion: { a: "Onion", b: "1F9C5", k: [44, 13], o: 12 }, arrow_upper_right: { a: "North East Arrow", b: "2197-FE0F", c: "2197", j: ["blue-square", "point", "direction", "diagonal", "northeast"], k: [52, 17], o: 2 }, palms_up_together: { a: "Palms Up Together", b: "1F932", k: [39, 5], o: 5 }, pig: { a: "Pig Face", b: "1F437", j: ["animal", "oink", "nature"], k: [12, 27], o: 2 }, hospital: { a: "Hospital", b: "1F3E5", j: ["building", "health", "surgery", "doctor"], k: [10, 56], o: 2 }, hiking_boot: { a: "Hiking Boot", b: "1F97E", k: [42, 16], o: 11 }, "flag-be": { a: "Belgium Flag", b: "1F1E7-1F1EA", k: [0, 51], o: 2 }, "flag-bf": { a: "Burkina Faso Flag", b: "1F1E7-1F1EB", k: [0, 52], o: 2 }, mushroom: { a: "Mushroom", b: "1F344", j: ["plant", "vegetable"], k: [6, 28], o: 2 }, pig2: { a: "Pig", b: "1F416", j: ["animal", "nature"], k: [11, 51], o: 2 }, baseball: { a: "Baseball", b: "26BE", j: ["sports", "balls"], k: [54, 0], o: 2 }, face_with_hand_over_mouth: { a: "Smiling Face with Smiling Eyes and Hand Covering Mouth", b: "1F92D", k: [38, 47], n: ["smiling_face_with_smiling_eyes_and_hand_covering_mouth"], o: 5 }, handshake: { a: "Handshake", b: "1F91D", j: ["agreement", "shake"], k: [38, 4], o: 4 }, womans_flat_shoe: { a: "Flat Shoe", b: "1F97F", k: [42, 17], o: 11 }, bank: { a: "Bank", b: "1F3E6", j: ["building", "money", "sales", "cash", "business", "enterprise"], k: [11, 0], o: 2 }, arrow_right: { a: "Black Rightwards Arrow", b: "27A1-FE0F", c: "27A1", j: ["blue-square", "next"], k: [55, 32], o: 2 }, peanuts: { a: "Peanuts", b: "1F95C", j: ["food", "nut"], k: [41, 43], o: 4 }, shushing_face: { a: "Face with Finger Covering Closed Lips", b: "1F92B", k: [38, 45], n: ["face_with_finger_covering_closed_lips"], o: 5 }, pray: { a: "Person with Folded Hands", b: "1F64F", j: ["please", "hope", "wish", "namaste", "highfive"], k: [33, 50], o: 2 }, softball: { a: "Softball", b: "1F94E", k: [41, 29], o: 11 }, high_heel: { a: "High-Heeled Shoe", b: "1F460", j: ["fashion", "shoes", "female", "pumps", "stiletto"], k: [14, 20], o: 2 }, "flag-bg": { a: "Bulgaria Flag", b: "1F1E7-1F1EC", k: [0, 53], o: 2 }, arrow_lower_right: { a: "South East Arrow", b: "2198-FE0F", c: "2198", j: ["blue-square", "direction", "diagonal", "southeast"], k: [52, 18], o: 2 }, hotel: { a: "Hotel", b: "1F3E8", j: ["building", "accomodation", "checkin"], k: [11, 2], o: 2 }, boar: { a: "Boar", b: "1F417", j: ["animal", "nature"], k: [11, 52], o: 2 }, sandal: { a: "Womans Sandal", b: "1F461", j: ["shoes", "fashion", "flip flops"], k: [14, 21], o: 2 }, "flag-bh": { a: "Bahrain Flag", b: "1F1E7-1F1ED", k: [0, 54], o: 2 }, arrow_down: { a: "Downwards Black Arrow", b: "2B07-FE0F", c: "2B07", j: ["blue-square", "direction", "bottom"], k: [55, 39], o: 2 }, thinking_face: { a: "Thinking Face", b: "1F914", k: [37, 27], o: 2 }, writing_hand: { a: "Writing Hand", b: "270D-FE0F", c: "270D", j: ["lower_left_ballpoint_pen", "stationery", "write", "compose"], k: [55, 4], o: 2 }, chestnut: { a: "Chestnut", b: "1F330", j: ["food", "squirrel"], k: [6, 8], o: 2 }, basketball: { a: "Basketball and Hoop", b: "1F3C0", j: ["sports", "balls", "NBA"], k: [8, 38], o: 2 }, pig_nose: { a: "Pig Nose", b: "1F43D", j: ["animal", "oink"], k: [12, 33], o: 2 }, love_hotel: { a: "Love Hotel", b: "1F3E9", j: ["like", "affection", "dating"], k: [11, 3], o: 2 }, nail_care: { a: "Nail Polish", b: "1F485", j: ["beauty", "manicure", "finger", "fashion", "nail"], k: [24, 33], o: 2 }, volleyball: { a: "Volleyball", b: "1F3D0", j: ["sports", "balls"], k: [10, 35], o: 2 }, "flag-bi": { a: "Burundi Flag", b: "1F1E7-1F1EE", k: [0, 55], o: 2 }, arrow_lower_left: { a: "South West Arrow", b: "2199-FE0F", c: "2199", j: ["blue-square", "direction", "diagonal", "southwest"], k: [52, 19], o: 2 }, ram: { a: "Ram", b: "1F40F", j: ["animal", "sheep", "nature"], k: [11, 43], o: 2 }, ballet_shoes: { a: "Ballet Shoes", b: "1FA70", k: [51, 51], o: 12 }, zipper_mouth_face: { a: "Zipper-Mouth Face", b: "1F910", j: ["face", "sealed", "zipper", "secret"], k: [37, 23], o: 2 }, bread: { a: "Bread", b: "1F35E", j: ["food", "wheat", "breakfast", "toast"], k: [6, 54], o: 2 }, convenience_store: { a: "Convenience Store", b: "1F3EA", j: ["building", "shopping", "groceries"], k: [11, 4], o: 2 }, boot: { a: "Womans Boots", b: "1F462", j: ["shoes", "fashion"], k: [14, 22], o: 2 }, sheep: { a: "Sheep", b: "1F411", j: ["animal", "nature", "wool", "shipit"], k: [11, 45], o: 2 }, face_with_raised_eyebrow: { a: "Face with One Eyebrow Raised", b: "1F928", k: [38, 42], n: ["face_with_one_eyebrow_raised"], o: 5 }, "flag-bj": { a: "Benin Flag", b: "1F1E7-1F1EF", k: [0, 56], o: 2 }, arrow_left: { a: "Leftwards Black Arrow", b: "2B05-FE0F", c: "2B05", j: ["blue-square", "previous", "back"], k: [55, 37], o: 2 }, selfie: { a: "Selfie", b: "1F933", j: ["camera", "phone"], k: [39, 11], o: 4 }, croissant: { a: "Croissant", b: "1F950", j: ["food", "bread", "french"], k: [41, 31], o: 4 }, school: { a: "School", b: "1F3EB", j: ["building", "student", "education", "learn", "teach"], k: [11, 5], o: 2 }, football: { a: "American Football", b: "1F3C8", j: ["sports", "balls", "NFL"], k: [9, 33], o: 2 }, goat: { a: "Goat", b: "1F410", j: ["animal", "nature"], k: [11, 44], o: 2 }, department_store: { a: "Department Store", b: "1F3EC", j: ["building", "shopping", "mall"], k: [11, 6], o: 2 }, "flag-bl": { a: "St. Barthélemy Flag", b: "1F1E7-1F1F1", k: [1, 0], o: 2 }, crown: { a: "Crown", b: "1F451", j: ["king", "kod", "leader", "royalty", "lord"], k: [14, 5], o: 2 }, arrow_upper_left: { a: "North West Arrow", b: "2196-FE0F", c: "2196", j: ["blue-square", "point", "direction", "diagonal", "northwest"], k: [52, 16], o: 2 }, neutral_face: { a: "Neutral Face", b: "1F610", j: ["indifference", "meh", ":|", "neutral"], k: [30, 51], l: [":|", ":-|"], o: 2 }, rugby_football: { a: "Rugby Football", b: "1F3C9", j: ["sports", "team"], k: [9, 34], o: 2 }, muscle: { a: "Flexed Biceps", b: "1F4AA", j: ["arm", "flex", "hand", "summer", "strong", "biceps"], k: [25, 52], o: 2 }, baguette_bread: { a: "Baguette Bread", b: "1F956", j: ["food", "bread", "french"], k: [41, 37], o: 4 }, expressionless: { a: "Expressionless Face", b: "1F611", j: ["face", "indifferent", "-_-", "meh", "deadpan"], k: [30, 52], o: 2 }, womans_hat: { a: "Womans Hat", b: "1F452", j: ["fashion", "accessories", "female", "lady", "spring"], k: [14, 6], o: 2 }, pretzel: { a: "Pretzel", b: "1F968", k: [41, 55], o: 5 }, mechanical_arm: { a: "Mechanical Arm", b: "1F9BE", k: [44, 6], o: 12 }, arrow_up_down: { a: "Up Down Arrow", b: "2195-FE0F", c: "2195", j: ["blue-square", "direction", "way", "vertical"], k: [52, 15], o: 2 }, dromedary_camel: { a: "Dromedary Camel", b: "1F42A", j: ["animal", "hot", "desert", "hump"], k: [12, 14], o: 2 }, tennis: { a: "Tennis Racquet and Ball", b: "1F3BE", j: ["sports", "balls", "green"], k: [8, 36], o: 2 }, "flag-bm": { a: "Bermuda Flag", b: "1F1E7-1F1F2", k: [1, 1], o: 2 }, factory: { a: "Factory", b: "1F3ED", j: ["building", "industry", "pollution", "smoke"], k: [11, 7], o: 2 }, japanese_castle: { a: "Japanese Castle", b: "1F3EF", j: ["photo", "building"], k: [11, 9], o: 2 }, no_mouth: { a: "Face Without Mouth", b: "1F636", j: ["face", "hellokitty"], k: [31, 32], o: 2 }, mechanical_leg: { a: "Mechanical Leg", b: "1F9BF", k: [44, 7], o: 12 }, bagel: { a: "Bagel", b: "1F96F", k: [42, 5], o: 11 }, camel: { a: "Bactrian Camel", b: "1F42B", j: ["animal", "nature", "hot", "desert", "hump"], k: [12, 15], o: 2 }, tophat: { a: "Top Hat", b: "1F3A9", j: ["magic", "gentleman", "classy", "circus"], k: [8, 15], o: 2 }, left_right_arrow: { a: "Left Right Arrow", b: "2194-FE0F", c: "2194", j: ["shape", "direction", "horizontal", "sideways"], k: [52, 14], o: 2 }, "flag-bn": { a: "Brunei Flag", b: "1F1E7-1F1F3", k: [1, 2], o: 2 }, flying_disc: { a: "Flying Disc", b: "1F94F", k: [41, 30], o: 11 }, smirk: { a: "Smirking Face", b: "1F60F", j: ["face", "smile", "mean", "prank", "smug", "sarcasm"], k: [30, 50], o: 2 }, mortar_board: { a: "Graduation Cap", b: "1F393", j: ["school", "college", "degree", "university", "graduation", "cap", "hat", "legal", "learn", "education"], k: [7, 55], o: 2 }, european_castle: { a: "European Castle", b: "1F3F0", j: ["building", "royalty", "history"], k: [11, 10], o: 2 }, leg: { a: "Leg", b: "1F9B5", k: [43, 5], o: 11 }, pancakes: { a: "Pancakes", b: "1F95E", j: ["food", "breakfast", "flapjacks", "hotcakes"], k: [41, 45], o: 4 }, leftwards_arrow_with_hook: { a: "Leftwards Arrow with Hook", b: "21A9-FE0F", c: "21A9", j: ["back", "return", "blue-square", "undo", "enter"], k: [52, 20], o: 2 }, "flag-bo": { a: "Bolivia Flag", b: "1F1E7-1F1F4", k: [1, 3], o: 2 }, bowling: { a: "Bowling", b: "1F3B3", j: ["sports", "fun", "play"], k: [8, 25], o: 2 }, llama: { a: "Llama", b: "1F999", k: [42, 43], o: 11 }, arrow_right_hook: { a: "Rightwards Arrow with Hook", b: "21AA-FE0F", c: "21AA", j: ["blue-square", "return", "rotate", "direction"], k: [52, 21], o: 2 }, wedding: { a: "Wedding", b: "1F492", j: ["love", "like", "affection", "couple", "marriage", "bride", "groom"], k: [25, 28], o: 2 }, "flag-bq": { a: "Caribbean Netherlands Flag", b: "1F1E7-1F1F6", k: [1, 4], o: 2 }, foot: { a: "Foot", b: "1F9B6", k: [43, 11], o: 11 }, giraffe_face: { a: "Giraffe Face", b: "1F992", k: [42, 36], o: 5 }, unamused: { a: "Unamused Face", b: "1F612", j: ["indifference", "bored", "straight face", "serious", "sarcasm"], k: [30, 53], m: ":(", o: 2 }, billed_cap: { a: "Billed Cap", b: "1F9E2", k: [51, 21], o: 5 }, waffle: { a: "Waffle", b: "1F9C7", k: [44, 15], o: 12 }, cricket_bat_and_ball: { a: "Cricket Bat and Ball", b: "1F3CF", k: [10, 34], o: 2 }, helmet_with_white_cross: { a: "Helmet with White Cross", b: "26D1-FE0F", c: "26D1", k: [54, 6], o: 2 }, ear: { a: "Ear", b: "1F442", j: ["face", "hear", "sound", "listen"], k: [12, 39], o: 2 }, elephant: { a: "Elephant", b: "1F418", j: ["animal", "nature", "nose", "th", "circus"], k: [11, 53], o: 2 }, cheese_wedge: { a: "Cheese Wedge", b: "1F9C0", k: [44, 8], o: 2 }, tokyo_tower: { a: "Tokyo Tower", b: "1F5FC", j: ["photo", "japanese"], k: [30, 31], o: 2 }, arrow_heading_up: { a: "Arrow Pointing Rightwards Then Curving Upwards", b: "2934-FE0F", c: "2934", j: ["blue-square", "direction", "top"], k: [55, 35], o: 2 }, field_hockey_stick_and_ball: { a: "Field Hockey Stick and Ball", b: "1F3D1", k: [10, 36], o: 2 }, "flag-br": { a: "Brazil Flag", b: "1F1E7-1F1F7", k: [1, 5], o: 2 }, face_with_rolling_eyes: { a: "Face with Rolling Eyes", b: "1F644", k: [31, 46], o: 2 }, ear_with_hearing_aid: { a: "Ear with Hearing Aid", b: "1F9BB", k: [43, 55], o: 12 }, arrow_heading_down: { a: "Arrow Pointing Rightwards Then Curving Downwards", b: "2935-FE0F", c: "2935", j: ["blue-square", "direction", "bottom"], k: [55, 36], o: 2 }, ice_hockey_stick_and_puck: { a: "Ice Hockey Stick and Puck", b: "1F3D2", k: [10, 37], o: 2 }, meat_on_bone: { a: "Meat on Bone", b: "1F356", j: ["good", "food", "drumstick"], k: [6, 46], o: 2 }, prayer_beads: { a: "Prayer Beads", b: "1F4FF", j: ["dhikr", "religious"], k: [27, 27], o: 2 }, statue_of_liberty: { a: "Statue of Liberty", b: "1F5FD", j: ["american", "newyork"], k: [30, 32], o: 2 }, grimacing: { a: "Grimacing Face", b: "1F62C", j: ["face", "grimace", "teeth"], k: [31, 22], o: 2 }, "flag-bs": { a: "Bahamas Flag", b: "1F1E7-1F1F8", k: [1, 6], o: 2 }, rhinoceros: { a: "Rhinoceros", b: "1F98F", j: ["animal", "nature", "horn"], k: [42, 33], o: 4 }, lacrosse: { a: "Lacrosse Stick and Ball", b: "1F94D", k: [41, 28], o: 11 }, poultry_leg: { a: "Poultry Leg", b: "1F357", j: ["food", "meat", "drumstick", "bird", "chicken", "turkey"], k: [6, 47], o: 2 }, hippopotamus: { a: "Hippopotamus", b: "1F99B", k: [42, 45], o: 11 }, nose: { a: "Nose", b: "1F443", j: ["smell", "sniff"], k: [12, 45], o: 2 }, arrows_clockwise: { a: "Clockwise Downwards and Upwards Open Circle Arrows", b: "1F503", j: ["sync", "cycle", "round", "repeat"], k: [27, 31], o: 2 }, "flag-bt": { a: "Bhutan Flag", b: "1F1E7-1F1F9", k: [1, 7], o: 2 }, church: { a: "Church", b: "26EA", j: ["building", "religion", "christ"], k: [54, 10], o: 2 }, lipstick: { a: "Lipstick", b: "1F484", j: ["female", "girl", "fashion", "woman"], k: [24, 32], o: 2 }, lying_face: { a: "Lying Face", b: "1F925", j: ["face", "lie", "pinocchio"], k: [38, 22], o: 4 }, arrows_counterclockwise: { a: "Anticlockwise Downwards and Upwards Open Circle Arrows", b: "1F504", j: ["blue-square", "sync", "cycle"], k: [27, 32], o: 2 }, "flag-bv": { a: "Bouvet Island Flag", b: "1F1E7-1F1FB", k: [1, 8], o: 2 }, cut_of_meat: { a: "Cut of Meat", b: "1F969", k: [41, 56], o: 5 }, mosque: { a: "Mosque", b: "1F54C", j: ["islam", "worship", "minaret"], k: [28, 36], o: 2 }, ring: { a: "Ring", b: "1F48D", j: ["wedding", "propose", "marriage", "valentines", "diamond", "fashion", "jewelry", "gem", "engagement"], k: [25, 23], o: 2 }, brain: { a: "Brain", b: "1F9E0", k: [51, 19], o: 5 }, table_tennis_paddle_and_ball: { a: "Table Tennis Paddle and Ball", b: "1F3D3", k: [10, 38], o: 2 }, relieved: { a: "Relieved Face", b: "1F60C", j: ["face", "relaxed", "phew", "massage", "happiness"], k: [30, 47], o: 2 }, mouse: { a: "Mouse Face", b: "1F42D", j: ["animal", "nature", "cheese_wedge", "rodent"], k: [12, 17], o: 2 }, hindu_temple: { a: "Hindu Temple", b: "1F6D5", k: [36, 41], o: 12 }, back: { a: "Back with Leftwards Arrow Above", b: "1F519", j: ["arrow", "words", "return"], k: [27, 53], o: 2 }, gem: { a: "Gem Stone", b: "1F48E", j: ["blue", "ruby", "diamond", "jewelry"], k: [25, 24], o: 2 }, pensive: { a: "Pensive Face", b: "1F614", j: ["face", "sad", "depressed", "upset"], k: [30, 55], o: 2 }, "flag-bw": { a: "Botswana Flag", b: "1F1E7-1F1FC", k: [1, 9], o: 2 }, mouse2: { a: "Mouse", b: "1F401", j: ["animal", "nature", "rodent"], k: [11, 29], o: 2 }, bacon: { a: "Bacon", b: "1F953", j: ["food", "breakfast", "pork", "pig", "meat"], k: [41, 34], o: 4 }, tooth: { a: "Tooth", b: "1F9B7", k: [43, 17], o: 11 }, badminton_racquet_and_shuttlecock: { a: "Badminton Racquet and Shuttlecock", b: "1F3F8", k: [11, 20], o: 2 }, rat: { a: "Rat", b: "1F400", j: ["animal", "mouse", "rodent"], k: [11, 28], o: 2 }, synagogue: { a: "Synagogue", b: "1F54D", j: ["judaism", "worship", "temple", "jewish"], k: [28, 37], o: 2 }, end: { a: "End with Leftwards Arrow Above", b: "1F51A", j: ["words", "arrow"], k: [27, 54], o: 2 }, bone: { a: "Bone", b: "1F9B4", k: [43, 4], o: 11 }, boxing_glove: { a: "Boxing Glove", b: "1F94A", j: ["sports", "fighting"], k: [41, 25], o: 4 }, mute: { a: "Speaker with Cancellation Stroke", b: "1F507", j: ["sound", "volume", "silence", "quiet"], k: [27, 35], o: 2 }, hamburger: { a: "Hamburger", b: "1F354", j: ["meat", "fast food", "beef", "cheeseburger", "mcdonalds", "burger king"], k: [6, 44], o: 2 }, "flag-by": { a: "Belarus Flag", b: "1F1E7-1F1FE", k: [1, 10], o: 2 }, sleepy: { a: "Sleepy Face", b: "1F62A", j: ["face", "tired", "rest", "nap"], k: [31, 20], o: 2 }, on: { a: "On with Exclamation Mark with Left Right Arrow Above", b: "1F51B", j: ["arrow", "words"], k: [27, 55], o: 2 }, martial_arts_uniform: { a: "Martial Arts Uniform", b: "1F94B", j: ["judo", "karate", "taekwondo"], k: [41, 26], o: 4 }, speaker: { a: "Speaker", b: "1F508", j: ["sound", "volume", "silence", "broadcast"], k: [27, 36], o: 2 }, drooling_face: { a: "Drooling Face", b: "1F924", j: ["face"], k: [38, 21], o: 4 }, eyes: { a: "Eyes", b: "1F440", j: ["look", "watch", "stalk", "peek", "see"], k: [12, 36], o: 2 }, "flag-bz": { a: "Belize Flag", b: "1F1E7-1F1FF", k: [1, 11], o: 2 }, hamster: { a: "Hamster Face", b: "1F439", j: ["animal", "nature"], k: [12, 29], o: 2 }, shinto_shrine: { a: "Shinto Shrine", b: "26E9-FE0F", c: "26E9", j: ["temple", "japan", "kyoto"], k: [54, 9], o: 2 }, fries: { a: "French Fries", b: "1F35F", j: ["chips", "snack", "fast food"], k: [6, 55], o: 2 }, goal_net: { a: "Goal Net", b: "1F945", j: ["sports"], k: [41, 21], o: 4 }, kaaba: { a: "Kaaba", b: "1F54B", j: ["mecca", "mosque", "islam"], k: [28, 35], o: 2 }, soon: { a: "Soon with Rightwards Arrow Above", b: "1F51C", j: ["arrow", "words"], k: [27, 56], o: 2 }, "flag-ca": { a: "Canada Flag", b: "1F1E8-1F1E6", k: [1, 12], o: 2 }, rabbit: { a: "Rabbit Face", b: "1F430", j: ["animal", "nature", "pet", "spring", "magic", "bunny"], k: [12, 20], o: 2 }, eye: { a: "Eye", b: "1F441-FE0F", c: "1F441", j: ["face", "look", "see", "watch", "stare"], k: [12, 38], o: 2 }, sleeping: { a: "Sleeping Face", b: "1F634", j: ["face", "tired", "sleepy", "night", "zzz"], k: [31, 30], o: 2 }, pizza: { a: "Slice of Pizza", b: "1F355", j: ["food", "party"], k: [6, 45], o: 2 }, sound: { a: "Speaker with One Sound Wave", b: "1F509", j: ["volume", "speaker", "broadcast"], k: [27, 37], o: 2 }, rabbit2: { a: "Rabbit", b: "1F407", j: ["animal", "nature", "pet", "magic", "spring"], k: [11, 35], o: 2 }, fountain: { a: "Fountain", b: "26F2", j: ["photo", "summer", "water", "fresh"], k: [54, 13], o: 2 }, golf: { a: "Flag in Hole", b: "26F3", j: ["sports", "business", "flag", "hole", "summer"], k: [54, 14], o: 2 }, top: { a: "Top with Upwards Arrow Above", b: "1F51D", j: ["words", "blue-square"], k: [28, 0], o: 2 }, mask: { a: "Face with Medical Mask", b: "1F637", j: ["face", "sick", "ill", "disease"], k: [31, 33], o: 2 }, "flag-cc": { a: "Cocos (keeling) Islands Flag", b: "1F1E8-1F1E8", k: [1, 13], o: 2 }, hotdog: { a: "Hot Dog", b: "1F32D", j: ["food", "frankfurter"], k: [6, 5], o: 2 }, loud_sound: { a: "Speaker with Three Sound Waves", b: "1F50A", j: ["volume", "noise", "noisy", "speaker", "broadcast"], k: [27, 38], o: 2 }, tongue: { a: "Tongue", b: "1F445", j: ["mouth", "playful"], k: [12, 52], o: 2 }, place_of_worship: { a: "Place of Worship", b: "1F6D0", j: ["religion", "church", "temple", "prayer"], k: [36, 38], o: 2 }, ice_skate: { a: "Ice Skate", b: "26F8-FE0F", c: "26F8", j: ["sports"], k: [54, 18], o: 2 }, sandwich: { a: "Sandwich", b: "1F96A", k: [42, 0], o: 5 }, chipmunk: { a: "Chipmunk", b: "1F43F-FE0F", c: "1F43F", j: ["animal", "nature", "rodent", "squirrel"], k: [12, 35], o: 2 }, loudspeaker: { a: "Public Address Loudspeaker", b: "1F4E2", j: ["volume", "sound"], k: [26, 56], o: 2 }, lips: { a: "Mouth", b: "1F444", j: ["mouth", "kiss"], k: [12, 51], o: 2 }, "flag-cd": { a: "Congo - Kinshasa Flag", b: "1F1E8-1F1E9", k: [1, 14], o: 2 }, tent: { a: "Tent", b: "26FA", j: ["photo", "camping", "outdoors"], k: [54, 37], o: 2 }, face_with_thermometer: { a: "Face with Thermometer", b: "1F912", j: ["sick", "temperature", "thermometer", "cold", "fever"], k: [37, 25], o: 2 }, taco: { a: "Taco", b: "1F32E", j: ["food", "mexican"], k: [6, 6], o: 2 }, foggy: { a: "Foggy", b: "1F301", j: ["photo", "mountain"], k: [5, 20], o: 2 }, "flag-cf": { a: "Central African Republic Flag", b: "1F1E8-1F1EB", k: [1, 15], o: 2 }, baby: { a: "Baby", b: "1F476", j: ["child", "boy", "girl", "toddler"], k: [23, 4], o: 2 }, atom_symbol: { a: "Atom Symbol", b: "269B-FE0F", c: "269B", j: ["science", "physics", "chemistry"], k: [53, 48], o: 2 }, fishing_pole_and_fish: { a: "Fishing Pole and Fish", b: "1F3A3", j: ["food", "hobby", "summer"], k: [8, 9], o: 2 }, hedgehog: { a: "Hedgehog", b: "1F994", k: [42, 38], o: 5 }, face_with_head_bandage: { a: "Face with Head-Bandage", b: "1F915", j: ["injured", "clumsy", "bandage", "hurt"], k: [37, 28], o: 2 }, mega: { a: "Cheering Megaphone", b: "1F4E3", j: ["sound", "speaker", "volume"], k: [27, 0], o: 2 }, nauseated_face: { a: "Nauseated Face", b: "1F922", j: ["face", "vomit", "gross", "green", "sick", "throw up", "ill"], k: [38, 19], o: 4 }, child: { a: "Child", b: "1F9D2", k: [48, 16], o: 5 }, "flag-cg": { a: "Congo - Brazzaville Flag", b: "1F1E8-1F1EC", k: [1, 16], o: 2 }, bat: { a: "Bat", b: "1F987", j: ["animal", "nature", "blind", "vampire"], k: [42, 25], o: 4 }, diving_mask: { a: "Diving Mask", b: "1F93F", k: [41, 15], o: 12 }, burrito: { a: "Burrito", b: "1F32F", j: ["food", "mexican"], k: [6, 7], o: 2 }, postal_horn: { a: "Postal Horn", b: "1F4EF", j: ["instrument", "music"], k: [27, 12], o: 2 }, night_with_stars: { a: "Night with Stars", b: "1F303", j: ["evening", "city", "downtown"], k: [5, 22], o: 2 }, om_symbol: { a: "Om Symbol", b: "1F549-FE0F", c: "1F549", k: [28, 33], o: 2 }, star_of_david: { a: "Star of David", b: "2721-FE0F", c: "2721", j: ["judaism"], k: [55, 15], o: 2 }, boy: { a: "Boy", b: "1F466", j: ["man", "male", "guy", "teenager"], k: [14, 26], o: 2 }, bell: { a: "Bell", b: "1F514", j: ["sound", "notification", "christmas", "xmas", "chime"], k: [27, 48], o: 2 }, "flag-ch": { a: "Switzerland Flag", b: "1F1E8-1F1ED", k: [1, 17], o: 2 }, running_shirt_with_sash: { a: "Running Shirt with Sash", b: "1F3BD", j: ["play", "pageant"], k: [8, 35], o: 2 }, stuffed_flatbread: { a: "Stuffed Flatbread", b: "1F959", j: ["food", "flatbread", "stuffed", "gyro"], k: [41, 40], o: 4 }, bear: { a: "Bear Face", b: "1F43B", j: ["animal", "nature", "wild"], k: [12, 31], o: 2 }, cityscape: { a: "Cityscape", b: "1F3D9-FE0F", c: "1F3D9", j: ["photo", "night life", "urban"], k: [10, 44], o: 2 }, face_vomiting: { a: "Face with Open Mouth Vomiting", b: "1F92E", k: [38, 48], n: ["face_with_open_mouth_vomiting"], o: 5 }, wheel_of_dharma: { a: "Wheel of Dharma", b: "2638-FE0F", c: "2638", j: ["hinduism", "buddhism", "sikhism", "jainism"], k: [53, 15], o: 2 }, ski: { a: "Ski and Ski Boot", b: "1F3BF", j: ["sports", "winter", "cold", "snow"], k: [8, 37], o: 2 }, girl: { a: "Girl", b: "1F467", j: ["female", "woman", "teenager"], k: [14, 32], o: 2 }, falafel: { a: "Falafel", b: "1F9C6", k: [44, 14], o: 12 }, sneezing_face: { a: "Sneezing Face", b: "1F927", j: ["face", "gesundheit", "sneeze", "sick", "allergy"], k: [38, 41], o: 4 }, no_bell: { a: "Bell with Cancellation Stroke", b: "1F515", j: ["sound", "volume", "mute", "quiet", "silent"], k: [27, 49], o: 2 }, koala: { a: "Koala", b: "1F428", j: ["animal", "nature"], k: [12, 12], o: 2 }, sunrise_over_mountains: { a: "Sunrise over Mountains", b: "1F304", j: ["view", "vacation", "photo"], k: [5, 23], o: 2 }, "flag-ci": { a: "Côte D’ivoire Flag", b: "1F1E8-1F1EE", k: [1, 18], o: 2 }, sunrise: { a: "Sunrise", b: "1F305", j: ["morning", "view", "vacation", "photo"], k: [5, 24], o: 2 }, yin_yang: { a: "Yin Yang", b: "262F-FE0F", c: "262F", j: ["balance"], k: [53, 14], o: 2 }, adult: { a: "Adult", b: "1F9D1", k: [48, 10], o: 5 }, hot_face: { a: "Overheated Face", b: "1F975", k: [42, 10], o: 11 }, musical_score: { a: "Musical Score", b: "1F3BC", j: ["treble", "clef", "compose"], k: [8, 34], o: 2 }, sled: { a: "Sled", b: "1F6F7", k: [36, 56], o: 5 }, egg: { a: "Egg", b: "1F95A", j: ["food", "chicken", "breakfast"], k: [41, 41], o: 4 }, panda_face: { a: "Panda Face", b: "1F43C", j: ["animal", "nature", "panda"], k: [12, 32], o: 2 }, "flag-ck": { a: "Cook Islands Flag", b: "1F1E8-1F1F0", k: [1, 19], o: 2 }, "flag-cl": { a: "Chile Flag", b: "1F1E8-1F1F1", k: [1, 20], o: 2 }, sloth: { a: "Sloth", b: "1F9A5", k: [42, 53], o: 12 }, latin_cross: { a: "Latin Cross", b: "271D-FE0F", c: "271D", j: ["christianity"], k: [55, 14], o: 2 }, curling_stone: { a: "Curling Stone", b: "1F94C", k: [41, 27], o: 5 }, cold_face: { a: "Freezing Face", b: "1F976", k: [42, 11], o: 11 }, fried_egg: { a: "Cooking", b: "1F373", j: ["food", "breakfast", "kitchen", "egg"], k: [7, 18], n: ["cooking"], o: 2 }, city_sunset: { a: "Cityscape at Dusk", b: "1F306", j: ["photo", "evening", "sky", "buildings"], k: [5, 25], o: 2 }, musical_note: { a: "Musical Note", b: "1F3B5", j: ["score", "tone", "sound"], k: [8, 27], o: 2 }, "flag-cm": { a: "Cameroon Flag", b: "1F1E8-1F1F2", k: [1, 21], o: 2 }, notes: { a: "Multiple Musical Notes", b: "1F3B6", j: ["music", "score"], k: [8, 28], o: 2 }, woozy_face: { a: "Face with Uneven Eyes and Wavy Mouth", b: "1F974", k: [42, 9], o: 11 }, dart: { a: "Direct Hit", b: "1F3AF", j: ["game", "play", "bar"], k: [8, 21], o: 2 }, orthodox_cross: { a: "Orthodox Cross", b: "2626-FE0F", c: "2626", j: ["suppedaneum", "religion"], k: [53, 11], o: 2 }, shallow_pan_of_food: { a: "Shallow Pan of Food", b: "1F958", j: ["food", "cooking", "casserole", "paella"], k: [41, 39], o: 4 }, otter: { a: "Otter", b: "1F9A6", k: [42, 54], o: 12 }, man: { a: "Man", b: "1F468", j: ["mustache", "father", "dad", "guy", "classy", "sir", "moustache"], k: [17, 22], o: 2 }, city_sunrise: { a: "Sunset over Buildings", b: "1F307", j: ["photo", "good morning", "dawn"], k: [5, 26], o: 2 }, bearded_person: { a: "Bearded Person", b: "1F9D4", k: [48, 28], o: 5 }, skunk: { a: "Skunk", b: "1F9A8", k: [42, 56], o: 12 }, stew: { a: "Pot of Food", b: "1F372", j: ["food", "meat", "soup"], k: [7, 17], o: 2 }, cn: { a: "China Flag", b: "1F1E8-1F1F3", j: ["china", "chinese", "prc", "flag", "country", "nation", "banner"], k: [1, 22], n: ["flag-cn"], o: 2 }, studio_microphone: { a: "Studio Microphone", b: "1F399-FE0F", c: "1F399", j: ["sing", "recording", "artist", "talkshow"], k: [8, 1], o: 2 }, star_and_crescent: { a: "Star and Crescent", b: "262A-FE0F", c: "262A", j: ["islam"], k: [53, 12], o: 2 }, "yo-yo": { a: "Yo-Yo", b: "1FA80", k: [52, 1], o: 12 }, bridge_at_night: { a: "Bridge at Night", b: "1F309", j: ["photo", "sanfrancisco"], k: [5, 28], o: 2 }, dizzy_face: { a: "Dizzy Face", b: "1F635", j: ["spent", "unconscious", "xox", "dizzy"], k: [31, 31], o: 2 }, red_haired_man: { a: "Red Haired Man", b: "1F468-200D-1F9B0", k: [16, 23], o: 11 }, kite: { a: "Kite", b: "1FA81", k: [52, 2], o: 12 }, bowl_with_spoon: { a: "Bowl with Spoon", b: "1F963", k: [41, 50], o: 5 }, "flag-co": { a: "Colombia Flag", b: "1F1E8-1F1F4", k: [1, 23], o: 2 }, peace_symbol: { a: "Peace Symbol", b: "262E-FE0F", c: "262E", j: ["hippie"], k: [53, 13], o: 2 }, kangaroo: { a: "Kangaroo", b: "1F998", k: [42, 42], o: 11 }, hotsprings: { a: "Hot Springs", b: "2668-FE0F", c: "2668", j: ["bath", "warm", "relax"], k: [53, 37], o: 2 }, exploding_head: { a: "Shocked Face with Exploding Head", b: "1F92F", k: [38, 49], n: ["shocked_face_with_exploding_head"], o: 5 }, level_slider: { a: "Level Slider", b: "1F39A-FE0F", c: "1F39A", j: ["scale"], k: [8, 2], o: 2 }, badger: { a: "Badger", b: "1F9A1", k: [42, 51], o: 11 }, "8ball": { a: "Billiards", b: "1F3B1", j: ["pool", "hobby", "game", "luck", "magic"], k: [8, 23], o: 2 }, curly_haired_man: { a: "Curly Haired Man", b: "1F468-200D-1F9B1", k: [16, 29], o: 11 }, "flag-cp": { a: "Clipperton Island Flag", b: "1F1E8-1F1F5", k: [1, 24], o: 2 }, carousel_horse: { a: "Carousel Horse", b: "1F3A0", j: ["photo", "carnival"], k: [8, 6], o: 2 }, face_with_cowboy_hat: { a: "Face with Cowboy Hat", b: "1F920", k: [38, 17], o: 4 }, menorah_with_nine_branches: { a: "Menorah with Nine Branches", b: "1F54E", k: [28, 38], o: 2 }, green_salad: { a: "Green Salad", b: "1F957", j: ["food", "healthy", "lettuce"], k: [41, 38], o: 4 }, control_knobs: { a: "Control Knobs", b: "1F39B-FE0F", c: "1F39B", j: ["dial"], k: [8, 3], o: 2 }, popcorn: { a: "Popcorn", b: "1F37F", j: ["food", "movie theater", "films", "snack"], k: [7, 30], o: 2 }, six_pointed_star: { a: "Six Pointed Star with Middle Dot", b: "1F52F", j: ["purple-square", "religion", "jewish", "hexagram"], k: [28, 18], o: 2 }, feet: { a: "Paw Prints", b: "1F43E", k: [12, 34], n: ["paw_prints"], o: 2 }, ferris_wheel: { a: "Ferris Wheel", b: "1F3A1", j: ["photo", "carnival", "londoneye"], k: [8, 7], o: 2 }, microphone: { a: "Microphone", b: "1F3A4", j: ["sound", "music", "PA", "sing", "talkshow"], k: [8, 10], o: 2 }, crystal_ball: { a: "Crystal Ball", b: "1F52E", j: ["disco", "party", "magic", "circus", "fortune_teller"], k: [28, 17], o: 2 }, partying_face: { a: "Face with Party Horn and Party Hat", b: "1F973", k: [42, 8], o: 11 }, "flag-cr": { a: "Costa Rica Flag", b: "1F1E8-1F1F7", k: [1, 25], o: 2 }, white_haired_man: { a: "White Haired Man", b: "1F468-200D-1F9B3", k: [16, 41], o: 11 }, headphones: { a: "Headphone", b: "1F3A7", j: ["music", "score", "gadgets"], k: [8, 13], o: 2 }, bald_man: { a: "Bald Man", b: "1F468-200D-1F9B2", k: [16, 35], o: 11 }, sunglasses: { a: "Smiling Face with Sunglasses", b: "1F60E", j: ["face", "cool", "smile", "summer", "beach", "sunglass"], k: [30, 49], l: ["8)"], o: 2 }, butter: { a: "Butter", b: "1F9C8", k: [44, 16], o: 12 }, roller_coaster: { a: "Roller Coaster", b: "1F3A2", j: ["carnival", "playground", "photo", "fun"], k: [8, 8], o: 2 }, turkey: { a: "Turkey", b: "1F983", j: ["animal", "bird"], k: [42, 21], o: 2 }, nazar_amulet: { a: "Nazar Amulet", b: "1F9FF", k: [51, 50], o: 11 }, "flag-cu": { a: "Cuba Flag", b: "1F1E8-1F1FA", k: [1, 26], o: 2 }, aries: { a: "Aries", b: "2648", j: ["sign", "purple-square", "zodiac", "astrology"], k: [53, 20], o: 2 }, "flag-cv": { a: "Cape Verde Flag", b: "1F1E8-1F1FB", k: [1, 27], o: 2 }, barber: { a: "Barber Pole", b: "1F488", j: ["hair", "salon", "style"], k: [25, 18], o: 2 }, taurus: { a: "Taurus", b: "2649", j: ["purple-square", "sign", "zodiac", "astrology"], k: [53, 21], o: 2 }, salt: { a: "Salt Shaker", b: "1F9C2", k: [44, 10], o: 11 }, woman: { a: "Woman", b: "1F469", j: ["female", "girls", "lady"], k: [20, 9], o: 2 }, video_game: { a: "Video Game", b: "1F3AE", j: ["play", "console", "PS4", "controller"], k: [8, 20], o: 2 }, chicken: { a: "Chicken", b: "1F414", j: ["animal", "cluck", "nature", "bird"], k: [11, 48], o: 2 }, radio: { a: "Radio", b: "1F4FB", j: ["communication", "music", "podcast", "program"], k: [27, 24], o: 2 }, nerd_face: { a: "Nerd Face", b: "1F913", j: ["face", "nerdy", "geek", "dork"], k: [37, 26], o: 2 }, red_haired_woman: { a: "Red Haired Woman", b: "1F469-200D-1F9B0", k: [19, 8], o: 11 }, circus_tent: { a: "Circus Tent", b: "1F3AA", j: ["festival", "carnival", "party"], k: [8, 16], o: 2 }, face_with_monocle: { a: "Face with Monocle", b: "1F9D0", k: [45, 16], o: 5 }, canned_food: { a: "Canned Food", b: "1F96B", k: [42, 1], o: 5 }, "flag-cw": { a: "Curaçao Flag", b: "1F1E8-1F1FC", k: [1, 28], o: 2 }, gemini: { a: "Gemini", b: "264A", j: ["sign", "zodiac", "purple-square", "astrology"], k: [53, 22], o: 2 }, saxophone: { a: "Saxophone", b: "1F3B7", j: ["music", "instrument", "jazz", "blues"], k: [8, 29], o: 2 }, rooster: { a: "Rooster", b: "1F413", j: ["animal", "nature", "chicken"], k: [11, 47], o: 2 }, joystick: { a: "Joystick", b: "1F579-FE0F", c: "1F579", j: ["game", "play"], k: [29, 36], o: 2 }, guitar: { a: "Guitar", b: "1F3B8", j: ["music", "instrument"], k: [8, 30], o: 2 }, slot_machine: { a: "Slot Machine", b: "1F3B0", j: ["bet", "gamble", "vegas", "fruit machine", "luck", "casino"], k: [8, 22], o: 2 }, bento: { a: "Bento Box", b: "1F371", j: ["food", "japanese", "box"], k: [7, 16], o: 2 }, steam_locomotive: { a: "Steam Locomotive", b: "1F682", j: ["transportation", "vehicle", "train"], k: [34, 1], o: 2 }, confused: { a: "Confused Face", b: "1F615", j: ["face", "indifference", "huh", "weird", "hmmm", ":/"], k: [30, 56], l: [":\\", ":-\\", ":/", ":-/"], o: 2 }, "flag-cx": { a: "Christmas Island Flag", b: "1F1E8-1F1FD", k: [1, 29], o: 2 }, hatching_chick: { a: "Hatching Chick", b: "1F423", j: ["animal", "chicken", "egg", "born", "baby", "bird"], k: [12, 7], o: 2 }, cancer: { a: "Cancer", b: "264B", j: ["sign", "zodiac", "purple-square", "astrology"], k: [53, 23], o: 2 }, "flag-cy": { a: "Cyprus Flag", b: "1F1E8-1F1FE", k: [1, 30], o: 2 }, worried: { a: "Worried Face", b: "1F61F", j: ["face", "concern", "nervous", ":("], k: [31, 9], o: 2 }, railway_car: { a: "Railway Car", b: "1F683", j: ["transportation", "vehicle"], k: [34, 2], o: 2 }, leo: { a: "Leo", b: "264C", j: ["sign", "purple-square", "zodiac", "astrology"], k: [53, 24], o: 2 }, curly_haired_woman: { a: "Curly Haired Woman", b: "1F469-200D-1F9B1", k: [19, 14], o: 11 }, baby_chick: { a: "Baby Chick", b: "1F424", j: ["animal", "chicken", "bird"], k: [12, 8], o: 2 }, musical_keyboard: { a: "Musical Keyboard", b: "1F3B9", j: ["piano", "instrument", "compose"], k: [8, 31], o: 2 }, game_die: { a: "Game Die", b: "1F3B2", j: ["dice", "random", "tabletop", "play", "luck"], k: [8, 24], o: 2 }, rice_cracker: { a: "Rice Cracker", b: "1F358", j: ["food", "japanese"], k: [6, 48], o: 2 }, virgo: { a: "Virgo", b: "264D", j: ["sign", "zodiac", "purple-square", "astrology"], k: [53, 25], o: 2 }, "flag-cz": { a: "Czechia Flag", b: "1F1E8-1F1FF", k: [1, 31], o: 2 }, rice_ball: { a: "Rice Ball", b: "1F359", j: ["food", "japanese"], k: [6, 49], o: 2 }, hatched_chick: { a: "Front-Facing Baby Chick", b: "1F425", j: ["animal", "chicken", "baby", "bird"], k: [12, 9], o: 2 }, jigsaw: { a: "Jigsaw Puzzle Piece", b: "1F9E9", k: [51, 28], o: 11 }, trumpet: { a: "Trumpet", b: "1F3BA", j: ["music", "brass"], k: [8, 32], o: 2 }, slightly_frowning_face: { a: "Slightly Frowning Face", b: "1F641", j: ["face", "frowning", "disappointed", "sad", "upset"], k: [31, 43], o: 2 }, bullettrain_side: { a: "High-Speed Train", b: "1F684", j: ["transportation", "vehicle"], k: [34, 3], o: 2 }, libra: { a: "Libra", b: "264E", j: ["sign", "purple-square", "zodiac", "astrology"], k: [53, 26], o: 2 }, de: { a: "Germany Flag", b: "1F1E9-1F1EA", j: ["german", "nation", "flag", "country", "banner"], k: [1, 32], n: ["flag-de"], o: 2 }, rice: { a: "Cooked Rice", b: "1F35A", j: ["food", "china", "asian"], k: [6, 50], o: 2 }, violin: { a: "Violin", b: "1F3BB", j: ["music", "instrument", "orchestra", "symphony"], k: [8, 33], o: 2 }, white_haired_woman: { a: "White Haired Woman", b: "1F469-200D-1F9B3", k: [19, 26], o: 11 }, bird: { a: "Bird", b: "1F426", j: ["animal", "nature", "fly", "tweet", "spring"], k: [12, 10], o: 2 }, white_frowning_face: { a: "White Frowning Face", b: "2639-FE0F", c: "2639", k: [53, 16], o: 2 }, bullettrain_front: { a: "High-Speed Train with Bullet Nose", b: "1F685", j: ["transportation", "vehicle", "speed", "fast", "public", "travel"], k: [34, 4], o: 2 }, teddy_bear: { a: "Teddy Bear", b: "1F9F8", k: [51, 43], o: 11 }, spades: { a: "Black Spade Suit", b: "2660-FE0F", c: "2660", j: ["poker", "cards", "suits", "magic"], k: [53, 33], o: 2 }, banjo: { a: "Banjo", b: "1FA95", k: [52, 9], o: 12 }, train2: { a: "Train", b: "1F686", j: ["transportation", "vehicle"], k: [34, 5], o: 2 }, scorpius: { a: "Scorpius", b: "264F", j: ["sign", "zodiac", "purple-square", "astrology", "scorpio"], k: [53, 27], o: 2 }, curry: { a: "Curry and Rice", b: "1F35B", j: ["food", "spicy", "hot", "indian"], k: [6, 51], o: 2 }, open_mouth: { a: "Face with Open Mouth", b: "1F62E", j: ["face", "surprise", "impressed", "wow", "whoa", ":O"], k: [31, 24], l: [":o", ":-o", ":O", ":-O"], o: 2 }, "flag-dg": { a: "Diego Garcia Flag", b: "1F1E9-1F1EC", k: [1, 33], o: 2 }, penguin: { a: "Penguin", b: "1F427", j: ["animal", "nature"], k: [12, 11], o: 2 }, hearts: { a: "Black Heart Suit", b: "2665-FE0F", c: "2665", j: ["poker", "cards", "magic", "suits"], k: [53, 35], o: 2 }, ramen: { a: "Steaming Bowl", b: "1F35C", j: ["food", "japanese", "noodle", "chopsticks"], k: [6, 52], o: 2 }, sagittarius: { a: "Sagittarius", b: "2650", j: ["sign", "zodiac", "purple-square", "astrology"], k: [53, 28], o: 2 }, bald_woman: { a: "Bald Woman", b: "1F469-200D-1F9B2", k: [19, 20], o: 11 }, dove_of_peace: { a: "Dove of Peace", b: "1F54A-FE0F", c: "1F54A", k: [28, 34], o: 2 }, hushed: { a: "Hushed Face", b: "1F62F", j: ["face", "woo", "shh"], k: [31, 25], o: 2 }, metro: { a: "Metro", b: "1F687", j: ["transportation", "blue-square", "mrt", "underground", "tube"], k: [34, 6], o: 2 }, "flag-dj": { a: "Djibouti Flag", b: "1F1E9-1F1EF", k: [1, 34], o: 2 }, drum_with_drumsticks: { a: "Drum with Drumsticks", b: "1F941", k: [41, 17], o: 4 }, spaghetti: { a: "Spaghetti", b: "1F35D", j: ["food", "italian", "noodle"], k: [6, 53], o: 2 }, eagle: { a: "Eagle", b: "1F985", j: ["animal", "nature", "bird"], k: [42, 23], o: 4 }, astonished: { a: "Astonished Face", b: "1F632", j: ["face", "xox", "surprised", "poisoned"], k: [31, 28], o: 2 }, capricorn: { a: "Capricorn", b: "2651", j: ["sign", "zodiac", "purple-square", "astrology"], k: [53, 29], o: 2 }, light_rail: { a: "Light Rail", b: "1F688", j: ["transportation", "vehicle"], k: [34, 7], o: 2 }, "flag-dk": { a: "Denmark Flag", b: "1F1E9-1F1F0", k: [1, 35], o: 2 }, iphone: { a: "Mobile Phone", b: "1F4F1", j: ["technology", "apple", "gadgets", "dial"], k: [27, 14], o: 2 }, diamonds: { a: "Black Diamond Suit", b: "2666-FE0F", c: "2666", j: ["poker", "cards", "magic", "suits"], k: [53, 36], o: 2 }, clubs: { a: "Black Club Suit", b: "2663-FE0F", c: "2663", j: ["poker", "cards", "magic", "suits"], k: [53, 34], o: 2 }, aquarius: { a: "Aquarius", b: "2652", j: ["sign", "purple-square", "zodiac", "astrology"], k: [53, 30], o: 2 }, sweet_potato: { a: "Roasted Sweet Potato", b: "1F360", j: ["food", "nature"], k: [6, 56], o: 2 }, "flag-dm": { a: "Dominica Flag", b: "1F1E9-1F1F2", k: [1, 36], o: 2 }, duck: { a: "Duck", b: "1F986", j: ["animal", "nature", "bird", "mallard"], k: [42, 24], o: 4 }, calling: { a: "Mobile Phone with Rightwards Arrow at Left", b: "1F4F2", j: ["iphone", "incoming"], k: [27, 15], o: 2 }, station: { a: "Station", b: "1F689", j: ["transportation", "vehicle", "public"], k: [34, 8], o: 2 }, "blond-haired-woman": { a: "Blond Haired Woman", b: "1F471-200D-2640-FE0F", c: "1F471-200D-2640", k: [22, 7], o: 4 }, flushed: { a: "Flushed Face", b: "1F633", j: ["face", "blush", "shy", "flattered"], k: [31, 29], o: 2 }, pisces: { a: "Pisces", b: "2653", j: ["purple-square", "sign", "zodiac", "astrology"], k: [53, 31], o: 2 }, chess_pawn: { a: "Chess Pawn", b: "265F-FE0F", c: "265F", k: [53, 32], o: 11 }, "blond-haired-man": { obsoletes: "1F471", a: "Blond Haired Man", b: "1F471-200D-2642-FE0F", c: "1F471-200D-2642", k: [22, 13], o: 4 }, phone: { a: "Black Telephone", b: "260E-FE0F", c: "260E", j: ["technology", "communication", "dial", "telephone"], k: [52, 54], n: ["telephone"], o: 2 }, oden: { a: "Oden", b: "1F362", j: ["food", "japanese"], k: [7, 1], o: 2 }, "flag-do": { a: "Dominican Republic Flag", b: "1F1E9-1F1F4", k: [1, 37], o: 2 }, tram: { a: "Tram", b: "1F68A", j: ["transportation", "vehicle"], k: [34, 9], o: 2 }, swan: { a: "Swan", b: "1F9A2", k: [42, 52], o: 11 }, pleading_face: { a: "Face with Pleading Eyes", b: "1F97A", k: [42, 12], o: 11 }, "flag-dz": { a: "Algeria Flag", b: "1F1E9-1F1FF", k: [1, 38], o: 2 }, monorail: { a: "Monorail", b: "1F69D", j: ["transportation", "vehicle"], k: [34, 28], o: 2 }, owl: { a: "Owl", b: "1F989", j: ["animal", "nature", "bird", "hoot"], k: [42, 27], o: 4 }, sushi: { a: "Sushi", b: "1F363", j: ["food", "fish", "japanese", "rice"], k: [7, 2], o: 2 }, telephone_receiver: { a: "Telephone Receiver", b: "1F4DE", j: ["technology", "communication", "dial"], k: [26, 52], o: 2 }, black_joker: { a: "Playing Card Black Joker", b: "1F0CF", j: ["poker", "cards", "game", "play", "magic"], k: [0, 15], o: 2 }, ophiuchus: { a: "Ophiuchus", b: "26CE", j: ["sign", "purple-square", "constellation", "astrology"], k: [54, 4], o: 2 }, frowning: { a: "Frowning Face with Open Mouth", b: "1F626", j: ["face", "aw", "what"], k: [31, 16], o: 2 }, older_adult: { a: "Older Adult", b: "1F9D3", k: [48, 22], o: 5 }, "flag-ea": { a: "Ceuta & Melilla Flag", b: "1F1EA-1F1E6", k: [1, 39], o: 2 }, flamingo: { a: "Flamingo", b: "1F9A9", k: [43, 0], o: 12 }, pager: { a: "Pager", b: "1F4DF", j: ["bbcall", "oldschool", "90s"], k: [26, 53], o: 2 }, mountain_railway: { a: "Mountain Railway", b: "1F69E", j: ["transportation", "vehicle"], k: [34, 29], o: 2 }, mahjong: { a: "Mahjong Tile Red Dragon", b: "1F004", j: ["game", "play", "chinese", "kanji"], k: [0, 14], o: 2 }, older_man: { a: "Older Man", b: "1F474", j: ["human", "male", "men", "old", "elder", "senior"], k: [22, 49], o: 2 }, twisted_rightwards_arrows: { a: "Twisted Rightwards Arrows", b: "1F500", j: ["blue-square", "shuffle", "music", "random"], k: [27, 28], o: 2 }, fried_shrimp: { a: "Fried Shrimp", b: "1F364", j: ["food", "animal", "appetizer", "summer"], k: [7, 3], o: 2 }, anguished: { a: "Anguished Face", b: "1F627", j: ["face", "stunned", "nervous"], k: [31, 17], l: ["D:"], o: 2 }, repeat: { a: "Clockwise Rightwards and Leftwards Open Circle Arrows", b: "1F501", j: ["loop", "record"], k: [27, 29], o: 2 }, fish_cake: { a: "Fish Cake with Swirl Design", b: "1F365", j: ["food", "japan", "sea", "beach", "narutomaki", "pink", "swirl", "kamaboko", "surimi", "ramen"], k: [7, 4], o: 2 }, fax: { a: "Fax Machine", b: "1F4E0", j: ["communication", "technology"], k: [26, 54], o: 2 }, older_woman: { a: "Older Woman", b: "1F475", j: ["human", "female", "women", "lady", "old", "elder", "senior"], k: [22, 55], o: 2 }, "flag-ec": { a: "Ecuador Flag", b: "1F1EA-1F1E8", k: [1, 40], o: 2 }, peacock: { a: "Peacock", b: "1F99A", k: [42, 44], o: 11 }, fearful: { a: "Fearful Face", b: "1F628", j: ["face", "scared", "terrified", "nervous", "oops", "huh"], k: [31, 18], o: 2 }, train: { a: "Tram Car", b: "1F68B", j: ["transportation", "vehicle", "carriage", "public", "travel"], k: [34, 10], o: 2 }, flower_playing_cards: { a: "Flower Playing Cards", b: "1F3B4", j: ["game", "sunset", "red"], k: [8, 26], o: 2 }, repeat_one: { a: "Clockwise Rightwards and Leftwards Open Circle Arrows with Circled One Overlay", b: "1F502", j: ["blue-square", "loop"], k: [27, 30], o: 2 }, moon_cake: { a: "Moon Cake", b: "1F96E", k: [42, 4], o: 11 }, performing_arts: { a: "Performing Arts", b: "1F3AD", j: ["acting", "theater", "drama"], k: [8, 19], o: 2 }, cold_sweat: { a: "Face with Open Mouth and Cold Sweat", b: "1F630", j: ["face", "nervous", "sweat"], k: [31, 26], o: 2 }, "flag-ee": { a: "Estonia Flag", b: "1F1EA-1F1EA", k: [1, 41], o: 2 }, battery: { a: "Battery", b: "1F50B", j: ["power", "energy", "sustain"], k: [27, 39], o: 2 }, parrot: { a: "Parrot", b: "1F99C", k: [42, 46], o: 11 }, bus: { a: "Bus", b: "1F68C", j: ["car", "vehicle", "transportation"], k: [34, 11], o: 2 }, "flag-eg": { a: "Egypt Flag", b: "1F1EA-1F1EC", k: [1, 42], o: 2 }, arrow_forward: { a: "Black Right-Pointing Triangle", b: "25B6-FE0F", c: "25B6", j: ["blue-square", "right", "direction", "play"], k: [52, 43], o: 2 }, "man-frowning": { a: "Man Frowning", b: "1F64D-200D-2642-FE0F", c: "1F64D-200D-2642", k: [33, 20], o: 4 }, disappointed_relieved: { a: "Disappointed but Relieved Face", b: "1F625", j: ["face", "phew", "sweat", "nervous"], k: [31, 15], o: 2 }, electric_plug: { a: "Electric Plug", b: "1F50C", j: ["charger", "power"], k: [27, 40], o: 2 }, frame_with_picture: { a: "Frame with Picture", b: "1F5BC-FE0F", c: "1F5BC", k: [30, 14], o: 2 }, oncoming_bus: { a: "Oncoming Bus", b: "1F68D", j: ["vehicle", "transportation"], k: [34, 12], o: 2 }, dango: { a: "Dango", b: "1F361", j: ["food", "dessert", "sweet", "japanese", "barbecue", "meat"], k: [7, 0], o: 2 }, frog: { a: "Frog Face", b: "1F438", j: ["animal", "nature", "croak", "toad"], k: [12, 28], o: 2 }, computer: { a: "Personal Computer", b: "1F4BB", j: ["technology", "laptop", "screen", "display", "monitor"], k: [26, 17], o: 2 }, art: { a: "Artist Palette", b: "1F3A8", j: ["design", "paint", "draw", "colors"], k: [8, 14], o: 2 }, "flag-eh": { a: "Western Sahara Flag", b: "1F1EA-1F1ED", k: [1, 43], o: 2 }, fast_forward: { a: "Black Right-Pointing Double Triangle", b: "23E9", j: ["blue-square", "play", "speed", "continue"], k: [52, 26], o: 2 }, cry: { a: "Crying Face", b: "1F622", j: ["face", "tears", "sad", "depressed", "upset", ":'("], k: [31, 12], l: [":'("], m: ":'(", o: 2 }, "woman-frowning": { obsoletes: "1F64D", a: "Woman Frowning", b: "1F64D-200D-2640-FE0F", c: "1F64D-200D-2640", k: [33, 14], o: 4 }, trolleybus: { a: "Trolleybus", b: "1F68E", j: ["bart", "transportation", "vehicle"], k: [34, 13], o: 2 }, crocodile: { a: "Crocodile", b: "1F40A", j: ["animal", "nature", "reptile", "lizard", "alligator"], k: [11, 38], o: 2 }, dumpling: { a: "Dumpling", b: "1F95F", k: [41, 46], o: 5 }, black_right_pointing_double_triangle_with_vertical_bar: { a: "Black Right Pointing Double Triangle with Vertical Bar", b: "23ED-FE0F", c: "23ED", k: [52, 30], o: 2 }, desktop_computer: { a: "Desktop Computer", b: "1F5A5-FE0F", c: "1F5A5", j: ["technology", "computing", "screen"], k: [30, 10], o: 2 }, turtle: { a: "Turtle", b: "1F422", j: ["animal", "slow", "nature", "tortoise"], k: [12, 6], o: 2 }, sob: { a: "Loudly Crying Face", b: "1F62D", j: ["face", "cry", "tears", "sad", "upset", "depressed"], k: [31, 23], m: ":'(", o: 2 }, "flag-er": { a: "Eritrea Flag", b: "1F1EA-1F1F7", k: [1, 44], o: 2 }, thread: { a: "Spool of Thread", b: "1F9F5", k: [51, 40], o: 11 }, minibus: { a: "Minibus", b: "1F690", j: ["vehicle", "car", "transportation"], k: [34, 15], o: 2 }, fortune_cookie: { a: "Fortune Cookie", b: "1F960", k: [41, 47], o: 5 }, yarn: { a: "Ball of Yarn", b: "1F9F6", k: [51, 41], o: 11 }, takeout_box: { a: "Takeout Box", b: "1F961", k: [41, 48], o: 5 }, "man-pouting": { a: "Man Pouting", b: "1F64E-200D-2642-FE0F", c: "1F64E-200D-2642", k: [33, 38], o: 4 }, printer: { a: "Printer", b: "1F5A8-FE0F", c: "1F5A8", j: ["paper", "ink"], k: [30, 11], o: 2 }, scream: { a: "Face Screaming in Fear", b: "1F631", j: ["face", "munch", "scared", "omg"], k: [31, 27], o: 2 }, es: { a: "Spain Flag", b: "1F1EA-1F1F8", j: ["spain", "flag", "nation", "country", "banner"], k: [1, 45], n: ["flag-es"], o: 2 }, ambulance: { a: "Ambulance", b: "1F691", j: ["health", "911", "hospital"], k: [34, 16], o: 2 }, black_right_pointing_triangle_with_double_vertical_bar: { a: "Black Right Pointing Triangle with Double Vertical Bar", b: "23EF-FE0F", c: "23EF", k: [52, 32], o: 2 }, lizard: { a: "Lizard", b: "1F98E", j: ["animal", "nature", "reptile"], k: [42, 32], o: 4 }, "flag-et": { a: "Ethiopia Flag", b: "1F1EA-1F1F9", k: [1, 46], o: 2 }, keyboard: { a: "Keyboard", b: "2328-FE0F", c: "2328", j: ["technology", "computer", "type", "input", "text"], k: [52, 24], o: 2 }, crab: { a: "Crab", b: "1F980", j: ["animal", "crustacean"], k: [42, 18], o: 2 }, confounded: { a: "Confounded Face", b: "1F616", j: ["face", "confused", "sick", "unwell", "oops", ":S"], k: [31, 0], o: 2 }, snake: { a: "Snake", b: "1F40D", j: ["animal", "evil", "nature", "hiss", "python"], k: [11, 41], o: 2 }, "woman-pouting": { obsoletes: "1F64E", a: "Woman Pouting", b: "1F64E-200D-2640-FE0F", c: "1F64E-200D-2640", k: [33, 32], o: 4 }, arrow_backward: { a: "Black Left-Pointing Triangle", b: "25C0-FE0F", c: "25C0", j: ["blue-square", "left", "direction"], k: [52, 44], o: 2 }, fire_engine: { a: "Fire Engine", b: "1F692", j: ["transportation", "cars", "vehicle"], k: [34, 17], o: 2 }, rewind: { a: "Black Left-Pointing Double Triangle", b: "23EA", j: ["play", "blue-square"], k: [52, 27], o: 2 }, three_button_mouse: { a: "Three Button Mouse", b: "1F5B1-FE0F", c: "1F5B1", k: [30, 12], o: 2 }, police_car: { a: "Police Car", b: "1F693", j: ["vehicle", "cars", "transportation", "law", "legal", "enforcement"], k: [34, 18], o: 2 }, dragon_face: { a: "Dragon Face", b: "1F432", j: ["animal", "myth", "nature", "chinese", "green"], k: [12, 22], o: 2 }, persevere: { a: "Persevering Face", b: "1F623", j: ["face", "sick", "no", "upset", "oops"], k: [31, 13], o: 2 }, lobster: { a: "Lobster", b: "1F99E", k: [42, 48], o: 11 }, "flag-eu": { a: "European Union Flag", b: "1F1EA-1F1FA", k: [1, 47], o: 2 }, disappointed: { a: "Disappointed Face", b: "1F61E", j: ["face", "sad", "upset", "depressed", ":("], k: [31, 8], l: ["):", ":(", ":-("], m: ":(", o: 2 }, shrimp: { a: "Shrimp", b: "1F990", j: ["animal", "ocean", "nature", "seafood"], k: [42, 34], o: 4 }, dragon: { a: "Dragon", b: "1F409", j: ["animal", "myth", "nature", "chinese", "green"], k: [11, 37], o: 2 }, "man-gesturing-no": { a: "Man Gesturing No", b: "1F645-200D-2642-FE0F", c: "1F645-200D-2642", k: [31, 53], o: 4 }, "flag-fi": { a: "Finland Flag", b: "1F1EB-1F1EE", k: [1, 48], o: 2 }, trackball: { a: "Trackball", b: "1F5B2-FE0F", c: "1F5B2", j: ["technology", "trackpad"], k: [30, 13], o: 2 }, black_left_pointing_double_triangle_with_vertical_bar: { a: "Black Left Pointing Double Triangle with Vertical Bar", b: "23EE-FE0F", c: "23EE", k: [52, 31], o: 2 }, oncoming_police_car: { a: "Oncoming Police Car", b: "1F694", j: ["vehicle", "law", "legal", "enforcement", "911"], k: [34, 19], o: 2 }, minidisc: { a: "Minidisc", b: "1F4BD", j: ["technology", "record", "data", "disk", "90s"], k: [26, 19], o: 2 }, sweat: { a: "Face with Cold Sweat", b: "1F613", j: ["face", "hot", "sad", "tired", "exercise"], k: [30, 54], o: 2 }, squid: { a: "Squid", b: "1F991", j: ["animal", "nature", "ocean", "sea"], k: [42, 35], o: 4 }, sauropod: { a: "Sauropod", b: "1F995", k: [42, 39], o: 5 }, arrow_up_small: { a: "Up-Pointing Small Red Triangle", b: "1F53C", j: ["blue-square", "triangle", "direction", "point", "forward", "top"], k: [28, 31], o: 2 }, "flag-fj": { a: "Fiji Flag", b: "1F1EB-1F1EF", k: [1, 49], o: 2 }, "woman-gesturing-no": { obsoletes: "1F645", a: "Woman Gesturing No", b: "1F645-200D-2640-FE0F", c: "1F645-200D-2640", k: [31, 47], o: 4 }, taxi: { a: "Taxi", b: "1F695", j: ["uber", "vehicle", "cars", "transportation"], k: [34, 20], o: 2 }, "flag-fk": { a: "Falkland Islands Flag", b: "1F1EB-1F1F0", k: [1, 50], o: 2 }, floppy_disk: { a: "Floppy Disk", b: "1F4BE", j: ["oldschool", "technology", "save", "90s", "80s"], k: [26, 20], o: 2 }, "t-rex": { a: "T-Rex", b: "1F996", k: [42, 40], o: 5 }, oyster: { a: "Oyster", b: "1F9AA", k: [43, 1], o: 12 }, arrow_double_up: { a: "Black Up-Pointing Double Triangle", b: "23EB", j: ["blue-square", "direction", "top"], k: [52, 28], o: 2 }, oncoming_taxi: { a: "Oncoming Taxi", b: "1F696", j: ["vehicle", "cars", "uber"], k: [34, 21], o: 2 }, weary: { a: "Weary Face", b: "1F629", j: ["face", "tired", "sleepy", "sad", "frustrated", "upset"], k: [31, 19], o: 2 }, "man-gesturing-ok": { a: "Man Gesturing Ok", b: "1F646-200D-2642-FE0F", c: "1F646-200D-2642", k: [32, 14], o: 4 }, arrow_down_small: { a: "Down-Pointing Small Red Triangle", b: "1F53D", j: ["blue-square", "direction", "bottom"], k: [28, 32], o: 2 }, tired_face: { a: "Tired Face", b: "1F62B", j: ["sick", "whine", "upset", "frustrated"], k: [31, 21], o: 2 }, car: { a: "Automobile", b: "1F697", k: [34, 22], n: ["red_car"], o: 2 }, icecream: { a: "Soft Ice Cream", b: "1F366", j: ["food", "hot", "dessert", "summer"], k: [7, 5], o: 2 }, cd: { a: "Optical Disc", b: "1F4BF", j: ["technology", "dvd", "disk", "disc", "90s"], k: [26, 21], o: 2 }, whale: { a: "Spouting Whale", b: "1F433", j: ["animal", "nature", "sea", "ocean"], k: [12, 23], o: 2 }, "flag-fm": { a: "Micronesia Flag", b: "1F1EB-1F1F2", k: [1, 51], o: 2 }, oncoming_automobile: { a: "Oncoming Automobile", b: "1F698", j: ["car", "vehicle", "transportation"], k: [34, 23], o: 2 }, arrow_double_down: { a: "Black Down-Pointing Double Triangle", b: "23EC", j: ["blue-square", "direction", "bottom"], k: [52, 29], o: 2 }, "woman-gesturing-ok": { obsoletes: "1F646", a: "Woman Gesturing Ok", b: "1F646-200D-2640-FE0F", c: "1F646-200D-2640", k: [32, 8], o: 4 }, yawning_face: { a: "Yawning Face", b: "1F971", k: [42, 7], o: 12 }, dvd: { a: "Dvd", b: "1F4C0", j: ["cd", "disk", "disc"], k: [26, 22], o: 2 }, whale2: { a: "Whale", b: "1F40B", j: ["animal", "nature", "sea", "ocean"], k: [11, 39], o: 2 }, "flag-fo": { a: "Faroe Islands Flag", b: "1F1EB-1F1F4", k: [1, 52], o: 2 }, shaved_ice: { a: "Shaved Ice", b: "1F367", j: ["hot", "dessert", "summer"], k: [7, 6], o: 2 }, double_vertical_bar: { a: "Double Vertical Bar", b: "23F8-FE0F", c: "23F8", k: [52, 37], o: 2 }, dolphin: { a: "Dolphin", b: "1F42C", j: ["animal", "nature", "fish", "sea", "ocean", "flipper", "fins", "beach"], k: [12, 16], n: ["flipper"], o: 2 }, blue_car: { a: "Recreational Vehicle", b: "1F699", j: ["transportation", "vehicle"], k: [34, 24], o: 2 }, ice_cream: { a: "Ice Cream", b: "1F368", j: ["food", "hot", "dessert"], k: [7, 7], o: 2 }, fr: { a: "France Flag", b: "1F1EB-1F1F7", j: ["banner", "flag", "nation", "france", "french", "country"], k: [1, 53], n: ["flag-fr"], o: 2 }, triumph: { a: "Face with Look of Triumph", b: "1F624", j: ["face", "gas", "phew", "proud", "pride"], k: [31, 14], o: 2 }, abacus: { a: "Abacus", b: "1F9EE", k: [51, 33], o: 11 }, "man-tipping-hand": { a: "Man Tipping Hand", b: "1F481-200D-2642-FE0F", c: "1F481-200D-2642", k: [23, 53], o: 4 }, doughnut: { a: "Doughnut", b: "1F369", j: ["food", "dessert", "snack", "sweet", "donut"], k: [7, 8], o: 2 }, fish: { a: "Fish", b: "1F41F", j: ["animal", "food", "nature"], k: [12, 3], o: 2 }, truck: { a: "Delivery Truck", b: "1F69A", j: ["cars", "transportation"], k: [34, 25], o: 2 }, movie_camera: { a: "Movie Camera", b: "1F3A5", j: ["film", "record"], k: [8, 11], o: 2 }, "flag-ga": { a: "Gabon Flag", b: "1F1EC-1F1E6", k: [1, 54], o: 2 }, rage: { a: "Pouting Face", b: "1F621", j: ["angry", "mad", "hate", "despise"], k: [31, 11], o: 2 }, black_square_for_stop: { a: "Black Square for Stop", b: "23F9-FE0F", c: "23F9", k: [52, 38], o: 2 }, articulated_lorry: { a: "Articulated Lorry", b: "1F69B", j: ["vehicle", "cars", "transportation", "express"], k: [34, 26], o: 2 }, angry: { a: "Angry Face", b: "1F620", j: ["mad", "face", "annoyed", "frustrated"], k: [31, 10], l: [">:(", ">:-("], o: 2 }, cookie: { a: "Cookie", b: "1F36A", j: ["food", "snack", "oreo", "chocolate", "sweet", "dessert"], k: [7, 9], o: 2 }, gb: { a: "United Kingdom Flag", b: "1F1EC-1F1E7", k: [1, 55], n: ["uk", "flag-gb"], o: 2 }, tropical_fish: { a: "Tropical Fish", b: "1F420", j: ["animal", "swim", "ocean", "beach", "nemo"], k: [12, 4], o: 2 }, "woman-tipping-hand": { obsoletes: "1F481", a: "Woman Tipping Hand", b: "1F481-200D-2640-FE0F", c: "1F481-200D-2640", k: [23, 47], o: 4 }, black_circle_for_record: { a: "Black Circle for Record", b: "23FA-FE0F", c: "23FA", k: [52, 39], o: 2 }, film_frames: { a: "Film Frames", b: "1F39E-FE0F", c: "1F39E", k: [8, 4], o: 2 }, film_projector: { a: "Film Projector", b: "1F4FD-FE0F", c: "1F4FD", j: ["video", "tape", "record", "movie"], k: [27, 26], o: 2 }, "flag-gd": { a: "Grenada Flag", b: "1F1EC-1F1E9", k: [1, 56], o: 2 }, blowfish: { a: "Blowfish", b: "1F421", j: ["animal", "nature", "food", "sea", "ocean"], k: [12, 5], o: 2 }, face_with_symbols_on_mouth: { a: "Serious Face with Symbols Covering Mouth", b: "1F92C", k: [38, 46], n: ["serious_face_with_symbols_covering_mouth"], o: 5 }, birthday: { a: "Birthday Cake", b: "1F382", j: ["food", "dessert", "cake"], k: [7, 33], o: 2 }, eject: { a: "Eject", b: "23CF-FE0F", c: "23CF", k: [52, 25], o: 2 }, tractor: { a: "Tractor", b: "1F69C", j: ["vehicle", "car", "farming", "agriculture"], k: [34, 27], o: 2 }, "flag-ge": { a: "Georgia Flag", b: "1F1EC-1F1EA", k: [2, 0], o: 2 }, smiling_imp: { a: "Smiling Face with Horns", b: "1F608", j: ["devil", "horns"], k: [30, 43], o: 2 }, racing_car: { a: "Racing Car", b: "1F3CE-FE0F", c: "1F3CE", j: ["sports", "race", "fast", "formula", "f1"], k: [10, 33], o: 2 }, cinema: { a: "Cinema", b: "1F3A6", j: ["blue-square", "record", "film", "movie", "curtain", "stage", "theater"], k: [8, 12], o: 2 }, clapper: { a: "Clapper Board", b: "1F3AC", j: ["movie", "film", "record"], k: [8, 18], o: 2 }, shark: { a: "Shark", b: "1F988", j: ["animal", "nature", "fish", "sea", "ocean", "jaws", "fins", "beach"], k: [42, 26], o: 4 }, cake: { a: "Shortcake", b: "1F370", j: ["food", "dessert"], k: [7, 15], o: 2 }, "man-raising-hand": { a: "Man Raising Hand", b: "1F64B-200D-2642-FE0F", c: "1F64B-200D-2642", k: [32, 53], o: 4 }, octopus: { a: "Octopus", b: "1F419", j: ["animal", "creature", "ocean", "sea", "nature", "beach"], k: [11, 54], o: 2 }, "woman-raising-hand": { obsoletes: "1F64B", a: "Woman Raising Hand", b: "1F64B-200D-2640-FE0F", c: "1F64B-200D-2640", k: [32, 47], o: 4 }, "flag-gf": { a: "French Guiana Flag", b: "1F1EC-1F1EB", k: [2, 1], o: 2 }, tv: { a: "Television", b: "1F4FA", j: ["technology", "program", "oldschool", "show", "television"], k: [27, 23], o: 2 }, imp: { a: "Imp", b: "1F47F", j: ["devil", "angry", "horns"], k: [23, 45], o: 2 }, cupcake: { a: "Cupcake", b: "1F9C1", k: [44, 9], o: 11 }, racing_motorcycle: { a: "Racing Motorcycle", b: "1F3CD-FE0F", c: "1F3CD", k: [10, 32], o: 2 }, low_brightness: { a: "Low Brightness Symbol", b: "1F505", j: ["sun", "afternoon", "warm", "summer"], k: [27, 33], o: 2 }, shell: { a: "Spiral Shell", b: "1F41A", j: ["nature", "sea", "beach"], k: [11, 55], o: 2 }, "flag-gg": { a: "Guernsey Flag", b: "1F1EC-1F1EC", k: [2, 2], o: 2 }, high_brightness: { a: "High Brightness Symbol", b: "1F506", j: ["sun", "light"], k: [27, 34], o: 2 }, deaf_person: { a: "Deaf Person", b: "1F9CF", k: [45, 10], o: 12 }, skull: { a: "Skull", b: "1F480", j: ["dead", "skeleton", "creepy", "death"], k: [23, 46], o: 2 }, motor_scooter: { a: "Motor Scooter", b: "1F6F5", j: ["vehicle", "vespa", "sasha"], k: [36, 54], o: 4 }, camera: { a: "Camera", b: "1F4F7", j: ["gadgets", "photography"], k: [27, 20], o: 2 }, pie: { a: "Pie", b: "1F967", k: [41, 54], o: 5 }, "flag-gh": { a: "Ghana Flag", b: "1F1EC-1F1ED", k: [2, 3], o: 2 }, deaf_man: { a: "Deaf Man", b: "1F9CF-200D-2642-FE0F", c: "1F9CF-200D-2642", k: [45, 4], o: 12 }, skull_and_crossbones: { a: "Skull and Crossbones", b: "2620-FE0F", c: "2620", j: ["poison", "danger", "deadly", "scary", "death", "pirate", "evil"], k: [53, 8], o: 2 }, camera_with_flash: { a: "Camera with Flash", b: "1F4F8", k: [27, 21], o: 2 }, signal_strength: { a: "Antenna with Bars", b: "1F4F6", j: ["blue-square", "reception", "phone", "internet", "connection", "wifi", "bluetooth", "bars"], k: [27, 19], o: 2 }, chocolate_bar: { a: "Chocolate Bar", b: "1F36B", j: ["food", "snack", "dessert", "sweet"], k: [7, 10], o: 2 }, manual_wheelchair: { a: "Manual Wheelchair", b: "1F9BD", k: [44, 5], o: 12 }, snail: { a: "Snail", b: "1F40C", j: ["slow", "animal", "shell"], k: [11, 40], o: 2 }, motorized_wheelchair: { a: "Motorized Wheelchair", b: "1F9BC", k: [44, 4], o: 12 }, "flag-gi": { a: "Gibraltar Flag", b: "1F1EC-1F1EE", k: [2, 4], o: 2 }, hankey: { a: "Pile of Poo", b: "1F4A9", k: [25, 51], n: ["poop", "shit"], o: 2 }, vibration_mode: { a: "Vibration Mode", b: "1F4F3", j: ["orange-square", "phone"], k: [27, 16], o: 2 }, deaf_woman: { a: "Deaf Woman", b: "1F9CF-200D-2640-FE0F", c: "1F9CF-200D-2640", k: [44, 55], o: 12 }, butterfly: { a: "Butterfly", b: "1F98B", j: ["animal", "insect", "nature", "caterpillar"], k: [42, 29], o: 4 }, video_camera: { a: "Video Camera", b: "1F4F9", j: ["film", "record"], k: [27, 22], o: 2 }, candy: { a: "Candy", b: "1F36C", j: ["snack", "dessert", "sweet", "lolly"], k: [7, 11], o: 2 }, auto_rickshaw: { a: "Auto Rickshaw", b: "1F6FA", k: [37, 2], o: 12 }, mobile_phone_off: { a: "Mobile Phone off", b: "1F4F4", j: ["mute", "orange-square", "silence", "quiet"], k: [27, 17], o: 2 }, clown_face: { a: "Clown Face", b: "1F921", j: ["face"], k: [38, 18], o: 4 }, lollipop: { a: "Lollipop", b: "1F36D", j: ["food", "snack", "candy", "sweet"], k: [7, 12], o: 2 }, "flag-gl": { a: "Greenland Flag", b: "1F1EC-1F1F1", k: [2, 5], o: 2 }, vhs: { a: "Videocassette", b: "1F4FC", j: ["record", "video", "oldschool", "90s", "80s"], k: [27, 25], o: 2 }, bug: { a: "Bug", b: "1F41B", j: ["animal", "insect", "nature", "worm"], k: [11, 56], o: 2 }, bike: { a: "Bicycle", b: "1F6B2", j: ["sports", "bicycle", "exercise", "hipster"], k: [35, 9], o: 2 }, "man-bowing": { obsoletes: "1F647", a: "Man Bowing", b: "1F647-200D-2642-FE0F", c: "1F647-200D-2642", k: [32, 32], o: 4 }, female_sign: { a: "Female Sign", b: "2640-FE0F", c: "2640", k: [53, 18], o: 4 }, japanese_ogre: { a: "Japanese Ogre", b: "1F479", j: ["monster", "red", "mask", "halloween", "scary", "creepy", "devil", "demon", "japanese", "ogre"], k: [23, 34], o: 2 }, custard: { a: "Custard", b: "1F36E", j: ["dessert", "food"], k: [7, 13], o: 2 }, ant: { a: "Ant", b: "1F41C", j: ["animal", "insect", "nature", "bug"], k: [12, 0], o: 2 }, mag: { a: "Left-Pointing Magnifying Glass", b: "1F50D", j: ["search", "zoom", "find", "detective"], k: [27, 41], o: 2 }, "flag-gm": { a: "Gambia Flag", b: "1F1EC-1F1F2", k: [2, 6], o: 2 }, honey_pot: { a: "Honey Pot", b: "1F36F", j: ["bees", "sweet", "kitchen"], k: [7, 14], o: 2 }, "woman-bowing": { a: "Woman Bowing", b: "1F647-200D-2640-FE0F", c: "1F647-200D-2640", k: [32, 26], o: 4 }, male_sign: { a: "Male Sign", b: "2642-FE0F", c: "2642", k: [53, 19], o: 4 }, mag_right: { a: "Right-Pointing Magnifying Glass", b: "1F50E", j: ["search", "zoom", "find", "detective"], k: [27, 42], o: 2 }, japanese_goblin: { a: "Japanese Goblin", b: "1F47A", j: ["red", "evil", "mask", "monster", "scary", "creepy", "japanese", "goblin"], k: [23, 35], o: 2 }, scooter: { a: "Scooter", b: "1F6F4", k: [36, 53], o: 4 }, bee: { a: "Honeybee", b: "1F41D", k: [12, 1], n: ["honeybee"], o: 2 }, "flag-gn": { a: "Guinea Flag", b: "1F1EC-1F1F3", k: [2, 7], o: 2 }, candle: { a: "Candle", b: "1F56F-FE0F", c: "1F56F", j: ["fire", "wax"], k: [29, 6], o: 2 }, skateboard: { a: "Skateboard", b: "1F6F9", k: [37, 1], o: 11 }, medical_symbol: { a: "Medical Symbol", b: "2695-FE0F", c: "2695", k: [53, 44], n: ["staff_of_aesculapius"], o: 4 }, ghost: { a: "Ghost", b: "1F47B", j: ["halloween", "spooky", "scary"], k: [23, 36], o: 2 }, beetle: { a: "Lady Beetle", b: "1F41E", j: ["animal", "insect", "nature", "ladybug"], k: [12, 2], o: 2 }, "flag-gp": { a: "Guadeloupe Flag", b: "1F1EC-1F1F5", k: [2, 8], o: 2 }, baby_bottle: { a: "Baby Bottle", b: "1F37C", j: ["food", "container", "milk"], k: [7, 27], o: 2 }, infinity: { a: "Infinity", b: "267E-FE0F", c: "267E", k: [53, 39], o: 11 }, glass_of_milk: { a: "Glass of Milk", b: "1F95B", k: [41, 42], o: 4 }, "man-facepalming": { a: "Man Facepalming", b: "1F926-200D-2642-FE0F", c: "1F926-200D-2642", k: [38, 29], o: 4 }, cricket: { a: "Cricket", b: "1F997", j: ["sports"], k: [42, 41], o: 5 }, busstop: { a: "Bus Stop", b: "1F68F", j: ["transportation", "wait"], k: [34, 14], o: 2 }, "flag-gq": { a: "Equatorial Guinea Flag", b: "1F1EC-1F1F6", k: [2, 9], o: 2 }, alien: { a: "Extraterrestrial Alien", b: "1F47D", j: ["UFO", "paul", "weird", "outer_space"], k: [23, 43], o: 2 }, bulb: { a: "Electric Light Bulb", b: "1F4A1", j: ["light", "electricity", "idea"], k: [25, 43], o: 2 }, "woman-facepalming": { a: "Woman Facepalming", b: "1F926-200D-2640-FE0F", c: "1F926-200D-2640", k: [38, 23], o: 4 }, spider: { a: "Spider", b: "1F577-FE0F", c: "1F577", j: ["animal", "arachnid"], k: [29, 34], o: 2 }, space_invader: { a: "Alien Monster", b: "1F47E", j: ["game", "arcade", "play"], k: [23, 44], o: 2 }, motorway: { a: "Motorway", b: "1F6E3-FE0F", c: "1F6E3", j: ["road", "cupertino", "interstate", "highway"], k: [36, 45], o: 2 }, "flag-gr": { a: "Greece Flag", b: "1F1EC-1F1F7", k: [2, 10], o: 2 }, recycle: { a: "Black Universal Recycling Symbol", b: "267B-FE0F", c: "267B", j: ["arrow", "environment", "garbage", "trash"], k: [53, 38], o: 2 }, coffee: { a: "Hot Beverage", b: "2615", j: ["beverage", "caffeine", "latte", "espresso"], k: [53, 0], o: 2 }, flashlight: { a: "Electric Torch", b: "1F526", j: ["dark", "camping", "sight", "night"], k: [28, 9], o: 2 }, spider_web: { a: "Spider Web", b: "1F578-FE0F", c: "1F578", j: ["animal", "insect", "arachnid", "silk"], k: [29, 35], o: 2 }, izakaya_lantern: { a: "Izakaya Lantern", b: "1F3EE", j: ["light", "paper", "halloween", "spooky"], k: [11, 8], n: ["lantern"], o: 2 }, "flag-gs": { a: "South Georgia & South Sandwich Islands Flag", b: "1F1EC-1F1F8", k: [2, 11], o: 2 }, fleur_de_lis: { a: "Fleur De Lis", b: "269C-FE0F", c: "269C", j: ["decorative", "scout"], k: [53, 49], o: 2 }, robot_face: { a: "Robot Face", b: "1F916", k: [37, 29], o: 2 }, railway_track: { a: "Railway Track", b: "1F6E4-FE0F", c: "1F6E4", j: ["train", "transportation"], k: [36, 46], o: 2 }, tea: { a: "Teacup Without Handle", b: "1F375", j: ["drink", "bowl", "breakfast", "green", "british"], k: [7, 20], o: 2 }, "flag-gt": { a: "Guatemala Flag", b: "1F1EC-1F1F9", k: [2, 12], o: 2 }, oil_drum: { a: "Oil Drum", b: "1F6E2-FE0F", c: "1F6E2", j: ["barrell"], k: [36, 44], o: 2 }, diya_lamp: { a: "Diya Lamp", b: "1FA94", k: [52, 8], o: 12 }, sake: { a: "Sake Bottle and Cup", b: "1F376", j: ["wine", "drink", "drunk", "beverage", "japanese", "alcohol", "booze"], k: [7, 21], o: 2 }, trident: { a: "Trident Emblem", b: "1F531", j: ["weapon", "spear"], k: [28, 20], o: 2 }, "man-shrugging": { a: "Man Shrugging", b: "1F937-200D-2642-FE0F", c: "1F937-200D-2642", k: [39, 41], o: 4 }, smiley_cat: { a: "Smiling Cat Face with Open Mouth", b: "1F63A", j: ["animal", "cats", "happy", "smile"], k: [31, 36], o: 2 }, scorpion: { a: "Scorpion", b: "1F982", j: ["animal", "arachnid"], k: [42, 20], o: 2 }, "woman-shrugging": { a: "Woman Shrugging", b: "1F937-200D-2640-FE0F", c: "1F937-200D-2640", k: [39, 35], o: 4 }, notebook_with_decorative_cover: { a: "Notebook with Decorative Cover", b: "1F4D4", j: ["classroom", "notes", "record", "paper", "study"], k: [26, 42], o: 2 }, fuelpump: { a: "Fuel Pump", b: "26FD", j: ["gas station", "petroleum"], k: [54, 38], o: 2 }, name_badge: { a: "Name Badge", b: "1F4DB", j: ["fire", "forbid"], k: [26, 49], o: 2 }, mosquito: { a: "Mosquito", b: "1F99F", k: [42, 49], o: 11 }, "flag-gu": { a: "Guam Flag", b: "1F1EC-1F1FA", k: [2, 13], o: 2 }, smile_cat: { a: "Grinning Cat Face with Smiling Eyes", b: "1F638", j: ["animal", "cats", "smile"], k: [31, 34], o: 2 }, champagne: { a: "Bottle with Popping Cork", b: "1F37E", j: ["drink", "wine", "bottle", "celebration"], k: [7, 29], o: 2 }, joy_cat: { a: "Cat Face with Tears of Joy", b: "1F639", j: ["animal", "cats", "haha", "happy", "tears"], k: [31, 35], o: 2 }, closed_book: { a: "Closed Book", b: "1F4D5", j: ["read", "library", "knowledge", "textbook", "learn"], k: [26, 43], o: 2 }, rotating_light: { a: "Police Cars Revolving Light", b: "1F6A8", j: ["police", "ambulance", "911", "emergency", "alert", "error", "pinged", "law", "legal"], k: [34, 56], o: 2 }, microbe: { a: "Microbe", b: "1F9A0", k: [42, 50], o: 11 }, "flag-gw": { a: "Guinea-Bissau Flag", b: "1F1EC-1F1FC", k: [2, 14], o: 2 }, wine_glass: { a: "Wine Glass", b: "1F377", j: ["drink", "beverage", "drunk", "alcohol", "booze"], k: [7, 22], o: 2 }, beginner: { a: "Japanese Symbol for Beginner", b: "1F530", j: ["badge", "shield"], k: [28, 19], o: 2 }, bouquet: { a: "Bouquet", b: "1F490", j: ["flowers", "nature", "spring"], k: [25, 26], o: 2 }, heart_eyes_cat: { a: "Smiling Cat Face with Heart-Shaped Eyes", b: "1F63B", j: ["animal", "love", "like", "affection", "cats", "valentines", "heart"], k: [31, 37], o: 2 }, "male-doctor": { a: "Male Doctor", b: "1F468-200D-2695-FE0F", c: "1F468-200D-2695", k: [17, 2], o: 4 }, book: { a: "Open Book", b: "1F4D6", k: [26, 44], n: ["open_book"], o: 2 }, traffic_light: { a: "Horizontal Traffic Light", b: "1F6A5", j: ["transportation", "signal"], k: [34, 53], o: 2 }, cocktail: { a: "Cocktail Glass", b: "1F378", j: ["drink", "drunk", "alcohol", "beverage", "booze", "mojito"], k: [7, 23], o: 2 }, o: { a: "Heavy Large Circle", b: "2B55", j: ["circle", "round"], k: [55, 43], o: 2 }, "flag-gy": { a: "Guyana Flag", b: "1F1EC-1F1FE", k: [2, 15], o: 2 }, "female-doctor": { a: "Female Doctor", b: "1F469-200D-2695-FE0F", c: "1F469-200D-2695", k: [19, 44], o: 4 }, smirk_cat: { a: "Cat Face with Wry Smile", b: "1F63C", j: ["animal", "cats", "smirk"], k: [31, 38], o: 2 }, green_book: { a: "Green Book", b: "1F4D7", j: ["read", "library", "knowledge", "study"], k: [26, 45], o: 2 }, cherry_blossom: { a: "Cherry Blossom", b: "1F338", j: ["nature", "plant", "spring", "flower"], k: [6, 16], o: 2 }, "flag-hk": { a: "Hong Kong Sar China Flag", b: "1F1ED-1F1F0", k: [2, 16], o: 2 }, vertical_traffic_light: { a: "Vertical Traffic Light", b: "1F6A6", j: ["transportation", "driving"], k: [34, 54], o: 2 }, white_check_mark: { a: "White Heavy Check Mark", b: "2705", j: ["green-square", "ok", "agree", "vote", "election", "answer", "tick"], k: [54, 40], o: 2 }, tropical_drink: { a: "Tropical Drink", b: "1F379", j: ["beverage", "cocktail", "summer", "beach", "alcohol", "booze", "mojito"], k: [7, 24], o: 2 }, kissing_cat: { a: "Kissing Cat Face with Closed Eyes", b: "1F63D", j: ["animal", "cats", "kiss"], k: [31, 39], o: 2 }, "flag-hm": { a: "Heard & Mcdonald Islands Flag", b: "1F1ED-1F1F2", k: [2, 17], o: 2 }, octagonal_sign: { a: "Octagonal Sign", b: "1F6D1", k: [36, 39], o: 4 }, white_flower: { a: "White Flower", b: "1F4AE", j: ["japanese", "spring"], k: [26, 4], o: 2 }, ballot_box_with_check: { a: "Ballot Box with Check", b: "2611-FE0F", c: "2611", j: ["ok", "agree", "confirm", "black-square", "vote", "election", "yes", "tick"], k: [52, 55], o: 2 }, blue_book: { a: "Blue Book", b: "1F4D8", j: ["read", "library", "knowledge", "learn", "study"], k: [26, 46], o: 2 }, beer: { a: "Beer Mug", b: "1F37A", j: ["relax", "beverage", "drink", "drunk", "party", "pub", "summer", "alcohol", "booze"], k: [7, 25], o: 2 }, construction: { a: "Construction Sign", b: "1F6A7", j: ["wip", "progress", "caution", "warning"], k: [34, 55], o: 2 }, rosette: { a: "Rosette", b: "1F3F5-FE0F", c: "1F3F5", j: ["flower", "decoration", "military"], k: [11, 18], o: 2 }, heavy_check_mark: { a: "Heavy Check Mark", b: "2714-FE0F", c: "2714", j: ["ok", "nike", "answer", "yes", "tick"], k: [55, 12], o: 2 }, scream_cat: { a: "Weary Cat Face", b: "1F640", j: ["animal", "cats", "munch", "scared", "scream"], k: [31, 42], o: 2 }, orange_book: { a: "Orange Book", b: "1F4D9", j: ["read", "library", "knowledge", "textbook", "study"], k: [26, 47], o: 2 }, beers: { a: "Clinking Beer Mugs", b: "1F37B", j: ["relax", "beverage", "drink", "drunk", "party", "pub", "summer", "alcohol", "booze"], k: [7, 26], o: 2 }, "male-student": { a: "Male Student", b: "1F468-200D-1F393", k: [14, 50], o: 4 }, "flag-hn": { a: "Honduras Flag", b: "1F1ED-1F1F3", k: [2, 18], o: 2 }, crying_cat_face: { a: "Crying Cat Face", b: "1F63F", j: ["animal", "tears", "weep", "sad", "cats", "upset", "cry"], k: [31, 41], o: 2 }, anchor: { a: "Anchor", b: "2693", j: ["ship", "ferry", "sea", "boat"], k: [53, 42], o: 2 }, "flag-hr": { a: "Croatia Flag", b: "1F1ED-1F1F7", k: [2, 19], o: 2 }, heavy_multiplication_x: { a: "Heavy Multiplication X", b: "2716-FE0F", c: "2716", j: ["math", "calculation"], k: [55, 13], o: 2 }, "female-student": { a: "Female Student", b: "1F469-200D-1F393", k: [17, 40], o: 4 }, rose: { a: "Rose", b: "1F339", j: ["flowers", "valentines", "love", "spring"], k: [6, 17], o: 2 }, books: { a: "Books", b: "1F4DA", j: ["literature", "library", "study"], k: [26, 48], o: 2 }, clinking_glasses: { a: "Clinking Glasses", b: "1F942", j: ["beverage", "drink", "party", "alcohol", "celebrate", "cheers"], k: [41, 18], o: 4 }, x: { a: "Cross Mark", b: "274C", j: ["no", "delete", "remove", "cancel"], k: [55, 21], o: 2 }, pouting_cat: { a: "Pouting Cat Face", b: "1F63E", j: ["animal", "cats"], k: [31, 40], o: 2 }, wilted_flower: { a: "Wilted Flower", b: "1F940", j: ["plant", "nature", "flower"], k: [41, 16], o: 4 }, boat: { a: "Sailboat", b: "26F5", k: [54, 16], n: ["sailboat"], o: 2 }, "flag-ht": { a: "Haiti Flag", b: "1F1ED-1F1F9", k: [2, 20], o: 2 }, tumbler_glass: { a: "Tumbler Glass", b: "1F943", j: ["drink", "beverage", "drunk", "alcohol", "liquor", "booze", "bourbon", "scotch", "whisky", "glass", "shot"], k: [41, 19], o: 4 }, notebook: { a: "Notebook", b: "1F4D3", j: ["stationery", "record", "notes", "paper", "study"], k: [26, 41], o: 2 }, "male-teacher": { a: "Male Teacher", b: "1F468-200D-1F3EB", k: [15, 11], o: 4 }, ledger: { a: "Ledger", b: "1F4D2", j: ["notes", "paper"], k: [26, 40], o: 2 }, "flag-hu": { a: "Hungary Flag", b: "1F1ED-1F1FA", k: [2, 21], o: 2 }, cup_with_straw: { a: "Cup with Straw", b: "1F964", k: [41, 51], o: 5 }, hibiscus: { a: "Hibiscus", b: "1F33A", j: ["plant", "vegetable", "flowers", "beach"], k: [6, 18], o: 2 }, see_no_evil: { a: "See-No-Evil Monkey", b: "1F648", j: ["monkey", "animal", "nature", "haha"], k: [32, 44], o: 2 }, canoe: { a: "Canoe", b: "1F6F6", j: ["boat", "paddle", "water", "ship"], k: [36, 55], o: 4 }, negative_squared_cross_mark: { a: "Negative Squared Cross Mark", b: "274E", j: ["x", "green-square", "no", "deny"], k: [55, 22], o: 2 }, "flag-ic": { a: "Canary Islands Flag", b: "1F1EE-1F1E8", k: [2, 22], o: 2 }, beverage_box: { a: "Beverage Box", b: "1F9C3", k: [44, 11], o: 12 }, speedboat: { a: "Speedboat", b: "1F6A4", j: ["ship", "transportation", "vehicle", "summer"], k: [34, 52], o: 2 }, heavy_plus_sign: { a: "Heavy Plus Sign", b: "2795", j: ["math", "calculation", "addition", "more", "increase"], k: [55, 29], o: 2 }, sunflower: { a: "Sunflower", b: "1F33B", j: ["nature", "plant", "fall"], k: [6, 19], o: 2 }, page_with_curl: { a: "Page with Curl", b: "1F4C3", j: ["documents", "office", "paper"], k: [26, 25], o: 2 }, "female-teacher": { a: "Female Teacher", b: "1F469-200D-1F3EB", k: [18, 1], o: 4 }, hear_no_evil: { a: "Hear-No-Evil Monkey", b: "1F649", j: ["animal", "monkey", "nature"], k: [32, 45], o: 2 }, mate_drink: { a: "Mate Drink", b: "1F9C9", k: [44, 17], o: 12 }, passenger_ship: { a: "Passenger Ship", b: "1F6F3-FE0F", c: "1F6F3", j: ["yacht", "cruise", "ferry"], k: [36, 52], o: 2 }, scroll: { a: "Scroll", b: "1F4DC", j: ["documents", "ancient", "history", "paper"], k: [26, 50], o: 2 }, blossom: { a: "Blossom", b: "1F33C", j: ["nature", "flowers", "yellow"], k: [6, 20], o: 2 }, "flag-id": { a: "Indonesia Flag", b: "1F1EE-1F1E9", k: [2, 23], o: 2 }, speak_no_evil: { a: "Speak-No-Evil Monkey", b: "1F64A", j: ["monkey", "animal", "nature", "omg"], k: [32, 46], o: 2 }, heavy_minus_sign: { a: "Heavy Minus Sign", b: "2796", j: ["math", "calculation", "subtract", "less"], k: [55, 30], o: 2 }, "flag-ie": { a: "Ireland Flag", b: "1F1EE-1F1EA", k: [2, 24], o: 2 }, ice_cube: { a: "Ice Cube", b: "1F9CA", k: [44, 18], o: 12 }, page_facing_up: { a: "Page Facing Up", b: "1F4C4", j: ["documents", "office", "paper", "information"], k: [26, 26], o: 2 }, "male-judge": { a: "Male Judge", b: "1F468-200D-2696-FE0F", c: "1F468-200D-2696", k: [17, 8], o: 4 }, tulip: { a: "Tulip", b: "1F337", j: ["flowers", "plant", "nature", "summer", "spring"], k: [6, 15], o: 2 }, ferry: { a: "Ferry", b: "26F4-FE0F", c: "26F4", j: ["boat", "ship", "yacht"], k: [54, 15], o: 2 }, kiss: { a: "Kiss Mark", b: "1F48B", j: ["face", "lips", "love", "like", "affection", "valentines"], k: [25, 21], o: 2 }, heavy_division_sign: { a: "Heavy Division Sign", b: "2797", j: ["divide", "math", "calculation"], k: [55, 31], o: 2 }, newspaper: { a: "Newspaper", b: "1F4F0", j: ["press", "headline"], k: [27, 13], o: 2 }, "female-judge": { a: "Female Judge", b: "1F469-200D-2696-FE0F", c: "1F469-200D-2696", k: [19, 50], o: 4 }, seedling: { a: "Seedling", b: "1F331", j: ["plant", "nature", "grass", "lawn", "spring"], k: [6, 9], o: 2 }, love_letter: { a: "Love Letter", b: "1F48C", j: ["email", "like", "affection", "envelope", "valentines"], k: [25, 22], o: 2 }, chopsticks: { a: "Chopsticks", b: "1F962", k: [41, 49], o: 5 }, motor_boat: { a: "Motor Boat", b: "1F6E5-FE0F", c: "1F6E5", j: ["ship"], k: [36, 47], o: 2 }, "flag-il": { a: "Israel Flag", b: "1F1EE-1F1F1", k: [2, 25], o: 2 }, curly_loop: { a: "Curly Loop", b: "27B0", j: ["scribble", "draw", "shape", "squiggle"], k: [55, 33], o: 2 }, "flag-im": { a: "Isle of Man Flag", b: "1F1EE-1F1F2", k: [2, 26], o: 2 }, evergreen_tree: { a: "Evergreen Tree", b: "1F332", j: ["plant", "nature"], k: [6, 10], o: 2 }, cupid: { a: "Heart with Arrow", b: "1F498", j: ["love", "like", "heart", "affection", "valentines"], k: [25, 34], o: 2 }, loop: { a: "Double Curly Loop", b: "27BF", j: ["tape", "cassette"], k: [55, 34], o: 2 }, ship: { a: "Ship", b: "1F6A2", j: ["transportation", "titanic", "deploy"], k: [34, 33], o: 2 }, rolled_up_newspaper: { a: "Rolled Up Newspaper", b: "1F5DE-FE0F", c: "1F5DE", k: [30, 23], o: 2 }, knife_fork_plate: { a: "Knife Fork Plate", b: "1F37D-FE0F", c: "1F37D", k: [7, 28], o: 2 }, fork_and_knife: { a: "Fork and Knife", b: "1F374", j: ["cutlery", "kitchen"], k: [7, 19], o: 2 }, "male-farmer": { a: "Male Farmer", b: "1F468-200D-1F33E", k: [14, 38], o: 4 }, bookmark_tabs: { a: "Bookmark Tabs", b: "1F4D1", j: ["favorite", "save", "order", "tidy"], k: [26, 39], o: 2 }, part_alternation_mark: { a: "Part Alternation Mark", b: "303D-FE0F", c: "303D", j: ["graph", "presentation", "stats", "business", "economics", "bad"], k: [55, 45], o: 2 }, "flag-in": { a: "India Flag", b: "1F1EE-1F1F3", k: [2, 27], o: 2 }, gift_heart: { a: "Heart with Ribbon", b: "1F49D", j: ["love", "valentines"], k: [25, 39], o: 2 }, airplane: { a: "Airplane", b: "2708-FE0F", c: "2708", j: ["vehicle", "transportation", "flight", "fly"], k: [54, 41], o: 2 }, deciduous_tree: { a: "Deciduous Tree", b: "1F333", j: ["plant", "nature"], k: [6, 11], o: 2 }, spoon: { a: "Spoon", b: "1F944", j: ["cutlery", "kitchen", "tableware"], k: [41, 20], o: 4 }, "flag-io": { a: "British Indian Ocean Territory Flag", b: "1F1EE-1F1F4", k: [2, 28], o: 2 }, palm_tree: { a: "Palm Tree", b: "1F334", j: ["plant", "vegetable", "nature", "summer", "beach", "mojito", "tropical"], k: [6, 12], o: 2 }, sparkling_heart: { a: "Sparkling Heart", b: "1F496", j: ["love", "like", "affection", "valentines"], k: [25, 32], o: 2 }, "female-farmer": { a: "Female Farmer", b: "1F469-200D-1F33E", k: [17, 28], o: 4 }, eight_spoked_asterisk: { a: "Eight Spoked Asterisk", b: "2733-FE0F", c: "2733", j: ["star", "sparkle", "green-square"], k: [55, 17], o: 2 }, small_airplane: { a: "Small Airplane", b: "1F6E9-FE0F", c: "1F6E9", j: ["flight", "transportation", "fly", "vehicle"], k: [36, 48], o: 2 }, bookmark: { a: "Bookmark", b: "1F516", j: ["favorite", "label", "save"], k: [27, 50], o: 2 }, eight_pointed_black_star: { a: "Eight Pointed Black Star", b: "2734-FE0F", c: "2734", j: ["orange-square", "shape", "polygon"], k: [55, 18], o: 2 }, heartpulse: { a: "Growing Heart", b: "1F497", j: ["like", "love", "affection", "valentines", "pink"], k: [25, 33], o: 2 }, label: { a: "Label", b: "1F3F7-FE0F", c: "1F3F7", j: ["sale", "tag"], k: [11, 19], o: 2 }, "flag-iq": { a: "Iraq Flag", b: "1F1EE-1F1F6", k: [2, 29], o: 2 }, hocho: { a: "Hocho", b: "1F52A", j: ["knife", "blade", "cutlery", "kitchen", "weapon"], k: [28, 13], n: ["knife"], o: 2 }, cactus: { a: "Cactus", b: "1F335", j: ["vegetable", "plant", "nature"], k: [6, 13], o: 2 }, airplane_departure: { a: "Airplane Departure", b: "1F6EB", k: [36, 49], o: 2 }, airplane_arriving: { a: "Airplane Arriving", b: "1F6EC", k: [36, 50], o: 2 }, ear_of_rice: { a: "Ear of Rice", b: "1F33E", j: ["nature", "plant"], k: [6, 22], o: 2 }, "flag-ir": { a: "Iran Flag", b: "1F1EE-1F1F7", k: [2, 30], o: 2 }, moneybag: { a: "Money Bag", b: "1F4B0", j: ["dollar", "payment", "coins", "sale"], k: [26, 6], o: 2 }, "male-cook": { a: "Male Cook", b: "1F468-200D-1F373", k: [14, 44], o: 4 }, heartbeat: { a: "Beating Heart", b: "1F493", j: ["love", "like", "affection", "valentines", "pink", "heart"], k: [25, 29], o: 2 }, sparkle: { a: "Sparkle", b: "2747-FE0F", c: "2747", j: ["stars", "green-square", "awesome", "good", "fireworks"], k: [55, 20], o: 2 }, amphora: { a: "Amphora", b: "1F3FA", j: ["vase", "jar"], k: [11, 22], o: 2 }, yen: { a: "Banknote with Yen Sign", b: "1F4B4", j: ["money", "sales", "japanese", "dollar", "currency"], k: [26, 10], o: 2 }, revolving_hearts: { a: "Revolving Hearts", b: "1F49E", j: ["love", "like", "affection", "valentines"], k: [25, 40], o: 2 }, bangbang: { a: "Double Exclamation Mark", b: "203C-FE0F", c: "203C", j: ["exclamation", "surprise"], k: [52, 10], o: 2 }, parachute: { a: "Parachute", b: "1FA82", k: [52, 3], o: 12 }, herb: { a: "Herb", b: "1F33F", j: ["vegetable", "plant", "medicine", "weed", "grass", "lawn"], k: [6, 23], o: 2 }, "flag-is": { a: "Iceland Flag", b: "1F1EE-1F1F8", k: [2, 31], o: 2 }, "female-cook": { a: "Female Cook", b: "1F469-200D-1F373", k: [17, 34], o: 4 }, interrobang: { a: "Exclamation Question Mark", b: "2049-FE0F", c: "2049", j: ["wat", "punctuation", "surprise"], k: [52, 11], o: 2 }, seat: { a: "Seat", b: "1F4BA", j: ["sit", "airplane", "transport", "bus", "flight", "fly"], k: [26, 16], o: 2 }, dollar: { a: "Banknote with Dollar Sign", b: "1F4B5", j: ["money", "sales", "bill", "currency"], k: [26, 11], o: 2 }, two_hearts: { a: "Two Hearts", b: "1F495", j: ["love", "like", "affection", "valentines", "heart"], k: [25, 31], o: 2 }, it: { a: "Italy Flag", b: "1F1EE-1F1F9", j: ["italy", "flag", "nation", "country", "banner"], k: [2, 32], n: ["flag-it"], o: 2 }, shamrock: { a: "Shamrock", b: "2618-FE0F", c: "2618", j: ["vegetable", "plant", "nature", "irish", "clover"], k: [53, 1], o: 2 }, four_leaf_clover: { a: "Four Leaf Clover", b: "1F340", j: ["vegetable", "plant", "nature", "lucky", "irish"], k: [6, 24], o: 2 }, euro: { a: "Banknote with Euro Sign", b: "1F4B6", j: ["money", "sales", "dollar", "currency"], k: [26, 12], o: 2 }, question: { a: "Black Question Mark Ornament", b: "2753", j: ["doubt", "confused"], k: [55, 23], o: 2 }, helicopter: { a: "Helicopter", b: "1F681", j: ["transportation", "vehicle", "fly"], k: [34, 0], o: 2 }, heart_decoration: { a: "Heart Decoration", b: "1F49F", j: ["purple-square", "love", "like"], k: [25, 41], o: 2 }, "flag-je": { a: "Jersey Flag", b: "1F1EF-1F1EA", k: [2, 33], o: 2 }, "male-mechanic": { a: "Male Mechanic", b: "1F468-200D-1F527", k: [15, 50], o: 4 }, suspension_railway: { a: "Suspension Railway", b: "1F69F", j: ["vehicle", "transportation"], k: [34, 30], o: 2 }, heavy_heart_exclamation_mark_ornament: { a: "Heavy Heart Exclamation Mark Ornament", b: "2763-FE0F", c: "2763", k: [55, 27], o: 2 }, "female-mechanic": { a: "Female Mechanic", b: "1F469-200D-1F527", k: [18, 35], o: 4 }, "flag-jm": { a: "Jamaica Flag", b: "1F1EF-1F1F2", k: [2, 34], o: 2 }, grey_question: { a: "White Question Mark Ornament", b: "2754", j: ["doubts", "gray", "huh", "confused"], k: [55, 24], o: 2 }, maple_leaf: { a: "Maple Leaf", b: "1F341", j: ["nature", "plant", "vegetable", "ca", "fall"], k: [6, 25], o: 2 }, pound: { a: "Banknote with Pound Sign", b: "1F4B7", j: ["british", "sterling", "money", "sales", "bills", "uk", "england", "currency"], k: [26, 13], o: 2 }, money_with_wings: { a: "Money with Wings", b: "1F4B8", j: ["dollar", "bills", "payment", "sale"], k: [26, 14], o: 2 }, "flag-jo": { a: "Jordan Flag", b: "1F1EF-1F1F4", k: [2, 35], o: 2 }, fallen_leaf: { a: "Fallen Leaf", b: "1F342", j: ["nature", "plant", "vegetable", "leaves"], k: [6, 26], o: 2 }, broken_heart: { a: "Broken Heart", b: "1F494", j: ["sad", "sorry", "break", "heart", "heartbreak"], k: [25, 30], l: ["</3"], m: "</3", o: 2 }, grey_exclamation: { a: "White Exclamation Mark Ornament", b: "2755", j: ["surprise", "punctuation", "gray", "wow", "warning"], k: [55, 25], o: 2 }, mountain_cableway: { a: "Mountain Cableway", b: "1F6A0", j: ["transportation", "vehicle", "ski"], k: [34, 31], o: 2 }, exclamation: { a: "Heavy Exclamation Mark Symbol", b: "2757", j: ["heavy_exclamation_mark", "danger", "surprise", "punctuation", "wow", "warning"], k: [55, 26], n: ["heavy_exclamation_mark"], o: 2 }, leaves: { a: "Leaf Fluttering in Wind", b: "1F343", j: ["nature", "plant", "tree", "vegetable", "grass", "lawn", "spring"], k: [6, 27], o: 2 }, heart: { a: "Heavy Black Heart", b: "2764-FE0F", c: "2764", j: ["love", "like", "valentines"], k: [55, 28], l: ["<3"], m: "<3", o: 2 }, jp: { a: "Japan Flag", b: "1F1EF-1F1F5", j: ["japanese", "nation", "flag", "country", "banner"], k: [2, 36], n: ["flag-jp"], o: 2 }, "male-factory-worker": { a: "Male Factory Worker", b: "1F468-200D-1F3ED", k: [15, 17], o: 4 }, credit_card: { a: "Credit Card", b: "1F4B3", j: ["money", "sales", "dollar", "bill", "payment", "shopping"], k: [26, 9], o: 2 }, aerial_tramway: { a: "Aerial Tramway", b: "1F6A1", j: ["transportation", "vehicle", "ski"], k: [34, 32], o: 2 }, "female-factory-worker": { a: "Female Factory Worker", b: "1F469-200D-1F3ED", k: [18, 7], o: 4 }, receipt: { a: "Receipt", b: "1F9FE", k: [51, 49], o: 11 }, wavy_dash: { a: "Wavy Dash", b: "3030-FE0F", c: "3030", j: ["draw", "line", "moustache", "mustache", "squiggle", "scribble"], k: [55, 44], o: 2 }, "flag-ke": { a: "Kenya Flag", b: "1F1F0-1F1EA", k: [2, 37], o: 2 }, satellite: { a: "Satellite", b: "1F6F0-FE0F", c: "1F6F0", j: ["communication", "future", "radio", "space"], k: [36, 51], o: 2 }, orange_heart: { a: "Orange Heart", b: "1F9E1", k: [51, 20], o: 5 }, yellow_heart: { a: "Yellow Heart", b: "1F49B", j: ["love", "like", "affection", "valentines"], k: [25, 37], m: "<3", o: 2 }, rocket: { a: "Rocket", b: "1F680", j: ["launch", "ship", "staffmode", "NASA", "outer space", "outer_space", "fly"], k: [33, 56], o: 2 }, chart: { a: "Chart with Upwards Trend and Yen Sign", b: "1F4B9", j: ["green-square", "graph", "presentation", "stats"], k: [26, 15], o: 2 }, "flag-kg": { a: "Kyrgyzstan Flag", b: "1F1F0-1F1EC", k: [2, 38], o: 2 }, currency_exchange: { a: "Currency Exchange", b: "1F4B1", j: ["money", "sales", "dollar", "travel"], k: [26, 7], o: 2 }, green_heart: { a: "Green Heart", b: "1F49A", j: ["love", "like", "affection", "valentines"], k: [25, 36], m: "<3", o: 2 }, flying_saucer: { a: "Flying Saucer", b: "1F6F8", k: [37, 0], o: 5 }, "flag-kh": { a: "Cambodia Flag", b: "1F1F0-1F1ED", k: [2, 39], o: 2 }, "male-office-worker": { a: "Male Office Worker", b: "1F468-200D-1F4BC", k: [15, 44], o: 4 }, tm: { a: "Trade Mark Sign", b: "2122-FE0F", c: "2122", j: ["trademark", "brand", "law", "legal"], k: [52, 12], o: 2 }, bellhop_bell: { a: "Bellhop Bell", b: "1F6CE-FE0F", c: "1F6CE", j: ["service"], k: [36, 36], o: 2 }, blue_heart: { a: "Blue Heart", b: "1F499", j: ["love", "like", "affection", "valentines"], k: [25, 35], m: "<3", o: 2 }, "flag-ki": { a: "Kiribati Flag", b: "1F1F0-1F1EE", k: [2, 40], o: 2 }, heavy_dollar_sign: { a: "Heavy Dollar Sign", b: "1F4B2", j: ["money", "sales", "payment", "currency", "buck"], k: [26, 8], o: 2 }, "female-office-worker": { a: "Female Office Worker", b: "1F469-200D-1F4BC", k: [18, 29], o: 4 }, purple_heart: { a: "Purple Heart", b: "1F49C", j: ["love", "like", "affection", "valentines"], k: [25, 38], m: "<3", o: 2 }, luggage: { a: "Luggage", b: "1F9F3", k: [51, 38], o: 11 }, "flag-km": { a: "Comoros Flag", b: "1F1F0-1F1F2", k: [2, 41], o: 2 }, email: { a: "Envelope", b: "2709-FE0F", c: "2709", j: ["letter", "postal", "inbox", "communication"], k: [54, 42], n: ["envelope"], o: 2 }, "e-mail": { a: "E-Mail Symbol", b: "1F4E7", j: ["communication", "inbox"], k: [27, 4], o: 2 }, "flag-kn": { a: "St. Kitts & Nevis Flag", b: "1F1F0-1F1F3", k: [2, 42], o: 2 }, hourglass: { a: "Hourglass", b: "231B", j: ["time", "clock", "oldschool", "limit", "exam", "quiz", "test"], k: [52, 23], o: 2 }, brown_heart: { a: "Brown Heart", b: "1F90E", k: [37, 16], o: 12 }, "male-scientist": { a: "Male Scientist", b: "1F468-200D-1F52C", k: [15, 56], o: 4 }, hourglass_flowing_sand: { a: "Hourglass with Flowing Sand", b: "23F3", j: ["oldschool", "time", "countdown"], k: [52, 36], o: 2 }, black_heart: { a: "Black Heart", b: "1F5A4", j: ["evil"], k: [30, 9], o: 4 }, incoming_envelope: { a: "Incoming Envelope", b: "1F4E8", j: ["email", "inbox"], k: [27, 5], o: 2 }, "flag-kp": { a: "North Korea Flag", b: "1F1F0-1F1F5", k: [2, 43], o: 2 }, "female-scientist": { a: "Female Scientist", b: "1F469-200D-1F52C", k: [18, 41], o: 4 }, watch: { a: "Watch", b: "231A", j: ["time", "accessories"], k: [52, 22], o: 2 }, white_heart: { a: "White Heart", b: "1F90D", k: [37, 15], o: 12 }, kr: { a: "South Korea Flag", b: "1F1F0-1F1F7", j: ["south", "korea", "nation", "flag", "country", "banner"], k: [2, 44], n: ["flag-kr"], o: 2 }, envelope_with_arrow: { a: "Envelope with Downwards Arrow Above", b: "1F4E9", j: ["email", "communication"], k: [27, 6], o: 2 }, outbox_tray: { a: "Outbox Tray", b: "1F4E4", j: ["inbox", "email"], k: [27, 1], o: 2 }, "male-technologist": { a: "Male Technologist", b: "1F468-200D-1F4BB", k: [15, 38], o: 4 }, alarm_clock: { a: "Alarm Clock", b: "23F0", j: ["time", "wake"], k: [52, 33], o: 2 }, "flag-kw": { a: "Kuwait Flag", b: "1F1F0-1F1FC", k: [2, 45], o: 2 }, anger: { a: "Anger Symbol", b: "1F4A2", j: ["angry", "mad"], k: [25, 44], o: 2 }, inbox_tray: { a: "Inbox Tray", b: "1F4E5", j: ["email", "documents"], k: [27, 2], o: 2 }, "flag-ky": { a: "Cayman Islands Flag", b: "1F1F0-1F1FE", k: [2, 46], o: 2 }, stopwatch: { a: "Stopwatch", b: "23F1-FE0F", c: "23F1", j: ["time", "deadline"], k: [52, 34], o: 2 }, "female-technologist": { a: "Female Technologist", b: "1F469-200D-1F4BB", k: [18, 23], o: 4 }, boom: { a: "Collision Symbol", b: "1F4A5", j: ["bomb", "explode", "explosion", "collision", "blown"], k: [25, 47], n: ["collision"], o: 2 }, "flag-kz": { a: "Kazakhstan Flag", b: "1F1F0-1F1FF", k: [2, 47], o: 2 }, timer_clock: { a: "Timer Clock", b: "23F2-FE0F", c: "23F2", j: ["alarm"], k: [52, 35], o: 2 }, package: { a: "Package", b: "1F4E6", j: ["mail", "gift", "cardboard", "box", "moving"], k: [27, 3], o: 2 }, mailbox: { a: "Closed Mailbox with Raised Flag", b: "1F4EB", j: ["email", "inbox", "communication"], k: [27, 8], o: 2 }, "flag-la": { a: "Laos Flag", b: "1F1F1-1F1E6", k: [2, 48], o: 2 }, dizzy: { a: "Dizzy Symbol", b: "1F4AB", j: ["star", "sparkle", "shoot", "magic"], k: [26, 1], o: 2 }, "male-singer": { a: "Male Singer", b: "1F468-200D-1F3A4", k: [14, 56], o: 4 }, mantelpiece_clock: { a: "Mantelpiece Clock", b: "1F570-FE0F", c: "1F570", j: ["time"], k: [29, 7], o: 2 }, "female-singer": { a: "Female Singer", b: "1F469-200D-1F3A4", k: [17, 46], o: 4 }, "flag-lb": { a: "Lebanon Flag", b: "1F1F1-1F1E7", k: [2, 49], o: 2 }, mailbox_closed: { a: "Closed Mailbox with Lowered Flag", b: "1F4EA", j: ["email", "communication", "inbox"], k: [27, 7], o: 2 }, sweat_drops: { a: "Splashing Sweat Symbol", b: "1F4A6", j: ["water", "drip", "oops"], k: [25, 48], o: 2 }, clock12: { a: "Clock Face Twelve Oclock", b: "1F55B", j: ["time", "noon", "midnight", "midday", "late", "early", "schedule"], k: [28, 50], o: 2 }, mailbox_with_mail: { a: "Open Mailbox with Raised Flag", b: "1F4EC", j: ["email", "inbox", "communication"], k: [27, 9], o: 2 }, clock1230: { a: "Clock Face Twelve-Thirty", b: "1F567", j: ["time", "late", "early", "schedule"], k: [29, 5], o: 2 }, dash: { a: "Dash Symbol", b: "1F4A8", j: ["wind", "air", "fast", "shoo", "fart", "smoke", "puff"], k: [25, 50], o: 2 }, "flag-lc": { a: "St. Lucia Flag", b: "1F1F1-1F1E8", k: [2, 50], o: 2 }, hole: { a: "Hole", b: "1F573-FE0F", c: "1F573", j: ["embarrassing"], k: [29, 8], o: 2 }, "male-artist": { a: "Male Artist", b: "1F468-200D-1F3A8", k: [15, 5], o: 4 }, clock1: { a: "Clock Face One Oclock", b: "1F550", j: ["time", "late", "early", "schedule"], k: [28, 39], o: 2 }, mailbox_with_no_mail: { a: "Open Mailbox with Lowered Flag", b: "1F4ED", j: ["email", "inbox"], k: [27, 10], o: 2 }, "flag-li": { a: "Liechtenstein Flag", b: "1F1F1-1F1EE", k: [2, 51], o: 2 }, bomb: { a: "Bomb", b: "1F4A3", j: ["boom", "explode", "explosion", "terrorism"], k: [25, 45], o: 2 }, postbox: { a: "Postbox", b: "1F4EE", j: ["email", "letter", "envelope"], k: [27, 11], o: 2 }, "female-artist": { a: "Female Artist", b: "1F469-200D-1F3A8", k: [17, 52], o: 4 }, clock130: { a: "Clock Face One-Thirty", b: "1F55C", j: ["time", "late", "early", "schedule"], k: [28, 51], o: 2 }, "flag-lk": { a: "Sri Lanka Flag", b: "1F1F1-1F1F0", k: [2, 52], o: 2 }, ballot_box_with_ballot: { a: "Ballot Box with Ballot", b: "1F5F3-FE0F", c: "1F5F3", k: [30, 28], o: 2 }, keycap_ten: { a: "Keycap Ten", b: "1F51F", j: ["numbers", "10", "blue-square"], k: [28, 2], o: 2 }, clock2: { a: "Clock Face Two Oclock", b: "1F551", j: ["time", "late", "early", "schedule"], k: [28, 40], o: 2 }, "flag-lr": { a: "Liberia Flag", b: "1F1F1-1F1F7", k: [2, 53], o: 2 }, speech_balloon: { a: "Speech Balloon", b: "1F4AC", j: ["bubble", "words", "message", "talk", "chatting"], k: [26, 2], o: 2 }, "flag-ls": { a: "Lesotho Flag", b: "1F1F1-1F1F8", k: [2, 54], o: 2 }, clock230: { a: "Clock Face Two-Thirty", b: "1F55D", j: ["time", "late", "early", "schedule"], k: [28, 52], o: 2 }, "male-pilot": { a: "Male Pilot", b: "1F468-200D-2708-FE0F", c: "1F468-200D-2708", k: [17, 14], o: 4 }, capital_abcd: { a: "Input Symbol for Latin Capital Letters", b: "1F520", j: ["alphabet", "words", "blue-square"], k: [28, 3], o: 2 }, pencil2: { a: "Pencil", b: "270F-FE0F", c: "270F", j: ["stationery", "write", "paper", "writing", "school", "study"], k: [55, 10], o: 2 }, "female-pilot": { a: "Female Pilot", b: "1F469-200D-2708-FE0F", c: "1F469-200D-2708", k: [19, 56], o: 4 }, black_nib: { a: "Black Nib", b: "2712-FE0F", c: "2712", j: ["pen", "stationery", "writing", "write"], k: [55, 11], o: 2 }, left_speech_bubble: { a: "Left Speech Bubble", b: "1F5E8-FE0F", c: "1F5E8", j: ["words", "message", "talk", "chatting"], k: [30, 26], o: 2 }, clock3: { a: "Clock Face Three Oclock", b: "1F552", j: ["time", "late", "early", "schedule"], k: [28, 41], o: 2 }, abcd: { a: "Input Symbol for Latin Small Letters", b: "1F521", j: ["blue-square", "alphabet"], k: [28, 4], o: 2 }, "flag-lt": { a: "Lithuania Flag", b: "1F1F1-1F1F9", k: [2, 55], o: 2 }, clock330: { a: "Clock Face Three-Thirty", b: "1F55E", j: ["time", "late", "early", "schedule"], k: [28, 53], o: 2 }, "flag-lu": { a: "Luxembourg Flag", b: "1F1F1-1F1FA", k: [2, 56], o: 2 }, right_anger_bubble: { a: "Right Anger Bubble", b: "1F5EF-FE0F", c: "1F5EF", j: ["caption", "speech", "thinking", "mad"], k: [30, 27], o: 2 }, lower_left_fountain_pen: { a: "Lower Left Fountain Pen", b: "1F58B-FE0F", c: "1F58B", k: [29, 45], o: 2 }, "male-astronaut": { a: "Male Astronaut", b: "1F468-200D-1F680", k: [16, 5], o: 4 }, thought_balloon: { a: "Thought Balloon", b: "1F4AD", j: ["bubble", "cloud", "speech", "thinking", "dream"], k: [26, 3], o: 2 }, symbols: { a: "Input Symbol for Symbols", b: "1F523", j: ["blue-square", "music", "note", "ampersand", "percent", "glyphs", "characters"], k: [28, 6], o: 2 }, clock4: { a: "Clock Face Four Oclock", b: "1F553", j: ["time", "late", "early", "schedule"], k: [28, 42], o: 2 }, "flag-lv": { a: "Latvia Flag", b: "1F1F1-1F1FB", k: [3, 0], o: 2 }, lower_left_ballpoint_pen: { a: "Lower Left Ballpoint Pen", b: "1F58A-FE0F", c: "1F58A", k: [29, 44], o: 2 }, abc: { a: "Input Symbol for Latin Letters", b: "1F524", j: ["blue-square", "alphabet"], k: [28, 7], o: 2 }, zzz: { a: "Sleeping Symbol", b: "1F4A4", j: ["sleepy", "tired", "dream"], k: [25, 46], o: 2 }, lower_left_paintbrush: { a: "Lower Left Paintbrush", b: "1F58C-FE0F", c: "1F58C", k: [29, 46], o: 2 }, "female-astronaut": { a: "Female Astronaut", b: "1F469-200D-1F680", k: [18, 47], o: 4 }, "flag-ly": { a: "Libya Flag", b: "1F1F1-1F1FE", k: [3, 1], o: 2 }, clock430: { a: "Clock Face Four-Thirty", b: "1F55F", j: ["time", "late", "early", "schedule"], k: [28, 54], o: 2 }, "flag-ma": { a: "Morocco Flag", b: "1F1F2-1F1E6", k: [3, 2], o: 2 }, a: { a: "Negative Squared Latin Capital Letter a", b: "1F170-FE0F", c: "1F170", j: ["red-square", "alphabet", "letter"], k: [0, 16], o: 2 }, clock5: { a: "Clock Face Five Oclock", b: "1F554", j: ["time", "late", "early", "schedule"], k: [28, 43], o: 2 }, lower_left_crayon: { a: "Lower Left Crayon", b: "1F58D-FE0F", c: "1F58D", k: [29, 47], o: 2 }, "male-firefighter": { a: "Male Firefighter", b: "1F468-200D-1F692", k: [16, 11], o: 4 }, memo: { a: "Memo", b: "1F4DD", j: ["write", "documents", "stationery", "pencil", "paper", "writing", "legal", "exam", "quiz", "test", "study", "compose"], k: [26, 51], n: ["pencil"], o: 2 }, ab: { a: "Negative Squared Ab", b: "1F18E", j: ["red-square", "alphabet"], k: [0, 20], o: 2 }, "flag-mc": { a: "Monaco Flag", b: "1F1F2-1F1E8", k: [3, 3], o: 2 }, clock530: { a: "Clock Face Five-Thirty", b: "1F560", j: ["time", "late", "early", "schedule"], k: [28, 55], o: 2 }, briefcase: { a: "Briefcase", b: "1F4BC", j: ["business", "documents", "work", "law", "legal", "job", "career"], k: [26, 18], o: 2 }, "female-firefighter": { a: "Female Firefighter", b: "1F469-200D-1F692", k: [18, 53], o: 4 }, clock6: { a: "Clock Face Six Oclock", b: "1F555", j: ["time", "late", "early", "schedule", "dawn", "dusk"], k: [28, 44], o: 2 }, b: { a: "Negative Squared Latin Capital Letter B", b: "1F171-FE0F", c: "1F171", j: ["red-square", "alphabet", "letter"], k: [0, 17], o: 2 }, "flag-md": { a: "Moldova Flag", b: "1F1F2-1F1E9", k: [3, 4], o: 2 }, clock630: { a: "Clock Face Six-Thirty", b: "1F561", j: ["time", "late", "early", "schedule"], k: [28, 56], o: 2 }, cl: { a: "Squared Cl", b: "1F191", j: ["alphabet", "words", "red-square"], k: [0, 21], o: 2 }, "flag-me": { a: "Montenegro Flag", b: "1F1F2-1F1EA", k: [3, 5], o: 2 }, file_folder: { a: "File Folder", b: "1F4C1", j: ["documents", "business", "office"], k: [26, 23], o: 2 }, "male-police-officer": { obsoletes: "1F46E", a: "Male Police Officer", b: "1F46E-200D-2642-FE0F", c: "1F46E-200D-2642", k: [21, 43], o: 4 }, cool: { a: "Squared Cool", b: "1F192", j: ["words", "blue-square"], k: [0, 22], o: 2 }, clock7: { a: "Clock Face Seven Oclock", b: "1F556", j: ["time", "late", "early", "schedule"], k: [28, 45], o: 2 }, "flag-mf": { a: "St. Martin Flag", b: "1F1F2-1F1EB", k: [3, 6], o: 2 }, open_file_folder: { a: "Open File Folder", b: "1F4C2", j: ["documents", "load"], k: [26, 24], o: 2 }, card_index_dividers: { a: "Card Index Dividers", b: "1F5C2-FE0F", c: "1F5C2", j: ["organizing", "business", "stationery"], k: [30, 15], o: 2 }, "flag-mg": { a: "Madagascar Flag", b: "1F1F2-1F1EC", k: [3, 7], o: 2 }, free: { a: "Squared Free", b: "1F193", j: ["blue-square", "words"], k: [0, 23], o: 2 }, "female-police-officer": { a: "Female Police Officer", b: "1F46E-200D-2640-FE0F", c: "1F46E-200D-2640", k: [21, 37], o: 4 }, clock730: { a: "Clock Face Seven-Thirty", b: "1F562", j: ["time", "late", "early", "schedule"], k: [29, 0], o: 2 }, date: { a: "Calendar", b: "1F4C5", j: ["calendar", "schedule"], k: [26, 27], o: 2 }, clock8: { a: "Clock Face Eight Oclock", b: "1F557", j: ["time", "late", "early", "schedule"], k: [28, 46], o: 2 }, information_source: { a: "Information Source", b: "2139-FE0F", c: "2139", j: ["blue-square", "alphabet", "letter"], k: [52, 13], o: 2 }, "flag-mh": { a: "Marshall Islands Flag", b: "1F1F2-1F1ED", k: [3, 8], o: 2 }, clock830: { a: "Clock Face Eight-Thirty", b: "1F563", j: ["time", "late", "early", "schedule"], k: [29, 1], o: 2 }, calendar: { a: "Tear-off Calendar", b: "1F4C6", j: ["schedule", "date", "planning"], k: [26, 28], o: 2 }, "flag-mk": { a: "North Macedonia Flag", b: "1F1F2-1F1F0", k: [3, 9], o: 2 }, id: { a: "Squared Id", b: "1F194", j: ["purple-square", "words"], k: [0, 24], o: 2 }, spiral_note_pad: { a: "Spiral Note Pad", b: "1F5D2-FE0F", c: "1F5D2", k: [30, 19], o: 2 }, clock9: { a: "Clock Face Nine Oclock", b: "1F558", j: ["time", "late", "early", "schedule"], k: [28, 47], o: 2 }, "flag-ml": { a: "Mali Flag", b: "1F1F2-1F1F1", k: [3, 10], o: 2 }, m: { a: "Circled Latin Capital Letter M", b: "24C2-FE0F", c: "24C2", j: ["alphabet", "blue-circle", "letter"], k: [52, 40], o: 2 }, "flag-mm": { a: "Myanmar (burma) Flag", b: "1F1F2-1F1F2", k: [3, 11], o: 2 }, clock930: { a: "Clock Face Nine-Thirty", b: "1F564", j: ["time", "late", "early", "schedule"], k: [29, 2], o: 2 }, new: { a: "Squared New", b: "1F195", j: ["blue-square", "words", "start"], k: [0, 25], o: 2 }, spiral_calendar_pad: { a: "Spiral Calendar Pad", b: "1F5D3-FE0F", c: "1F5D3", k: [30, 20], o: 2 }, ng: { a: "Squared Ng", b: "1F196", j: ["blue-square", "words", "shape", "icon"], k: [0, 26], o: 2 }, card_index: { a: "Card Index", b: "1F4C7", j: ["business", "stationery"], k: [26, 29], o: 2 }, clock10: { a: "Clock Face Ten Oclock", b: "1F559", j: ["time", "late", "early", "schedule"], k: [28, 48], o: 2 }, "flag-mn": { a: "Mongolia Flag", b: "1F1F2-1F1F3", k: [3, 12], o: 2 }, "male-guard": { obsoletes: "1F482", a: "Male Guard", b: "1F482-200D-2642-FE0F", c: "1F482-200D-2642", k: [24, 14], o: 4 }, "flag-mo": { a: "Macao Sar China Flag", b: "1F1F2-1F1F4", k: [3, 13], o: 2 }, clock1030: { a: "Clock Face Ten-Thirty", b: "1F565", j: ["time", "late", "early", "schedule"], k: [29, 3], o: 2 }, chart_with_upwards_trend: { a: "Chart with Upwards Trend", b: "1F4C8", j: ["graph", "presentation", "stats", "recovery", "business", "economics", "money", "sales", "good", "success"], k: [26, 30], o: 2 }, o2: { a: "Negative Squared Latin Capital Letter O", b: "1F17E-FE0F", c: "1F17E", j: ["alphabet", "red-square", "letter"], k: [0, 18], o: 2 }, "female-guard": { a: "Female Guard", b: "1F482-200D-2640-FE0F", c: "1F482-200D-2640", k: [24, 8], o: 4 }, chart_with_downwards_trend: { a: "Chart with Downwards Trend", b: "1F4C9", j: ["graph", "presentation", "stats", "recession", "business", "economics", "money", "sales", "bad", "failure"], k: [26, 31], o: 2 }, "flag-mp": { a: "Northern Mariana Islands Flag", b: "1F1F2-1F1F5", k: [3, 14], o: 2 }, ok: { a: "Squared Ok", b: "1F197", j: ["good", "agree", "yes", "blue-square"], k: [0, 27], o: 2 }, clock11: { a: "Clock Face Eleven Oclock", b: "1F55A", j: ["time", "late", "early", "schedule"], k: [28, 49], o: 2 }, "male-construction-worker": { obsoletes: "1F477", a: "Male Construction Worker", b: "1F477-200D-2642-FE0F", c: "1F477-200D-2642", k: [23, 16], o: 4 }, clock1130: { a: "Clock Face Eleven-Thirty", b: "1F566", j: ["time", "late", "early", "schedule"], k: [29, 4], o: 2 }, "flag-mq": { a: "Martinique Flag", b: "1F1F2-1F1F6", k: [3, 15], o: 2 }, bar_chart: { a: "Bar Chart", b: "1F4CA", j: ["graph", "presentation", "stats"], k: [26, 32], o: 2 }, parking: { a: "Negative Squared Latin Capital Letter P", b: "1F17F-FE0F", c: "1F17F", j: ["cars", "blue-square", "alphabet", "letter"], k: [0, 19], o: 2 }, new_moon: { a: "New Moon Symbol", b: "1F311", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 36], o: 2 }, "female-construction-worker": { a: "Female Construction Worker", b: "1F477-200D-2640-FE0F", c: "1F477-200D-2640", k: [23, 10], o: 4 }, sos: { a: "Squared Sos", b: "1F198", j: ["help", "red-square", "words", "emergency", "911"], k: [0, 28], o: 2 }, clipboard: { a: "Clipboard", b: "1F4CB", j: ["stationery", "documents"], k: [26, 33], o: 2 }, "flag-mr": { a: "Mauritania Flag", b: "1F1F2-1F1F7", k: [3, 16], o: 2 }, prince: { a: "Prince", b: "1F934", j: ["boy", "man", "male", "crown", "royal", "king"], k: [39, 17], o: 4 }, waxing_crescent_moon: { a: "Waxing Crescent Moon Symbol", b: "1F312", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 37], o: 2 }, "flag-ms": { a: "Montserrat Flag", b: "1F1F2-1F1F8", k: [3, 17], o: 2 }, pushpin: { a: "Pushpin", b: "1F4CC", j: ["stationery", "mark", "here"], k: [26, 34], o: 2 }, up: { a: "Squared Up with Exclamation Mark", b: "1F199", j: ["blue-square", "above", "high"], k: [0, 29], o: 2 }, "flag-mt": { a: "Malta Flag", b: "1F1F2-1F1F9", k: [3, 18], o: 2 }, princess: { a: "Princess", b: "1F478", j: ["girl", "woman", "female", "blond", "crown", "royal", "queen"], k: [23, 28], o: 2 }, round_pushpin: { a: "Round Pushpin", b: "1F4CD", j: ["stationery", "location", "map", "here"], k: [26, 35], o: 2 }, first_quarter_moon: { a: "First Quarter Moon Symbol", b: "1F313", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 38], o: 2 }, vs: { a: "Squared Vs", b: "1F19A", j: ["words", "orange-square"], k: [0, 30], o: 2 }, "flag-mu": { a: "Mauritius Flag", b: "1F1F2-1F1FA", k: [3, 19], o: 2 }, koko: { a: "Squared Katakana Koko", b: "1F201", j: ["blue-square", "here", "katakana", "japanese", "destination"], k: [5, 4], o: 2 }, moon: { a: "Waxing Gibbous Moon Symbol", b: "1F314", k: [5, 39], n: ["waxing_gibbous_moon"], o: 2 }, paperclip: { a: "Paperclip", b: "1F4CE", j: ["documents", "stationery"], k: [26, 36], o: 2 }, linked_paperclips: { a: "Linked Paperclips", b: "1F587-FE0F", c: "1F587", k: [29, 43], o: 2 }, "man-wearing-turban": { obsoletes: "1F473", a: "Man Wearing Turban", b: "1F473-200D-2642-FE0F", c: "1F473-200D-2642", k: [22, 37], o: 4 }, sa: { a: "Squared Katakana Sa", b: "1F202-FE0F", c: "1F202", j: ["japanese", "blue-square", "katakana"], k: [5, 5], o: 2 }, full_moon: { a: "Full Moon Symbol", b: "1F315", j: ["nature", "yellow", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 40], o: 2 }, "flag-mv": { a: "Maldives Flag", b: "1F1F2-1F1FB", k: [3, 20], o: 2 }, "flag-mw": { a: "Malawi Flag", b: "1F1F2-1F1FC", k: [3, 21], o: 2 }, waning_gibbous_moon: { a: "Waning Gibbous Moon Symbol", b: "1F316", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep", "waxing_gibbous_moon"], k: [5, 41], o: 2 }, "woman-wearing-turban": { a: "Woman Wearing Turban", b: "1F473-200D-2640-FE0F", c: "1F473-200D-2640", k: [22, 31], o: 4 }, u6708: { a: "Squared Cjk Unified Ideograph-6708", b: "1F237-FE0F", c: "1F237", j: ["chinese", "month", "moon", "japanese", "orange-square", "kanji"], k: [5, 13], o: 2 }, straight_ruler: { a: "Straight Ruler", b: "1F4CF", j: ["stationery", "calculate", "length", "math", "school", "drawing", "architect", "sketch"], k: [26, 37], o: 2 }, u6709: { a: "Squared Cjk Unified Ideograph-6709", b: "1F236", j: ["orange-square", "chinese", "have", "kanji"], k: [5, 12], o: 2 }, triangular_ruler: { a: "Triangular Ruler", b: "1F4D0", j: ["stationery", "math", "architect", "sketch"], k: [26, 38], o: 2 }, man_with_gua_pi_mao: { a: "Man with Gua Pi Mao", b: "1F472", j: ["male", "boy", "chinese"], k: [22, 25], o: 2 }, "flag-mx": { a: "Mexico Flag", b: "1F1F2-1F1FD", k: [3, 22], o: 2 }, last_quarter_moon: { a: "Last Quarter Moon Symbol", b: "1F317", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 42], o: 2 }, person_with_headscarf: { a: "Person with Headscarf", b: "1F9D5", k: [48, 34], o: 5 }, waning_crescent_moon: { a: "Waning Crescent Moon Symbol", b: "1F318", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 43], o: 2 }, u6307: { a: "Squared Cjk Unified Ideograph-6307", b: "1F22F", j: ["chinese", "point", "green-square", "kanji"], k: [5, 7], o: 2 }, scissors: { a: "Black Scissors", b: "2702-FE0F", c: "2702", j: ["stationery", "cut"], k: [54, 39], o: 2 }, "flag-my": { a: "Malaysia Flag", b: "1F1F2-1F1FE", k: [3, 23], o: 2 }, ideograph_advantage: { a: "Circled Ideograph Advantage", b: "1F250", j: ["chinese", "kanji", "obtain", "get", "circle"], k: [5, 17], o: 2 }, man_in_tuxedo: { a: "Man in Tuxedo", b: "1F935", j: ["couple", "marriage", "wedding", "groom"], k: [39, 23], o: 4 }, "flag-mz": { a: "Mozambique Flag", b: "1F1F2-1F1FF", k: [3, 24], o: 2 }, card_file_box: { a: "Card File Box", b: "1F5C3-FE0F", c: "1F5C3", j: ["business", "stationery"], k: [30, 16], o: 2 }, crescent_moon: { a: "Crescent Moon", b: "1F319", j: ["night", "sleep", "sky", "evening", "magic"], k: [5, 44], o: 2 }, "flag-na": { a: "Namibia Flag", b: "1F1F3-1F1E6", k: [3, 25], o: 2 }, bride_with_veil: { a: "Bride with Veil", b: "1F470", j: ["couple", "marriage", "wedding", "woman", "bride"], k: [22, 1], o: 2 }, new_moon_with_face: { a: "New Moon with Face", b: "1F31A", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 45], o: 2 }, file_cabinet: { a: "File Cabinet", b: "1F5C4-FE0F", c: "1F5C4", j: ["filing", "organizing"], k: [30, 17], o: 2 }, u5272: { a: "Squared Cjk Unified Ideograph-5272", b: "1F239", j: ["cut", "divide", "chinese", "kanji", "pink-square"], k: [5, 15], o: 2 }, wastebasket: { a: "Wastebasket", b: "1F5D1-FE0F", c: "1F5D1", j: ["bin", "trash", "rubbish", "garbage", "toss"], k: [30, 18], o: 2 }, pregnant_woman: { a: "Pregnant Woman", b: "1F930", j: ["baby"], k: [38, 50], o: 4 }, first_quarter_moon_with_face: { a: "First Quarter Moon with Face", b: "1F31B", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 46], o: 2 }, "flag-nc": { a: "New Caledonia Flag", b: "1F1F3-1F1E8", k: [3, 26], o: 2 }, u7121: { a: "Squared Cjk Unified Ideograph-7121", b: "1F21A", j: ["nothing", "chinese", "kanji", "japanese", "orange-square"], k: [5, 6], o: 2 }, lock: { a: "Lock", b: "1F512", j: ["security", "password", "padlock"], k: [27, 46], o: 2 }, "flag-ne": { a: "Niger Flag", b: "1F1F3-1F1EA", k: [3, 27], o: 2 }, last_quarter_moon_with_face: { a: "Last Quarter Moon with Face", b: "1F31C", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 47], o: 2 }, "breast-feeding": { a: "Breast-Feeding", b: "1F931", k: [38, 56], o: 5 }, u7981: { a: "Squared Cjk Unified Ideograph-7981", b: "1F232", j: ["kanji", "japanese", "chinese", "forbidden", "limit", "restricted", "red-square"], k: [5, 8], o: 2 }, accept: { a: "Circled Ideograph Accept", b: "1F251", j: ["ok", "good", "chinese", "kanji", "agree", "yes", "orange-circle"], k: [5, 18], o: 2 }, angel: { a: "Baby Angel", b: "1F47C", j: ["heaven", "wings", "halo"], k: [23, 37], o: 2 }, unlock: { a: "Open Lock", b: "1F513", j: ["privacy", "security"], k: [27, 47], o: 2 }, "flag-nf": { a: "Norfolk Island Flag", b: "1F1F3-1F1EB", k: [3, 28], o: 2 }, thermometer: { a: "Thermometer", b: "1F321-FE0F", c: "1F321", j: ["weather", "temperature", "hot", "cold"], k: [5, 52], o: 2 }, "flag-ng": { a: "Nigeria Flag", b: "1F1F3-1F1EC", k: [3, 29], o: 2 }, u7533: { a: "Squared Cjk Unified Ideograph-7533", b: "1F238", j: ["chinese", "japanese", "kanji", "orange-square"], k: [5, 14], o: 2 }, sunny: { a: "Black Sun with Rays", b: "2600-FE0F", c: "2600", j: ["weather", "nature", "brightness", "summer", "beach", "spring"], k: [52, 49], o: 2 }, lock_with_ink_pen: { a: "Lock with Ink Pen", b: "1F50F", j: ["security", "secret"], k: [27, 43], o: 2 }, santa: { a: "Father Christmas", b: "1F385", j: ["festival", "man", "male", "xmas", "father christmas"], k: [7, 36], o: 2 }, closed_lock_with_key: { a: "Closed Lock with Key", b: "1F510", j: ["security", "privacy"], k: [27, 44], o: 2 }, u5408: { a: "Squared Cjk Unified Ideograph-5408", b: "1F234", j: ["japanese", "chinese", "join", "kanji", "red-square"], k: [5, 10], o: 2 }, "flag-ni": { a: "Nicaragua Flag", b: "1F1F3-1F1EE", k: [3, 30], o: 2 }, mrs_claus: { a: "Mother Christmas", b: "1F936", j: ["woman", "female", "xmas", "mother christmas"], k: [39, 29], n: ["mother_christmas"], o: 4 }, full_moon_with_face: { a: "Full Moon with Face", b: "1F31D", j: ["nature", "twilight", "planet", "space", "night", "evening", "sleep"], k: [5, 48], o: 2 }, key: { a: "Key", b: "1F511", j: ["lock", "door", "password"], k: [27, 45], o: 2 }, superhero: { a: "Superhero", b: "1F9B8", k: [43, 30], o: 11 }, "flag-nl": { a: "Netherlands Flag", b: "1F1F3-1F1F1", k: [3, 31], o: 2 }, u7a7a: { a: "Squared Cjk Unified Ideograph-7a7a", b: "1F233", j: ["kanji", "japanese", "chinese", "empty", "sky", "blue-square"], k: [5, 9], o: 2 }, sun_with_face: { a: "Sun with Face", b: "1F31E", j: ["nature", "morning", "sky"], k: [5, 49], o: 2 }, male_superhero: { a: "Male Superhero", b: "1F9B8-200D-2642-FE0F", c: "1F9B8-200D-2642", k: [43, 24], o: 11 }, ringed_planet: { a: "Ringed Planet", b: "1FA90", k: [52, 4], o: 12 }, old_key: { a: "Old Key", b: "1F5DD-FE0F", c: "1F5DD", j: ["lock", "door", "password"], k: [30, 22], o: 2 }, congratulations: { a: "Circled Ideograph Congratulation", b: "3297-FE0F", c: "3297", j: ["chinese", "kanji", "japanese", "red-circle"], k: [55, 46], o: 2 }, "flag-no": { a: "Norway Flag", b: "1F1F3-1F1F4", k: [3, 32], o: 2 }, star: { a: "White Medium Star", b: "2B50", j: ["night", "yellow"], k: [55, 42], o: 2 }, secret: { a: "Circled Ideograph Secret", b: "3299-FE0F", c: "3299", j: ["privacy", "chinese", "sshh", "kanji", "red-circle"], k: [55, 47], o: 2 }, "flag-np": { a: "Nepal Flag", b: "1F1F3-1F1F5", k: [3, 33], o: 2 }, female_superhero: { a: "Female Superhero", b: "1F9B8-200D-2640-FE0F", c: "1F9B8-200D-2640", k: [43, 18], o: 11 }, hammer: { a: "Hammer", b: "1F528", j: ["tools", "build", "create"], k: [28, 11], o: 2 }, star2: { a: "Glowing Star", b: "1F31F", j: ["night", "sparkle", "awesome", "good", "magic"], k: [5, 50], o: 2 }, "flag-nr": { a: "Nauru Flag", b: "1F1F3-1F1F7", k: [3, 34], o: 2 }, axe: { a: "Axe", b: "1FA93", k: [52, 7], o: 12 }, u55b6: { a: "Squared Cjk Unified Ideograph-55b6", b: "1F23A", j: ["japanese", "opening hours", "orange-square"], k: [5, 16], o: 2 }, supervillain: { a: "Supervillain", b: "1F9B9", k: [43, 48], o: 11 }, stars: { a: "Shooting Star", b: "1F320", j: ["night", "photo"], k: [5, 51], o: 2 }, u6e80: { a: "Squared Cjk Unified Ideograph-6e80", b: "1F235", j: ["full", "chinese", "japanese", "red-square", "kanji"], k: [5, 11], o: 2 }, "flag-nu": { a: "Niue Flag", b: "1F1F3-1F1FA", k: [3, 35], o: 2 }, pick: { a: "Pick", b: "26CF-FE0F", c: "26CF", j: ["tools", "dig"], k: [54, 5], o: 2 }, male_supervillain: { a: "Male Supervillain", b: "1F9B9-200D-2642-FE0F", c: "1F9B9-200D-2642", k: [43, 42], o: 11 }, female_supervillain: { a: "Female Supervillain", b: "1F9B9-200D-2640-FE0F", c: "1F9B9-200D-2640", k: [43, 36], o: 11 }, hammer_and_pick: { a: "Hammer and Pick", b: "2692-FE0F", c: "2692", j: ["tools", "build", "create"], k: [53, 41], o: 2 }, milky_way: { a: "Milky Way", b: "1F30C", j: ["photo", "space", "stars"], k: [5, 31], o: 2 }, red_circle: { a: "Large Red Circle", b: "1F534", j: ["shape", "error", "danger"], k: [28, 23], o: 2 }, "flag-nz": { a: "New Zealand Flag", b: "1F1F3-1F1FF", k: [3, 36], o: 2 }, large_orange_circle: { a: "Large Orange Circle", b: "1F7E0", k: [37, 3], o: 12 }, hammer_and_wrench: { a: "Hammer and Wrench", b: "1F6E0-FE0F", c: "1F6E0", j: ["tools", "build", "create"], k: [36, 42], o: 2 }, "flag-om": { a: "Oman Flag", b: "1F1F4-1F1F2", k: [3, 37], o: 2 }, cloud: { a: "Cloud", b: "2601-FE0F", c: "2601", j: ["weather", "sky"], k: [52, 50], o: 2 }, mage: { obsoleted_by: "1F9D9-200D-2640-FE0F", a: "Mage", b: "1F9D9", k: [49, 49], o: 5 }, dagger_knife: { a: "Dagger Knife", b: "1F5E1-FE0F", c: "1F5E1", k: [30, 24], o: 2 }, partly_sunny: { a: "Sun Behind Cloud", b: "26C5", j: ["weather", "nature", "cloudy", "morning", "fall", "spring"], k: [54, 2], o: 2 }, large_yellow_circle: { a: "Large Yellow Circle", b: "1F7E1", k: [37, 4], o: 12 }, male_mage: { a: "Male Mage", b: "1F9D9-200D-2642-FE0F", c: "1F9D9-200D-2642", k: [49, 43], o: 5 }, "flag-pa": { a: "Panama Flag", b: "1F1F5-1F1E6", k: [3, 38], o: 2 }, thunder_cloud_and_rain: { a: "Thunder Cloud and Rain", b: "26C8-FE0F", c: "26C8", k: [54, 3], o: 2 }, large_green_circle: { a: "Large Green Circle", b: "1F7E2", k: [37, 5], o: 12 }, female_mage: { obsoletes: "1F9D9", a: "Female Mage", b: "1F9D9-200D-2640-FE0F", c: "1F9D9-200D-2640", k: [49, 37], o: 5 }, crossed_swords: { a: "Crossed Swords", b: "2694-FE0F", c: "2694", j: ["weapon"], k: [53, 43], o: 2 }, "flag-pe": { a: "Peru Flag", b: "1F1F5-1F1EA", k: [3, 39], o: 2 }, gun: { a: "Pistol", b: "1F52B", j: ["violence", "weapon", "pistol", "revolver"], k: [28, 14], o: 2 }, mostly_sunny: { a: "Mostly Sunny", b: "1F324-FE0F", c: "1F324", k: [5, 53], n: ["sun_small_cloud"], o: 2 }, fairy: { obsoleted_by: "1F9DA-200D-2640-FE0F", a: "Fairy", b: "1F9DA", k: [50, 10], o: 5 }, "flag-pf": { a: "French Polynesia Flag", b: "1F1F5-1F1EB", k: [3, 40], o: 2 }, large_blue_circle: { a: "Large Blue Circle", b: "1F535", j: ["shape", "icon", "button"], k: [28, 24], o: 2 }, large_purple_circle: { a: "Large Purple Circle", b: "1F7E3", k: [37, 6], o: 12 }, bow_and_arrow: { a: "Bow and Arrow", b: "1F3F9", j: ["sports"], k: [11, 21], o: 2 }, male_fairy: { a: "Male Fairy", b: "1F9DA-200D-2642-FE0F", c: "1F9DA-200D-2642", k: [50, 4], o: 5 }, barely_sunny: { a: "Barely Sunny", b: "1F325-FE0F", c: "1F325", k: [5, 54], n: ["sun_behind_cloud"], o: 2 }, "flag-pg": { a: "Papua New Guinea Flag", b: "1F1F5-1F1EC", k: [3, 41], o: 2 }, shield: { a: "Shield", b: "1F6E1-FE0F", c: "1F6E1", j: ["protection", "security"], k: [36, 43], o: 2 }, partly_sunny_rain: { a: "Partly Sunny Rain", b: "1F326-FE0F", c: "1F326", k: [5, 55], n: ["sun_behind_rain_cloud"], o: 2 }, large_brown_circle: { a: "Large Brown Circle", b: "1F7E4", k: [37, 7], o: 12 }, female_fairy: { obsoletes: "1F9DA", a: "Female Fairy", b: "1F9DA-200D-2640-FE0F", c: "1F9DA-200D-2640", k: [49, 55], o: 5 }, "flag-ph": { a: "Philippines Flag", b: "1F1F5-1F1ED", k: [3, 42], o: 2 }, "flag-pk": { a: "Pakistan Flag", b: "1F1F5-1F1F0", k: [3, 43], o: 2 }, black_circle: { a: "Medium Black Circle", b: "26AB", j: ["shape", "button", "round"], k: [53, 53], o: 2 }, wrench: { a: "Wrench", b: "1F527", j: ["tools", "diy", "ikea", "fix", "maintainer"], k: [28, 10], o: 2 }, vampire: { obsoleted_by: "1F9DB-200D-2640-FE0F", a: "Vampire", b: "1F9DB", k: [50, 28], o: 5 }, rain_cloud: { a: "Rain Cloud", b: "1F327-FE0F", c: "1F327", k: [5, 56], o: 2 }, snow_cloud: { a: "Snow Cloud", b: "1F328-FE0F", c: "1F328", k: [6, 0], o: 2 }, "flag-pl": { a: "Poland Flag", b: "1F1F5-1F1F1", k: [3, 44], o: 2 }, male_vampire: { a: "Male Vampire", b: "1F9DB-200D-2642-FE0F", c: "1F9DB-200D-2642", k: [50, 22], o: 5 }, nut_and_bolt: { a: "Nut and Bolt", b: "1F529", j: ["handy", "tools", "fix"], k: [28, 12], o: 2 }, white_circle: { a: "Medium White Circle", b: "26AA", j: ["shape", "round"], k: [53, 52], o: 2 }, female_vampire: { obsoletes: "1F9DB", a: "Female Vampire", b: "1F9DB-200D-2640-FE0F", c: "1F9DB-200D-2640", k: [50, 16], o: 5 }, "flag-pm": { a: "St. Pierre & Miquelon Flag", b: "1F1F5-1F1F2", k: [3, 45], o: 2 }, large_red_square: { a: "Large Red Square", b: "1F7E5", k: [37, 8], o: 12 }, lightning: { a: "Lightning", b: "1F329-FE0F", c: "1F329", k: [6, 1], n: ["lightning_cloud"], o: 2 }, gear: { a: "Gear", b: "2699-FE0F", c: "2699", j: ["cog"], k: [53, 47], o: 2 }, merperson: { obsoleted_by: "1F9DC-200D-2642-FE0F", a: "Merperson", b: "1F9DC", k: [50, 46], o: 5 }, tornado: { a: "Tornado", b: "1F32A-FE0F", c: "1F32A", j: ["weather", "cyclone", "twister"], k: [6, 2], n: ["tornado_cloud"], o: 2 }, large_orange_square: { a: "Large Orange Square", b: "1F7E7", k: [37, 10], o: 12 }, "flag-pn": { a: "Pitcairn Islands Flag", b: "1F1F5-1F1F3", k: [3, 46], o: 2 }, compression: { a: "Compression", b: "1F5DC-FE0F", c: "1F5DC", k: [30, 21], o: 2 }, merman: { obsoletes: "1F9DC", a: "Merman", b: "1F9DC-200D-2642-FE0F", c: "1F9DC-200D-2642", k: [50, 40], o: 5 }, large_yellow_square: { a: "Large Yellow Square", b: "1F7E8", k: [37, 11], o: 12 }, fog: { a: "Fog", b: "1F32B-FE0F", c: "1F32B", j: ["weather"], k: [6, 3], o: 2 }, scales: { a: "Scales", b: "2696-FE0F", c: "2696", k: [53, 45], o: 2 }, "flag-pr": { a: "Puerto Rico Flag", b: "1F1F5-1F1F7", k: [3, 47], o: 2 }, wind_blowing_face: { a: "Wind Blowing Face", b: "1F32C-FE0F", c: "1F32C", k: [6, 4], o: 2 }, "flag-ps": { a: "Palestinian Territories Flag", b: "1F1F5-1F1F8", k: [3, 48], o: 2 }, mermaid: { a: "Mermaid", b: "1F9DC-200D-2640-FE0F", c: "1F9DC-200D-2640", k: [50, 34], o: 5 }, probing_cane: { a: "Probing Cane", b: "1F9AF", k: [43, 3], o: 12 }, large_green_square: { a: "Large Green Square", b: "1F7E9", k: [37, 12], o: 12 }, "flag-pt": { a: "Portugal Flag", b: "1F1F5-1F1F9", k: [3, 49], o: 2 }, link: { a: "Link Symbol", b: "1F517", j: ["rings", "url"], k: [27, 51], o: 2 }, large_blue_square: { a: "Large Blue Square", b: "1F7E6", k: [37, 9], o: 12 }, elf: { obsoleted_by: "1F9DD-200D-2642-FE0F", a: "Elf", b: "1F9DD", k: [51, 7], o: 5 }, cyclone: { a: "Cyclone", b: "1F300", j: ["weather", "swirl", "blue", "cloud", "vortex", "spiral", "whirlpool", "spin", "tornado", "hurricane", "typhoon"], k: [5, 19], o: 2 }, rainbow: { a: "Rainbow", b: "1F308", j: ["nature", "happy", "unicorn_face", "photo", "sky", "spring"], k: [5, 27], o: 2 }, male_elf: { obsoletes: "1F9DD", a: "Male Elf", b: "1F9DD-200D-2642-FE0F", c: "1F9DD-200D-2642", k: [51, 1], o: 5 }, "flag-pw": { a: "Palau Flag", b: "1F1F5-1F1FC", k: [3, 50], o: 2 }, chains: { a: "Chains", b: "26D3-FE0F", c: "26D3", j: ["lock", "arrest"], k: [54, 7], o: 2 }, large_purple_square: { a: "Large Purple Square", b: "1F7EA", k: [37, 13], o: 12 }, female_elf: { a: "Female Elf", b: "1F9DD-200D-2640-FE0F", c: "1F9DD-200D-2640", k: [50, 52], o: 5 }, "flag-py": { a: "Paraguay Flag", b: "1F1F5-1F1FE", k: [3, 51], o: 2 }, closed_umbrella: { a: "Closed Umbrella", b: "1F302", j: ["weather", "rain", "drizzle"], k: [5, 21], o: 2 }, toolbox: { a: "Toolbox", b: "1F9F0", k: [51, 35], o: 11 }, large_brown_square: { a: "Large Brown Square", b: "1F7EB", k: [37, 14], o: 12 }, magnet: { a: "Magnet", b: "1F9F2", k: [51, 37], o: 11 }, genie: { obsoleted_by: "1F9DE-200D-2642-FE0F", a: "Genie", b: "1F9DE", k: [51, 15], o: 5 }, "flag-qa": { a: "Qatar Flag", b: "1F1F6-1F1E6", k: [3, 52], o: 2 }, umbrella: { a: "Umbrella", b: "2602-FE0F", c: "2602", j: ["rainy", "weather", "spring"], k: [52, 51], o: 2 }, black_large_square: { a: "Black Large Square", b: "2B1B", j: ["shape", "icon", "button"], k: [55, 40], o: 2 }, male_genie: { obsoletes: "1F9DE", a: "Male Genie", b: "1F9DE-200D-2642-FE0F", c: "1F9DE-200D-2642", k: [51, 14], o: 5 }, umbrella_with_rain_drops: { a: "Umbrella with Rain Drops", b: "2614", k: [52, 56], o: 2 }, "flag-re": { a: "Réunion Flag", b: "1F1F7-1F1EA", k: [3, 53], o: 2 }, white_large_square: { a: "White Large Square", b: "2B1C", j: ["shape", "icon", "stone", "button"], k: [55, 41], o: 2 }, alembic: { a: "Alembic", b: "2697-FE0F", c: "2697", j: ["distilling", "science", "experiment", "chemistry"], k: [53, 46], o: 2 }, black_medium_square: { a: "Black Medium Square", b: "25FC-FE0F", c: "25FC", j: ["shape", "button", "icon"], k: [52, 46], o: 2 }, test_tube: { a: "Test Tube", b: "1F9EA", k: [51, 29], o: 11 }, "flag-ro": { a: "Romania Flag", b: "1F1F7-1F1F4", k: [3, 54], o: 2 }, female_genie: { a: "Female Genie", b: "1F9DE-200D-2640-FE0F", c: "1F9DE-200D-2640", k: [51, 13], o: 5 }, umbrella_on_ground: { a: "Umbrella on Ground", b: "26F1-FE0F", c: "26F1", k: [54, 12], o: 2 }, zombie: { obsoleted_by: "1F9DF-200D-2642-FE0F", a: "Zombie", b: "1F9DF", k: [51, 18], o: 5 }, zap: { a: "High Voltage Sign", b: "26A1", j: ["thunder", "weather", "lightning bolt", "fast"], k: [53, 51], o: 2 }, white_medium_square: { a: "White Medium Square", b: "25FB-FE0F", c: "25FB", j: ["shape", "stone", "icon"], k: [52, 45], o: 2 }, "flag-rs": { a: "Serbia Flag", b: "1F1F7-1F1F8", k: [3, 55], o: 2 }, petri_dish: { a: "Petri Dish", b: "1F9EB", k: [51, 30], o: 11 }, snowflake: { a: "Snowflake", b: "2744-FE0F", c: "2744", j: ["winter", "season", "cold", "weather", "christmas", "xmas"], k: [55, 19], o: 2 }, dna: { a: "Dna Double Helix", b: "1F9EC", k: [51, 31], o: 11 }, male_zombie: { obsoletes: "1F9DF", a: "Male Zombie", b: "1F9DF-200D-2642-FE0F", c: "1F9DF-200D-2642", k: [51, 17], o: 5 }, black_medium_small_square: { a: "Black Medium Small Square", b: "25FE", j: ["icon", "shape", "button"], k: [52, 48], o: 2 }, ru: { a: "Russia Flag", b: "1F1F7-1F1FA", j: ["russian", "federation", "flag", "nation", "country", "banner"], k: [3, 56], n: ["flag-ru"], o: 2 }, female_zombie: { a: "Female Zombie", b: "1F9DF-200D-2640-FE0F", c: "1F9DF-200D-2640", k: [51, 16], o: 5 }, "flag-rw": { a: "Rwanda Flag", b: "1F1F7-1F1FC", k: [4, 0], o: 2 }, snowman: { a: "Snowman", b: "2603-FE0F", c: "2603", j: ["winter", "season", "cold", "weather", "christmas", "xmas", "frozen", "without_snow"], k: [52, 52], o: 2 }, white_medium_small_square: { a: "White Medium Small Square", b: "25FD", j: ["shape", "stone", "icon", "button"], k: [52, 47], o: 2 }, microscope: { a: "Microscope", b: "1F52C", j: ["laboratory", "experiment", "zoomin", "science", "study"], k: [28, 15], o: 2 }, snowman_without_snow: { a: "Snowman Without Snow", b: "26C4", k: [54, 1], o: 2 }, telescope: { a: "Telescope", b: "1F52D", j: ["stars", "space", "zoom", "science", "astronomy"], k: [28, 16], o: 2 }, black_small_square: { a: "Black Small Square", b: "25AA-FE0F", c: "25AA", j: ["shape", "icon"], k: [52, 41], o: 2 }, "flag-sa": { a: "Saudi Arabia Flag", b: "1F1F8-1F1E6", k: [4, 1], o: 2 }, "man-getting-massage": { a: "Man Getting Massage", b: "1F486-200D-2642-FE0F", c: "1F486-200D-2642", k: [24, 45], o: 4 }, comet: { a: "Comet", b: "2604-FE0F", c: "2604", j: ["space"], k: [52, 53], o: 2 }, white_small_square: { a: "White Small Square", b: "25AB-FE0F", c: "25AB", j: ["shape", "icon"], k: [52, 42], o: 2 }, "flag-sb": { a: "Solomon Islands Flag", b: "1F1F8-1F1E7", k: [4, 2], o: 2 }, satellite_antenna: { a: "Satellite Antenna", b: "1F4E1", k: [26, 55], o: 2 }, large_orange_diamond: { a: "Large Orange Diamond", b: "1F536", j: ["shape", "jewel", "gem"], k: [28, 25], o: 2 }, "woman-getting-massage": { obsoletes: "1F486", a: "Woman Getting Massage", b: "1F486-200D-2640-FE0F", c: "1F486-200D-2640", k: [24, 39], o: 4 }, fire: { a: "Fire", b: "1F525", j: ["hot", "cook", "flame"], k: [28, 8], o: 2 }, syringe: { a: "Syringe", b: "1F489", j: ["health", "hospital", "drugs", "blood", "medicine", "needle", "doctor", "nurse"], k: [25, 19], o: 2 }, "flag-sc": { a: "Seychelles Flag", b: "1F1F8-1F1E8", k: [4, 3], o: 2 }, large_blue_diamond: { a: "Large Blue Diamond", b: "1F537", j: ["shape", "jewel", "gem"], k: [28, 26], o: 2 }, "flag-sd": { a: "Sudan Flag", b: "1F1F8-1F1E9", k: [4, 4], o: 2 }, droplet: { a: "Droplet", b: "1F4A7", j: ["water", "drip", "faucet", "spring"], k: [25, 49], o: 2 }, drop_of_blood: { a: "Drop of Blood", b: "1FA78", k: [51, 55], o: 12 }, ocean: { a: "Water Wave", b: "1F30A", j: ["sea", "water", "wave", "nature", "tsunami", "disaster"], k: [5, 29], o: 2 }, "flag-se": { a: "Sweden Flag", b: "1F1F8-1F1EA", k: [4, 5], o: 2 }, "man-getting-haircut": { a: "Man Getting Haircut", b: "1F487-200D-2642-FE0F", c: "1F487-200D-2642", k: [25, 6], o: 4 }, small_orange_diamond: { a: "Small Orange Diamond", b: "1F538", j: ["shape", "jewel", "gem"], k: [28, 27], o: 2 }, pill: { a: "Pill", b: "1F48A", j: ["health", "medicine", "doctor", "pharmacy", "drug"], k: [25, 20], o: 2 }, "woman-getting-haircut": { obsoletes: "1F487", a: "Woman Getting Haircut", b: "1F487-200D-2640-FE0F", c: "1F487-200D-2640", k: [25, 0], o: 4 }, small_blue_diamond: { a: "Small Blue Diamond", b: "1F539", j: ["shape", "jewel", "gem"], k: [28, 28], o: 2 }, "flag-sg": { a: "Singapore Flag", b: "1F1F8-1F1EC", k: [4, 6], o: 2 }, adhesive_bandage: { a: "Adhesive Bandage", b: "1FA79", k: [51, 56], o: 12 }, small_red_triangle: { a: "Up-Pointing Red Triangle", b: "1F53A", j: ["shape", "direction", "up", "top"], k: [28, 29], o: 2 }, "flag-sh": { a: "St. Helena Flag", b: "1F1F8-1F1ED", k: [4, 7], o: 2 }, stethoscope: { a: "Stethoscope", b: "1FA7A", k: [52, 0], o: 12 }, "man-walking": { obsoletes: "1F6B6", a: "Man Walking", b: "1F6B6-200D-2642-FE0F", c: "1F6B6-200D-2642", k: [35, 53], o: 4 }, "flag-si": { a: "Slovenia Flag", b: "1F1F8-1F1EE", k: [4, 8], o: 2 }, door: { a: "Door", b: "1F6AA", j: ["house", "entry", "exit"], k: [35, 1], o: 2 }, small_red_triangle_down: { a: "Down-Pointing Red Triangle", b: "1F53B", j: ["shape", "direction", "bottom"], k: [28, 30], o: 2 }, "flag-sj": { a: "Svalbard & Jan Mayen Flag", b: "1F1F8-1F1EF", k: [4, 9], o: 2 }, diamond_shape_with_a_dot_inside: { a: "Diamond Shape with a Dot Inside", b: "1F4A0", j: ["jewel", "blue", "gem", "crystal", "fancy"], k: [25, 42], o: 2 }, "woman-walking": { a: "Woman Walking", b: "1F6B6-200D-2640-FE0F", c: "1F6B6-200D-2640", k: [35, 47], o: 4 }, bed: { a: "Bed", b: "1F6CF-FE0F", c: "1F6CF", j: ["sleep", "rest"], k: [36, 37], o: 2 }, radio_button: { a: "Radio Button", b: "1F518", j: ["input", "old", "music", "circle"], k: [27, 52], o: 2 }, "flag-sk": { a: "Slovakia Flag", b: "1F1F8-1F1F0", k: [4, 10], o: 2 }, standing_person: { a: "Standing Person", b: "1F9CD", k: [44, 31], o: 12 }, couch_and_lamp: { a: "Couch and Lamp", b: "1F6CB-FE0F", c: "1F6CB", j: ["read", "chill"], k: [36, 28], o: 2 }, man_standing: { a: "Man Standing", b: "1F9CD-200D-2642-FE0F", c: "1F9CD-200D-2642", k: [44, 25], o: 12 }, white_square_button: { a: "White Square Button", b: "1F533", j: ["shape", "input"], k: [28, 22], o: 2 }, "flag-sl": { a: "Sierra Leone Flag", b: "1F1F8-1F1F1", k: [4, 11], o: 2 }, chair: { a: "Chair", b: "1FA91", k: [52, 5], o: 12 }, toilet: { a: "Toilet", b: "1F6BD", j: ["restroom", "wc", "washroom", "bathroom", "potty"], k: [36, 14], o: 2 }, black_square_button: { a: "Black Square Button", b: "1F532", j: ["shape", "input", "frame"], k: [28, 21], o: 2 }, "flag-sm": { a: "San Marino Flag", b: "1F1F8-1F1F2", k: [4, 12], o: 2 }, woman_standing: { a: "Woman Standing", b: "1F9CD-200D-2640-FE0F", c: "1F9CD-200D-2640", k: [44, 19], o: 12 }, kneeling_person: { a: "Kneeling Person", b: "1F9CE", k: [44, 49], o: 12 }, shower: { a: "Shower", b: "1F6BF", j: ["clean", "water", "bathroom"], k: [36, 16], o: 2 }, "flag-sn": { a: "Senegal Flag", b: "1F1F8-1F1F3", k: [4, 13], o: 2 }, bathtub: { a: "Bathtub", b: "1F6C1", j: ["clean", "shower", "bathroom"], k: [36, 23], o: 2 }, "flag-so": { a: "Somalia Flag", b: "1F1F8-1F1F4", k: [4, 14], o: 2 }, man_kneeling: { a: "Man Kneeling", b: "1F9CE-200D-2642-FE0F", c: "1F9CE-200D-2642", k: [44, 43], o: 12 }, "flag-sr": { a: "Suriname Flag", b: "1F1F8-1F1F7", k: [4, 15], o: 2 }, woman_kneeling: { a: "Woman Kneeling", b: "1F9CE-200D-2640-FE0F", c: "1F9CE-200D-2640", k: [44, 37], o: 12 }, razor: { a: "Razor", b: "1FA92", k: [52, 6], o: 12 }, "flag-ss": { a: "South Sudan Flag", b: "1F1F8-1F1F8", k: [4, 16], o: 2 }, lotion_bottle: { a: "Lotion Bottle", b: "1F9F4", k: [51, 39], o: 11 }, "flag-st": { a: "São Tomé & Príncipe Flag", b: "1F1F8-1F1F9", k: [4, 17], o: 2 }, safety_pin: { a: "Safety Pin", b: "1F9F7", k: [51, 42], o: 11 }, man_with_probing_cane: { a: "Man with Probing Cane", b: "1F468-200D-1F9AF", k: [16, 17], o: 12 }, broom: { a: "Broom", b: "1F9F9", k: [51, 44], o: 11 }, woman_with_probing_cane: { a: "Woman with Probing Cane", b: "1F469-200D-1F9AF", k: [19, 2], o: 12 }, "flag-sv": { a: "El Salvador Flag", b: "1F1F8-1F1FB", k: [4, 18], o: 2 }, "flag-sx": { a: "Sint Maarten Flag", b: "1F1F8-1F1FD", k: [4, 19], o: 2 }, basket: { a: "Basket", b: "1F9FA", k: [51, 45], o: 11 }, man_in_motorized_wheelchair: { a: "Man in Motorized Wheelchair", b: "1F468-200D-1F9BC", k: [16, 47], o: 12 }, "flag-sy": { a: "Syria Flag", b: "1F1F8-1F1FE", k: [4, 20], o: 2 }, roll_of_paper: { a: "Roll of Paper", b: "1F9FB", k: [51, 46], o: 11 }, woman_in_motorized_wheelchair: { a: "Woman in Motorized Wheelchair", b: "1F469-200D-1F9BC", k: [19, 32], o: 12 }, "flag-sz": { a: "Eswatini Flag", b: "1F1F8-1F1FF", k: [4, 21], o: 2 }, soap: { a: "Bar of Soap", b: "1F9FC", k: [51, 47], o: 11 }, "flag-ta": { a: "Tristan Da Cunha Flag", b: "1F1F9-1F1E6", k: [4, 22], o: 2 }, sponge: { a: "Sponge", b: "1F9FD", k: [51, 48], o: 11 }, fire_extinguisher: { a: "Fire Extinguisher", b: "1F9EF", k: [51, 34], o: 11 }, man_in_manual_wheelchair: { a: "Man in Manual Wheelchair", b: "1F468-200D-1F9BD", k: [16, 53], o: 12 }, "flag-tc": { a: "Turks & Caicos Islands Flag", b: "1F1F9-1F1E8", k: [4, 23], o: 2 }, woman_in_manual_wheelchair: { a: "Woman in Manual Wheelchair", b: "1F469-200D-1F9BD", k: [19, 38], o: 12 }, "flag-td": { a: "Chad Flag", b: "1F1F9-1F1E9", k: [4, 24], o: 2 }, shopping_trolley: { a: "Shopping Trolley", b: "1F6D2", k: [36, 40], o: 4 }, "flag-tf": { a: "French Southern Territories Flag", b: "1F1F9-1F1EB", k: [4, 25], o: 2 }, smoking: { a: "Smoking Symbol", b: "1F6AC", j: ["kills", "tobacco", "cigarette", "joint", "smoke"], k: [35, 3], o: 2 }, coffin: { a: "Coffin", b: "26B0-FE0F", c: "26B0", j: ["vampire", "dead", "die", "death", "rip", "graveyard", "cemetery", "casket", "funeral", "box"], k: [53, 54], o: 2 }, "man-running": { obsoletes: "1F3C3", a: "Man Running", b: "1F3C3-200D-2642-FE0F", c: "1F3C3-200D-2642", k: [8, 52], o: 4 }, "flag-tg": { a: "Togo Flag", b: "1F1F9-1F1EC", k: [4, 26], o: 2 }, "woman-running": { a: "Woman Running", b: "1F3C3-200D-2640-FE0F", c: "1F3C3-200D-2640", k: [8, 46], o: 4 }, funeral_urn: { a: "Funeral Urn", b: "26B1-FE0F", c: "26B1", j: ["dead", "die", "death", "rip", "ashes"], k: [53, 55], o: 2 }, "flag-th": { a: "Thailand Flag", b: "1F1F9-1F1ED", k: [4, 27], o: 2 }, moyai: { a: "Moyai", b: "1F5FF", j: ["rock", "easter island", "moai"], k: [30, 34], o: 2 }, "flag-tj": { a: "Tajikistan Flag", b: "1F1F9-1F1EF", k: [4, 28], o: 2 }, dancer: { a: "Dancer", b: "1F483", j: ["female", "girl", "woman", "fun"], k: [24, 26], o: 2 }, "flag-tk": { a: "Tokelau Flag", b: "1F1F9-1F1F0", k: [4, 29], o: 2 }, man_dancing: { a: "Man Dancing", b: "1F57A", j: ["male", "boy", "fun", "dancer"], k: [29, 37], o: 4 }, "flag-tl": { a: "Timor-Leste Flag", b: "1F1F9-1F1F1", k: [4, 30], o: 2 }, man_in_business_suit_levitating: { a: "Man in Business Suit Levitating", b: "1F574-FE0F", c: "1F574", k: [29, 9], o: 2 }, "flag-tm": { a: "Turkmenistan Flag", b: "1F1F9-1F1F2", k: [4, 31], o: 2 }, dancers: { obsoleted_by: "1F46F-200D-2640-FE0F", a: "Woman with Bunny Ears", b: "1F46F", k: [22, 0], o: 2 }, "man-with-bunny-ears-partying": { a: "Man with Bunny Ears Partying", b: "1F46F-200D-2642-FE0F", c: "1F46F-200D-2642", k: [21, 56], o: 4 }, "flag-tn": { a: "Tunisia Flag", b: "1F1F9-1F1F3", k: [4, 32], o: 2 }, "flag-to": { a: "Tonga Flag", b: "1F1F9-1F1F4", k: [4, 33], o: 2 }, "woman-with-bunny-ears-partying": { obsoletes: "1F46F", a: "Woman with Bunny Ears Partying", b: "1F46F-200D-2640-FE0F", c: "1F46F-200D-2640", k: [21, 55], o: 4 }, "flag-tr": { a: "Turkey Flag", b: "1F1F9-1F1F7", k: [4, 34], o: 2 }, person_in_steamy_room: { obsoleted_by: "1F9D6-200D-2642-FE0F", a: "Person in Steamy Room", b: "1F9D6", k: [48, 52], o: 5 }, man_in_steamy_room: { obsoletes: "1F9D6", a: "Man in Steamy Room", b: "1F9D6-200D-2642-FE0F", c: "1F9D6-200D-2642", k: [48, 46], o: 5 }, "flag-tt": { a: "Trinidad & Tobago Flag", b: "1F1F9-1F1F9", k: [4, 35], o: 2 }, woman_in_steamy_room: { a: "Woman in Steamy Room", b: "1F9D6-200D-2640-FE0F", c: "1F9D6-200D-2640", k: [48, 40], o: 5 }, "flag-tv": { a: "Tuvalu Flag", b: "1F1F9-1F1FB", k: [4, 36], o: 2 }, "flag-tw": { a: "Taiwan Flag", b: "1F1F9-1F1FC", k: [4, 37], o: 2 }, person_climbing: { obsoleted_by: "1F9D7-200D-2640-FE0F", a: "Person Climbing", b: "1F9D7", k: [49, 13], o: 5 }, man_climbing: { a: "Man Climbing", b: "1F9D7-200D-2642-FE0F", c: "1F9D7-200D-2642", k: [49, 7], o: 5 }, "flag-tz": { a: "Tanzania Flag", b: "1F1F9-1F1FF", k: [4, 38], o: 2 }, "flag-ua": { a: "Ukraine Flag", b: "1F1FA-1F1E6", k: [4, 39], o: 2 }, woman_climbing: { obsoletes: "1F9D7", a: "Woman Climbing", b: "1F9D7-200D-2640-FE0F", c: "1F9D7-200D-2640", k: [49, 1], o: 5 }, "flag-ug": { a: "Uganda Flag", b: "1F1FA-1F1EC", k: [4, 40], o: 2 }, fencer: { a: "Fencer", b: "1F93A", k: [40, 32], o: 4 }, "flag-um": { a: "U.s. Outlying Islands Flag", b: "1F1FA-1F1F2", k: [4, 41], o: 2 }, horse_racing: { a: "Horse Racing", b: "1F3C7", j: ["animal", "betting", "competition", "gambling", "luck"], k: [9, 27], o: 2 }, skier: { a: "Skier", b: "26F7-FE0F", c: "26F7", j: ["sports", "winter", "snow"], k: [54, 17], o: 2 }, "flag-un": { a: "United Nations Flag", b: "1F1FA-1F1F3", k: [4, 42], o: 4 }, us: { a: "United States Flag", b: "1F1FA-1F1F8", j: ["united", "states", "america", "flag", "nation", "country", "banner"], k: [4, 43], n: ["flag-us"], o: 2 }, snowboarder: { a: "Snowboarder", b: "1F3C2", j: ["sports", "winter"], k: [8, 40], o: 2 }, "flag-uy": { a: "Uruguay Flag", b: "1F1FA-1F1FE", k: [4, 44], o: 2 }, "flag-uz": { a: "Uzbekistan Flag", b: "1F1FA-1F1FF", k: [4, 45], o: 2 }, "flag-va": { a: "Vatican City Flag", b: "1F1FB-1F1E6", k: [4, 46], o: 2 }, "flag-vc": { a: "St. Vincent & Grenadines Flag", b: "1F1FB-1F1E8", k: [4, 47], o: 2 }, "man-surfing": { obsoletes: "1F3C4", a: "Man Surfing", b: "1F3C4-200D-2642-FE0F", c: "1F3C4-200D-2642", k: [9, 13], o: 4 }, "flag-ve": { a: "Venezuela Flag", b: "1F1FB-1F1EA", k: [4, 48], o: 2 }, "flag-vg": { a: "British Virgin Islands Flag", b: "1F1FB-1F1EC", k: [4, 49], o: 2 }, "woman-surfing": { a: "Woman Surfing", b: "1F3C4-200D-2640-FE0F", c: "1F3C4-200D-2640", k: [9, 7], o: 4 }, "flag-vi": { a: "U.s. Virgin Islands Flag", b: "1F1FB-1F1EE", k: [4, 50], o: 2 }, "man-rowing-boat": { obsoletes: "1F6A3", a: "Man Rowing Boat", b: "1F6A3-200D-2642-FE0F", c: "1F6A3-200D-2642", k: [34, 40], o: 4 }, "flag-vn": { a: "Vietnam Flag", b: "1F1FB-1F1F3", k: [4, 51], o: 2 }, "flag-vu": { a: "Vanuatu Flag", b: "1F1FB-1F1FA", k: [4, 52], o: 2 }, "woman-rowing-boat": { a: "Woman Rowing Boat", b: "1F6A3-200D-2640-FE0F", c: "1F6A3-200D-2640", k: [34, 34], o: 4 }, "flag-wf": { a: "Wallis & Futuna Flag", b: "1F1FC-1F1EB", k: [4, 53], o: 2 }, "man-swimming": { obsoletes: "1F3CA", a: "Man Swimming", b: "1F3CA-200D-2642-FE0F", c: "1F3CA-200D-2642", k: [9, 41], o: 4 }, "flag-ws": { a: "Samoa Flag", b: "1F1FC-1F1F8", k: [4, 54], o: 2 }, "woman-swimming": { a: "Woman Swimming", b: "1F3CA-200D-2640-FE0F", c: "1F3CA-200D-2640", k: [9, 35], o: 4 }, "flag-xk": { a: "Kosovo Flag", b: "1F1FD-1F1F0", k: [4, 55], o: 2 }, "flag-ye": { a: "Yemen Flag", b: "1F1FE-1F1EA", k: [4, 56], o: 2 }, "flag-yt": { a: "Mayotte Flag", b: "1F1FE-1F1F9", k: [5, 0], o: 2 }, "flag-za": { a: "South Africa Flag", b: "1F1FF-1F1E6", k: [5, 1], o: 2 }, "flag-zm": { a: "Zambia Flag", b: "1F1FF-1F1F2", k: [5, 2], o: 2 }, "flag-zw": { a: "Zimbabwe Flag", b: "1F1FF-1F1FC", k: [5, 3], o: 2 }, "flag-england": { a: "England Flag", b: "1F3F4-E0067-E0062-E0065-E006E-E0067-E007F", k: [11, 14], o: 5 }, "flag-scotland": { a: "Scotland Flag", b: "1F3F4-E0067-E0062-E0073-E0063-E0074-E007F", k: [11, 15], o: 5 }, "flag-wales": { a: "Wales Flag", b: "1F3F4-E0067-E0062-E0077-E006C-E0073-E007F", k: [11, 16], o: 5 }, "man-biking": { obsoletes: "1F6B4", a: "Man Biking", b: "1F6B4-200D-2642-FE0F", c: "1F6B4-200D-2642", k: [35, 17], o: 4 }, "woman-biking": { a: "Woman Biking", b: "1F6B4-200D-2640-FE0F", c: "1F6B4-200D-2640", k: [35, 11], o: 4 }, "man-mountain-biking": { obsoletes: "1F6B5", a: "Man Mountain Biking", b: "1F6B5-200D-2642-FE0F", c: "1F6B5-200D-2642", k: [35, 35], o: 4 }, "woman-mountain-biking": { a: "Woman Mountain Biking", b: "1F6B5-200D-2640-FE0F", c: "1F6B5-200D-2640", k: [35, 29], o: 4 }, "man-cartwheeling": { a: "Man Cartwheeling", b: "1F938-200D-2642-FE0F", c: "1F938-200D-2642", k: [40, 2], o: 4 }, "woman-cartwheeling": { a: "Woman Cartwheeling", b: "1F938-200D-2640-FE0F", c: "1F938-200D-2640", k: [39, 53], o: 4 }, wrestlers: { a: "Wrestlers", b: "1F93C", k: [40, 35], o: 4 }, "man-wrestling": { a: "Man Wrestling", b: "1F93C-200D-2642-FE0F", c: "1F93C-200D-2642", k: [40, 34], o: 4 }, "woman-wrestling": { a: "Woman Wrestling", b: "1F93C-200D-2640-FE0F", c: "1F93C-200D-2640", k: [40, 33], o: 4 }, "man-playing-water-polo": { a: "Man Playing Water Polo", b: "1F93D-200D-2642-FE0F", c: "1F93D-200D-2642", k: [40, 42], o: 4 }, "woman-playing-water-polo": { a: "Woman Playing Water Polo", b: "1F93D-200D-2640-FE0F", c: "1F93D-200D-2640", k: [40, 36], o: 4 }, "man-playing-handball": { a: "Man Playing Handball", b: "1F93E-200D-2642-FE0F", c: "1F93E-200D-2642", k: [41, 3], o: 4 }, "woman-playing-handball": { a: "Woman Playing Handball", b: "1F93E-200D-2640-FE0F", c: "1F93E-200D-2640", k: [40, 54], o: 4 }, juggling: { a: "Juggling", b: "1F939", k: [40, 26], o: 4 }, "man-juggling": { a: "Man Juggling", b: "1F939-200D-2642-FE0F", c: "1F939-200D-2642", k: [40, 20], o: 4 }, "woman-juggling": { a: "Woman Juggling", b: "1F939-200D-2640-FE0F", c: "1F939-200D-2640", k: [40, 14], o: 4 }, person_in_lotus_position: { obsoleted_by: "1F9D8-200D-2640-FE0F", a: "Person in Lotus Position", b: "1F9D8", k: [49, 31], o: 5 }, man_in_lotus_position: { a: "Man in Lotus Position", b: "1F9D8-200D-2642-FE0F", c: "1F9D8-200D-2642", k: [49, 25], o: 5 }, woman_in_lotus_position: { obsoletes: "1F9D8", a: "Woman in Lotus Position", b: "1F9D8-200D-2640-FE0F", c: "1F9D8-200D-2640", k: [49, 19], o: 5 }, bath: { a: "Bath", b: "1F6C0", j: ["clean", "shower", "bathroom"], k: [36, 17], o: 2 }, sleeping_accommodation: { a: "Sleeping Accommodation", b: "1F6CC", k: [36, 29], o: 2 }, people_holding_hands: { a: "People Holding Hands", b: "1F9D1-200D-1F91D-200D-1F9D1", k: [46, 38], o: 12 }, two_women_holding_hands: { a: "Two Women Holding Hands", b: "1F46D", j: ["pair", "friendship", "couple", "love", "like", "female", "people", "human"], k: [21, 11], n: ["women_holding_hands"], o: 2 }, couple: { a: "Man and Woman Holding Hands", b: "1F46B", j: ["pair", "people", "human", "love", "date", "dating", "like", "affection", "valentines", "marriage"], k: [20, 16], n: ["man_and_woman_holding_hands", "woman_and_man_holding_hands"], o: 2 }, two_men_holding_hands: { a: "Two Men Holding Hands", b: "1F46C", j: ["pair", "couple", "love", "like", "bromance", "friendship", "people", "human"], k: [20, 42], n: ["men_holding_hands"], o: 2 }, couplekiss: { obsoleted_by: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F468", a: "Kiss", b: "1F48F", k: [25, 25], o: 2 }, "woman-kiss-man": { obsoletes: "1F48F", a: "Woman Kiss Man", b: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F468", c: "1F469-200D-2764-200D-1F48B-200D-1F468", k: [20, 7], o: 2 }, "man-kiss-man": { a: "Man Kiss Man", b: "1F468-200D-2764-FE0F-200D-1F48B-200D-1F468", c: "1F468-200D-2764-200D-1F48B-200D-1F468", k: [17, 21], o: 2 }, "woman-kiss-woman": { a: "Woman Kiss Woman", b: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F469", c: "1F469-200D-2764-200D-1F48B-200D-1F469", k: [20, 8], o: 2 }, couple_with_heart: { obsoleted_by: "1F469-200D-2764-FE0F-200D-1F468", a: "Couple with Heart", b: "1F491", k: [25, 27], o: 2 }, "woman-heart-man": { obsoletes: "1F491", a: "Woman Heart Man", b: "1F469-200D-2764-FE0F-200D-1F468", c: "1F469-200D-2764-200D-1F468", k: [20, 5], o: 2 }, "man-heart-man": { a: "Man Heart Man", b: "1F468-200D-2764-FE0F-200D-1F468", c: "1F468-200D-2764-200D-1F468", k: [17, 20], o: 2 }, "woman-heart-woman": { a: "Woman Heart Woman", b: "1F469-200D-2764-FE0F-200D-1F469", c: "1F469-200D-2764-200D-1F469", k: [20, 6], o: 2 }, family: { obsoleted_by: "1F468-200D-1F469-200D-1F466", a: "Family", b: "1F46A", k: [20, 15], n: ["man-woman-boy"], o: 2 }, "man-woman-boy": { obsoletes: "1F46A", a: "Man Woman Boy", b: "1F468-200D-1F469-200D-1F466", k: [15, 33], n: ["family"], o: 2 }, "man-woman-girl": { a: "Man Woman Girl", b: "1F468-200D-1F469-200D-1F467", k: [15, 35], o: 2 }, "man-woman-girl-boy": { a: "Man Woman Girl Boy", b: "1F468-200D-1F469-200D-1F467-200D-1F466", k: [15, 36], o: 2 }, "man-woman-boy-boy": { a: "Man Woman Boy Boy", b: "1F468-200D-1F469-200D-1F466-200D-1F466", k: [15, 34], o: 2 }, "man-woman-girl-girl": { a: "Man Woman Girl Girl", b: "1F468-200D-1F469-200D-1F467-200D-1F467", k: [15, 37], o: 2 }, "man-man-boy": { a: "Man Man Boy", b: "1F468-200D-1F468-200D-1F466", k: [15, 28], o: 2 }, "man-man-girl": { a: "Man Man Girl", b: "1F468-200D-1F468-200D-1F467", k: [15, 30], o: 2 }, "man-man-girl-boy": { a: "Man Man Girl Boy", b: "1F468-200D-1F468-200D-1F467-200D-1F466", k: [15, 31], o: 2 }, "man-man-boy-boy": { a: "Man Man Boy Boy", b: "1F468-200D-1F468-200D-1F466-200D-1F466", k: [15, 29], o: 2 }, "man-man-girl-girl": { a: "Man Man Girl Girl", b: "1F468-200D-1F468-200D-1F467-200D-1F467", k: [15, 32], o: 2 }, "woman-woman-boy": { a: "Woman Woman Boy", b: "1F469-200D-1F469-200D-1F466", k: [18, 18], o: 2 }, "woman-woman-girl": { a: "Woman Woman Girl", b: "1F469-200D-1F469-200D-1F467", k: [18, 20], o: 2 }, "woman-woman-girl-boy": { a: "Woman Woman Girl Boy", b: "1F469-200D-1F469-200D-1F467-200D-1F466", k: [18, 21], o: 2 }, "woman-woman-boy-boy": { a: "Woman Woman Boy Boy", b: "1F469-200D-1F469-200D-1F466-200D-1F466", k: [18, 19], o: 2 }, "woman-woman-girl-girl": { a: "Woman Woman Girl Girl", b: "1F469-200D-1F469-200D-1F467-200D-1F467", k: [18, 22], o: 2 }, "man-boy": { a: "Man Boy", b: "1F468-200D-1F466", k: [15, 24], o: 4 }, "man-boy-boy": { a: "Man Boy Boy", b: "1F468-200D-1F466-200D-1F466", k: [15, 23], o: 4 }, "man-girl": { a: "Man Girl", b: "1F468-200D-1F467", k: [15, 27], o: 4 }, "man-girl-boy": { a: "Man Girl Boy", b: "1F468-200D-1F467-200D-1F466", k: [15, 25], o: 4 }, "man-girl-girl": { a: "Man Girl Girl", b: "1F468-200D-1F467-200D-1F467", k: [15, 26], o: 4 }, "woman-boy": { a: "Woman Boy", b: "1F469-200D-1F466", k: [18, 14], o: 4 }, "woman-boy-boy": { a: "Woman Boy Boy", b: "1F469-200D-1F466-200D-1F466", k: [18, 13], o: 4 }, "woman-girl": { a: "Woman Girl", b: "1F469-200D-1F467", k: [18, 17], o: 4 }, "woman-girl-boy": { a: "Woman Girl Boy", b: "1F469-200D-1F467-200D-1F466", k: [18, 15], o: 4 }, "woman-girl-girl": { a: "Woman Girl Girl", b: "1F469-200D-1F467-200D-1F467", k: [18, 16], o: 4 }, speaking_head_in_silhouette: { a: "Speaking Head in Silhouette", b: "1F5E3-FE0F", c: "1F5E3", k: [30, 25], o: 2 }, bust_in_silhouette: { a: "Bust in Silhouette", b: "1F464", j: ["user", "person", "human"], k: [14, 24], o: 2 }, busts_in_silhouette: { a: "Busts in Silhouette", b: "1F465", j: ["user", "person", "human", "group", "team"], k: [14, 25], o: 2 }, footprints: { a: "Footprints", b: "1F463", j: ["feet", "tracking", "walking", "beach"], k: [14, 23], o: 2 } }, aliases: { raised_hand: "hand", satisfied: "laughing", tshirt: "shirt", hand_with_index_and_middle_fingers_crossed: "crossed_fingers", sign_of_the_horns: "the_horns", grinning_face_with_star_eyes: "star-struck", reversed_hand_with_middle_finger_extended: "middle_finger", thumbsup: "+1", thumbsdown: "-1", punch: "facepunch", grinning_face_with_one_large_and_one_small_eye: "zany_face", shoe: "mans_shoe", smiling_face_with_smiling_eyes_and_hand_covering_mouth: "face_with_hand_over_mouth", face_with_finger_covering_closed_lips: "shushing_face", face_with_one_eyebrow_raised: "face_with_raised_eyebrow", face_with_open_mouth_vomiting: "face_vomiting", cooking: "fried_egg", "flag-cn": "cn", shocked_face_with_exploding_head: "exploding_head", paw_prints: "feet", "flag-de": "de", telephone: "phone", "flag-es": "es", red_car: "car", flipper: "dolphin", "flag-fr": "fr", uk: "gb", "flag-gb": "gb", serious_face_with_symbols_covering_mouth: "face_with_symbols_on_mouth", poop: "hankey", shit: "hankey", honeybee: "bee", staff_of_aesculapius: "medical_symbol", lantern: "izakaya_lantern", open_book: "book", sailboat: "boat", knife: "hocho", "flag-it": "it", heavy_exclamation_mark: "exclamation", "flag-jp": "jp", envelope: "email", "flag-kr": "kr", collision: "boom", pencil: "memo", waxing_gibbous_moon: "moon", mother_christmas: "mrs_claus", sun_small_cloud: "mostly_sunny", sun_behind_cloud: "barely_sunny", sun_behind_rain_cloud: "partly_sunny_rain", lightning_cloud: "lightning", tornado_cloud: "tornado", "flag-ru": "ru", "flag-us": "us", women_holding_hands: "two_women_holding_hands", man_and_woman_holding_hands: "couple", woman_and_man_holding_hands: "couple", men_holding_hands: "two_men_holding_hands", "man-woman-boy": "family", family: "man-woman-boy" } };

// node_modules/stream-chat-react/dist/components/Channel/utils.js
var makeAddNotifications = function(setNotifications, notificationTimeouts) {
  return function(text5, type) {
    if (typeof text5 !== "string" || type !== "success" && type !== "error") {
      return;
    }
    var id = nanoid();
    setNotifications(function(prevNotifications) {
      return __spreadArray(__spreadArray([], prevNotifications, true), [{ id, text: text5, type }], false);
    });
    var timeout = setTimeout(function() {
      return setNotifications(function(prevNotifications) {
        return prevNotifications.filter(function(notification) {
          return notification.id !== id;
        });
      });
    }, 5e3);
    notificationTimeouts.push(timeout);
  };
};

// node_modules/stream-chat-react/dist/utils/getChannel.js
var WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL = {};
var getChannel = function(_a) {
  var channel = _a.channel, client = _a.client, id = _a.id, members = _a.members, options2 = _a.options, type = _a.type;
  return __awaiter(void 0, void 0, void 0, function() {
    var theChannel, originalCid, queryPromise;
    return __generator(this, function(_b) {
      switch (_b.label) {
        case 0:
          if (!channel && !type) {
            throw new Error("Channel or channel type have to be provided to query a channel.");
          }
          theChannel = channel || client.channel(type, id, { members });
          originalCid = (theChannel === null || theChannel === void 0 ? void 0 : theChannel.id) ? theChannel.cid : members && members.length ? generateChannelTempCid(theChannel.type, members) : void 0;
          if (!originalCid) {
            throw new Error("Channel ID or channel members array have to be provided to query a channel.");
          }
          queryPromise = WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid];
          if (!queryPromise)
            return [3, 2];
          return [4, queryPromise];
        case 1:
          _b.sent();
          return [3, 4];
        case 2:
          WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid] = theChannel.watch(options2);
          return [4, WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid]];
        case 3:
          _b.sent();
          delete WATCH_QUERY_IN_PROGRESS_FOR_CHANNEL[originalCid];
          _b.label = 4;
        case 4:
          return [2, theChannel];
      }
    });
  });
};
var generateChannelTempCid = function(channelType, members) {
  if (!members)
    return;
  var membersStr = __spreadArray([], members, true).sort().join(",");
  return "".concat(channelType, ":!members-").concat(membersStr);
};

// node_modules/stream-chat-react/dist/components/Channel/hooks/useChannelContainerClasses.js
var useChannelContainerClasses = function(_a) {
  var _b, _c, _d;
  var customClasses = _a.customClasses;
  var useImageFlagEmojisOnWindows = useChatContext("Channel").useImageFlagEmojisOnWindows;
  return {
    channelClass: (_b = customClasses === null || customClasses === void 0 ? void 0 : customClasses.channel) !== null && _b !== void 0 ? _b : "str-chat-channel str-chat__channel",
    chatClass: (_c = customClasses === null || customClasses === void 0 ? void 0 : customClasses.chat) !== null && _c !== void 0 ? _c : "str-chat",
    chatContainerClass: (_d = customClasses === null || customClasses === void 0 ? void 0 : customClasses.chatContainer) !== null && _d !== void 0 ? _d : "str-chat__container",
    windowsEmojiClass: useImageFlagEmojisOnWindows && navigator.userAgent.match(/Win/) ? "str-chat--windows-flags" : ""
  };
};

// node_modules/stream-chat-react/dist/components/Attachment/attachment-sizing.js
var getImageAttachmentConfiguration = function(attachment, element3) {
  var newUrl = void 0;
  var urlToTest = attachment.image_url || attachment.thumb_url || "";
  if (test(urlToTest, "url")) {
    var url = new URL(urlToTest);
    var resizeDimensions = getSizingRestrictions(url, element3);
    if (resizeDimensions) {
      resizeDimensions.height *= 2;
      resizeDimensions.width *= 2;
      addResizingParamsToUrl(resizeDimensions, url);
    }
    newUrl = url.href;
  }
  return {
    url: newUrl || ""
  };
};
var getVideoAttachmentConfiguration = function(attachment, element3, shouldGenerateVideoThumbnail) {
  var thumbUrl = void 0;
  if (attachment.thumb_url && shouldGenerateVideoThumbnail && test(attachment.thumb_url, "url")) {
    var url = new URL(attachment.thumb_url);
    var resizeDimensions = getSizingRestrictions(url, element3);
    if (resizeDimensions) {
      resizeDimensions.height *= 2;
      resizeDimensions.width *= 2;
      addResizingParamsToUrl(resizeDimensions, url);
    }
    thumbUrl = url.href;
  }
  return {
    thumbUrl,
    url: attachment.asset_url || ""
  };
};
var getSizingRestrictions = function(url, htmlElement) {
  var urlParams = url.searchParams;
  var originalHeight = Number(urlParams.get("oh")) || 1;
  var originalWidth = Number(urlParams.get("ow")) || 1;
  var cssSizeRestriction = getCSSSizeRestrictions(htmlElement);
  var resizeDimensions;
  if ((cssSizeRestriction.maxHeight || cssSizeRestriction.height) && cssSizeRestriction.maxWidth) {
    resizeDimensions = getResizeDimensions(
      originalHeight,
      originalWidth,
      /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */
      cssSizeRestriction.maxHeight || cssSizeRestriction.height,
      cssSizeRestriction.maxWidth
    );
  } else {
    resizeDimensions = void 0;
  }
  return resizeDimensions;
};
var getResizeDimensions = function(originalHeight, originalWidth, maxHeight, maxWidth) {
  return {
    height: Math.round(Math.max(maxHeight, maxWidth / originalWidth * originalHeight)),
    width: Math.round(Math.max(maxHeight, maxWidth / originalHeight * originalWidth))
  };
};
var getCSSSizeRestrictions = function(htmlElement) {
  var computedStylesheet = getComputedStyle(htmlElement);
  var height = getValueRepresentationOfCSSProperty(computedStylesheet.getPropertyValue("height"));
  var maxHeight = getValueRepresentationOfCSSProperty(computedStylesheet.getPropertyValue("max-height"));
  var maxWidth = getValueRepresentationOfCSSProperty(computedStylesheet.getPropertyValue("max-width"));
  if (!((height || maxHeight) && maxWidth)) {
    console.warn("Invalid value set for height/max-height and/or max-width for HTML element, this can cause scrolling issues inside the message list, more info https://getstream.io/chat/docs/sdk/react/message-components/attachment/#image-and-video-sizing");
  }
  return { height, maxHeight, maxWidth };
};
var getValueRepresentationOfCSSProperty = function(property) {
  if (!property.endsWith("px")) {
    return void 0;
  }
  var number2 = parseFloat(property);
  return isNaN(number2) ? void 0 : number2;
};
var addResizingParamsToUrl = function(resizeDimensions, url) {
  url.searchParams.set("h", resizeDimensions.height.toString());
  url.searchParams.set("w", resizeDimensions.width.toString());
};

// node_modules/stream-chat-react/dist/components/Channel/Channel.js
var UnMemoizedChannel = function(props) {
  var propsChannel = props.channel, _a = props.EmptyPlaceholder, EmptyPlaceholder2 = _a === void 0 ? null : _a, LoadingErrorIndicator2 = props.LoadingErrorIndicator, _b = props.LoadingIndicator, LoadingIndicator3 = _b === void 0 ? LoadingChannel : _b;
  var _c = useChatContext("Channel"), contextChannel = _c.channel, channelsQueryState = _c.channelsQueryState, customClasses = _c.customClasses, theme = _c.theme;
  var _d = useChannelContainerClasses({
    customClasses
  }), channelClass = _d.channelClass, chatClass = _d.chatClass;
  var channel = propsChannel || contextChannel;
  var className = clsx_default(chatClass, theme, channelClass);
  if (channelsQueryState.queryInProgress === "reload" && LoadingIndicator3) {
    return import_react110.default.createElement(
      "div",
      { className },
      import_react110.default.createElement(LoadingIndicator3, null)
    );
  }
  if (channelsQueryState.error && LoadingErrorIndicator2) {
    return import_react110.default.createElement(
      "div",
      { className },
      import_react110.default.createElement(LoadingErrorIndicator2, { error: channelsQueryState.error })
    );
  }
  if (!(channel === null || channel === void 0 ? void 0 : channel.cid)) {
    return import_react110.default.createElement("div", { className }, EmptyPlaceholder2);
  }
  return import_react110.default.createElement(ChannelInner, __assign({}, props, { channel, key: channel.cid }));
};
var ChannelInner = function(props) {
  var _a;
  var acceptedFiles = props.acceptedFiles, activeUnreadHandler = props.activeUnreadHandler, channel = props.channel, channelQueryOptions = props.channelQueryOptions, children = props.children, doDeleteMessageRequest = props.doDeleteMessageRequest, doMarkReadRequest = props.doMarkReadRequest, doSendMessageRequest = props.doSendMessageRequest, doUpdateMessageRequest = props.doUpdateMessageRequest, _b = props.dragAndDropWindow, dragAndDropWindow = _b === void 0 ? false : _b, _c = props.emojiData, emojiData = _c === void 0 ? stream_emoji_default : _c, enrichURLForPreviewConfig = props.enrichURLForPreviewConfig, _d = props.initializeOnMount, initializeOnMount = _d === void 0 ? true : _d, _e = props.LoadingErrorIndicator, LoadingErrorIndicator2 = _e === void 0 ? LoadingErrorIndicator : _e, _f = props.LoadingIndicator, LoadingIndicator3 = _f === void 0 ? LoadingChannel : _f, maxNumberOfFiles = props.maxNumberOfFiles, _g = props.multipleUploads, multipleUploads = _g === void 0 ? true : _g, onMentionsClick = props.onMentionsClick, onMentionsHover = props.onMentionsHover, _h = props.optionalMessageInputProps, optionalMessageInputProps = _h === void 0 ? {} : _h, skipMessageDataMemoization = props.skipMessageDataMemoization;
  var _j = useChatContext("Channel"), client = _j.client, customClasses = _j.customClasses, latestMessageDatesByChannels = _j.latestMessageDatesByChannels, mutes = _j.mutes, theme = _j.theme;
  var t = useTranslationContext("Channel").t;
  var _k = useChannelContainerClasses({ customClasses }), channelClass = _k.channelClass, chatClass = _k.chatClass, chatContainerClass = _k.chatContainerClass, windowsEmojiClass = _k.windowsEmojiClass;
  var _l = (0, import_react110.useState)(channel.getConfig()), channelConfig = _l[0], setChannelConfig = _l[1];
  var _m = (0, import_react110.useState)([]), notifications = _m[0], setNotifications = _m[1];
  var _o = (0, import_react110.useState)(), quotedMessage = _o[0], setQuotedMessage = _o[1];
  var notificationTimeouts = [];
  var _p = (0, import_react110.useReducer)(channelReducer, __assign(__assign({}, initialState2), { loading: !channel.initialized })), state = _p[0], dispatch = _p[1];
  var isMounted = useIsMounted();
  var originalTitle = (0, import_react110.useRef)("");
  var lastRead = (0, import_react110.useRef)(/* @__PURE__ */ new Date());
  var online = (0, import_react110.useRef)(true);
  var channelCapabilitiesArray = (_a = channel.data) === null || _a === void 0 ? void 0 : _a.own_capabilities;
  var emojiConfig = {
    commonEmoji,
    defaultMinimalEmojis,
    emojiData,
    emojiSetDef
  };
  var throttledCopyStateFromChannel = (0, import_lodash5.default)(function() {
    return dispatch({ channel, type: "copyStateFromChannelOnEvent" });
  }, 500, {
    leading: true,
    trailing: true
  });
  var markRead = function() {
    if (channel.disconnected || !(channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events)) {
      return;
    }
    lastRead.current = /* @__PURE__ */ new Date();
    if (doMarkReadRequest) {
      doMarkReadRequest(channel);
    } else {
      logChatPromiseExecution(channel.markRead(), "mark read");
    }
    if (activeUnreadHandler) {
      activeUnreadHandler(0, originalTitle.current);
    } else if (originalTitle.current) {
      document.title = originalTitle.current;
    }
  };
  var markReadThrottled = (0, import_lodash5.default)(markRead, 500, { leading: true, trailing: true });
  var handleEvent = function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var mainChannelUpdated, unread, messageDate, cid, oldestID;
      var _a2, _b2, _c2, _d2, _e2, _f2, _g2, _h2, _j2, _k2, _l2;
      return __generator(this, function(_m2) {
        switch (_m2.label) {
          case 0:
            if (event.message) {
              dispatch({
                channel,
                message: event.message,
                type: "updateThreadOnEvent"
              });
            }
            if (event.type === "user.watching.start" || event.type === "user.watching.stop")
              return [
                2
                /*return*/
              ];
            if (event.type === "typing.start" || event.type === "typing.stop") {
              return [2, dispatch({ channel, type: "setTyping" })];
            }
            if (event.type === "connection.changed" && typeof event.online === "boolean") {
              online.current = event.online;
            }
            if (event.type === "message.new") {
              mainChannelUpdated = true;
              if (((_a2 = event.message) === null || _a2 === void 0 ? void 0 : _a2.parent_id) && !((_b2 = event.message) === null || _b2 === void 0 ? void 0 : _b2.show_in_channel)) {
                mainChannelUpdated = false;
              }
              if (mainChannelUpdated && ((_d2 = (_c2 = event.message) === null || _c2 === void 0 ? void 0 : _c2.user) === null || _d2 === void 0 ? void 0 : _d2.id) !== client.userID) {
                if (!document.hidden) {
                  markReadThrottled();
                } else if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events) && !channel.muteStatus().muted) {
                  unread = channel.countUnread(lastRead.current);
                  if (activeUnreadHandler) {
                    activeUnreadHandler(unread, originalTitle.current);
                  } else {
                    document.title = "(".concat(unread, ") ").concat(originalTitle.current);
                  }
                }
              }
              if (((_f2 = (_e2 = event.message) === null || _e2 === void 0 ? void 0 : _e2.user) === null || _f2 === void 0 ? void 0 : _f2.id) === client.userID && ((_g2 = event === null || event === void 0 ? void 0 : event.message) === null || _g2 === void 0 ? void 0 : _g2.created_at) && ((_h2 = event === null || event === void 0 ? void 0 : event.message) === null || _h2 === void 0 ? void 0 : _h2.cid)) {
                messageDate = new Date(event.message.created_at);
                cid = event.message.cid;
                if (!latestMessageDatesByChannels[cid] || latestMessageDatesByChannels[cid].getTime() < messageDate.getTime()) {
                  latestMessageDatesByChannels[cid] = messageDate;
                }
              }
            }
            if (!(event.type === "user.deleted"))
              return [3, 2];
            oldestID = (_l2 = (_k2 = (_j2 = channel.state) === null || _j2 === void 0 ? void 0 : _j2.messages) === null || _k2 === void 0 ? void 0 : _k2[0]) === null || _l2 === void 0 ? void 0 : _l2.id;
            return [4, channel.query({
              messages: { id_lt: oldestID, limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE },
              watchers: { limit: DEFAULT_NEXT_CHANNEL_PAGE_SIZE }
            })];
          case 1:
            _m2.sent();
            _m2.label = 2;
          case 2:
            throttledCopyStateFromChannel();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  (0, import_react110.useLayoutEffect)(function() {
    var errored = false;
    var done = false;
    var onVisibilityChange = function() {
      if (!document.hidden)
        markRead();
    };
    (function() {
      return __awaiter(void 0, void 0, void 0, function() {
        var members, _i, _a2, member, userId, _b2, user, user_id, config, e_1;
        var _c2, _d2, _e2;
        return __generator(this, function(_f2) {
          switch (_f2.label) {
            case 0:
              if (!(!channel.initialized && initializeOnMount))
                return [3, 4];
              _f2.label = 1;
            case 1:
              _f2.trys.push([1, 3, , 4]);
              members = [];
              if (!channel.id && ((_c2 = channel.data) === null || _c2 === void 0 ? void 0 : _c2.members)) {
                for (_i = 0, _a2 = channel.data.members; _i < _a2.length; _i++) {
                  member = _a2[_i];
                  userId = void 0;
                  if (typeof member === "string") {
                    userId = member;
                  } else if (typeof member === "object") {
                    _b2 = member, user = _b2.user, user_id = _b2.user_id;
                    userId = user_id || (user === null || user === void 0 ? void 0 : user.id);
                  }
                  if (userId) {
                    members.push(userId);
                  }
                }
              }
              return [4, getChannel({ channel, client, members, options: channelQueryOptions })];
            case 2:
              _f2.sent();
              config = channel.getConfig();
              setChannelConfig(config);
              return [3, 4];
            case 3:
              e_1 = _f2.sent();
              dispatch({ error: e_1, type: "setError" });
              errored = true;
              return [3, 4];
            case 4:
              done = true;
              originalTitle.current = document.title;
              if (!errored) {
                dispatch({
                  channel,
                  hasMore: hasMoreMessagesProbably(channel.state.messages.length, (_e2 = (_d2 = channelQueryOptions === null || channelQueryOptions === void 0 ? void 0 : channelQueryOptions.messages) === null || _d2 === void 0 ? void 0 : _d2.limit) !== null && _e2 !== void 0 ? _e2 : DEFAULT_INITIAL_CHANNEL_PAGE_SIZE),
                  type: "initStateFromChannel"
                });
                if (channel.countUnread() > 0)
                  markRead();
                document.addEventListener("visibilitychange", onVisibilityChange);
                client.on("connection.changed", handleEvent);
                client.on("connection.recovered", handleEvent);
                client.on("user.updated", handleEvent);
                client.on("user.deleted", handleEvent);
                channel.on(handleEvent);
              }
              return [
                2
                /*return*/
              ];
          }
        });
      });
    })();
    return function() {
      if (errored || !done)
        return;
      document.removeEventListener("visibilitychange", onVisibilityChange);
      channel === null || channel === void 0 ? void 0 : channel.off(handleEvent);
      client.off("connection.changed", handleEvent);
      client.off("connection.recovered", handleEvent);
      client.off("user.updated", handleEvent);
      client.off("user.deleted", handleEvent);
      notificationTimeouts.forEach(clearTimeout);
    };
  }, [
    channel.cid,
    channelQueryOptions,
    doMarkReadRequest,
    channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.read_events,
    initializeOnMount
  ]);
  (0, import_react110.useEffect)(function() {
    var _a2;
    if (!state.thread)
      return;
    var message = (_a2 = state.messages) === null || _a2 === void 0 ? void 0 : _a2.find(function(m) {
      var _a3;
      return m.id === ((_a3 = state.thread) === null || _a3 === void 0 ? void 0 : _a3.id);
    });
    if (message)
      dispatch({ message, type: "setThread" });
  }, [state.messages, state.thread]);
  var addNotification = makeAddNotifications(setNotifications, notificationTimeouts);
  var loadMoreFinished = (0, import_lodash4.default)(function(hasMore, messages) {
    if (!isMounted.current)
      return;
    dispatch({ hasMore, messages, type: "loadMoreFinished" });
  }, 2e3, {
    leading: true,
    trailing: true
  });
  var loadMore = function(limit) {
    if (limit === void 0) {
      limit = DEFAULT_NEXT_CHANNEL_PAGE_SIZE;
    }
    return __awaiter(void 0, void 0, void 0, function() {
      var oldestMessage, oldestID, perPage, queryResponse, e_2, hasMoreMessages;
      var _a2;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (!online.current || !window.navigator.onLine || !state.hasMore)
              return [2, 0];
            oldestMessage = (_a2 = state === null || state === void 0 ? void 0 : state.messages) === null || _a2 === void 0 ? void 0 : _a2[0];
            if (state.loadingMore || state.loadingMoreNewer || (oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.status) !== "received") {
              return [2, 0];
            }
            dispatch({ loadingMore: true, type: "setLoadingMore" });
            oldestID = oldestMessage === null || oldestMessage === void 0 ? void 0 : oldestMessage.id;
            perPage = limit;
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            return [4, channel.query({
              messages: { id_lt: oldestID, limit: perPage },
              watchers: { limit: perPage }
            })];
          case 2:
            queryResponse = _b2.sent();
            return [3, 4];
          case 3:
            e_2 = _b2.sent();
            console.warn("message pagination request failed with error", e_2);
            dispatch({ loadingMore: false, type: "setLoadingMore" });
            return [2, 0];
          case 4:
            hasMoreMessages = queryResponse.messages.length === perPage;
            loadMoreFinished(hasMoreMessages, channel.state.messages);
            return [2, queryResponse.messages.length];
        }
      });
    });
  };
  var loadMoreNewer = function(limit) {
    if (limit === void 0) {
      limit = 100;
    }
    return __awaiter(void 0, void 0, void 0, function() {
      var newestMessage, newestId, perPage, queryResponse, e_3, hasMoreNewer;
      var _a2, _b2;
      return __generator(this, function(_c2) {
        switch (_c2.label) {
          case 0:
            if (!online.current || !window.navigator.onLine)
              return [2, 0];
            newestMessage = (_a2 = state === null || state === void 0 ? void 0 : state.messages) === null || _a2 === void 0 ? void 0 : _a2[((_b2 = state === null || state === void 0 ? void 0 : state.messages) === null || _b2 === void 0 ? void 0 : _b2.length) - 1];
            if (state.loadingMore || state.loadingMoreNewer)
              return [2, 0];
            dispatch({ loadingMoreNewer: true, type: "setLoadingMoreNewer" });
            newestId = newestMessage === null || newestMessage === void 0 ? void 0 : newestMessage.id;
            perPage = limit;
            _c2.label = 1;
          case 1:
            _c2.trys.push([1, 3, , 4]);
            return [4, channel.query({
              messages: { id_gt: newestId, limit: perPage },
              watchers: { limit: perPage }
            })];
          case 2:
            queryResponse = _c2.sent();
            return [3, 4];
          case 3:
            e_3 = _c2.sent();
            console.warn("message pagination request failed with error", e_3);
            dispatch({ loadingMoreNewer: false, type: "setLoadingMoreNewer" });
            return [2, 0];
          case 4:
            hasMoreNewer = channel.state.messages !== channel.state.latestMessages;
            dispatch({ hasMoreNewer, messages: channel.state.messages, type: "loadMoreNewerFinished" });
            return [2, queryResponse.messages.length];
        }
      });
    });
  };
  var clearHighlightedMessageTimeoutId = (0, import_react110.useRef)(null);
  var jumpToMessage = function(messageId, messageLimit) {
    if (messageLimit === void 0) {
      messageLimit = 100;
    }
    return __awaiter(void 0, void 0, void 0, function() {
      var indexOfMessage, hasMoreMessages;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            dispatch({ loadingMore: true, type: "setLoadingMore" });
            return [4, channel.state.loadMessageIntoState(messageId, void 0, messageLimit)];
          case 1:
            _a2.sent();
            indexOfMessage = channel.state.messages.findIndex(function(message) {
              return message.id === messageId;
            });
            hasMoreMessages = indexOfMessage >= Math.floor(messageLimit / 2);
            loadMoreFinished(hasMoreMessages, channel.state.messages);
            dispatch({
              hasMoreNewer: channel.state.messages !== channel.state.latestMessages,
              highlightedMessageId: messageId,
              type: "jumpToMessageFinished"
            });
            if (clearHighlightedMessageTimeoutId.current) {
              clearTimeout(clearHighlightedMessageTimeoutId.current);
            }
            clearHighlightedMessageTimeoutId.current = setTimeout(function() {
              clearHighlightedMessageTimeoutId.current = null;
              dispatch({ type: "clearHighlightedMessage" });
            }, 500);
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var jumpToLatestMessage = function() {
    return __awaiter(void 0, void 0, void 0, function() {
      var hasMoreOlder;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            return [4, channel.state.loadMessageIntoState("latest")];
          case 1:
            _a2.sent();
            hasMoreOlder = channel.state.messages.length >= 25;
            loadMoreFinished(hasMoreOlder, channel.state.messages);
            dispatch({
              type: "jumpToLatestMessage"
            });
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var deleteMessage = (0, import_react110.useCallback)(function(message) {
    return __awaiter(void 0, void 0, void 0, function() {
      var deletedMessage, result;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!(message === null || message === void 0 ? void 0 : message.id)) {
              throw new Error("Cannot delete a message - missing message ID.");
            }
            if (!doDeleteMessageRequest)
              return [3, 2];
            return [4, doDeleteMessageRequest(message)];
          case 1:
            deletedMessage = _a2.sent();
            return [3, 4];
          case 2:
            return [4, client.deleteMessage(message.id)];
          case 3:
            result = _a2.sent();
            deletedMessage = result.message;
            _a2.label = 4;
          case 4:
            return [2, deletedMessage];
        }
      });
    });
  }, [client, doDeleteMessageRequest]);
  var updateMessage = function(updatedMessage) {
    channel.state.addMessageSorted(updatedMessage, true);
    dispatch({
      channel,
      parentId: state.thread && updatedMessage.parent_id,
      type: "copyMessagesFromChannel"
    });
  };
  var isUserResponseArray = function(output) {
    var _a2;
    return ((_a2 = output[0]) === null || _a2 === void 0 ? void 0 : _a2.id) != null;
  };
  var doSendMessage = function(message, customMessageData, options2) {
    return __awaiter(void 0, void 0, void 0, function() {
      var attachments, id, _a2, mentioned_users, parent_id, text5, mentions, messageData, messageResponse, existingMessage, i, msg, responseTimestamp, existingMessageTimestamp, responseIsTheNewest, error_1, stringError, parsedError;
      var _b2, _c2;
      return __generator(this, function(_d2) {
        switch (_d2.label) {
          case 0:
            attachments = message.attachments, id = message.id, _a2 = message.mentioned_users, mentioned_users = _a2 === void 0 ? [] : _a2, parent_id = message.parent_id, text5 = message.text;
            mentions = isUserResponseArray(mentioned_users) ? mentioned_users.map(function(_a3) {
              var id2 = _a3.id;
              return id2;
            }) : mentioned_users;
            messageData = __assign({ attachments, id, mentioned_users: mentions, parent_id, quoted_message_id: parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id) ? quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.id : void 0, text: text5 }, customMessageData);
            _d2.label = 1;
          case 1:
            _d2.trys.push([1, 6, , 7]);
            messageResponse = void 0;
            if (!doSendMessageRequest)
              return [3, 3];
            return [4, doSendMessageRequest(channel.cid, messageData, options2)];
          case 2:
            messageResponse = _d2.sent();
            return [3, 5];
          case 3:
            return [4, channel.sendMessage(messageData, options2)];
          case 4:
            messageResponse = _d2.sent();
            _d2.label = 5;
          case 5:
            existingMessage = void 0;
            for (i = channel.state.messages.length - 1; i >= 0; i--) {
              msg = channel.state.messages[i];
              if (msg.id === messageData.id) {
                existingMessage = msg;
                break;
              }
            }
            responseTimestamp = new Date(((_b2 = messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) === null || _b2 === void 0 ? void 0 : _b2.updated_at) || 0).getTime();
            existingMessageTimestamp = ((_c2 = existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.updated_at) === null || _c2 === void 0 ? void 0 : _c2.getTime()) || 0;
            responseIsTheNewest = responseTimestamp > existingMessageTimestamp;
            if ((messageResponse === null || messageResponse === void 0 ? void 0 : messageResponse.message) && (responseIsTheNewest || (existingMessage === null || existingMessage === void 0 ? void 0 : existingMessage.status) === "sending")) {
              updateMessage(__assign(__assign({}, messageResponse.message), { status: "received" }));
            }
            if (quotedMessage && parent_id === (quotedMessage === null || quotedMessage === void 0 ? void 0 : quotedMessage.parent_id))
              setQuotedMessage(void 0);
            return [3, 7];
          case 6:
            error_1 = _d2.sent();
            stringError = JSON.stringify(error_1);
            parsedError = stringError ? JSON.parse(stringError) : {};
            updateMessage(__assign(__assign({}, message), { error: parsedError, errorStatusCode: parsedError.status || void 0, status: "failed" }));
            return [3, 7];
          case 7:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var sendMessage = function(_a2, customMessageData, options2) {
    var _b2 = _a2.attachments, attachments = _b2 === void 0 ? [] : _b2, _c2 = _a2.mentioned_users, mentioned_users = _c2 === void 0 ? [] : _c2, parent = _a2.parent, _d2 = _a2.text, text5 = _d2 === void 0 ? "" : _d2;
    return __awaiter(void 0, void 0, void 0, function() {
      var messagePreview;
      var _e2;
      return __generator(this, function(_f2) {
        switch (_f2.label) {
          case 0:
            channel.state.filterErrorMessages();
            messagePreview = __assign({ __html: text5, attachments, created_at: /* @__PURE__ */ new Date(), html: text5, id: (_e2 = customMessageData === null || customMessageData === void 0 ? void 0 : customMessageData.id) !== null && _e2 !== void 0 ? _e2 : "".concat(client.userID, "-").concat(nanoid()), mentioned_users, reactions: [], status: "sending", text: text5, type: "regular", user: client.user }, (parent === null || parent === void 0 ? void 0 : parent.id) ? { parent_id: parent.id } : null);
            updateMessage(messagePreview);
            return [4, doSendMessage(messagePreview, customMessageData, options2)];
          case 1:
            _f2.sent();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var retrySendMessage = function(message) {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            updateMessage(__assign(__assign({}, message), { errorStatusCode: void 0, status: "sending" }));
            if (message.attachments) {
              message.attachments = message.attachments.filter(function(attachment) {
                return !attachment.og_scrape_url;
              });
            }
            return [4, doSendMessage(message)];
          case 1:
            _a2.sent();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var removeMessage = function(message) {
    channel.state.removeMessage(message);
    dispatch({
      channel,
      parentId: state.thread && message.parent_id,
      type: "copyMessagesFromChannel"
    });
  };
  var openThread = function(message, event) {
    event === null || event === void 0 ? void 0 : event.preventDefault();
    setQuotedMessage(function(current) {
      if ((current === null || current === void 0 ? void 0 : current.parent_id) !== (message === null || message === void 0 ? void 0 : message.parent_id)) {
        return void 0;
      } else {
        return current;
      }
    });
    dispatch({ channel, message, type: "openThread" });
  };
  var closeThread = function(event) {
    event === null || event === void 0 ? void 0 : event.preventDefault();
    dispatch({ type: "closeThread" });
  };
  var loadMoreThreadFinished = (0, import_lodash4.default)(function(threadHasMore, threadMessages) {
    dispatch({
      threadHasMore,
      threadMessages,
      type: "loadMoreThreadFinished"
    });
  }, 2e3, { leading: true, trailing: true });
  var loadMoreThread = function(limit) {
    if (limit === void 0) {
      limit = DEFAULT_THREAD_PAGE_SIZE;
    }
    return __awaiter(void 0, void 0, void 0, function() {
      var parentID, oldMessages, oldestMessageID, queryResponse, threadHasMoreMessages, newThreadMessages, e_4;
      var _a2;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            if (state.threadLoadingMore || !state.thread)
              return [
                2
                /*return*/
              ];
            dispatch({ type: "startLoadingThread" });
            parentID = state.thread.id;
            if (!parentID) {
              return [2, dispatch({ type: "closeThread" })];
            }
            oldMessages = channel.state.threads[parentID] || [];
            oldestMessageID = (_a2 = oldMessages[0]) === null || _a2 === void 0 ? void 0 : _a2.id;
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            return [4, channel.getReplies(parentID, {
              id_lt: oldestMessageID,
              limit
            })];
          case 2:
            queryResponse = _b2.sent();
            threadHasMoreMessages = hasMoreMessagesProbably(queryResponse.messages.length, limit);
            newThreadMessages = channel.state.threads[parentID] || [];
            loadMoreThreadFinished(threadHasMoreMessages, newThreadMessages);
            return [3, 4];
          case 3:
            e_4 = _b2.sent();
            loadMoreThreadFinished(false, oldMessages);
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var onMentionsHoverOrClick = useMentionsHandlers(onMentionsHover, onMentionsClick);
  var editMessage = useEditMessageHandler(doUpdateMessageRequest);
  var typing = state.typing, restState = __rest(state, ["typing"]);
  var channelStateContextValue = useCreateChannelStateContext(__assign(__assign({}, restState), { acceptedFiles, channel, channelCapabilitiesArray, channelConfig, debounceURLEnrichmentMs: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.debounceURLEnrichmentMs, dragAndDropWindow, enrichURLForPreview: props.enrichURLForPreview, findURLFn: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn, giphyVersion: props.giphyVersion || "fixed_height", imageAttachmentSizeHandler: props.imageAttachmentSizeHandler || getImageAttachmentConfiguration, maxNumberOfFiles, multipleUploads, mutes, notifications, onLinkPreviewDismissed: enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed, quotedMessage, shouldGenerateVideoThumbnail: props.shouldGenerateVideoThumbnail || true, videoAttachmentSizeHandler: props.videoAttachmentSizeHandler || getVideoAttachmentConfiguration, watcher_count: state.watcherCount }));
  var channelActionContextValue = (0, import_react110.useMemo)(function() {
    return {
      addNotification,
      closeThread,
      deleteMessage,
      dispatch,
      editMessage,
      jumpToLatestMessage,
      jumpToMessage,
      loadMore,
      loadMoreNewer,
      loadMoreThread,
      onMentionsClick: onMentionsHoverOrClick,
      onMentionsHover: onMentionsHoverOrClick,
      openThread,
      removeMessage,
      retrySendMessage,
      sendMessage,
      setQuotedMessage,
      skipMessageDataMemoization,
      updateMessage
    };
  }, [
    channel.cid,
    deleteMessage,
    enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.findURLFn,
    enrichURLForPreviewConfig === null || enrichURLForPreviewConfig === void 0 ? void 0 : enrichURLForPreviewConfig.onLinkPreviewDismissed,
    loadMore,
    loadMoreNewer,
    quotedMessage,
    jumpToMessage,
    jumpToLatestMessage
  ]);
  var componentContextValue = (0, import_react110.useMemo)(function() {
    return {
      Attachment: props.Attachment || Attachment,
      AttachmentPreviewList: props.AttachmentPreviewList,
      AutocompleteSuggestionHeader: props.AutocompleteSuggestionHeader,
      AutocompleteSuggestionItem: props.AutocompleteSuggestionItem,
      AutocompleteSuggestionList: props.AutocompleteSuggestionList,
      Avatar: props.Avatar,
      BaseImage: props.BaseImage,
      CooldownTimer: props.CooldownTimer,
      DateSeparator: props.DateSeparator,
      EditMessageInput: props.EditMessageInput,
      EmojiIcon: props.EmojiIcon,
      EmptyStateIndicator: props.EmptyStateIndicator,
      FileUploadIcon: props.FileUploadIcon,
      GiphyPreviewMessage: props.GiphyPreviewMessage,
      HeaderComponent: props.HeaderComponent,
      Input: props.Input,
      LinkPreviewList: props.LinkPreviewList,
      LoadingIndicator: props.LoadingIndicator,
      Message: props.Message || MessageSimple,
      MessageDeleted: props.MessageDeleted,
      MessageListNotifications: props.MessageListNotifications,
      MessageNotification: props.MessageNotification,
      MessageOptions: props.MessageOptions,
      MessageRepliesCountButton: props.MessageRepliesCountButton,
      MessageStatus: props.MessageStatus,
      MessageSystem: props.MessageSystem,
      MessageTimestamp: props.MessageTimestamp,
      ModalGallery: props.ModalGallery,
      PinIndicator: props.PinIndicator,
      QuotedMessage: props.QuotedMessage,
      QuotedMessagePreview: props.QuotedMessagePreview,
      ReactionSelector: props.ReactionSelector,
      ReactionsList: props.ReactionsList,
      SendButton: props.SendButton,
      ThreadHead: props.ThreadHead,
      ThreadHeader: props.ThreadHeader,
      ThreadStart: props.ThreadStart,
      TriggerProvider: props.TriggerProvider,
      TypingIndicator: props.TypingIndicator,
      VirtualMessage: props.VirtualMessage
    };
  }, []);
  var emojiContextValue = (0, import_react110.useMemo)(function() {
    return {
      Emoji: props.Emoji,
      emojiConfig,
      EmojiIndex: props.EmojiIndex,
      EmojiPicker: props.EmojiPicker
    };
  }, []);
  var typingContextValue = useCreateTypingContext({
    typing
  });
  var className = clsx_default(chatClass, theme, channelClass);
  if (state.error) {
    return import_react110.default.createElement(
      "div",
      { className },
      import_react110.default.createElement(LoadingErrorIndicator2, { error: state.error })
    );
  }
  if (state.loading) {
    return import_react110.default.createElement(
      "div",
      { className },
      import_react110.default.createElement(LoadingIndicator3, null)
    );
  }
  if (!channel.watch) {
    return import_react110.default.createElement(
      "div",
      { className },
      import_react110.default.createElement("div", null, t("Channel Missing"))
    );
  }
  return import_react110.default.createElement(
    "div",
    { className: clsx_default(className, windowsEmojiClass) },
    import_react110.default.createElement(
      ChannelStateProvider,
      { value: channelStateContextValue },
      import_react110.default.createElement(
        ChannelActionProvider,
        { value: channelActionContextValue },
        import_react110.default.createElement(
          ComponentProvider,
          { value: componentContextValue },
          import_react110.default.createElement(
            EmojiProvider,
            { value: emojiContextValue },
            import_react110.default.createElement(
              TypingProvider,
              { value: typingContextValue },
              import_react110.default.createElement(
                "div",
                { className: "".concat(chatContainerClass) },
                dragAndDropWindow && import_react110.default.createElement(DropzoneProvider, __assign({}, optionalMessageInputProps), children),
                !dragAndDropWindow && import_react110.default.createElement(import_react110.default.Fragment, null, children)
              )
            )
          )
        )
      )
    )
  );
};
var Channel = import_react110.default.memo(UnMemoizedChannel);

// node_modules/stream-chat-react/dist/components/ChannelHeader/ChannelHeader.js
var import_react114 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelHeader/icons.js
var import_react111 = __toESM(require_react());
var MenuIcon = function(_a) {
  var title = _a.title;
  var t = useTranslationContext("MenuIcon").t;
  return import_react111.default.createElement(
    "svg",
    { "data-testid": "menu-icon", viewBox: "0 0 448 512", xmlns: "http://www.w3.org/2000/svg" },
    import_react111.default.createElement("title", null, title !== null && title !== void 0 ? title : t("Menu")),
    import_react111.default.createElement("path", { d: "M0 88C0 74.75 10.75 64 24 64H424C437.3 64 448 74.75 448 88C448 101.3 437.3 112 424 112H24C10.75 112 0 101.3 0 88zM0 248C0 234.7 10.75 224 24 224H424C437.3 224 448 234.7 448 248C448 261.3 437.3 272 424 272H24C10.75 272 0 261.3 0 248zM424 432H24C10.75 432 0 421.3 0 408C0 394.7 10.75 384 24 384H424C437.3 384 448 394.7 448 408C448 421.3 437.3 432 424 432z", fill: "currentColor" })
  );
};

// node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useChannelPreviewInfo.js
var import_react113 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelPreview/utils.js
var import_react112 = __toESM(require_react());
var renderPreviewText = function(text5) {
  return import_react112.default.createElement(ReactMarkdown, { skipHtml: true }, text5);
};
var getLatestMessagePreview = function(channel, t, userLanguage) {
  var _a, _b;
  if (userLanguage === void 0) {
    userLanguage = "en";
  }
  var latestMessage = channel.state.messages[channel.state.messages.length - 1];
  var previewTextToRender = ((_a = latestMessage === null || latestMessage === void 0 ? void 0 : latestMessage.i18n) === null || _a === void 0 ? void 0 : _a["".concat(userLanguage, "_text")]) || (latestMessage === null || latestMessage === void 0 ? void 0 : latestMessage.text);
  if (!latestMessage) {
    return t("Nothing yet...");
  }
  if (latestMessage.deleted_at) {
    return t("Message deleted");
  }
  if (previewTextToRender) {
    var renderedText = renderPreviewText(previewTextToRender);
    return renderedText;
  }
  if (latestMessage.command) {
    return "/".concat(latestMessage.command);
  }
  if ((_b = latestMessage.attachments) === null || _b === void 0 ? void 0 : _b.length) {
    return t("🏙 Attachment...");
  }
  return t("Empty message...");
};
var getDisplayTitle = function(channel, currentUser) {
  var _a, _b;
  var title = (_a = channel.data) === null || _a === void 0 ? void 0 : _a.name;
  var members = Object.values(channel.state.members);
  if (!title && members.length === 2) {
    var otherMember = members.find(function(member) {
      var _a2;
      return ((_a2 = member.user) === null || _a2 === void 0 ? void 0 : _a2.id) !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);
    });
    if ((_b = otherMember === null || otherMember === void 0 ? void 0 : otherMember.user) === null || _b === void 0 ? void 0 : _b.name) {
      title = otherMember.user.name;
    }
  }
  return title;
};
var getDisplayImage = function(channel, currentUser) {
  var _a, _b;
  var image2 = (_a = channel.data) === null || _a === void 0 ? void 0 : _a.image;
  var members = Object.values(channel.state.members);
  if (!image2 && members.length === 2) {
    var otherMember = members.find(function(member) {
      var _a2;
      return ((_a2 = member.user) === null || _a2 === void 0 ? void 0 : _a2.id) !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);
    });
    if ((_b = otherMember === null || otherMember === void 0 ? void 0 : otherMember.user) === null || _b === void 0 ? void 0 : _b.image) {
      image2 = otherMember.user.image;
    }
  }
  return image2;
};

// node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useChannelPreviewInfo.js
var useChannelPreviewInfo = function(props) {
  var channel = props.channel, overrideImage = props.overrideImage, overrideTitle = props.overrideTitle;
  var client = useChatContext("ChannelPreview").client;
  var _a = (0, import_react113.useState)(getDisplayTitle(channel, client.user)), displayTitle = _a[0], setDisplayTitle = _a[1];
  var _b = (0, import_react113.useState)(getDisplayImage(channel, client.user)), displayImage = _b[0], setDisplayImage = _b[1];
  (0, import_react113.useEffect)(function() {
    var handleEvent = function() {
      setDisplayTitle(function(displayTitle2) {
        var newDisplayTitle = getDisplayTitle(channel, client.user);
        return displayTitle2 !== newDisplayTitle ? newDisplayTitle : displayTitle2;
      });
      setDisplayImage(function(displayImage2) {
        var newDisplayImage = getDisplayImage(channel, client.user);
        return displayImage2 !== newDisplayImage ? newDisplayImage : displayImage2;
      });
    };
    client.on("user.updated", handleEvent);
    return function() {
      client.off("user.updated", handleEvent);
    };
  }, []);
  return {
    displayImage: overrideImage || displayImage,
    displayTitle: overrideTitle || displayTitle
  };
};

// node_modules/stream-chat-react/dist/components/ChannelHeader/ChannelHeader.js
var UnMemoizedChannelHeader = function(props) {
  var _a = props.Avatar, Avatar2 = _a === void 0 ? Avatar : _a, _b = props.MenuIcon, MenuIcon3 = _b === void 0 ? MenuIcon : _b, overrideImage = props.image, live = props.live, overrideTitle = props.title;
  var _c = useChannelStateContext("ChannelHeader"), channel = _c.channel, watcher_count = _c.watcher_count;
  var openMobileNav = useChatContext("ChannelHeader").openMobileNav;
  var t = useTranslationContext("ChannelHeader").t;
  var _d = useChannelPreviewInfo({
    channel,
    overrideImage,
    overrideTitle
  }), displayImage = _d.displayImage, displayTitle = _d.displayTitle;
  var _e = (channel === null || channel === void 0 ? void 0 : channel.data) || {}, member_count = _e.member_count, subtitle = _e.subtitle;
  return import_react114.default.createElement(
    "div",
    { className: "str-chat__header-livestream str-chat__channel-header" },
    import_react114.default.createElement(
      "button",
      { "aria-label": "Menu", className: "str-chat__header-hamburger", onClick: openMobileNav },
      import_react114.default.createElement(MenuIcon3, null)
    ),
    import_react114.default.createElement(Avatar2, { image: displayImage, name: displayTitle, shape: "rounded", size: (channel === null || channel === void 0 ? void 0 : channel.type) === "commerce" ? 60 : 40 }),
    import_react114.default.createElement(
      "div",
      { className: "str-chat__header-livestream-left str-chat__channel-header-end" },
      import_react114.default.createElement(
        "p",
        { className: "str-chat__header-livestream-left--title str-chat__channel-header-title" },
        displayTitle,
        " ",
        live && import_react114.default.createElement("span", { className: "str-chat__header-livestream-left--livelabel" }, t("live"))
      ),
      subtitle && import_react114.default.createElement("p", { className: "str-chat__header-livestream-left--subtitle" }, subtitle),
      import_react114.default.createElement(
        "p",
        { className: "str-chat__header-livestream-left--members str-chat__channel-header-info" },
        !live && !!member_count && member_count > 0 && import_react114.default.createElement(
          import_react114.default.Fragment,
          null,
          t("{{ memberCount }} members", {
            memberCount: member_count
          }),
          ",",
          " "
        ),
        t("{{ watcherCount }} online", { watcherCount: watcher_count })
      )
    )
  );
};
var ChannelHeader = import_react114.default.memo(UnMemoizedChannelHeader);

// node_modules/stream-chat-react/dist/components/ChannelList/ChannelList.js
var import_react145 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelList/ChannelListMessenger.js
var import_react117 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChatDown/ChatDown.js
var import_react116 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChatDown/icons.js
var import_react115 = __toESM(require_react());
var ConnectionErrorIcon = function() {
  return import_react115.default.createElement(
    "svg",
    { height: "78px", version: "1.1", viewBox: "0 0 78 78", width: "78px", xmlns: "http://www.w3.org/2000/svg" },
    import_react115.default.createElement("title", null, "Connection Error"),
    import_react115.default.createElement(
      "g",
      { fill: "none", fillRule: "evenodd", id: "Interactions", stroke: "none", strokeWidth: "1" },
      import_react115.default.createElement(
        "g",
        { fill: "#CF1F25", id: "Connection-Error-_-Connectivity", transform: "translate(-270.000000, -30.000000)" },
        import_react115.default.createElement(
          "g",
          { id: "109-network-connection", transform: "translate(270.000000, 30.000000)" },
          import_react115.default.createElement("path", { d: "M66.4609744,11.414231 C81.6225232,26.5757798 81.6225232,51.157545 66.4609744,66.3188467 C51.2994256,81.4803954 26.7176604,81.4803954 11.5563587,66.3188467 C-3.60519004,51.1572979 -3.60519004,26.5755327 11.5563587,11.414231 C26.7179075,-3.74731776 51.2996727,-3.74731776 66.4609744,11.414231 Z M54.7853215,45.8823776 L54.7853215,40.5882574 C54.7853215,39.613638 53.9952341,38.8235506 53.0206147,38.8235506 L44.9576695,38.8235506 L41.428256,42.3529641 L51.255555,42.3529641 L51.255555,45.8823776 L54.7853215,45.8823776 Z M40.6659027,43.1153174 L37.8988425,45.8823776 L40.6659027,45.8823776 L40.6659027,43.1153174 Z M51.1764962,56.4702653 L58.2353232,56.4702653 C59.2099355,56.4702653 60.00003,55.6801708 60.00003,54.7055585 L60.00003,51.176145 C60.00003,50.2015327 59.2099355,49.4114382 58.2353232,49.4114382 L51.1764962,49.4114382 C50.2018839,49.4114382 49.4117894,50.2015327 49.4117894,51.176145 L49.4117894,54.7055585 C49.4117894,55.6801708 50.2018839,56.4702653 51.1764962,56.4702653 Z M35.2941353,56.4702653 L42.3529624,56.4702653 C43.3275746,56.4702653 44.1176691,55.6801708 44.1176691,54.7055585 L44.1176691,51.176145 C44.1176691,50.2015327 43.3275746,49.4114382 42.3529624,49.4114382 L35.2941353,49.4114382 C34.319523,49.4114382 33.5294285,50.2015327 33.5294285,51.176145 L33.5294285,54.7055585 C33.5294285,55.6801708 34.319523,56.4702653 35.2941353,56.4702653 Z M56.6964989,19.0874231 C56.007381,18.3985134 54.8903216,18.3985134 54.2012036,19.087423 L45.882376,27.4062507 L45.882376,19.4117761 C45.882376,18.4371568 45.0922885,17.6470693 44.1176692,17.6470693 L33.5294286,17.6470693 C32.5548092,17.6470694 31.7647218,18.4371568 31.7647218,19.4117761 L31.7647218,30.0000167 C31.7647219,30.9746363 32.5548092,31.7647237 33.5294285,31.7647237 L41.5239031,31.7647237 L34.4650761,38.8235508 L24.7058947,38.8235508 C23.7312753,38.8235508 22.9411879,39.6136382 22.9411879,40.5882575 L22.9411879,45.8823778 L26.4706014,45.8823778 L26.4706014,42.3529643 L30.9356624,42.3529643 L23.8768354,49.4117914 L19.4117743,49.4117914 C18.4371549,49.4117914 17.6470675,50.2018788 17.6470675,51.1764981 L17.6470675,54.7059117 C17.6504049,54.9674302 17.7129076,55.2248042 17.8298886,55.4587302 L16.4456526,56.8429662 C15.7446193,57.5200453 15.7252005,58.6372282 16.4022825,59.3382615 C17.0793616,60.0392948 18.1965445,60.0587136 18.8975778,59.3816316 C18.9122847,59.3674273 18.9267436,59.3529684 18.940948,59.3382615 L56.6964963,21.5830662 C57.3856425,20.8939094 57.3856425,19.7765747 56.6964963,19.0874179 Z", id: "Combined-Shape" })
        )
      )
    )
  );
};

// node_modules/stream-chat-react/dist/components/ChatDown/ChatDown.js
var UnMemoizedChatDown = function(_a) {
  var _b = _a.image, image2 = _b === void 0 ? import_react116.default.createElement(ConnectionErrorIcon, null) : _b, text5 = _a.text, _c = _a.type, type = _c === void 0 ? "Error" : _c;
  var t = useTranslationContext("ChatDown").t;
  return import_react116.default.createElement(
    "div",
    { className: "str-chat__down" },
    import_react116.default.createElement(
      "div",
      { className: "str-chat__down-main" },
      typeof image2 === "string" ? import_react116.default.createElement("img", { alt: "Connection error", "data-testid": "chatdown-img", src: image2 }) : image2,
      import_react116.default.createElement("h1", null, type),
      import_react116.default.createElement("h3", { "aria-live": "assertive" }, text5 || t("Error connecting to chat, refresh the page to try again."))
    )
  );
};
var ChatDown = import_react116.default.memo(UnMemoizedChatDown);

// node_modules/stream-chat-react/dist/components/ChannelList/ChannelListMessenger.js
var ChannelListMessenger = function(props) {
  var children = props.children, _a = props.error, error = _a === void 0 ? null : _a, loading = props.loading, _b = props.LoadingErrorIndicator, LoadingErrorIndicator2 = _b === void 0 ? ChatDown : _b, _c = props.LoadingIndicator, LoadingIndicator3 = _c === void 0 ? LoadingChannels : _c;
  if (error) {
    return import_react117.default.createElement(LoadingErrorIndicator2, { type: "Connection Error" });
  }
  if (loading) {
    return import_react117.default.createElement(LoadingIndicator3, null);
  }
  return import_react117.default.createElement(
    "div",
    { className: "str-chat__channel-list-messenger str-chat__channel-list-messenger-react" },
    import_react117.default.createElement("div", { "aria-label": "Channel list", className: "str-chat__channel-list-messenger__main str-chat__channel-list-messenger-react__main", role: "listbox" }, children)
  );
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelDeletedListener.js
var import_react118 = __toESM(require_react());
var useChannelDeletedListener = function(setChannels, customHandler) {
  var client = useChatContext("useChannelDeletedListener").client;
  (0, import_react118.useEffect)(function() {
    var handleEvent = function(event) {
      if (customHandler && typeof customHandler === "function") {
        customHandler(setChannels, event);
      } else {
        setChannels(function(channels) {
          var channelIndex = channels.findIndex(function(channel) {
            return channel.cid === event.cid;
          });
          if (channelIndex < 0)
            return __spreadArray([], channels, true);
          channels.splice(channelIndex, 1);
          return __spreadArray([], channels, true);
        });
      }
    };
    client.on("channel.deleted", handleEvent);
    return function() {
      client.off("channel.deleted", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelHiddenListener.js
var import_react119 = __toESM(require_react());
var useChannelHiddenListener = function(setChannels, customHandler) {
  var client = useChatContext("useChannelHiddenListener").client;
  (0, import_react119.useEffect)(function() {
    var handleEvent = function(event) {
      if (customHandler && typeof customHandler === "function") {
        customHandler(setChannels, event);
      } else {
        setChannels(function(channels) {
          var channelIndex = channels.findIndex(function(channel) {
            return channel.cid === event.cid;
          });
          if (channelIndex < 0)
            return __spreadArray([], channels, true);
          channels.splice(channelIndex, 1);
          return __spreadArray([], channels, true);
        });
      }
    };
    client.on("channel.hidden", handleEvent);
    return function() {
      client.off("channel.hidden", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelTruncatedListener.js
var import_react120 = __toESM(require_react());
var useChannelTruncatedListener = function(setChannels, customHandler, forceUpdate) {
  var client = useChatContext("useChannelTruncatedListener").client;
  (0, import_react120.useEffect)(function() {
    var handleEvent = function(event) {
      setChannels(function(channels) {
        return __spreadArray([], channels, true);
      });
      if (customHandler && typeof customHandler === "function") {
        customHandler(setChannels, event);
      }
      if (forceUpdate) {
        forceUpdate();
      }
    };
    client.on("channel.truncated", handleEvent);
    return function() {
      client.off("channel.truncated", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelUpdatedListener.js
var import_react121 = __toESM(require_react());
var useChannelUpdatedListener = function(setChannels, customHandler, forceUpdate) {
  var client = useChatContext("useChannelUpdatedListener").client;
  (0, import_react121.useEffect)(function() {
    var handleEvent = function(event) {
      setChannels(function(channels) {
        var _a, _b, _c, _d, _e, _f;
        var channelIndex = channels.findIndex(function(channel) {
          var _a2;
          return channel.cid === ((_a2 = event.channel) === null || _a2 === void 0 ? void 0 : _a2.cid);
        });
        if (channelIndex > -1 && event.channel) {
          var newChannels = channels;
          newChannels[channelIndex].data = __assign(__assign({}, event.channel), { hidden: (_b = (_a = event.channel) === null || _a === void 0 ? void 0 : _a.hidden) !== null && _b !== void 0 ? _b : (_c = newChannels[channelIndex].data) === null || _c === void 0 ? void 0 : _c.hidden, own_capabilities: (_e = (_d = event.channel) === null || _d === void 0 ? void 0 : _d.own_capabilities) !== null && _e !== void 0 ? _e : (_f = newChannels[channelIndex].data) === null || _f === void 0 ? void 0 : _f.own_capabilities });
          return __spreadArray([], newChannels, true);
        }
        return channels;
      });
      if (forceUpdate) {
        forceUpdate();
      }
      if (customHandler && typeof customHandler === "function") {
        customHandler(setChannels, event);
      }
    };
    client.on("channel.updated", handleEvent);
    return function() {
      client.off("channel.updated", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelVisibleListener.js
var import_react122 = __toESM(require_react());
var import_lodash6 = __toESM(require_lodash());
var useChannelVisibleListener = function(setChannels, customHandler) {
  var client = useChatContext("useChannelVisibleListener").client;
  (0, import_react122.useEffect)(function() {
    var handleEvent = function(event) {
      return __awaiter(void 0, void 0, void 0, function() {
        var channel_1;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              if (!(customHandler && typeof customHandler === "function"))
                return [3, 1];
              customHandler(setChannels, event);
              return [3, 3];
            case 1:
              if (!(event.type && event.channel_type && event.channel_id))
                return [3, 3];
              return [4, getChannel({
                client,
                id: event.channel_id,
                type: event.channel_type
              })];
            case 2:
              channel_1 = _a.sent();
              setChannels(function(channels) {
                return (0, import_lodash6.default)(__spreadArray([channel_1], channels, true), "cid");
              });
              _a.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    client.on("channel.visible", handleEvent);
    return function() {
      client.off("channel.visible", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useConnectionRecoveredListener.js
var import_react123 = __toESM(require_react());
var useConnectionRecoveredListener = function(forceUpdate) {
  var client = useChatContext("useConnectionRecoveredListener").client;
  (0, import_react123.useEffect)(function() {
    var handleEvent = function() {
      if (forceUpdate) {
        forceUpdate();
      }
    };
    client.on("connection.recovered", handleEvent);
    return function() {
      client.off("connection.recovered", handleEvent);
    };
  }, []);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useMessageNewListener.js
var import_react124 = __toESM(require_react());
var import_lodash8 = __toESM(require_lodash());

// node_modules/stream-chat-react/dist/components/ChannelList/utils.js
var import_lodash7 = __toESM(require_lodash());
var MAX_QUERY_CHANNELS_LIMIT = 30;
var moveChannelUp = function(_a) {
  var activeChannel = _a.activeChannel, channels = _a.channels, cid = _a.cid;
  var channelIndex = channels.findIndex(function(channel2) {
    return channel2.cid === cid;
  });
  if (!activeChannel && channelIndex <= 0)
    return channels;
  var channel = activeChannel || channels[channelIndex];
  return (0, import_lodash7.default)(__spreadArray([channel], channels, true), "cid");
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useMessageNewListener.js
var useMessageNewListener = function(setChannels, lockChannelOrder, allowNewMessagesFromUnfilteredChannels) {
  if (lockChannelOrder === void 0) {
    lockChannelOrder = false;
  }
  if (allowNewMessagesFromUnfilteredChannels === void 0) {
    allowNewMessagesFromUnfilteredChannels = true;
  }
  var client = useChatContext("useMessageNewListener").client;
  (0, import_react124.useEffect)(function() {
    var handleEvent = function(event) {
      setChannels(function(channels) {
        var channelInList = channels.filter(function(channel2) {
          return channel2.cid === event.cid;
        }).length > 0;
        if (!channelInList && allowNewMessagesFromUnfilteredChannels && event.channel_type) {
          var channel = client.channel(event.channel_type, event.channel_id);
          return (0, import_lodash8.default)(__spreadArray([channel], channels, true), "cid");
        }
        if (!lockChannelOrder)
          return moveChannelUp({ channels, cid: event.cid || "" });
        return channels;
      });
    };
    client.on("message.new", handleEvent);
    return function() {
      client.off("message.new", handleEvent);
    };
  }, [lockChannelOrder]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useMobileNavigation.js
var import_react125 = __toESM(require_react());
var useMobileNavigation = function(channelListRef, navOpen, closeMobileNav) {
  (0, import_react125.useEffect)(function() {
    var handleClickOutside = function(event) {
      if (closeMobileNav && channelListRef.current && !channelListRef.current.contains(event.target) && navOpen) {
        closeMobileNav();
      }
    };
    document.addEventListener("click", handleClickOutside);
    return function() {
      document.removeEventListener("click", handleClickOutside);
    };
  }, [channelListRef, closeMobileNav, navOpen]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useNotificationAddedToChannelListener.js
var import_react126 = __toESM(require_react());
var import_lodash9 = __toESM(require_lodash());
var useNotificationAddedToChannelListener = function(setChannels, customHandler, allowNewMessagesFromUnfilteredChannels) {
  if (allowNewMessagesFromUnfilteredChannels === void 0) {
    allowNewMessagesFromUnfilteredChannels = true;
  }
  var client = useChatContext("useNotificationAddedToChannelListener").client;
  (0, import_react126.useEffect)(function() {
    var handleEvent = function(event) {
      return __awaiter(void 0, void 0, void 0, function() {
        var channel_1;
        var _a, _b;
        return __generator(this, function(_c) {
          switch (_c.label) {
            case 0:
              if (!(customHandler && typeof customHandler === "function"))
                return [3, 1];
              customHandler(setChannels, event);
              return [3, 3];
            case 1:
              if (!(allowNewMessagesFromUnfilteredChannels && ((_a = event.channel) === null || _a === void 0 ? void 0 : _a.type)))
                return [3, 3];
              return [4, getChannel({
                client,
                id: event.channel.id,
                members: (_b = event.channel.members) === null || _b === void 0 ? void 0 : _b.reduce(function(acc, _a2) {
                  var user = _a2.user, user_id = _a2.user_id;
                  var userId = user_id || (user === null || user === void 0 ? void 0 : user.id);
                  if (userId) {
                    acc.push(userId);
                  }
                  return acc;
                }, []),
                type: event.channel.type
              })];
            case 2:
              channel_1 = _c.sent();
              setChannels(function(channels) {
                return (0, import_lodash9.default)(__spreadArray([channel_1], channels, true), "cid");
              });
              _c.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    client.on("notification.added_to_channel", handleEvent);
    return function() {
      client.off("notification.added_to_channel", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useNotificationMessageNewListener.js
var import_react127 = __toESM(require_react());
var import_lodash10 = __toESM(require_lodash());
var useNotificationMessageNewListener = function(setChannels, customHandler, allowNewMessagesFromUnfilteredChannels) {
  if (allowNewMessagesFromUnfilteredChannels === void 0) {
    allowNewMessagesFromUnfilteredChannels = true;
  }
  var client = useChatContext("useNotificationMessageNewListener").client;
  (0, import_react127.useEffect)(function() {
    var handleEvent = function(event) {
      return __awaiter(void 0, void 0, void 0, function() {
        var channel_1;
        var _a;
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              if (!(customHandler && typeof customHandler === "function"))
                return [3, 1];
              customHandler(setChannels, event);
              return [3, 3];
            case 1:
              if (!(allowNewMessagesFromUnfilteredChannels && ((_a = event.channel) === null || _a === void 0 ? void 0 : _a.type)))
                return [3, 3];
              return [4, getChannel({
                client,
                id: event.channel.id,
                type: event.channel.type
              })];
            case 2:
              channel_1 = _b.sent();
              setChannels(function(channels) {
                return (0, import_lodash10.default)(__spreadArray([channel_1], channels, true), "cid");
              });
              _b.label = 3;
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    client.on("notification.message_new", handleEvent);
    return function() {
      client.off("notification.message_new", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useNotificationRemovedFromChannelListener.js
var import_react128 = __toESM(require_react());
var useNotificationRemovedFromChannelListener = function(setChannels, customHandler) {
  var client = useChatContext("useNotificationRemovedFromChannelListener").client;
  (0, import_react128.useEffect)(function() {
    var handleEvent = function(event) {
      if (customHandler && typeof customHandler === "function") {
        customHandler(setChannels, event);
      } else {
        setChannels(function(channels) {
          return channels.filter(function(channel) {
            var _a;
            return channel.cid !== ((_a = event.channel) === null || _a === void 0 ? void 0 : _a.cid);
          });
        });
      }
    };
    client.on("notification.removed_from_channel", handleEvent);
    return function() {
      client.off("notification.removed_from_channel", handleEvent);
    };
  }, [customHandler]);
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/usePaginatedChannels.js
var import_react129 = __toESM(require_react());
var import_lodash11 = __toESM(require_lodash());
var RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 5e3;
var MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS = 2e3;
var usePaginatedChannels = function(client, filters, sort2, options2, activeChannelHandler, recoveryThrottleIntervalMs) {
  if (recoveryThrottleIntervalMs === void 0) {
    recoveryThrottleIntervalMs = RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS;
  }
  var _a = useChatContext("usePaginatedChannels").channelsQueryState, error = _a.error, setError = _a.setError, setQueryInProgress = _a.setQueryInProgress;
  var _b = (0, import_react129.useState)([]), channels = _b[0], setChannels = _b[1];
  var _c = (0, import_react129.useState)(true), hasNextPage = _c[0], setHasNextPage = _c[1];
  var lastRecoveryTimestamp = (0, import_react129.useRef)();
  var recoveryThrottleInterval = recoveryThrottleIntervalMs < MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS ? MIN_RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS : recoveryThrottleIntervalMs ? recoveryThrottleIntervalMs : RECOVER_LOADED_CHANNELS_THROTTLE_INTERVAL_IN_MS;
  var filterString = (0, import_react129.useMemo)(function() {
    return JSON.stringify(filters);
  }, [filters]);
  var sortString = (0, import_react129.useMemo)(function() {
    return JSON.stringify(sort2);
  }, [sort2]);
  var queryChannels = function(queryType) {
    return __awaiter(void 0, void 0, void 0, function() {
      var offset2, newOptions, channelQueryResponse, newChannels, err_1;
      var _a2;
      return __generator(this, function(_b2) {
        switch (_b2.label) {
          case 0:
            setError(null);
            if (queryType === "reload") {
              setChannels([]);
              setQueryInProgress("reload");
            } else {
              setQueryInProgress("load-more");
            }
            offset2 = queryType === "reload" ? 0 : channels.length;
            newOptions = __assign({ limit: (_a2 = options2 === null || options2 === void 0 ? void 0 : options2.limit) !== null && _a2 !== void 0 ? _a2 : MAX_QUERY_CHANNELS_LIMIT, offset: offset2 }, options2);
            _b2.label = 1;
          case 1:
            _b2.trys.push([1, 3, , 4]);
            return [4, client.queryChannels(filters, sort2 || {}, newOptions)];
          case 2:
            channelQueryResponse = _b2.sent();
            newChannels = queryType === "reload" ? channelQueryResponse : (0, import_lodash11.default)(__spreadArray(__spreadArray([], channels, true), channelQueryResponse, true), "cid");
            setChannels(newChannels);
            setHasNextPage(channelQueryResponse.length >= newOptions.limit);
            if (!offset2 && activeChannelHandler) {
              activeChannelHandler(newChannels, setChannels);
            }
            return [3, 4];
          case 3:
            err_1 = _b2.sent();
            console.warn(err_1);
            setError(err_1);
            return [3, 4];
          case 4:
            setQueryInProgress(null);
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var throttleRecover = (0, import_react129.useCallback)(function() {
    var now = Date.now();
    var isFirstRecovery = !lastRecoveryTimestamp.current;
    var timeElapsedSinceLastRecoveryMs = lastRecoveryTimestamp.current ? now - lastRecoveryTimestamp.current : 0;
    if (!isFirstRecovery && timeElapsedSinceLastRecoveryMs < recoveryThrottleInterval && !error) {
      return;
    }
    lastRecoveryTimestamp.current = now;
    queryChannels("reload");
  }, [error, queryChannels, recoveryThrottleInterval]);
  var loadNextPage = function() {
    queryChannels();
  };
  (0, import_react129.useEffect)(function() {
    if (client.recoverStateOnReconnect)
      return;
    var unsubscribe = client.on("connection.recovered", throttleRecover).unsubscribe;
    return function() {
      unsubscribe();
    };
  }, [client, throttleRecover]);
  (0, import_react129.useEffect)(function() {
    queryChannels("reload");
  }, [filterString, sortString]);
  return {
    channels,
    hasNextPage,
    loadNextPage,
    setChannels
  };
};

// node_modules/stream-chat-react/dist/components/ChannelList/hooks/useUserPresenceChangedListener.js
var import_react130 = __toESM(require_react());
var useUserPresenceChangedListener = function(setChannels) {
  var client = useChatContext("useUserPresenceChangedListener").client;
  (0, import_react130.useEffect)(function() {
    var handleEvent = function(event) {
      setChannels(function(channels) {
        var newChannels = channels.map(function(channel) {
          var _a;
          if (!((_a = event.user) === null || _a === void 0 ? void 0 : _a.id) || !channel.state.members[event.user.id]) {
            return channel;
          }
          var newChannel = channel;
          newChannel.state.members[event.user.id].user = event.user;
          return newChannel;
        });
        return __spreadArray([], newChannels, true);
      });
    };
    client.on("user.presence.changed", handleEvent);
    return function() {
      client.off("user.presence.changed", handleEvent);
    };
  }, []);
};

// node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreview.js
var import_react134 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewMessenger.js
var import_react131 = __toESM(require_react());
var UnMemoizedChannelPreviewMessenger = function(props) {
  var _a, _b;
  var active = props.active, _c = props.Avatar, Avatar2 = _c === void 0 ? Avatar : _c, channel = props.channel, _d = props.className, customClassName = _d === void 0 ? "" : _d, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, customOnSelectChannel = props.onSelect, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;
  var channelPreviewButton = (0, import_react131.useRef)(null);
  var avatarName = displayTitle || ((_b = (_a = channel.state.messages[channel.state.messages.length - 1]) === null || _a === void 0 ? void 0 : _a.user) === null || _b === void 0 ? void 0 : _b.id);
  var onSelectChannel = function(e) {
    if (customOnSelectChannel) {
      customOnSelectChannel(e);
    } else if (setActiveChannel) {
      setActiveChannel(channel, watchers);
    }
    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {
      channelPreviewButton.current.blur();
    }
  };
  return import_react131.default.createElement(
    "button",
    { "aria-label": "Select Channel: ".concat(displayTitle || ""), "aria-selected": active, className: clsx_default("str-chat__channel-preview-messenger str-chat__channel-preview", active && "str-chat__channel-preview-messenger--active", unread && unread >= 1 && "str-chat__channel-preview-messenger--unread", customClassName), "data-testid": "channel-preview-button", onClick: onSelectChannel, ref: channelPreviewButton, role: "option" },
    import_react131.default.createElement(
      "div",
      { className: "str-chat__channel-preview-messenger--left" },
      import_react131.default.createElement(Avatar2, { image: displayImage, name: avatarName, size: 40 })
    ),
    import_react131.default.createElement(
      "div",
      { className: "str-chat__channel-preview-messenger--right str-chat__channel-preview-end" },
      import_react131.default.createElement(
        "div",
        { className: "str-chat__channel-preview-end-first-row" },
        import_react131.default.createElement(
          "div",
          { className: "str-chat__channel-preview-messenger--name" },
          import_react131.default.createElement("span", null, displayTitle)
        ),
        !!unread && import_react131.default.createElement("div", { className: "str-chat__channel-preview-unread-badge", "data-testid": "unread-badge" }, unread)
      ),
      import_react131.default.createElement("div", { className: "str-chat__channel-preview-messenger--last-message" }, latestMessage)
    )
  );
};
var ChannelPreviewMessenger = import_react131.default.memo(UnMemoizedChannelPreviewMessenger);

// node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useIsChannelMuted.js
var import_react132 = __toESM(require_react());
var useIsChannelMuted = function(channel) {
  var client = useChatContext("useIsChannelMuted").client;
  var _a = (0, import_react132.useState)(channel.muteStatus()), muted = _a[0], setMuted = _a[1];
  (0, import_react132.useEffect)(function() {
    var handleEvent = function() {
      return setMuted(channel.muteStatus());
    };
    client.on("notification.channel_mutes_updated", handleEvent);
    return function() {
      return client.off("notification.channel_mutes_updated", handleEvent);
    };
  }, [muted]);
  return muted;
};

// node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useMessageDeliveryStatus.js
var import_react133 = __toESM(require_react());
var MessageDeliveryStatus;
(function(MessageDeliveryStatus2) {
  MessageDeliveryStatus2["DELIVERED"] = "delivered";
  MessageDeliveryStatus2["READ"] = "read";
})(MessageDeliveryStatus || (MessageDeliveryStatus = {}));
var useMessageDeliveryStatus = function(_a) {
  var channel = _a.channel, lastMessage = _a.lastMessage;
  var client = useChatContext().client;
  var _b = (0, import_react133.useState)(), messageDeliveryStatus = _b[0], setMessageDeliveryStatus = _b[1];
  var isOwnMessage = (0, import_react133.useCallback)(function(message) {
    var _a2;
    return client.user && ((_a2 = message === null || message === void 0 ? void 0 : message.user) === null || _a2 === void 0 ? void 0 : _a2.id) === client.user.id;
  }, [client]);
  (0, import_react133.useEffect)(function() {
    var lastMessageIsOwn = isOwnMessage(lastMessage);
    if (!(lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.created_at) || !lastMessageIsOwn)
      return;
    var lastMessageCreatedAtDate = typeof lastMessage.created_at === "string" ? new Date(lastMessage.created_at) : lastMessage.created_at;
    var channelReadByOthersAfterLastMessageUpdate = Object.values(channel.state.read).some(function(_a2) {
      var channelLastMarkedReadDate = _a2.last_read, user = _a2.user;
      var ignoreOwnReadStatus = client.user && user.id !== client.user.id;
      return ignoreOwnReadStatus && lastMessageCreatedAtDate < channelLastMarkedReadDate;
    });
    setMessageDeliveryStatus(channelReadByOthersAfterLastMessageUpdate ? MessageDeliveryStatus.READ : MessageDeliveryStatus.DELIVERED);
  }, [channel.state.read, client, isOwnMessage, lastMessage]);
  (0, import_react133.useEffect)(function() {
    var handleMessageNew = function(event) {
      if (!isOwnMessage(event.message)) {
        return setMessageDeliveryStatus(void 0);
      }
      return setMessageDeliveryStatus(MessageDeliveryStatus.DELIVERED);
    };
    channel.on("message.new", handleMessageNew);
    return function() {
      channel.off("message.new", handleMessageNew);
    };
  }, [channel, client, isOwnMessage]);
  (0, import_react133.useEffect)(function() {
    if (!isOwnMessage(lastMessage))
      return;
    var handleMarkRead = function(event) {
      var _a2, _b2;
      if (((_a2 = event.user) === null || _a2 === void 0 ? void 0 : _a2.id) !== ((_b2 = client.user) === null || _b2 === void 0 ? void 0 : _b2.id))
        setMessageDeliveryStatus(MessageDeliveryStatus.READ);
    };
    channel.on("message.read", handleMarkRead);
    return function() {
      channel.off("message.read", handleMarkRead);
    };
  }, [channel, client, lastMessage, isOwnMessage]);
  return {
    messageDeliveryStatus
  };
};

// node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreview.js
var ChannelPreview = function(props) {
  var channel = props.channel, _a = props.Preview, Preview = _a === void 0 ? ChannelPreviewMessenger : _a, channelUpdateCount = props.channelUpdateCount;
  var _b = useChatContext("ChannelPreview"), activeChannel = _b.channel, client = _b.client, setActiveChannel = _b.setActiveChannel;
  var _c = useTranslationContext("ChannelPreview"), t = _c.t, userLanguage = _c.userLanguage;
  var _d = useChannelPreviewInfo({ channel }), displayImage = _d.displayImage, displayTitle = _d.displayTitle;
  var _e = (0, import_react134.useState)(channel.state.messages[channel.state.messages.length - 1]), lastMessage = _e[0], setLastMessage = _e[1];
  var _f = (0, import_react134.useState)(0), unread = _f[0], setUnread = _f[1];
  var messageDeliveryStatus = useMessageDeliveryStatus({
    channel,
    lastMessage
  }).messageDeliveryStatus;
  var isActive = (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid) === channel.cid;
  var muted = useIsChannelMuted(channel).muted;
  (0, import_react134.useEffect)(function() {
    var handleEvent = function(event) {
      if (!event.cid)
        return setUnread(0);
      if (channel.cid === event.cid)
        setUnread(0);
    };
    client.on("notification.mark_read", handleEvent);
    return function() {
      return client.off("notification.mark_read", handleEvent);
    };
  }, []);
  var refreshUnreadCount = (0, import_react134.useCallback)(function() {
    if (isActive || muted) {
      setUnread(0);
    } else {
      setUnread(channel.countUnread());
    }
  }, [channel, isActive, muted]);
  (0, import_react134.useEffect)(function() {
    refreshUnreadCount();
    var handleEvent = function(event) {
      if (event.message)
        setLastMessage(event.message);
      refreshUnreadCount();
    };
    channel.on("message.new", handleEvent);
    channel.on("message.updated", handleEvent);
    channel.on("message.deleted", handleEvent);
    return function() {
      channel.off("message.new", handleEvent);
      channel.off("message.updated", handleEvent);
      channel.off("message.deleted", handleEvent);
    };
  }, [refreshUnreadCount, channelUpdateCount]);
  if (!Preview)
    return null;
  var latestMessage = getLatestMessagePreview(channel, t, userLanguage);
  return import_react134.default.createElement(Preview, __assign({}, props, { active: isActive, displayImage, displayTitle, lastMessage, latestMessage, messageDeliveryStatus, setActiveChannel, unread }));
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/ChannelSearch.js
var import_react140 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelSearch/hooks/useChannelSearch.js
var import_react135 = __toESM(require_react());
var import_lodash12 = __toESM(require_lodash2());
var import_lodash13 = __toESM(require_lodash());

// node_modules/stream-chat-react/dist/components/ChannelSearch/utils.js
var isChannel = function(output) {
  return output.cid != null;
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/hooks/useChannelSearch.js
var useChannelSearch = function(_a) {
  var _b = _a.channelType, channelType = _b === void 0 ? "messaging" : _b, _c = _a.clearSearchOnClickOutside, clearSearchOnClickOutside = _c === void 0 ? true : _c, _d = _a.disabled, disabled = _d === void 0 ? false : _d, onSearchCallback = _a.onSearch, onSearchExit = _a.onSearchExit, onSelectResult = _a.onSelectResult, _e = _a.searchDebounceIntervalMs, searchDebounceIntervalMs = _e === void 0 ? 300 : _e, _f = _a.searchForChannels, searchForChannels = _f === void 0 ? false : _f, searchFunction = _a.searchFunction, searchQueryParams = _a.searchQueryParams, setChannels = _a.setChannels;
  var _g = useChatContext("useChannelSearch"), client = _g.client, setActiveChannel = _g.setActiveChannel, themeVersion = _g.themeVersion;
  var _h = (0, import_react135.useState)(false), inputIsFocused = _h[0], setInputIsFocused = _h[1];
  var _j = (0, import_react135.useState)(""), query = _j[0], setQuery = _j[1];
  var _k = (0, import_react135.useState)([]), results = _k[0], setResults = _k[1];
  var _l = (0, import_react135.useState)(false), searching = _l[0], setSearching = _l[1];
  var searchQueryPromiseInProgress = (0, import_react135.useRef)();
  var shouldIgnoreQueryResults = (0, import_react135.useRef)(false);
  var inputRef = (0, import_react135.useRef)(null);
  var searchBarRef = (0, import_react135.useRef)(null);
  var clearState = (0, import_react135.useCallback)(function() {
    setQuery("");
    setResults([]);
    setSearching(false);
    if (searchQueryPromiseInProgress.current) {
      shouldIgnoreQueryResults.current = true;
    }
  }, []);
  var activateSearch = (0, import_react135.useCallback)(function() {
    setInputIsFocused(true);
  }, []);
  var exitSearch = (0, import_react135.useCallback)(function() {
    var _a2;
    setInputIsFocused(false);
    (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.blur();
    clearState();
    onSearchExit === null || onSearchExit === void 0 ? void 0 : onSearchExit();
  }, [clearState, onSearchExit]);
  (0, import_react135.useEffect)(function() {
    if (disabled)
      return;
    var clickListener = function(event) {
      var _a2, _b2;
      if (!(event.target instanceof HTMLElement))
        return;
      var isInputClick = themeVersion === "2" ? (_a2 = searchBarRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.target) : (_b2 = inputRef.current) === null || _b2 === void 0 ? void 0 : _b2.contains(event.target);
      if (isInputClick)
        return;
      if (inputIsFocused && !query || clearSearchOnClickOutside) {
        exitSearch();
      }
    };
    document.addEventListener("click", clickListener);
    return function() {
      return document.removeEventListener("click", clickListener);
    };
  }, [disabled, inputIsFocused, query, exitSearch, clearSearchOnClickOutside]);
  (0, import_react135.useEffect)(function() {
    if (!inputRef.current || disabled)
      return;
    var handleKeyDown = function(event) {
      if (event.key === "Escape")
        return exitSearch();
    };
    inputRef.current.addEventListener("keydown", handleKeyDown);
    return function() {
      var _a2;
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.removeEventListener("keydown", handleKeyDown);
    };
  }, [disabled]);
  var selectResult = (0, import_react135.useCallback)(function(result) {
    return __awaiter(void 0, void 0, void 0, function() {
      var selectedChannel, newChannel;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!client.userID)
              return [
                2
                /*return*/
              ];
            if (!onSelectResult)
              return [3, 2];
            return [4, onSelectResult({
              setQuery,
              setResults,
              setSearching
            }, result)];
          case 1:
            _a2.sent();
            return [
              2
              /*return*/
            ];
          case 2:
            if (!isChannel(result))
              return [3, 3];
            setActiveChannel(result);
            selectedChannel = result;
            return [3, 5];
          case 3:
            newChannel = client.channel(channelType, { members: [client.userID, result.id] });
            return [4, newChannel.watch()];
          case 4:
            _a2.sent();
            setActiveChannel(newChannel);
            selectedChannel = newChannel;
            _a2.label = 5;
          case 5:
            setChannels(function(channels) {
              return (0, import_lodash13.default)(__spreadArray([selectedChannel], channels, true), "cid");
            });
            if (clearSearchOnClickOutside) {
              exitSearch();
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [clearSearchOnClickOutside, client, exitSearch, onSelectResult, setActiveChannel, setChannels]);
  var getChannels = (0, import_react135.useCallback)(function(text5) {
    return __awaiter(void 0, void 0, void 0, function() {
      var results2, userQueryPromise, users, channelQueryPromise, _a2, channels, users, error_1;
      var _b2, _c2, _d2, _e2, _f2, _g2;
      return __generator(this, function(_h2) {
        switch (_h2.label) {
          case 0:
            results2 = [];
            _h2.label = 1;
          case 1:
            _h2.trys.push([1, 6, , 7]);
            userQueryPromise = client.queryUsers(__assign({ $or: [{ id: { $autocomplete: text5 } }, { name: { $autocomplete: text5 } }], id: { $ne: client.userID } }, (_b2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.userFilters) === null || _b2 === void 0 ? void 0 : _b2.filters), __assign({ id: 1 }, (_c2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.userFilters) === null || _c2 === void 0 ? void 0 : _c2.sort), __assign({ limit: 8 }, (_d2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.userFilters) === null || _d2 === void 0 ? void 0 : _d2.options));
            if (!!searchForChannels)
              return [3, 3];
            searchQueryPromiseInProgress.current = userQueryPromise;
            return [4, searchQueryPromiseInProgress.current];
          case 2:
            users = _h2.sent().users;
            results2 = users;
            return [3, 5];
          case 3:
            channelQueryPromise = client.queryChannels(__assign({ name: { $autocomplete: text5 } }, (_e2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.channelFilters) === null || _e2 === void 0 ? void 0 : _e2.filters), ((_f2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.channelFilters) === null || _f2 === void 0 ? void 0 : _f2.sort) || {}, __assign({ limit: 5 }, (_g2 = searchQueryParams === null || searchQueryParams === void 0 ? void 0 : searchQueryParams.channelFilters) === null || _g2 === void 0 ? void 0 : _g2.options));
            searchQueryPromiseInProgress.current = Promise.all([
              channelQueryPromise,
              userQueryPromise
            ]);
            return [4, searchQueryPromiseInProgress.current];
          case 4:
            _a2 = _h2.sent(), channels = _a2[0], users = _a2[1].users;
            results2 = __spreadArray(__spreadArray([], channels, true), users, true);
            _h2.label = 5;
          case 5:
            return [3, 7];
          case 6:
            error_1 = _h2.sent();
            console.error(error_1);
            return [3, 7];
          case 7:
            setSearching(false);
            if (!shouldIgnoreQueryResults.current) {
              setResults(results2);
            } else {
              shouldIgnoreQueryResults.current = false;
            }
            searchQueryPromiseInProgress.current = void 0;
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [client, searchForChannels, searchQueryParams]);
  var scheduleGetChannels = (0, import_react135.useCallback)((0, import_lodash12.default)(getChannels, searchDebounceIntervalMs), [
    getChannels,
    searchDebounceIntervalMs
  ]);
  var onSearch = (0, import_react135.useCallback)(function(event) {
    event.preventDefault();
    if (disabled)
      return;
    if (searchFunction) {
      searchFunction({
        setQuery,
        setResults,
        setSearching
      }, event);
    } else if (event.target.value) {
      setSearching(true);
      setQuery(event.target.value);
      scheduleGetChannels(event.target.value);
    } else if (!event.target.value) {
      clearState();
      scheduleGetChannels.cancel();
    }
    onSearchCallback === null || onSearchCallback === void 0 ? void 0 : onSearchCallback(event);
  }, [clearState, disabled, scheduleGetChannels, onSearchCallback, searchFunction]);
  return {
    activateSearch,
    clearState,
    exitSearch,
    inputIsFocused,
    inputRef,
    onSearch,
    query,
    results,
    searchBarRef,
    searching,
    selectResult
  };
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/SearchBar.js
var import_react138 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/ChannelSearch/icons.js
var import_react136 = __toESM(require_react());
var MenuIcon2 = function() {
  return import_react136.default.createElement(
    "svg",
    { "data-testid": "menu-icon", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react136.default.createElement("path", { clipRule: "evenodd", d: "M3 8V6H21V8H3ZM3 13H21V11H3V13ZM3 18H21V16H3V18Z", fill: "black", fillRule: "evenodd" })
  );
};
var ReturnIcon = function() {
  return import_react136.default.createElement(
    "svg",
    { "data-testid": "return-icon", fill: "none", height: "20", viewBox: "0 0 22 22", width: "20", xmlns: "http://www.w3.org/2000/svg" },
    import_react136.default.createElement("path", { d: "M21.6668 9.66666V12.3333H5.6529L12.9932 19.6736L11.1076 21.5592L0.54834 11L11.1076 0.440765L12.9932 2.32638L5.6529 9.66666H21.6668Z", fill: "#080707" })
  );
};
var XIcon = function() {
  return import_react136.default.createElement(
    "svg",
    { fill: "none", height: "14", viewBox: "0 0 14 14", width: "14", xmlns: "http://www.w3.org/2000/svg" },
    import_react136.default.createElement("path", { d: "M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z", fill: "#747881" })
  );
};
var SearchIcon = function(_a) {
  var className = _a.className;
  return import_react136.default.createElement(
    "svg",
    { className, fill: "none", height: "18", viewBox: "0 0 18 18", width: "18", xmlns: "http://www.w3.org/2000/svg" },
    import_react136.default.createElement("path", { d: "M12.7549 11.255H11.9649L11.6849 10.985C12.6649 9.845 13.2549 8.365 13.2549 6.755C13.2549 3.165 10.3449 0.255005 6.75488 0.255005C3.16488 0.255005 0.254883 3.165 0.254883 6.755C0.254883 10.345 3.16488 13.255 6.75488 13.255C8.36488 13.255 9.84488 12.665 10.9849 11.685L11.2549 11.965V12.755L16.2549 17.745L17.7449 16.255L12.7549 11.255ZM6.75488 11.255C4.26488 11.255 2.25488 9.245 2.25488 6.755C2.25488 4.26501 4.26488 2.255 6.75488 2.255C9.24488 2.255 11.2549 4.26501 11.2549 6.755C11.2549 9.245 9.24488 11.255 6.75488 11.255Z", fill: "#747881" })
  );
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/SearchInput.js
var import_react137 = __toESM(require_react());
var SearchInput = function(props) {
  var disabled = props.disabled, inputRef = props.inputRef, onSearch = props.onSearch, placeholder = props.placeholder, query = props.query;
  var t = useTranslationContext("SearchInput").t;
  return import_react137.default.createElement("input", { className: "str-chat__channel-search-input", "data-testid": "search-input", disabled, onChange: onSearch, placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : t("Search"), ref: inputRef, type: "text", value: query });
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/SearchBar.js
var SearchBarButton = function(_a) {
  var children = _a.children, className = _a.className, onClick = _a.onClick;
  return import_react138.default.createElement("button", { className: clsx_default("str-chat__channel-search-bar-button", className), "data-testid": "search-bar-button", onClick }, children);
};
var SearchBar = function(props) {
  var activateSearch = props.activateSearch, AppMenu = props.AppMenu, _a = props.ClearInputIcon, ClearInputIcon = _a === void 0 ? XIcon : _a, exitSearch = props.exitSearch, _b = props.ExitSearchIcon, ExitSearchIcon = _b === void 0 ? ReturnIcon : _b, inputIsFocused = props.inputIsFocused, _c = props.MenuIcon, MenuIcon3 = _c === void 0 ? MenuIcon2 : _c, searchBarRef = props.searchBarRef, _d = props.SearchInput, SearchInput2 = _d === void 0 ? SearchInput : _d, _e = props.SearchInputIcon, SearchInputIcon = _e === void 0 ? SearchIcon : _e, inputProps = __rest(props, ["activateSearch", "AppMenu", "ClearInputIcon", "exitSearch", "ExitSearchIcon", "inputIsFocused", "MenuIcon", "searchBarRef", "SearchInput", "SearchInputIcon"]);
  var _f = (0, import_react138.useState)(false), menuIsOpen = _f[0], setMenuIsOpen = _f[1];
  var appMenuRef = (0, import_react138.useRef)(null);
  (0, import_react138.useEffect)(function() {
    if (!appMenuRef.current)
      return;
    var handleKeyDown = function(event) {
      if (menuIsOpen && event.key === "Escape") {
        setMenuIsOpen(false);
      }
    };
    var clickListener = function(e) {
      var _a2;
      if (!(e.target instanceof HTMLElement) || !menuIsOpen || ((_a2 = appMenuRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(e.target)))
        return;
      setMenuIsOpen(false);
    };
    document.addEventListener("keydown", handleKeyDown);
    document.addEventListener("click", clickListener);
    return function() {
      document.removeEventListener("keydown", handleKeyDown);
      document.removeEventListener("click", clickListener);
    };
  }, [menuIsOpen]);
  (0, import_react138.useEffect)(function() {
    if (!props.inputRef.current)
      return;
    var handleFocus = function() {
      activateSearch();
    };
    var handleBlur = function(e) {
      e.stopPropagation();
    };
    props.inputRef.current.addEventListener("focus", handleFocus);
    props.inputRef.current.addEventListener("blur", handleBlur);
    return function() {
      var _a2, _b2;
      (_a2 = props.inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.removeEventListener("focus", handleFocus);
      (_b2 = props.inputRef.current) === null || _b2 === void 0 ? void 0 : _b2.addEventListener("blur", handleBlur);
    };
  }, []);
  var handleClearClick = (0, import_react138.useCallback)(function() {
    var _a2;
    exitSearch();
    (_a2 = inputProps.inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  }, []);
  var closeAppMenu = (0, import_react138.useCallback)(function() {
    return setMenuIsOpen(false);
  }, []);
  return import_react138.default.createElement(
    "div",
    { className: "str-chat__channel-search-bar", "data-testid": "search-bar", ref: searchBarRef },
    inputIsFocused ? import_react138.default.createElement(
      SearchBarButton,
      { className: "str-chat__channel-search-bar-button--exit-search", onClick: exitSearch },
      import_react138.default.createElement(ExitSearchIcon, null)
    ) : AppMenu ? import_react138.default.createElement(
      SearchBarButton,
      { className: "str-chat__channel-search-bar-button--menu", onClick: function() {
        return setMenuIsOpen(function(prev) {
          return !prev;
        });
      } },
      import_react138.default.createElement(MenuIcon3, null)
    ) : null,
    import_react138.default.createElement(
      "div",
      { className: clsx_default("str-chat__channel-search-input--wrapper", inputProps.query && "str-chat__channel-search-input--wrapper-active") },
      import_react138.default.createElement(
        "div",
        { className: "str-chat__channel-search-input--icon" },
        import_react138.default.createElement(SearchInputIcon, null)
      ),
      import_react138.default.createElement(SearchInput2, __assign({}, inputProps)),
      import_react138.default.createElement(
        "button",
        { className: "str-chat__channel-search-input--clear-button", "data-testid": "clear-input-button", disabled: !inputProps.query, onClick: handleClearClick },
        import_react138.default.createElement(ClearInputIcon, null)
      )
    ),
    menuIsOpen && AppMenu && import_react138.default.createElement(
      "div",
      { ref: appMenuRef },
      import_react138.default.createElement(AppMenu, { close: closeAppMenu })
    )
  );
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/SearchResults.js
var import_react139 = __toESM(require_react());
var DefaultSearchEmpty = function() {
  var t = useTranslationContext("SearchResults").t;
  return import_react139.default.createElement(
    "div",
    { "aria-live": "polite", className: "str-chat__channel-search-container-empty" },
    import_react139.default.createElement(SearchIcon, null),
    t("No results found")
  );
};
var DefaultSearchResultsHeader = function(_a) {
  var results = _a.results;
  var t = useTranslationContext("SearchResultsHeader").t;
  return import_react139.default.createElement("div", { className: "str-chat__channel-search-results-header", "data-testid": "channel-search-results-header" }, t("searchResultsCount", {
    count: results.length
  }));
};
var DefaultSearchResultsList = function(props) {
  var focusedUser = props.focusedUser, results = props.results, _a = props.SearchResultItem, SearchResultItem = _a === void 0 ? DefaultSearchResultItem : _a, selectResult = props.selectResult;
  return import_react139.default.createElement(import_react139.default.Fragment, null, results.map(function(result, index5) {
    return import_react139.default.createElement(SearchResultItem, { focusedUser, index: index5, key: index5, result, selectResult });
  }));
};
var DefaultSearchResultItem = function(props) {
  var _a, _b;
  var focusedUser = props.focusedUser, index5 = props.index, result = props.result, selectResult = props.selectResult;
  var focused = focusedUser === index5;
  var themeVersion = useChatContext().themeVersion;
  var className = clsx_default("str-chat__channel-search-result", focused && "str-chat__channel-search-result--focused focused");
  if (isChannel(result)) {
    var channel_1 = result;
    return themeVersion === "2" ? import_react139.default.createElement(ChannelPreview, { channel: channel_1, className, onSelect: function() {
      return selectResult(channel_1);
    } }) : import_react139.default.createElement(
      "button",
      { "aria-label": "Select Channel: ".concat(((_a = channel_1.data) === null || _a === void 0 ? void 0 : _a.name) || ""), className, "data-testid": "channel-search-result-channel", onClick: function() {
        return selectResult(channel_1);
      }, role: "option" },
      import_react139.default.createElement("div", { className: "result-hashtag" }, "#"),
      import_react139.default.createElement("p", { className: "channel-search__result-text" }, (_b = channel_1.data) === null || _b === void 0 ? void 0 : _b.name)
    );
  } else {
    return import_react139.default.createElement(
      "button",
      { "aria-label": "Select User Channel: ".concat(result.name || ""), className, "data-testid": "channel-search-result-user", onClick: function() {
        return selectResult(result);
      }, role: "option" },
      import_react139.default.createElement(Avatar, { image: result.image, name: result.name || result.id, size: themeVersion === "2" ? 40 : void 0, user: result }),
      import_react139.default.createElement("div", { className: "str-chat__channel-search-result--display-name" }, result.name || result.id)
    );
  }
};
var ResultsContainer = function(_a) {
  var children = _a.children, popupResults = _a.popupResults;
  return import_react139.default.createElement("div", { "aria-label": "Channel search results", className: clsx_default("str-chat__channel-search-container str-chat__channel-search-result-list", popupResults ? "popup" : "inline") }, children);
};
var SearchResults = function(props) {
  var popupResults = props.popupResults, results = props.results, searching = props.searching, _a = props.SearchEmpty, SearchEmpty = _a === void 0 ? DefaultSearchEmpty : _a, _b = props.SearchResultsHeader, SearchResultsHeader = _b === void 0 ? DefaultSearchResultsHeader : _b, SearchLoading = props.SearchLoading, _c = props.SearchResultItem, SearchResultItem = _c === void 0 ? DefaultSearchResultItem : _c, _d = props.SearchResultsList, SearchResultsList = _d === void 0 ? DefaultSearchResultsList : _d, selectResult = props.selectResult;
  var t = useTranslationContext("SearchResults").t;
  var _e = (0, import_react139.useState)(), focusedResult = _e[0], setFocusedResult = _e[1];
  var handleKeyDown = (0, import_react139.useCallback)(function(event) {
    if (event.key === "ArrowUp") {
      setFocusedResult(function(prevFocused) {
        if (prevFocused === void 0)
          return 0;
        return prevFocused === 0 ? results.length - 1 : prevFocused - 1;
      });
    }
    if (event.key === "ArrowDown") {
      setFocusedResult(function(prevFocused) {
        if (prevFocused === void 0)
          return 0;
        return prevFocused === results.length - 1 ? 0 : prevFocused + 1;
      });
    }
    if (event.key === "Enter") {
      event.preventDefault();
      if (focusedResult !== void 0) {
        selectResult(results[focusedResult]);
        return setFocusedResult(void 0);
      }
    }
  }, [focusedResult]);
  (0, import_react139.useEffect)(function() {
    document.addEventListener("keydown", handleKeyDown, false);
    return function() {
      return document.removeEventListener("keydown", handleKeyDown);
    };
  }, [handleKeyDown]);
  if (searching) {
    return import_react139.default.createElement(ResultsContainer, { popupResults }, SearchLoading ? import_react139.default.createElement(SearchLoading, null) : import_react139.default.createElement("div", { className: "str-chat__channel-search-container-searching", "data-testid": "search-in-progress-indicator" }, t("Searching...")));
  }
  if (!results.length) {
    return import_react139.default.createElement(
      ResultsContainer,
      { popupResults },
      import_react139.default.createElement(SearchEmpty, null)
    );
  }
  return import_react139.default.createElement(
    ResultsContainer,
    { popupResults },
    import_react139.default.createElement(SearchResultsHeader, { results }),
    import_react139.default.createElement(SearchResultsList, { focusedUser: focusedResult, results, SearchResultItem, selectResult })
  );
};

// node_modules/stream-chat-react/dist/components/ChannelSearch/ChannelSearch.js
var UnMemoizedChannelSearch = function(props) {
  var AppMenu = props.AppMenu, ClearInputIcon = props.ClearInputIcon, ExitSearchIcon = props.ExitSearchIcon, MenuIcon3 = props.MenuIcon, placeholder = props.placeholder, _a = props.popupResults, popupResults = _a === void 0 ? false : _a, _b = props.SearchBar, SearchBar2 = _b === void 0 ? SearchBar : _b, SearchEmpty = props.SearchEmpty, _c = props.SearchInput, SearchInput2 = _c === void 0 ? SearchInput : _c, SearchLoading = props.SearchLoading, SearchInputIcon = props.SearchInputIcon, SearchResultItem = props.SearchResultItem, SearchResultsList = props.SearchResultsList, SearchResultsHeader = props.SearchResultsHeader, channelSearchParams = __rest(props, ["AppMenu", "ClearInputIcon", "ExitSearchIcon", "MenuIcon", "placeholder", "popupResults", "SearchBar", "SearchEmpty", "SearchInput", "SearchLoading", "SearchInputIcon", "SearchResultItem", "SearchResultsList", "SearchResultsHeader"]);
  var themeVersion = useChatContext("ChannelSearch").themeVersion;
  var _d = useChannelSearch(channelSearchParams), activateSearch = _d.activateSearch, clearState = _d.clearState, exitSearch = _d.exitSearch, inputIsFocused = _d.inputIsFocused, inputRef = _d.inputRef, onSearch = _d.onSearch, query = _d.query, results = _d.results, searchBarRef = _d.searchBarRef, searching = _d.searching, selectResult = _d.selectResult;
  var showSearchBarV2 = themeVersion === "2";
  return import_react140.default.createElement(
    "div",
    { className: clsx_default("str-chat__channel-search", popupResults ? "str-chat__channel-search--popup" : "str-chat__channel-search--inline", {
      "str-chat__channel-search--with-results": results.length > 0
    }), "data-testid": "channel-search" },
    showSearchBarV2 ? import_react140.default.createElement(SearchBar2, { activateSearch, AppMenu, ClearInputIcon, clearState, disabled: channelSearchParams.disabled, exitSearch, ExitSearchIcon, inputIsFocused, inputRef, MenuIcon: MenuIcon3, onSearch, placeholder, query, searchBarRef, SearchInput: SearchInput2, SearchInputIcon }) : import_react140.default.createElement(SearchInput2, { clearState, disabled: channelSearchParams.disabled, inputRef, onSearch, placeholder, query }),
    query && import_react140.default.createElement(SearchResults, { popupResults, results, SearchEmpty, searching, SearchLoading, SearchResultItem, SearchResultsHeader, SearchResultsList, selectResult })
  );
};
var ChannelSearch = import_react140.default.memo(UnMemoizedChannelSearch);

// node_modules/stream-chat-react/dist/components/EmptyStateIndicator/EmptyStateIndicator.js
var import_react142 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/EmptyStateIndicator/icons.js
var import_react141 = __toESM(require_react());
var ChatBubble = function() {
  return import_react141.default.createElement(
    "svg",
    { "data-testid": "chat-bubble", fill: "none", height: "96", viewBox: "0 0 136 136", width: "96", xmlns: "http://www.w3.org/2000/svg" },
    import_react141.default.createElement("path", { d: "M106 24.5H30C24.775 24.5 20.5 28.775 20.5 34V119.5L39.5 100.5H106C111.225 100.5 115.5 96.225 115.5 91V34C115.5 28.775 111.225 24.5 106 24.5ZM106 91H39.5L30 100.5V34H106V91Z", fill: "#B4B7BB" })
  );
};

// node_modules/stream-chat-react/dist/components/EmptyStateIndicator/EmptyStateIndicator.js
var UnMemoizedEmptyStateIndicator = function(props) {
  var listType = props.listType;
  var t = useTranslationContext("EmptyStateIndicator").t;
  if (listType === "thread")
    return null;
  if (listType === "channel") {
    var text5 = t("You have no channels currently");
    return import_react142.default.createElement(
      import_react142.default.Fragment,
      null,
      import_react142.default.createElement(
        "div",
        { className: "str-chat__channel-list-empty" },
        import_react142.default.createElement(ChatBubble, null),
        import_react142.default.createElement("p", { role: "listitem" }, text5)
      ),
      import_react142.default.createElement("p", { className: "str-chat__channel-list-empty-v1", role: "listitem" }, text5)
    );
  }
  if (listType === "message") {
    var text5 = t("No chats here yet…");
    return import_react142.default.createElement(
      "div",
      { className: "str-chat__empty-channel" },
      import_react142.default.createElement(ChatBubble, null),
      import_react142.default.createElement("p", { className: "str-chat__empty-channel-text", role: "listitem" }, text5)
    );
  }
  return import_react142.default.createElement("p", null, "No items exist");
};
var EmptyStateIndicator = import_react142.default.memo(UnMemoizedEmptyStateIndicator);

// node_modules/stream-chat-react/dist/components/LoadMore/LoadMorePaginator.js
var import_react144 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/LoadMore/LoadMoreButton.js
var import_react143 = __toESM(require_react());

// node_modules/stream-chat-react/dist/utils/deprecationWarning.js
var deprecationAndReplacementWarning = function(pairs, component) {
  pairs.forEach(function(data) {
    var _a = [
      Object.entries(data[0])[0],
      Object.entries(data[1])[0]
    ], _b = _a[0], oldName = _b[0], oldValue = _b[1], _c = _a[1], newName = _c[0], newValue = _c[1];
    if (typeof oldValue !== "undefined" && typeof newValue === "undefined" || typeof oldValue !== "undefined" && typeof newValue !== "undefined") {
      console.warn("[Deprecation notice (".concat(component, ")]: prefer using prop ").concat(newName, " instead of ").concat(oldName));
    }
  });
};

// node_modules/stream-chat-react/dist/components/LoadMore/LoadMoreButton.js
var UnMemoizedLoadMoreButton = function(_a) {
  var children = _a.children, isLoading = _a.isLoading, onClick = _a.onClick, refreshing = _a.refreshing;
  var t = useTranslationContext("UnMemoizedLoadMoreButton").t;
  var childrenOrDefaultString = children !== null && children !== void 0 ? children : t("Load more");
  var loading = typeof isLoading !== "undefined" ? isLoading : refreshing;
  (0, import_react143.useEffect)(function() {
    deprecationAndReplacementWarning([[{ refreshing }, { isLoading }]], "LoadMoreButton");
  }, []);
  return import_react143.default.createElement(
    "div",
    { className: "str-chat__load-more-button" },
    import_react143.default.createElement("button", { "aria-label": "Load More Channels", className: "str-chat__load-more-button__button str-chat__cta-button", "data-testid": "load-more-button", disabled: loading, onClick }, loading ? import_react143.default.createElement(LoadingIndicator2, null) : childrenOrDefaultString)
  );
};
var LoadMoreButton = import_react143.default.memo(UnMemoizedLoadMoreButton);

// node_modules/stream-chat-react/dist/components/LoadMore/LoadMorePaginator.js
var UnMemoizedLoadMorePaginator = function(props) {
  var children = props.children, hasNextPage = props.hasNextPage, isLoading = props.isLoading, _a = props.LoadMoreButton, LoadMoreButton2 = _a === void 0 ? LoadMoreButton : _a, loadNextPage = props.loadNextPage, refreshing = props.refreshing, reverse = props.reverse;
  var loadingState = typeof isLoading !== "undefined" ? isLoading : refreshing;
  (0, import_react144.useEffect)(function() {
    deprecationAndReplacementWarning([[{ refreshing }, { isLoading }]], "LoadMorePaginator");
  }, []);
  return import_react144.default.createElement(
    import_react144.default.Fragment,
    null,
    !reverse && children,
    hasNextPage && import_react144.default.createElement(LoadMoreButton2, { isLoading: loadingState, onClick: loadNextPage }),
    reverse && children
  );
};
var LoadMorePaginator = import_react144.default.memo(UnMemoizedLoadMorePaginator);

// node_modules/stream-chat-react/dist/components/ChannelList/ChannelList.js
var DEFAULT_FILTERS = {};
var DEFAULT_OPTIONS2 = {};
var DEFAULT_SORT = {};
var UnMemoizedChannelList = function(props) {
  var _a, _b;
  var additionalChannelSearchProps = props.additionalChannelSearchProps, _c = props.Avatar, Avatar2 = _c === void 0 ? Avatar : _c, allowNewMessagesFromUnfilteredChannels = props.allowNewMessagesFromUnfilteredChannels, channelRenderFilterFn = props.channelRenderFilterFn, _d = props.ChannelSearch, ChannelSearch2 = _d === void 0 ? ChannelSearch : _d, customActiveChannel = props.customActiveChannel, _e = props.EmptyStateIndicator, EmptyStateIndicator2 = _e === void 0 ? EmptyStateIndicator : _e, filters = props.filters, _f = props.LoadingErrorIndicator, LoadingErrorIndicator2 = _f === void 0 ? ChatDown : _f, _g = props.LoadingIndicator, LoadingIndicator3 = _g === void 0 ? LoadingChannels : _g, _h = props.List, List2 = _h === void 0 ? ChannelListMessenger : _h, lockChannelOrder = props.lockChannelOrder, onAddedToChannel = props.onAddedToChannel, onChannelDeleted = props.onChannelDeleted, onChannelHidden = props.onChannelHidden, onChannelTruncated = props.onChannelTruncated, onChannelUpdated = props.onChannelUpdated, onChannelVisible = props.onChannelVisible, onMessageNew = props.onMessageNew, onRemovedFromChannel = props.onRemovedFromChannel, options2 = props.options, _j = props.Paginator, Paginator = _j === void 0 ? LoadMorePaginator : _j, Preview = props.Preview, recoveryThrottleIntervalMs = props.recoveryThrottleIntervalMs, renderChannels = props.renderChannels, _k = props.sendChannelsToList, sendChannelsToList = _k === void 0 ? false : _k, _l = props.setActiveChannelOnMount, setActiveChannelOnMount = _l === void 0 ? true : _l, _m = props.showChannelSearch, showChannelSearch = _m === void 0 ? false : _m, _o = props.sort, sort2 = _o === void 0 ? DEFAULT_SORT : _o, _p = props.watchers, watchers = _p === void 0 ? {} : _p;
  var _q = useChatContext("ChannelList"), channel = _q.channel, channelsQueryState = _q.channelsQueryState, client = _q.client, closeMobileNav = _q.closeMobileNav, customClasses = _q.customClasses, _r = _q.navOpen, navOpen = _r === void 0 ? false : _r, setActiveChannel = _q.setActiveChannel, theme = _q.theme, useImageFlagEmojisOnWindows = _q.useImageFlagEmojisOnWindows;
  var channelListRef = (0, import_react145.useRef)(null);
  var _s = (0, import_react145.useState)(0), channelUpdateCount = _s[0], setChannelUpdateCount = _s[1];
  var _t = (0, import_react145.useState)(false), searchActive = _t[0], setSearchActive = _t[1];
  var activeChannelHandler = function(channels2, setChannels2) {
    return __awaiter(void 0, void 0, void 0, function() {
      var customActiveChannelObject, newChannels;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!channels2.length || channels2.length > ((options2 === null || options2 === void 0 ? void 0 : options2.limit) || MAX_QUERY_CHANNELS_LIMIT)) {
              return [
                2
                /*return*/
              ];
            }
            if (!customActiveChannel)
              return [3, 3];
            customActiveChannelObject = channels2.find(function(chan) {
              return chan.id === customActiveChannel;
            });
            if (!!customActiveChannelObject)
              return [3, 2];
            return [4, client.queryChannels({ id: customActiveChannel })];
          case 1:
            customActiveChannelObject = _a2.sent()[0];
            _a2.label = 2;
          case 2:
            if (customActiveChannelObject) {
              setActiveChannel(customActiveChannelObject, watchers);
              newChannels = moveChannelUp({
                activeChannel: customActiveChannelObject,
                channels: channels2,
                cid: customActiveChannelObject.cid
              });
              setChannels2(newChannels);
            }
            return [
              2
              /*return*/
            ];
          case 3:
            if (setActiveChannelOnMount) {
              setActiveChannel(channels2[0], watchers);
            }
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  var forceUpdate = function() {
    return setChannelUpdateCount(function(count) {
      return count + 1;
    });
  };
  var onSearch = (0, import_react145.useCallback)(function(event) {
    var _a2;
    if (!event.target.value) {
      setSearchActive(false);
    } else {
      setSearchActive(true);
    }
    (_a2 = additionalChannelSearchProps === null || additionalChannelSearchProps === void 0 ? void 0 : additionalChannelSearchProps.onSearch) === null || _a2 === void 0 ? void 0 : _a2.call(additionalChannelSearchProps, event);
  }, []);
  var onSearchExit = (0, import_react145.useCallback)(function() {
    var _a2;
    setSearchActive(false);
    (_a2 = additionalChannelSearchProps === null || additionalChannelSearchProps === void 0 ? void 0 : additionalChannelSearchProps.onSearchExit) === null || _a2 === void 0 ? void 0 : _a2.call(additionalChannelSearchProps);
  }, []);
  var _u = usePaginatedChannels(client, filters || DEFAULT_FILTERS, sort2 || DEFAULT_SORT, options2 || DEFAULT_OPTIONS2, activeChannelHandler, recoveryThrottleIntervalMs), channels = _u.channels, hasNextPage = _u.hasNextPage, loadNextPage = _u.loadNextPage, setChannels = _u.setChannels;
  var loadedChannels = channelRenderFilterFn ? channelRenderFilterFn(channels) : channels;
  useMobileNavigation(channelListRef, navOpen, closeMobileNav);
  useMessageNewListener(setChannels, lockChannelOrder, allowNewMessagesFromUnfilteredChannels);
  useNotificationMessageNewListener(setChannels, onMessageNew, allowNewMessagesFromUnfilteredChannels);
  useNotificationAddedToChannelListener(setChannels, onAddedToChannel, allowNewMessagesFromUnfilteredChannels);
  useNotificationRemovedFromChannelListener(setChannels, onRemovedFromChannel);
  useChannelDeletedListener(setChannels, onChannelDeleted);
  useChannelHiddenListener(setChannels, onChannelHidden);
  useChannelVisibleListener(setChannels, onChannelVisible);
  useChannelTruncatedListener(setChannels, onChannelTruncated, forceUpdate);
  useChannelUpdatedListener(setChannels, onChannelUpdated, forceUpdate);
  useConnectionRecoveredListener(forceUpdate);
  useUserPresenceChangedListener(setChannels);
  (0, import_react145.useEffect)(function() {
    var handleEvent = function(event) {
      if (event.cid === (channel === null || channel === void 0 ? void 0 : channel.cid)) {
        setActiveChannel();
      }
    };
    client.on("channel.deleted", handleEvent);
    client.on("channel.hidden", handleEvent);
    return function() {
      client.off("channel.deleted", handleEvent);
      client.off("channel.hidden", handleEvent);
    };
  }, [channel === null || channel === void 0 ? void 0 : channel.cid]);
  var renderChannel = function(item) {
    var previewProps = {
      activeChannel: channel,
      Avatar: Avatar2,
      channel: item,
      // forces the update of preview component on channel update
      channelUpdateCount,
      key: item.id,
      Preview,
      setActiveChannel,
      watchers
    };
    return import_react145.default.createElement(ChannelPreview, __assign({}, previewProps));
  };
  var className = clsx_default((_a = customClasses === null || customClasses === void 0 ? void 0 : customClasses.chat) !== null && _a !== void 0 ? _a : "str-chat", theme, (_b = customClasses === null || customClasses === void 0 ? void 0 : customClasses.channelList) !== null && _b !== void 0 ? _b : "str-chat-channel-list str-chat__channel-list str-chat__channel-list-react", {
    "str-chat--windows-flags": useImageFlagEmojisOnWindows && navigator.userAgent.match(/Win/),
    "str-chat-channel-list--open": navOpen
  });
  var showChannelList = !searchActive || (additionalChannelSearchProps === null || additionalChannelSearchProps === void 0 ? void 0 : additionalChannelSearchProps.popupResults);
  return import_react145.default.createElement(
    ChannelListContextProvider,
    { value: { channels, setChannels } },
    import_react145.default.createElement(
      "div",
      { className, ref: channelListRef },
      showChannelSearch && import_react145.default.createElement(ChannelSearch2, __assign({ onSearch, onSearchExit, setChannels }, additionalChannelSearchProps)),
      showChannelList && import_react145.default.createElement(List2, { error: channelsQueryState.error, loadedChannels: sendChannelsToList ? loadedChannels : void 0, loading: !!channelsQueryState.queryInProgress && ["reload", "uninitialized"].includes(channelsQueryState.queryInProgress), LoadingErrorIndicator: LoadingErrorIndicator2, LoadingIndicator: LoadingIndicator3, setChannels }, !(loadedChannels === null || loadedChannels === void 0 ? void 0 : loadedChannels.length) ? import_react145.default.createElement(EmptyStateIndicator2, { listType: "channel" }) : import_react145.default.createElement(Paginator, { hasNextPage, isLoading: channelsQueryState.queryInProgress === "load-more", loadNextPage }, renderChannels ? renderChannels(loadedChannels, renderChannel) : loadedChannels.map(function(channel2) {
        return renderChannel(channel2);
      })))
    )
  );
};
var ChannelList = import_react145.default.memo(UnMemoizedChannelList);

// node_modules/stream-chat-react/dist/components/Chat/Chat.js
var import_react149 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Chat/hooks/useChat.js
var import_react146 = __toESM(require_react());

// node_modules/stream-chat-react/dist/version.js
var version = "10.22.3";

// node_modules/stream-chat-react/dist/components/Chat/hooks/useChat.js
var useChat = function(_a) {
  var _b, _c;
  var client = _a.client, _d = _a.defaultLanguage, defaultLanguage = _d === void 0 ? "en" : _d, i18nInstance = _a.i18nInstance, initialNavOpen = _a.initialNavOpen;
  var _e = (0, import_react146.useState)({
    t: function(key) {
      return key;
    },
    tDateTimeParser: defaultDateTimeParser,
    userLanguage: "en"
  }), translators = _e[0], setTranslators = _e[1];
  var _f = (0, import_react146.useState)(), channel = _f[0], setChannel = _f[1];
  var _g = (0, import_react146.useState)([]), mutes = _g[0], setMutes = _g[1];
  var _h = (0, import_react146.useState)(initialNavOpen), navOpen = _h[0], setNavOpen = _h[1];
  var _j = (0, import_react146.useState)({}), latestMessageDatesByChannels = _j[0], setLatestMessageDatesByChannels = _j[1];
  var clientMutes = ((_b = client.user) === null || _b === void 0 ? void 0 : _b.mutes) || [];
  var closeMobileNav = function() {
    return setNavOpen(false);
  };
  var openMobileNav = function() {
    return setTimeout(function() {
      return setNavOpen(true);
    }, 100);
  };
  var appSettings = (0, import_react146.useRef)(null);
  var getAppSettings = function() {
    if (appSettings.current) {
      return appSettings.current;
    }
    appSettings.current = client.getAppSettings();
    return appSettings.current;
  };
  (0, import_react146.useEffect)(function() {
    if (client) {
      var userAgent = client.getUserAgent();
      if (!userAgent.includes("stream-chat-react")) {
        client.setUserAgent("stream-chat-react-".concat(version, "-").concat(userAgent));
      }
    }
  }, [client]);
  (0, import_react146.useEffect)(function() {
    setMutes(clientMutes);
    var handleEvent = function(event) {
      var _a2;
      setMutes(((_a2 = event.me) === null || _a2 === void 0 ? void 0 : _a2.mutes) || []);
    };
    client.on("notification.mutes_updated", handleEvent);
    return function() {
      return client.off("notification.mutes_updated", handleEvent);
    };
  }, [clientMutes === null || clientMutes === void 0 ? void 0 : clientMutes.length]);
  (0, import_react146.useEffect)(function() {
    var _a2;
    var userLanguage = (_a2 = client.user) === null || _a2 === void 0 ? void 0 : _a2.language;
    if (!userLanguage) {
      var browserLanguage = window.navigator.language.slice(0, 2);
      userLanguage = isLanguageSupported(browserLanguage) ? browserLanguage : defaultLanguage;
    }
    var streami18n = i18nInstance || new Streami18n({ language: userLanguage });
    streami18n.registerSetLanguageCallback(function(t) {
      return setTranslators(function(prevTranslator) {
        return __assign(__assign({}, prevTranslator), { t });
      });
    });
    streami18n.getTranslators().then(function(translator) {
      setTranslators(__assign(__assign({}, translator), { userLanguage: userLanguage || defaultLanguage }));
    });
  }, [i18nInstance]);
  var setActiveChannel = (0, import_react146.useCallback)(function(activeChannel, watchers, event) {
    if (watchers === void 0) {
      watchers = {};
    }
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (event && event.preventDefault)
              event.preventDefault();
            if (!(activeChannel && Object.keys(watchers).length))
              return [3, 2];
            return [4, activeChannel.query({ watch: true, watchers })];
          case 1:
            _a2.sent();
            _a2.label = 2;
          case 2:
            setChannel(activeChannel);
            closeMobileNav();
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, []);
  (0, import_react146.useEffect)(function() {
    setLatestMessageDatesByChannels({});
  }, [(_c = client.user) === null || _c === void 0 ? void 0 : _c.id]);
  return {
    channel,
    closeMobileNav,
    getAppSettings,
    latestMessageDatesByChannels,
    mutes,
    navOpen,
    openMobileNav,
    setActiveChannel,
    translators
  };
};

// node_modules/stream-chat-react/dist/components/Chat/hooks/useCreateChatContext.js
var import_react147 = __toESM(require_react());
var useCreateChatContext = function(value) {
  var _a;
  var channel = value.channel, channelsQueryState = value.channelsQueryState, client = value.client, closeMobileNav = value.closeMobileNav, customClasses = value.customClasses, getAppSettings = value.getAppSettings, latestMessageDatesByChannels = value.latestMessageDatesByChannels, mutes = value.mutes, navOpen = value.navOpen, openMobileNav = value.openMobileNav, setActiveChannel = value.setActiveChannel, theme = value.theme, themeVersion = value.themeVersion, useImageFlagEmojisOnWindows = value.useImageFlagEmojisOnWindows;
  var channelCid = channel === null || channel === void 0 ? void 0 : channel.cid;
  var channelsQueryError = channelsQueryState.error;
  var channelsQueryInProgress = channelsQueryState.queryInProgress;
  var clientValues = "".concat(client.clientID).concat(Object.keys(client.activeChannels).length).concat(Object.keys(client.listeners).length).concat(client.mutedChannels.length, "\n  ").concat((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);
  var mutedUsersLength = mutes.length;
  var chatContext = (0, import_react147.useMemo)(function() {
    return {
      channel,
      channelsQueryState,
      client,
      closeMobileNav,
      customClasses,
      getAppSettings,
      latestMessageDatesByChannels,
      mutes,
      navOpen,
      openMobileNav,
      setActiveChannel,
      theme,
      themeVersion,
      useImageFlagEmojisOnWindows
    };
  }, [
    channelCid,
    channelsQueryError,
    channelsQueryInProgress,
    clientValues,
    getAppSettings,
    mutedUsersLength,
    navOpen
  ]);
  return chatContext;
};

// node_modules/stream-chat-react/dist/components/Chat/hooks/useChannelsQueryState.js
var import_react148 = __toESM(require_react());
var useChannelsQueryState = function() {
  var _a = (0, import_react148.useState)(null), error = _a[0], setError = _a[1];
  var _b = (0, import_react148.useState)("uninitialized"), queryInProgress = _b[0], setQueryInProgress = _b[1];
  return {
    error,
    queryInProgress,
    setError,
    setQueryInProgress
  };
};

// node_modules/stream-chat-react/dist/components/Chat/hooks/useCustomStyles.js
var darkModeTheme = {
  "--bg-gradient-end": "#101214",
  "--bg-gradient-start": "#070a0d",
  "--black": "#ffffff",
  "--blue-alice": "#00193d",
  "--border": "#141924",
  "--button-background": "#ffffff",
  "--button-text": "#005fff",
  "--grey": "#7a7a7a",
  "--grey-gainsboro": "#2d2f2f",
  "--grey-whisper": "#1c1e22",
  "--modal-shadow": "#000000",
  "--overlay": "#00000066",
  "--overlay-dark": "#ffffffcc",
  "--shadow-icon": "#00000080",
  "--targetedMessageBackground": "#302d22",
  "--transparent": "transparent",
  "--white": "#101418",
  "--white-smoke": "#13151b",
  "--white-snow": "#070a0d"
};
var useCustomStyles = function(customStyles) {
  if (!customStyles)
    return;
  for (var _i = 0, _a = Object.entries(customStyles); _i < _a.length; _i++) {
    var _b = _a[_i], key = _b[0], value = _b[1];
    document.documentElement.style.setProperty(key, value);
  }
};

// node_modules/stream-chat-react/dist/components/Chat/Chat.js
var Chat = function(props) {
  var children = props.children, client = props.client, customClasses = props.customClasses, customStyles = props.customStyles, _a = props.darkMode, darkMode = _a === void 0 ? false : _a, defaultLanguage = props.defaultLanguage, i18nInstance = props.i18nInstance, _b = props.initialNavOpen, initialNavOpen = _b === void 0 ? true : _b, _c = props.theme, theme = _c === void 0 ? "messaging light" : _c, _d = props.useImageFlagEmojisOnWindows, useImageFlagEmojisOnWindows = _d === void 0 ? false : _d;
  var _e = useChat({ client, defaultLanguage, i18nInstance, initialNavOpen }), channel = _e.channel, closeMobileNav = _e.closeMobileNav, getAppSettings = _e.getAppSettings, latestMessageDatesByChannels = _e.latestMessageDatesByChannels, mutes = _e.mutes, navOpen = _e.navOpen, openMobileNav = _e.openMobileNav, setActiveChannel = _e.setActiveChannel, translators = _e.translators;
  var channelsQueryState = useChannelsQueryState();
  var themeVersion = typeof window !== "undefined" ? window.getComputedStyle(document.documentElement).getPropertyValue("--str-chat__theme-version").replace(" ", "") || "1" : "1";
  useCustomStyles(darkMode ? darkModeTheme : customStyles);
  var chatContextValue = useCreateChatContext({
    channel,
    channelsQueryState,
    client,
    closeMobileNav,
    customClasses,
    getAppSettings,
    latestMessageDatesByChannels,
    mutes,
    navOpen,
    openMobileNav,
    setActiveChannel,
    theme,
    themeVersion,
    useImageFlagEmojisOnWindows
  });
  if (!translators.t)
    return null;
  return import_react149.default.createElement(
    ChatProvider,
    { value: chatContextValue },
    import_react149.default.createElement(TranslationProvider, { value: translators }, children)
  );
};

// node_modules/stream-chat-react/dist/components/DateSeparator/DateSeparator.js
var import_react150 = __toESM(require_react());
var UnMemoizedDateSeparator = function(props) {
  var messageCreatedAt = props.date, formatDate = props.formatDate, _a = props.position, position4 = _a === void 0 ? "right" : _a, unread = props.unread;
  var _b = useTranslationContext("DateSeparator"), t = _b.t, tDateTimeParser = _b.tDateTimeParser;
  var formattedDate = getDateString({
    calendar: true,
    formatDate,
    messageCreatedAt,
    tDateTimeParser
  });
  return import_react150.default.createElement(
    "div",
    { className: "str-chat__date-separator", "data-testid": "date-separator" },
    (position4 === "right" || position4 === "center") && import_react150.default.createElement("hr", { className: "str-chat__date-separator-line" }),
    import_react150.default.createElement("div", { className: "str-chat__date-separator-date" }, unread ? "".concat(t("New"), " - ").concat(formattedDate) : formattedDate),
    (position4 === "left" || position4 === "center") && import_react150.default.createElement("hr", { className: "str-chat__date-separator-line" })
  );
};
var DateSeparator = import_react150.default.memo(UnMemoizedDateSeparator);

// node_modules/stream-chat-react/dist/components/EventComponent/EventComponent.js
var import_react151 = __toESM(require_react());
var UnMemoizedEventComponent = function(props) {
  var _a, _b, _c;
  var _d = props.Avatar, Avatar2 = _d === void 0 ? Avatar : _d, message = props.message;
  var tDateTimeParser = useTranslationContext("EventComponent").tDateTimeParser;
  var _e = message.created_at, created_at = _e === void 0 ? "" : _e, event = message.event, text5 = message.text, type = message.type;
  var getDateOptions = { messageCreatedAt: created_at.toString(), tDateTimeParser };
  if (type === "system")
    return import_react151.default.createElement(
      "div",
      { className: "str-chat__message--system", "data-testid": "message-system" },
      import_react151.default.createElement(
        "div",
        { className: "str-chat__message--system__text" },
        import_react151.default.createElement("div", { className: "str-chat__message--system__line" }),
        import_react151.default.createElement("p", null, text5),
        import_react151.default.createElement("div", { className: "str-chat__message--system__line" })
      ),
      import_react151.default.createElement(
        "div",
        { className: "str-chat__message--system__date" },
        import_react151.default.createElement(
          "strong",
          null,
          getDateString(__assign(__assign({}, getDateOptions), { format: "dddd" })),
          " "
        ),
        "at ",
        getDateString(__assign(__assign({}, getDateOptions), { format: "hh:mm A" }))
      )
    );
  if ((event === null || event === void 0 ? void 0 : event.type) === "member.removed" || (event === null || event === void 0 ? void 0 : event.type) === "member.added") {
    var name_1 = ((_a = event.user) === null || _a === void 0 ? void 0 : _a.name) || ((_b = event.user) === null || _b === void 0 ? void 0 : _b.id);
    var sentence = "".concat(name_1, " ").concat(event.type === "member.added" ? "has joined the chat" : "was removed from the chat");
    return import_react151.default.createElement(
      "div",
      { className: "str-chat__event-component__channel-event" },
      import_react151.default.createElement(Avatar2, { image: (_c = event.user) === null || _c === void 0 ? void 0 : _c.image, name: name_1, user: event.user }),
      import_react151.default.createElement(
        "div",
        { className: "str-chat__event-component__channel-event__content" },
        import_react151.default.createElement("em", { className: "str-chat__event-component__channel-event__sentence" }, sentence),
        import_react151.default.createElement("div", { className: "str-chat__event-component__channel-event__date" }, getDateString(__assign(__assign({}, getDateOptions), { format: "LT" })))
      )
    );
  }
  return null;
};
var EventComponent = import_react151.default.memo(UnMemoizedEventComponent);

// node_modules/stream-chat-react/dist/components/InfiniteScrollPaginator/InfiniteScroll.js
var import_react152 = __toESM(require_react());
var mousewheelListener = function(event) {
  if (event instanceof WheelEvent && event.deltaY === 1) {
    event.preventDefault();
  }
};
var InfiniteScroll = function(props) {
  var children = props.children, _a = props.element, element3 = _a === void 0 ? "div" : _a, hasMore = props.hasMore, hasMoreNewer = props.hasMoreNewer, hasNextPage = props.hasNextPage, hasPreviousPage = props.hasPreviousPage, head = props.head, _b = props.initialLoad, initialLoad = _b === void 0 ? true : _b, isLoading = props.isLoading, listenToScroll = props.listenToScroll, loader = props.loader, loadMore = props.loadMore, loadMoreNewer = props.loadMoreNewer, loadNextPage = props.loadNextPage, loadPreviousPage = props.loadPreviousPage, _c = props.threshold, threshold = _c === void 0 ? 250 : _c, _d = props.useCapture, useCapture = _d === void 0 ? false : _d, elementProps = __rest(props, ["children", "element", "hasMore", "hasMoreNewer", "hasNextPage", "hasPreviousPage", "head", "initialLoad", "isLoading", "listenToScroll", "loader", "loadMore", "loadMoreNewer", "loadNextPage", "loadPreviousPage", "threshold", "useCapture"]);
  var loadNextPageFn = loadNextPage || loadMoreNewer;
  var loadPreviousPageFn = loadPreviousPage || loadMore;
  var hasNextPageFlag = hasNextPage || hasMoreNewer;
  var hasPreviousPageFlag = hasPreviousPage || hasMore;
  var scrollComponent = (0, import_react152.useRef)();
  var scrollListener = (0, import_react152.useCallback)(function() {
    var element4 = scrollComponent.current;
    if (!element4 || element4.offsetParent === null) {
      return;
    }
    var parentElement = element4.parentElement;
    var offset2 = element4.scrollHeight - parentElement.scrollTop - parentElement.clientHeight;
    var reverseOffset = parentElement.scrollTop;
    if (listenToScroll) {
      listenToScroll(offset2, reverseOffset, threshold);
    }
    if (isLoading)
      return;
    if (reverseOffset < Number(threshold) && typeof loadPreviousPageFn === "function" && hasPreviousPageFlag) {
      loadPreviousPageFn();
    }
    if (offset2 < Number(threshold) && typeof loadNextPageFn === "function" && hasNextPageFlag) {
      loadNextPageFn();
    }
  }, [
    hasPreviousPageFlag,
    hasNextPageFlag,
    isLoading,
    listenToScroll,
    loadPreviousPageFn,
    loadNextPageFn,
    threshold
  ]);
  (0, import_react152.useEffect)(function() {
    deprecationAndReplacementWarning([
      [{ hasMoreNewer }, { hasNextPage }],
      [{ loadMoreNewer }, { loadNextPage }],
      [{ hasMore }, { hasPreviousPage }],
      [{ loadMore }, { loadPreviousPage }]
    ], "InfiniteScroll");
  }, []);
  (0, import_react152.useLayoutEffect)(function() {
    var _a2;
    var scrollElement = (_a2 = scrollComponent.current) === null || _a2 === void 0 ? void 0 : _a2.parentNode;
    if (!scrollElement)
      return;
    scrollElement.addEventListener("scroll", scrollListener, useCapture);
    scrollElement.addEventListener("resize", scrollListener, useCapture);
    return function() {
      scrollElement.removeEventListener("scroll", scrollListener, useCapture);
      scrollElement.removeEventListener("resize", scrollListener, useCapture);
    };
  }, [initialLoad, scrollListener, useCapture]);
  (0, import_react152.useEffect)(function() {
    var _a2;
    var scrollElement = (_a2 = scrollComponent.current) === null || _a2 === void 0 ? void 0 : _a2.parentNode;
    if (scrollElement) {
      scrollElement.addEventListener("wheel", mousewheelListener, { passive: false });
    }
    return function() {
      if (scrollElement) {
        scrollElement.removeEventListener("wheel", mousewheelListener, useCapture);
      }
    };
  }, [useCapture]);
  var attributes = __assign(__assign({}, elementProps), { ref: function(element4) {
    scrollComponent.current = element4;
  } });
  var childrenArray = [loader, children];
  if (head) {
    childrenArray.unshift(head);
  }
  return import_react152.default.createElement(element3, attributes, childrenArray);
};

// node_modules/stream-chat-react/dist/components/Message/FixedHeightMessage.js
var import_react155 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Message/hooks/useActionHandler.js
var handleActionWarning = "Action handler was called, but it is missing one of its required arguments. \nMake sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.";
function useActionHandler(message) {
  var _this = this;
  var _a = useChannelActionContext("useActionHandler"), removeMessage = _a.removeMessage, updateMessage = _a.updateMessage;
  var channel = useChannelStateContext("useActionHandler").channel;
  return function(dataOrName, value, event) {
    return __awaiter(_this, void 0, void 0, function() {
      var messageID, formData, data;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (event)
              event.preventDefault();
            if (!message || !updateMessage || !removeMessage || !channel) {
              console.warn(handleActionWarning);
              return [
                2
                /*return*/
              ];
            }
            messageID = message.id;
            formData = {};
            if (typeof dataOrName === "string") {
              formData[dataOrName] = value;
            } else {
              formData = __assign({}, dataOrName);
            }
            if (!messageID)
              return [3, 2];
            return [4, channel.sendAction(messageID, formData)];
          case 1:
            data = _a2.sent();
            if (data === null || data === void 0 ? void 0 : data.message) {
              updateMessage(data.message);
            } else {
              removeMessage(message);
            }
            _a2.label = 2;
          case 2:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
}

// node_modules/stream-chat-react/dist/components/Message/hooks/useDeleteHandler.js
var useDeleteHandler = function(message, notifications) {
  if (notifications === void 0) {
    notifications = {};
  }
  var getErrorNotification = notifications.getErrorNotification, notify = notifications.notify;
  var _a = useChannelActionContext("useDeleteHandler"), deleteMessage = _a.deleteMessage, updateMessage = _a.updateMessage;
  var client = useChatContext("useDeleteHandler").client;
  var t = useTranslationContext("useDeleteHandler").t;
  return function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var deletedMessage, e_1, errorMessage2;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            event.preventDefault();
            if (!(message === null || message === void 0 ? void 0 : message.id) || !client || !updateMessage) {
              return [
                2
                /*return*/
              ];
            }
            _a2.label = 1;
          case 1:
            _a2.trys.push([1, 3, , 4]);
            return [4, deleteMessage(message)];
          case 2:
            deletedMessage = _a2.sent();
            updateMessage(deletedMessage);
            return [3, 4];
          case 3:
            e_1 = _a2.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);
            if (notify)
              notify(errorMessage2 || t("Error deleting message"), "error");
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useEditHandler.js
var import_react153 = __toESM(require_react());
var useEditHandler = function(customInitialState, customSetEditing, customClearEditingHandler) {
  if (customInitialState === void 0) {
    customInitialState = false;
  }
  var _a = (0, import_react153.useState)(customInitialState), editing = _a[0], setEditing = _a[1];
  var setEdit = customSetEditing || function(event) {
    if (event === null || event === void 0 ? void 0 : event.preventDefault) {
      event.preventDefault();
    }
    setEditing(true);
  };
  var clearEdit = customClearEditingHandler || function(event) {
    if (event === null || event === void 0 ? void 0 : event.preventDefault) {
      event.preventDefault();
    }
    setEditing(false);
  };
  return { clearEdit, editing, setEdit };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useFlagHandler.js
var missingUseFlagHandlerParameterWarning = "useFlagHandler was called but it is missing one or more necessary parameters.";
var useFlagHandler = function(message, notifications) {
  if (notifications === void 0) {
    notifications = {};
  }
  var client = useChatContext("useFlagHandler").client;
  var t = useTranslationContext("useFlagHandler").t;
  return function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var getErrorNotification, getSuccessNotification, notify, successMessage, e_1, errorMessage2;
      var _a;
      return __generator(this, function(_b) {
        switch (_b.label) {
          case 0:
            event.preventDefault();
            getErrorNotification = notifications.getErrorNotification, getSuccessNotification = notifications.getSuccessNotification, notify = notifications.notify;
            if (!client || !t || !notify || !(message === null || message === void 0 ? void 0 : message.id)) {
              console.warn(missingUseFlagHandlerParameterWarning);
              return [
                2
                /*return*/
              ];
            }
            if ((_a = client.user) === null || _a === void 0 ? void 0 : _a.banned) {
              return [2, notify(t("Error adding flag"), "error")];
            }
            _b.label = 1;
          case 1:
            _b.trys.push([1, 3, , 4]);
            return [4, client.flagMessage(message.id)];
          case 2:
            _b.sent();
            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message]);
            notify(successMessage || t("Message has been successfully flagged"), "success");
            return [3, 4];
          case 3:
            e_1 = _b.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);
            notify(errorMessage2 || t("Error adding flag"), "error");
            return [3, 4];
          case 4:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useMentionsHandler.js
function createEventHandler(fn2, message) {
  return function(event) {
    var _a;
    if (typeof fn2 !== "function" || !((_a = message === null || message === void 0 ? void 0 : message.mentioned_users) === null || _a === void 0 ? void 0 : _a.length)) {
      return;
    }
    fn2(event, message.mentioned_users);
  };
}
var useMentionsHandler = function(message, customMentionHandler) {
  var _a = useChannelActionContext("useMentionsHandler"), contextOnMentionsClick = _a.onMentionsClick, contextOnMentionsHover = _a.onMentionsHover;
  var onMentionsClick = (customMentionHandler === null || customMentionHandler === void 0 ? void 0 : customMentionHandler.onMentionsClick) || contextOnMentionsClick || function() {
    return null;
  };
  var onMentionsHover = (customMentionHandler === null || customMentionHandler === void 0 ? void 0 : customMentionHandler.onMentionsHover) || contextOnMentionsHover || function() {
    return null;
  };
  return {
    onMentionsClick: createEventHandler(onMentionsClick, message),
    onMentionsHover: createEventHandler(onMentionsHover, message)
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useMuteHandler.js
var missingUseMuteHandlerParamsWarning = "useMuteHandler was called but it is missing one or more necessary parameter.";
var useMuteHandler = function(message, notifications) {
  if (notifications === void 0) {
    notifications = {};
  }
  var mutes = useChannelStateContext("useMuteHandler").mutes;
  var client = useChatContext("useMuteHandler").client;
  var t = useTranslationContext("useMuteHandler").t;
  return function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var getErrorNotification, getSuccessNotification, notify, successMessage, e_1, errorMessage2, fallbackMessage, successMessage, e_2, errorMessage2;
      return __generator(this, function(_a) {
        switch (_a.label) {
          case 0:
            event.preventDefault();
            getErrorNotification = notifications.getErrorNotification, getSuccessNotification = notifications.getSuccessNotification, notify = notifications.notify;
            if (!t || !(message === null || message === void 0 ? void 0 : message.user) || !notify || !client) {
              console.warn(missingUseMuteHandlerParamsWarning);
              return [
                2
                /*return*/
              ];
            }
            if (!!isUserMuted(message, mutes))
              return [3, 5];
            _a.label = 1;
          case 1:
            _a.trys.push([1, 3, , 4]);
            return [4, client.muteUser(message.user.id)];
          case 2:
            _a.sent();
            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message.user]);
            notify(successMessage || t("{{ user }} has been muted", {
              user: message.user.name || message.user.id
            }), "success");
            return [3, 4];
          case 3:
            e_1 = _a.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user]);
            notify(errorMessage2 || t("Error muting a user ..."), "error");
            return [3, 4];
          case 4:
            return [3, 8];
          case 5:
            _a.trys.push([5, 7, , 8]);
            return [4, client.unmuteUser(message.user.id)];
          case 6:
            _a.sent();
            fallbackMessage = t("{{ user }} has been unmuted", {
              user: message.user.name || message.user.id
            });
            successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message.user]) || fallbackMessage;
            if (typeof successMessage === "string") {
              notify(successMessage, "success");
            }
            return [3, 8];
          case 7:
            e_2 = _a.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message.user]) || t("Error unmuting a user ...");
            if (typeof errorMessage2 === "string") {
              notify(errorMessage2, "error");
            }
            return [3, 8];
          case 8:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useOpenThreadHandler.js
var useOpenThreadHandler = function(message, customOpenThread) {
  var channelOpenThread = useChannelActionContext("useOpenThreadHandler").openThread;
  var openThread = customOpenThread || channelOpenThread;
  return function(event) {
    if (!openThread || !message) {
      console.warn("Open thread handler was called but it is missing one of its parameters");
      return;
    }
    openThread(message, event);
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/usePinHandler.js
var usePinHandler = function(message, _permissions, notifications) {
  if (_permissions === void 0) {
    _permissions = defaultPinPermissions;
  }
  if (notifications === void 0) {
    notifications = {};
  }
  var getErrorNotification = notifications.getErrorNotification, notify = notifications.notify;
  var updateMessage = useChannelActionContext("usePinHandler").updateMessage;
  var _a = useChannelStateContext("usePinHandler").channelCapabilities, channelCapabilities = _a === void 0 ? {} : _a;
  var client = useChatContext("usePinHandler").client;
  var t = useTranslationContext("usePinHandler").t;
  var canPin = !!channelCapabilities["pin-message"];
  var handlePin = function(event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var optimisticMessage, e_1, errorMessage2, optimisticMessage, e_2, errorMessage2;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            event.preventDefault();
            if (!message)
              return [
                2
                /*return*/
              ];
            if (!!message.pinned)
              return [3, 5];
            _a2.label = 1;
          case 1:
            _a2.trys.push([1, 3, , 4]);
            optimisticMessage = __assign(__assign({}, message), { pinned: true, pinned_at: /* @__PURE__ */ new Date(), pinned_by: client.user });
            updateMessage(optimisticMessage);
            return [4, client.pinMessage(message)];
          case 2:
            _a2.sent();
            return [3, 4];
          case 3:
            e_1 = _a2.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);
            if (notify)
              notify(errorMessage2 || t("Error pinning message"), "error");
            updateMessage(message);
            return [3, 4];
          case 4:
            return [3, 8];
          case 5:
            _a2.trys.push([5, 7, , 8]);
            optimisticMessage = __assign(__assign({}, message), { pin_expires: null, pinned: false, pinned_at: null, pinned_by: null });
            updateMessage(optimisticMessage);
            return [4, client.unpinMessage(message)];
          case 6:
            _a2.sent();
            return [3, 8];
          case 7:
            e_2 = _a2.sent();
            errorMessage2 = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);
            if (notify)
              notify(errorMessage2 || t("Error removing message pin"), "error");
            updateMessage(message);
            return [3, 8];
          case 8:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
  return { canPin, handlePin };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useReactionHandler.js
var import_react154 = __toESM(require_react());
var import_lodash14 = __toESM(require_lodash3());
var reactionHandlerWarning = "Reaction handler was called, but it is missing one of its required arguments.\nMake sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.";
var useReactionHandler = function(message) {
  var updateMessage = useChannelActionContext("useReactionHandler").updateMessage;
  var _a = useChannelStateContext("useReactionHandler"), channel = _a.channel, channelCapabilities = _a.channelCapabilities;
  var client = useChatContext("useReactionHandler").client;
  var createMessagePreview = (0, import_react154.useCallback)(function(add, reaction, message2) {
    var _a2, _b;
    var newReactionCounts = (message2 === null || message2 === void 0 ? void 0 : message2.reaction_counts) || {};
    var reactionType = reaction.type;
    var hasReaction = !!newReactionCounts[reactionType];
    if (add) {
      newReactionCounts[reactionType] = hasReaction ? newReactionCounts[reactionType] + 1 : 1;
    } else {
      if (hasReaction && newReactionCounts[reactionType] > 1) {
        newReactionCounts[reactionType]--;
      } else {
        delete newReactionCounts[reactionType];
      }
    }
    var newReactions = add ? __spreadArray([reaction], (message2 === null || message2 === void 0 ? void 0 : message2.latest_reactions) || [], true) : (_a2 = message2.latest_reactions) === null || _a2 === void 0 ? void 0 : _a2.filter(function(item) {
      return !(item.type === reaction.type && item.user_id === reaction.user_id);
    });
    var newOwnReactions = add ? __spreadArray([reaction], (message2 === null || message2 === void 0 ? void 0 : message2.own_reactions) || [], true) : (_b = message2 === null || message2 === void 0 ? void 0 : message2.own_reactions) === null || _b === void 0 ? void 0 : _b.filter(function(item) {
      return item.type !== reaction.type;
    });
    return __assign(__assign({}, message2), { latest_reactions: newReactions || message2.latest_reactions, own_reactions: newOwnReactions, reaction_counts: newReactionCounts, reaction_scores: newReactionCounts });
  }, [client.user, client.userID]);
  var createReactionPreview = function(type) {
    var _a2;
    return {
      message_id: message === null || message === void 0 ? void 0 : message.id,
      score: 1,
      type,
      user: client.user,
      user_id: (_a2 = client.user) === null || _a2 === void 0 ? void 0 : _a2.id
    };
  };
  var toggleReaction = (0, import_lodash14.default)(function(id, type, add) {
    return __awaiter(void 0, void 0, void 0, function() {
      var newReaction, tempMessage, messageResponse, _a2, error_1;
      return __generator(this, function(_b) {
        switch (_b.label) {
          case 0:
            if (!message || !channelCapabilities["send-reaction"])
              return [
                2
                /*return*/
              ];
            newReaction = createReactionPreview(type);
            tempMessage = createMessagePreview(add, newReaction, message);
            _b.label = 1;
          case 1:
            _b.trys.push([1, 6, , 7]);
            updateMessage(tempMessage);
            if (!add)
              return [3, 3];
            return [4, channel.sendReaction(id, { type })];
          case 2:
            _a2 = _b.sent();
            return [3, 5];
          case 3:
            return [4, channel.deleteReaction(id, type)];
          case 4:
            _a2 = _b.sent();
            _b.label = 5;
          case 5:
            messageResponse = _a2;
            updateMessage(messageResponse.message);
            return [3, 7];
          case 6:
            error_1 = _b.sent();
            updateMessage(message);
            return [3, 7];
          case 7:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, 1e3);
  return function(reactionType, event) {
    return __awaiter(void 0, void 0, void 0, function() {
      var userExistingReaction, error_2;
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (event === null || event === void 0 ? void 0 : event.preventDefault) {
              event.preventDefault();
            }
            if (!message) {
              return [2, console.warn(reactionHandlerWarning)];
            }
            userExistingReaction = null;
            if (message.own_reactions) {
              message.own_reactions.forEach(function(reaction) {
                if (reaction.user && client.userID === reaction.user.id && reaction.type === reactionType) {
                  userExistingReaction = reaction;
                } else if (reaction.user && client.userID !== reaction.user.id) {
                  console.warn("message.own_reactions contained reactions from a different user, this indicates a bug");
                }
              });
            }
            _a2.label = 1;
          case 1:
            _a2.trys.push([1, 6, , 7]);
            if (!userExistingReaction)
              return [3, 3];
            return [4, toggleReaction(message.id, userExistingReaction.type, false)];
          case 2:
            _a2.sent();
            return [3, 5];
          case 3:
            return [4, toggleReaction(message.id, reactionType, true)];
          case 4:
            _a2.sent();
            _a2.label = 5;
          case 5:
            return [3, 7];
          case 6:
            error_2 = _a2.sent();
            console.log({ error: error_2 });
            return [3, 7];
          case 7:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
};
var useReactionClick = function(message, reactionSelectorRef, messageWrapperRef, closeReactionSelectorOnClick) {
  var _a = useChannelStateContext("useReactionClick").channelCapabilities, channelCapabilities = _a === void 0 ? {} : _a;
  var _b = (0, import_react154.useState)(false), showDetailedReactions = _b[0], setShowDetailedReactions = _b[1];
  var hasListener = (0, import_react154.useRef)(false);
  var isReactionEnabled = channelCapabilities["send-reaction"];
  var messageDeleted = !!(message === null || message === void 0 ? void 0 : message.deleted_at);
  var closeDetailedReactions = (0, import_react154.useCallback)(function(event) {
    var _a2;
    if (event.target instanceof HTMLElement && ((_a2 = reactionSelectorRef === null || reactionSelectorRef === void 0 ? void 0 : reactionSelectorRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.target)) && !closeReactionSelectorOnClick) {
      return;
    }
    setShowDetailedReactions(false);
  }, [setShowDetailedReactions, reactionSelectorRef]);
  (0, import_react154.useEffect)(function() {
    var messageWrapper = messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current;
    if (showDetailedReactions && !hasListener.current) {
      hasListener.current = true;
      document.addEventListener("click", closeDetailedReactions);
      if (messageWrapper) {
        messageWrapper.addEventListener("mouseleave", closeDetailedReactions);
      }
    }
    if (!showDetailedReactions && hasListener.current) {
      document.removeEventListener("click", closeDetailedReactions);
      if (messageWrapper) {
        messageWrapper.removeEventListener("mouseleave", closeDetailedReactions);
      }
      hasListener.current = false;
    }
    return function() {
      if (hasListener.current) {
        document.removeEventListener("click", closeDetailedReactions);
        if (messageWrapper) {
          messageWrapper.removeEventListener("mouseleave", closeDetailedReactions);
        }
        hasListener.current = false;
      }
    };
  }, [showDetailedReactions, closeDetailedReactions, messageWrapperRef]);
  (0, import_react154.useEffect)(function() {
    var messageWrapper = messageWrapperRef === null || messageWrapperRef === void 0 ? void 0 : messageWrapperRef.current;
    if (messageDeleted && hasListener.current) {
      document.removeEventListener("click", closeDetailedReactions);
      if (messageWrapper) {
        messageWrapper.removeEventListener("mouseleave", closeDetailedReactions);
      }
      hasListener.current = false;
    }
  }, [messageDeleted, closeDetailedReactions, messageWrapperRef]);
  var onReactionListClick = function(event) {
    var _a2;
    (_a2 = event === null || event === void 0 ? void 0 : event.stopPropagation) === null || _a2 === void 0 ? void 0 : _a2.call(event);
    setShowDetailedReactions(function(prev) {
      return !prev;
    });
  };
  return {
    isReactionEnabled,
    onReactionListClick,
    showDetailedReactions
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useRetryHandler.js
var useRetryHandler = function(customRetrySendMessage) {
  var contextRetrySendMessage = useChannelActionContext("useRetryHandler").retrySendMessage;
  var retrySendMessage = customRetrySendMessage || contextRetrySendMessage;
  return function(message) {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a) {
        switch (_a.label) {
          case 0:
            if (!message)
              return [3, 2];
            return [4, retrySendMessage(message)];
          case 1:
            _a.sent();
            _a.label = 2;
          case 2:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  };
};

// node_modules/stream-chat-react/dist/components/Message/hooks/useUserHandler.js
var useUserHandler = function(message, eventHandlers) {
  return {
    onUserClick: function(event) {
      if (typeof (eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onUserClickHandler) !== "function" || !(message === null || message === void 0 ? void 0 : message.user)) {
        return;
      }
      eventHandlers.onUserClickHandler(event, message.user);
    },
    onUserHover: function(event) {
      if (typeof (eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.onUserHoverHandler) !== "function" || !(message === null || message === void 0 ? void 0 : message.user)) {
        return;
      }
      eventHandlers.onUserHoverHandler(event, message.user);
    }
  };
};

// node_modules/stream-chat-react/dist/components/Message/FixedHeightMessage.js
var selectColor = function(number2, dark) {
  var hue = number2 * 137.508;
  return "hsl(".concat(hue, ",").concat(dark ? "50%" : "85%", ", ").concat(dark ? "75%" : "55%", ")");
};
var hashUserId = function(userId) {
  var hash3 = userId.split("").reduce(function(acc, c) {
    acc = (acc << 5) - acc + c.charCodeAt(0);
    return acc & acc;
  }, 0);
  return Math.abs(hash3) / Math.pow(10, Math.ceil(Math.log10(Math.abs(hash3) + 1)));
};
var getUserColor = function(theme, userId) {
  return selectColor(hashUserId(userId), theme.includes("dark"));
};
var UnMemoizedFixedHeightMessage = function(props) {
  var _a, _b, _c, _d;
  var propGroupedByUser = props.groupedByUser, propMessage = props.message;
  var theme = useChatContext("FixedHeightMessage").theme;
  var _e = useMessageContext("FixedHeightMessage"), contextGroupedByUser = _e.groupedByUser, contextMessage = _e.message;
  var _f = useComponentContext("FixedHeightMessage").MessageDeleted, MessageDeleted2 = _f === void 0 ? MessageDeleted : _f;
  var userLanguage = useTranslationContext("FixedHeightMessage").userLanguage;
  var groupedByUser = propGroupedByUser !== void 0 ? propGroupedByUser : contextGroupedByUser;
  var message = propMessage || contextMessage;
  var handleAction = useActionHandler(message);
  var handleDelete2 = useDeleteHandler(message);
  var role = useUserRole(message);
  var messageTextToRender = ((_a = message === null || message === void 0 ? void 0 : message.i18n) === null || _a === void 0 ? void 0 : _a["".concat(userLanguage, "_text")]) || (message === null || message === void 0 ? void 0 : message.text);
  var renderedText = (0, import_react155.useMemo)(function() {
    return renderText(messageTextToRender, message.mentioned_users);
  }, [
    message.mentioned_users,
    messageTextToRender
  ]);
  var userId = ((_b = message.user) === null || _b === void 0 ? void 0 : _b.id) || "";
  var userColor = (0, import_react155.useMemo)(function() {
    return getUserColor(theme, userId);
  }, [userId, theme]);
  var messageActionsHandler = (0, import_react155.useCallback)(function() {
    return getMessageActions(["delete"], { canDelete: role.canDelete });
  }, [role]);
  var images = (_c = message === null || message === void 0 ? void 0 : message.attachments) === null || _c === void 0 ? void 0 : _c.filter(function(_a2) {
    var type = _a2.type;
    return type === "image";
  });
  return import_react155.default.createElement(
    "div",
    { className: "str-chat__virtual-message__wrapper ".concat(role.isMyMessage ? "str-chat__virtual-message__wrapper--me" : "", " ").concat(groupedByUser ? "str-chat__virtual-message__wrapper--group" : ""), key: message.id },
    message.user && import_react155.default.createElement(Avatar, { image: message.user.image, name: message.user.name || message.user.id, shape: "rounded", size: 38, user: message.user }),
    import_react155.default.createElement(
      "div",
      { className: "str-chat__virtual-message__content" },
      import_react155.default.createElement(
        "div",
        { className: "str-chat__virtual-message__meta" },
        import_react155.default.createElement(
          "div",
          { className: "str-chat__virtual-message__author", style: { color: userColor } },
          import_react155.default.createElement("strong", null, ((_d = message.user) === null || _d === void 0 ? void 0 : _d.name) || "unknown")
        )
      ),
      message.deleted_at || message.type === "deleted" ? import_react155.default.createElement(MessageDeleted2, { message }) : import_react155.default.createElement(
        import_react155.default.Fragment,
        null,
        images && import_react155.default.createElement(Gallery, { images }),
        import_react155.default.createElement(
          "div",
          { className: "str-chat__virtual-message__text", "data-testid": "msg-text" },
          renderedText,
          message.mml && import_react155.default.createElement(MML, { actionHandler: handleAction, align: "left", source: message.mml }),
          import_react155.default.createElement(
            "div",
            { className: "str-chat__virtual-message__data" },
            import_react155.default.createElement(MessageActions, { customWrapperClass: "str-chat__virtual-message__actions", getMessageActions: messageActionsHandler, handleDelete: handleDelete2, message, mine: function() {
              return role.isMyMessage;
            } }),
            import_react155.default.createElement(
              "span",
              { className: "str-chat__virtual-message__date" },
              import_react155.default.createElement(MessageTimestamp, { customClass: "str-chat__message-simple-timestamp", message })
            )
          )
        )
      )
    )
  );
};
var FixedHeightMessage = import_react155.default.memo(UnMemoizedFixedHeightMessage);

// node_modules/stream-chat-react/dist/components/Message/Message.js
var import_react156 = __toESM(require_react());
var MessageWithContext = function(props) {
  var canPin = props.canPin, groupedByUser = props.groupedByUser, propMessage = props.Message, message = props.message, _a = props.messageActions, messageActions = _a === void 0 ? Object.keys(MESSAGE_ACTIONS) : _a, propOnUserClick = props.onUserClick, propOnUserHover = props.onUserHover, userRoles = props.userRoles;
  var contextMessage = useComponentContext("Message").Message;
  var actionsEnabled = message.type === "regular" && message.status === "received";
  var MessageUIComponent = propMessage || contextMessage;
  var _b = useEditHandler(), clearEdit = _b.clearEdit, editing = _b.editing, setEdit = _b.setEdit;
  var _c = useUserHandler(message, {
    onUserClickHandler: propOnUserClick,
    onUserHoverHandler: propOnUserHover
  }), onUserClick = _c.onUserClick, onUserHover = _c.onUserHover;
  var canDelete = userRoles.canDelete, canEdit = userRoles.canEdit, canFlag = userRoles.canFlag, canMute = userRoles.canMute, canQuote = userRoles.canQuote, canReact = userRoles.canReact, canReply = userRoles.canReply, isMyMessage = userRoles.isMyMessage;
  var messageActionsHandler = (0, import_react156.useCallback)(function() {
    return getMessageActions(messageActions, {
      canDelete,
      canEdit,
      canFlag,
      canMute,
      canPin,
      canQuote,
      canReact,
      canReply
    });
  }, [messageActions, canDelete, canEdit, canFlag, canMute, canPin, canQuote, canReact, canReply]);
  var canPinPropToNotPass = props.canPin, messageActionsPropToNotPass = props.messageActions, onlySenderCanEditPropToNotPass = props.onlySenderCanEdit, onUserClickPropToNotPass = props.onUserClick, onUserHoverPropToNotPass = props.onUserHover, userRolesPropToNotPass = props.userRoles, rest = __rest(props, ["canPin", "messageActions", "onlySenderCanEdit", "onUserClick", "onUserHover", "userRoles"]);
  var messageContextValue = __assign(__assign({}, rest), { actionsEnabled, clearEditingState: clearEdit, editing, getMessageActions: messageActionsHandler, handleEdit: setEdit, isMyMessage: function() {
    return isMyMessage;
  }, onUserClick, onUserHover, setEditingState: setEdit });
  return import_react156.default.createElement(
    MessageProvider,
    { value: messageContextValue },
    import_react156.default.createElement(MessageUIComponent, { groupedByUser })
  );
};
var MemoizedMessage = import_react156.default.memo(MessageWithContext, areMessagePropsEqual);
var Message = function(props) {
  var closeReactionSelectorOnClick = props.closeReactionSelectorOnClick, disableQuotedMessages = props.disableQuotedMessages, getDeleteMessageErrorNotification = props.getDeleteMessageErrorNotification, getFlagMessageErrorNotification = props.getFlagMessageErrorNotification, getFlagMessageSuccessNotification = props.getFlagMessageSuccessNotification, getMuteUserErrorNotification = props.getMuteUserErrorNotification, getMuteUserSuccessNotification = props.getMuteUserSuccessNotification, getPinMessageErrorNotification = props.getPinMessageErrorNotification, message = props.message, _a = props.onlySenderCanEdit, onlySenderCanEdit = _a === void 0 ? false : _a, propOnMentionsClick = props.onMentionsClick, propOnMentionsHover = props.onMentionsHover, propOpenThread = props.openThread, pinPermissions = props.pinPermissions, propRetrySendMessage = props.retrySendMessage;
  var addNotification = useChannelActionContext("Message").addNotification;
  var _b = useChannelStateContext("Message"), highlightedMessageId = _b.highlightedMessageId, mutes = _b.mutes;
  var reactionSelectorRef = (0, import_react156.useRef)(null);
  var handleAction = useActionHandler(message);
  var handleOpenThread = useOpenThreadHandler(message, propOpenThread);
  var handleReaction = useReactionHandler(message);
  var handleRetry = useRetryHandler(propRetrySendMessage);
  var userRoles = useUserRole(message, onlySenderCanEdit, disableQuotedMessages);
  var handleDelete2 = useDeleteHandler(message, {
    getErrorNotification: getDeleteMessageErrorNotification,
    notify: addNotification
  });
  var handleFlag = useFlagHandler(message, {
    getErrorNotification: getFlagMessageErrorNotification,
    getSuccessNotification: getFlagMessageSuccessNotification,
    notify: addNotification
  });
  var handleMute = useMuteHandler(message, {
    getErrorNotification: getMuteUserErrorNotification,
    getSuccessNotification: getMuteUserSuccessNotification,
    notify: addNotification
  });
  var _c = useMentionsHandler(message, {
    onMentionsClick: propOnMentionsClick,
    onMentionsHover: propOnMentionsHover
  }), onMentionsClick = _c.onMentionsClick, onMentionsHover = _c.onMentionsHover;
  var _d = usePinHandler(message, pinPermissions, {
    getErrorNotification: getPinMessageErrorNotification,
    notify: addNotification
  }), canPin = _d.canPin, handlePin = _d.handlePin;
  var _e = useReactionClick(message, reactionSelectorRef, void 0, closeReactionSelectorOnClick), isReactionEnabled = _e.isReactionEnabled, onReactionListClick = _e.onReactionListClick, showDetailedReactions = _e.showDetailedReactions;
  var highlighted = highlightedMessageId === message.id;
  return import_react156.default.createElement(MemoizedMessage, { additionalMessageInputProps: props.additionalMessageInputProps, autoscrollToBottom: props.autoscrollToBottom, canPin, customMessageActions: props.customMessageActions, disableQuotedMessages: props.disableQuotedMessages, endOfGroup: props.endOfGroup, firstOfGroup: props.firstOfGroup, formatDate: props.formatDate, groupedByUser: props.groupedByUser, groupStyles: props.groupStyles, handleAction, handleDelete: handleDelete2, handleFlag, handleMute, handleOpenThread, handlePin, handleReaction, handleRetry, highlighted, initialMessage: props.initialMessage, isReactionEnabled, lastReceivedId: props.lastReceivedId, message, Message: props.Message, messageActions: props.messageActions, messageListRect: props.messageListRect, mutes, onMentionsClickMessage: onMentionsClick, onMentionsHoverMessage: onMentionsHover, onReactionListClick, onUserClick: props.onUserClick, onUserHover: props.onUserHover, pinPermissions: props.pinPermissions, reactionSelectorRef, readBy: props.readBy, renderText: props.renderText, showDetailedReactions, threadList: props.threadList, unsafeHTML: props.unsafeHTML, userRoles });
};

// node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js
var import_react158 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageList/CustomNotification.js
var import_react157 = __toESM(require_react());
var UnMemoizedCustomNotification = function(props) {
  var active = props.active, children = props.children, className = props.className, type = props.type;
  if (!active)
    return null;
  return import_react157.default.createElement("div", { "aria-live": "polite", className: clsx_default("str-chat__custom-notification notification-".concat(type), "str-chat__notification", "str-chat-react__notification", className), "data-testid": "custom-notification" }, children);
};
var CustomNotification = import_react157.default.memo(UnMemoizedCustomNotification);

// node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js
var UnMemoizedConnectionStatus = function() {
  var client = useChatContext("ConnectionStatus").client;
  var t = useTranslationContext("ConnectionStatus").t;
  var _a = (0, import_react158.useState)(true), online = _a[0], setOnline = _a[1];
  (0, import_react158.useEffect)(function() {
    var connectionChanged = function(_a2) {
      var _b = _a2.online, onlineStatus = _b === void 0 ? false : _b;
      if (online !== onlineStatus) {
        setOnline(onlineStatus);
      }
    };
    client.on("connection.changed", connectionChanged);
    return function() {
      return client.off("connection.changed", connectionChanged);
    };
  }, [client, online]);
  return import_react158.default.createElement(CustomNotification, { active: !online, className: "str-chat__connection-status-notification", type: "error" }, t("Connection failure, reconnecting now..."));
};
var ConnectionStatus = import_react158.default.memo(UnMemoizedConnectionStatus);

// node_modules/stream-chat-react/dist/components/MessageList/GiphyPreviewMessage.js
var import_react159 = __toESM(require_react());
var GiphyPreviewMessage = function(props) {
  var message = props.message;
  return import_react159.default.createElement(
    "div",
    { className: "giphy-preview-message" },
    import_react159.default.createElement(Message, { message })
  );
};

// node_modules/stream-chat-react/dist/components/MessageList/MessageList.js
var import_react169 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useEnrichedMessages.js
var import_react160 = __toESM(require_react());
var useEnrichedMessages = function(args) {
  var channel = args.channel, disableDateSeparator = args.disableDateSeparator, groupStyles = args.groupStyles, headerPosition = args.headerPosition, hideDeletedMessages = args.hideDeletedMessages, hideNewMessageSeparator = args.hideNewMessageSeparator, messages = args.messages, noGroupByUser = args.noGroupByUser;
  var client = useChatContext("useEnrichedMessages").client;
  var HeaderComponent = useComponentContext("useEnrichedMessages").HeaderComponent;
  var lastRead = (0, import_react160.useMemo)(function() {
    var _a;
    return (_a = channel.lastRead) === null || _a === void 0 ? void 0 : _a.call(channel);
  }, [channel]);
  var enableDateSeparator = !disableDateSeparator;
  var messagesWithDates = !enableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : processMessages({
    enableDateSeparator,
    hideDeletedMessages,
    hideNewMessageSeparator,
    lastRead,
    messages,
    userId: client.userID || ""
  });
  if (HeaderComponent) {
    messagesWithDates = insertIntro(messagesWithDates, headerPosition);
  }
  var groupStylesFn = groupStyles || getGroupStyles;
  var messageGroupStyles = (0, import_react160.useMemo)(function() {
    return messagesWithDates.reduce(function(acc, message, i) {
      var style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser);
      if (style)
        acc[message.id] = style;
      return acc;
    }, {});
  }, [messagesWithDates, noGroupByUser]);
  return { messageGroupStyles, messages: messagesWithDates };
};

// node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListElements.js
var import_react162 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageList/hooks/useLastReadData.js
var import_react161 = __toESM(require_react());
var useLastReadData = function(props) {
  var messages = props.messages, read2 = props.read, returnAllReadData = props.returnAllReadData, userID = props.userID;
  return (0, import_react161.useMemo)(function() {
    return getReadStates(messages.filter(function(_a) {
      var user = _a.user;
      return (user === null || user === void 0 ? void 0 : user.id) === userID;
    }), read2, returnAllReadData);
  }, [messages, read2, returnAllReadData, userID]);
};

// node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListElements.js
var useMessageListElements = function(props) {
  var enrichedMessages = props.enrichedMessages, internalMessageProps = props.internalMessageProps, messageGroupStyles = props.messageGroupStyles, read2 = props.read, returnAllReadData = props.returnAllReadData, threadList = props.threadList;
  var _a = useChatContext("useMessageListElements"), client = _a.client, customClasses = _a.customClasses;
  var _b = useComponentContext("useMessageListElements"), _c = _b.DateSeparator, DateSeparator2 = _c === void 0 ? DateSeparator : _c, HeaderComponent = _b.HeaderComponent, _d = _b.MessageSystem, MessageSystem = _d === void 0 ? EventComponent : _d;
  var readData = useLastReadData({
    messages: enrichedMessages,
    read: read2,
    returnAllReadData,
    userID: client.userID
  });
  var lastReceivedId = (0, import_react162.useMemo)(function() {
    return getLastReceived(enrichedMessages);
  }, [enrichedMessages]);
  var elements = (0, import_react162.useMemo)(function() {
    return enrichedMessages.map(function(message) {
      if (message.customType === CUSTOM_MESSAGE_TYPE.date && message.date && isDate(message.date)) {
        return import_react162.default.createElement(
          "li",
          { key: "".concat(message.date.toISOString(), "-i") },
          import_react162.default.createElement(DateSeparator2, { date: message.date, formatDate: internalMessageProps.formatDate, unread: message.unread })
        );
      }
      if (message.customType === CUSTOM_MESSAGE_TYPE.intro && HeaderComponent) {
        return import_react162.default.createElement(
          "li",
          { key: "intro" },
          import_react162.default.createElement(HeaderComponent, null)
        );
      }
      if (message.type === "system") {
        return import_react162.default.createElement(
          "li",
          { key: message.id || message.created_at },
          import_react162.default.createElement(MessageSystem, { message })
        );
      }
      var groupStyles = messageGroupStyles[message.id] || "";
      var messageClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.message) || "str-chat__li str-chat__li--".concat(groupStyles);
      return import_react162.default.createElement(
        "li",
        { className: messageClass, "data-message-id": message.id, "data-testid": messageClass, key: message.id || message.created_at },
        import_react162.default.createElement(Message, __assign({ groupStyles: [groupStyles], lastReceivedId, message, readBy: readData[message.id] || [], threadList }, internalMessageProps))
      );
    });
  }, [
    enrichedMessages,
    internalMessageProps,
    lastReceivedId,
    messageGroupStyles,
    readData,
    threadList
  ]);
  return elements;
};

// node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useMessageListScrollManager.js
var import_react163 = __toESM(require_react());
function useMessageListScrollManager(params) {
  var loadMoreScrollThreshold = params.loadMoreScrollThreshold, onScrollBy = params.onScrollBy, scrollContainerMeasures = params.scrollContainerMeasures, scrolledUpThreshold = params.scrolledUpThreshold, scrollToBottom = params.scrollToBottom, showNewMessages = params.showNewMessages;
  var client = useChatContext("useMessageListScrollManager").client;
  var measures = (0, import_react163.useRef)({
    offsetHeight: 0,
    scrollHeight: 0
  });
  var messages = (0, import_react163.useRef)();
  var scrollTop = (0, import_react163.useRef)(0);
  (0, import_react163.useLayoutEffect)(function() {
    var _a, _b, _c;
    var prevMeasures = measures.current;
    var prevMessages = messages.current;
    var newMessages = params.messages;
    var lastNewMessage = newMessages[newMessages.length - 1] || {};
    var lastPrevMessage = prevMessages === null || prevMessages === void 0 ? void 0 : prevMessages[prevMessages.length - 1];
    var newMeasures = scrollContainerMeasures();
    var wasAtBottom = prevMeasures.scrollHeight - prevMeasures.offsetHeight - scrollTop.current < scrolledUpThreshold;
    if (typeof prevMessages !== "undefined") {
      if (prevMessages.length < newMessages.length) {
        if ((lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.id) === lastNewMessage.id) {
          if (scrollTop.current < loadMoreScrollThreshold) {
            var listHeightDelta = newMeasures.scrollHeight - prevMeasures.scrollHeight;
            onScrollBy(listHeightDelta);
          }
        } else {
          var lastMessageIsFromCurrentUser = ((_a = lastNewMessage.user) === null || _a === void 0 ? void 0 : _a.id) === client.userID;
          if (lastMessageIsFromCurrentUser || wasAtBottom) {
            scrollToBottom();
          } else {
            showNewMessages();
          }
        }
      } else {
        var hasNewReactions = ((_b = lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.latest_reactions) === null || _b === void 0 ? void 0 : _b.length) !== ((_c = lastNewMessage.latest_reactions) === null || _c === void 0 ? void 0 : _c.length);
        var hasNewReplies = (lastPrevMessage === null || lastPrevMessage === void 0 ? void 0 : lastPrevMessage.reply_count) !== lastNewMessage.reply_count;
        if ((hasNewReactions || hasNewReplies) && wasAtBottom) {
          scrollToBottom();
        }
      }
    }
    messages.current = newMessages;
    measures.current = newMeasures;
  }, [measures, messages, params.messages]);
  return function(scrollTopValue) {
    scrollTop.current = scrollTopValue;
  };
}

// node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useScrollLocationLogic.js
var import_react164 = __toESM(require_react());
var useScrollLocationLogic = function(params) {
  var loadMoreScrollThreshold = params.loadMoreScrollThreshold, _a = params.messages, messages = _a === void 0 ? [] : _a, _b = params.scrolledUpThreshold, scrolledUpThreshold = _b === void 0 ? 200 : _b, hasMoreNewer = params.hasMoreNewer, suppressAutoscroll = params.suppressAutoscroll, listElement = params.listElement;
  var _c = (0, import_react164.useState)(false), hasNewMessages = _c[0], setHasNewMessages = _c[1];
  var _d = (0, import_react164.useState)(), wrapperRect = _d[0], setWrapperRect = _d[1];
  var _e = (0, import_react164.useState)(true), isMessageListScrolledToBottom = _e[0], setIsMessageListScrolledToBottom = _e[1];
  var closeToBottom = (0, import_react164.useRef)(false);
  var closeToTop = (0, import_react164.useRef)(false);
  var scrollCounter = (0, import_react164.useRef)({ autoScroll: 0, scroll: 0 });
  var scrollToBottom = (0, import_react164.useCallback)(function() {
    if (!(listElement === null || listElement === void 0 ? void 0 : listElement.scrollTo) || hasMoreNewer || suppressAutoscroll) {
      return;
    }
    scrollCounter.current.autoScroll += 1;
    listElement.scrollTo({
      top: listElement.scrollHeight
    });
    setHasNewMessages(false);
  }, [listElement, hasMoreNewer, suppressAutoscroll]);
  (0, import_react164.useLayoutEffect)(function() {
    if (listElement) {
      setWrapperRect(listElement.getBoundingClientRect());
      scrollToBottom();
    }
  }, [listElement, hasMoreNewer]);
  var updateScrollTop = useMessageListScrollManager({
    loadMoreScrollThreshold,
    messages,
    onScrollBy: function(scrollBy) {
      listElement === null || listElement === void 0 ? void 0 : listElement.scrollBy({ top: scrollBy });
    },
    scrollContainerMeasures: function() {
      return {
        offsetHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.offsetHeight) || 0,
        scrollHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.scrollHeight) || 0
      };
    },
    scrolledUpThreshold,
    scrollToBottom,
    showNewMessages: function() {
      return setHasNewMessages(true);
    }
  });
  var onScroll = (0, import_react164.useCallback)(function(event) {
    var element3 = event.target;
    var scrollTop = element3.scrollTop;
    updateScrollTop(scrollTop);
    var offsetHeight = element3.offsetHeight;
    var scrollHeight = element3.scrollHeight;
    var prevCloseToBottom = closeToBottom.current;
    closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;
    closeToTop.current = scrollTop < scrolledUpThreshold;
    if (closeToBottom.current) {
      setHasNewMessages(false);
    }
    if (prevCloseToBottom && !closeToBottom.current) {
      setIsMessageListScrolledToBottom(false);
    } else if (!prevCloseToBottom && closeToBottom.current) {
      setIsMessageListScrolledToBottom(true);
    }
  }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);
  return {
    hasNewMessages,
    isMessageListScrolledToBottom,
    onScroll,
    scrollToBottom,
    wrapperRect
  };
};

// node_modules/stream-chat-react/dist/components/MessageList/MessageNotification.js
var import_react165 = __toESM(require_react());
var UnMemoizedMessageNotification = function(props) {
  var children = props.children, onClick = props.onClick, _a = props.showNotification, showNotification = _a === void 0 ? true : _a;
  if (!showNotification)
    return null;
  return import_react165.default.createElement("button", { "aria-live": "polite", className: "str-chat__message-notification", "data-testid": "message-notification", onClick }, children);
};
var MessageNotification = import_react165.default.memo(UnMemoizedMessageNotification);

// node_modules/stream-chat-react/dist/components/MessageList/MessageListNotifications.js
var import_react166 = __toESM(require_react());
var MessageListNotifications = function(props) {
  var hasNewMessages = props.hasNewMessages, isMessageListScrolledToBottom = props.isMessageListScrolledToBottom, isNotAtLatestMessageSet = props.isNotAtLatestMessageSet, MessageNotification2 = props.MessageNotification, notifications = props.notifications, scrollToBottom = props.scrollToBottom, threadList = props.threadList;
  var t = useTranslationContext("MessageListNotifications").t;
  return import_react166.default.createElement(
    "div",
    { className: "str-chat__list-notifications" },
    notifications.map(function(notification) {
      return import_react166.default.createElement(CustomNotification, { active: true, key: notification.id, type: notification.type }, notification.text);
    }),
    import_react166.default.createElement(ConnectionStatus, null),
    import_react166.default.createElement(MessageNotification2, { isMessageListScrolledToBottom, onClick: scrollToBottom, showNotification: hasNewMessages || isNotAtLatestMessageSet, threadList }, isNotAtLatestMessageSet ? t("Latest Messages") : t("New Messages!"))
  );
};

// node_modules/stream-chat-react/dist/components/TypingIndicator/TypingIndicator.js
var import_react167 = __toESM(require_react());
var useJoinTypingUsers = function(names) {
  var t = useTranslationContext().t;
  if (!names.length)
    return null;
  var name = names[0], rest = names.slice(1);
  if (names.length === 1)
    return t("{{ user }} is typing...", {
      user: name
    });
  var MAX_JOINED_USERS = 3;
  var isLargeArray = names.length > MAX_JOINED_USERS;
  var joinedUsers = (isLargeArray ? names.slice(0, MAX_JOINED_USERS) : rest).join(", ").trim();
  if (isLargeArray)
    return t("{{ users }} and more are typing...", {
      users: joinedUsers
    });
  return t("{{ users }} and {{ user }} are typing...", {
    user: name,
    users: joinedUsers
  });
};
var UnMemoizedTypingIndicator = function(props) {
  var PropAvatar = props.Avatar, _a = props.avatarSize, avatarSize = _a === void 0 ? 32 : _a, threadList = props.threadList;
  var _b = useChannelStateContext("TypingIndicator"), channelConfig = _b.channelConfig, thread = _b.thread;
  var _c = useChatContext("TypingIndicator"), client = _c.client, themeVersion = _c.themeVersion;
  var ContextAvatar = useComponentContext("TypingIndicator").Avatar;
  var _d = useTypingContext("TypingIndicator").typing, typing = _d === void 0 ? {} : _d;
  var Avatar2 = PropAvatar || ContextAvatar || Avatar;
  var typingInChannel = !threadList ? Object.values(typing).filter(function(_a2) {
    var _b2;
    var parent_id = _a2.parent_id, user = _a2.user;
    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b2 = client.user) === null || _b2 === void 0 ? void 0 : _b2.id) && !parent_id;
  }) : [];
  var typingInThread = threadList ? Object.values(typing).filter(function(_a2) {
    var _b2;
    var parent_id = _a2.parent_id, user = _a2.user;
    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b2 = client.user) === null || _b2 === void 0 ? void 0 : _b2.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);
  }) : [];
  var typingUserList = (threadList ? typingInThread : typingInChannel).map(function(_a2) {
    var user = _a2.user;
    return (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id);
  }).filter(Boolean);
  var joinedTypingUsers = useJoinTypingUsers(typingUserList);
  var isTypingActive = threadList && typingInThread.length || !threadList && typingInChannel.length;
  if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {
    return null;
  }
  if (themeVersion === "2") {
    if (!isTypingActive)
      return null;
    return import_react167.default.createElement(
      "div",
      { className: clsx_default("str-chat__typing-indicator", {
        "str-chat__typing-indicator--typing": isTypingActive
      }), "data-testid": "typing-indicator" },
      import_react167.default.createElement(
        "div",
        { className: "str-chat__typing-indicator__dots" },
        import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" }),
        import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" }),
        import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" })
      ),
      import_react167.default.createElement("div", { className: "str-chat__typing-indicator__users", "data-testid": "typing-users" }, joinedTypingUsers)
    );
  }
  return import_react167.default.createElement(
    "div",
    { className: clsx_default("str-chat__typing-indicator", {
      "str-chat__typing-indicator--typing": isTypingActive
    }) },
    import_react167.default.createElement("div", { className: "str-chat__typing-indicator__avatars" }, (threadList ? typingInThread : typingInChannel).map(function(_a2, i) {
      var user = _a2.user;
      return import_react167.default.createElement(Avatar2, { image: user === null || user === void 0 ? void 0 : user.image, key: "".concat(user === null || user === void 0 ? void 0 : user.id, "-").concat(i), name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id), size: avatarSize, user });
    })),
    import_react167.default.createElement(
      "div",
      { className: "str-chat__typing-indicator__dots" },
      import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" }),
      import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" }),
      import_react167.default.createElement("span", { className: "str-chat__typing-indicator__dot" })
    )
  );
};
var TypingIndicator = import_react167.default.memo(UnMemoizedTypingIndicator);

// node_modules/stream-chat-react/dist/components/MessageList/MessageListMainPanel.js
var import_react168 = __toESM(require_react());
var MessageListMainPanel = function(_a) {
  var children = _a.children;
  var themeVersion = useChatContext("MessageListMainPanel").themeVersion;
  if (themeVersion === "2")
    return import_react168.default.createElement("div", { className: "str-chat__main-panel-inner" }, children);
  return import_react168.default.createElement(import_react168.default.Fragment, null, children);
};

// node_modules/stream-chat-react/dist/components/MessageList/MessageList.js
var MessageListWithContext = function(props) {
  var channel = props.channel, _a = props.disableDateSeparator, disableDateSeparator = _a === void 0 ? false : _a, groupStyles = props.groupStyles, _b = props.hideDeletedMessages, hideDeletedMessages = _b === void 0 ? false : _b, _c = props.hideNewMessageSeparator, hideNewMessageSeparator = _c === void 0 ? false : _c, internalInfiniteScrollProps = props.internalInfiniteScrollProps, _d = props.messageActions, messageActions = _d === void 0 ? Object.keys(MESSAGE_ACTIONS) : _d, _e = props.messages, messages = _e === void 0 ? [] : _e, notifications = props.notifications, _f = props.noGroupByUser, noGroupByUser = _f === void 0 ? false : _f, _g = props.pinPermissions, pinPermissions = _g === void 0 ? defaultPinPermissions : _g, _h = props.returnAllReadData, returnAllReadData = _h === void 0 ? false : _h, _j = props.threadList, threadList = _j === void 0 ? false : _j, _k = props.unsafeHTML, unsafeHTML = _k === void 0 ? false : _k, headerPosition = props.headerPosition, read2 = props.read, _l = props.messageLimit, messageLimit = _l === void 0 ? 100 : _l, loadMoreCallback = props.loadMore, loadMoreNewerCallback = props.loadMoreNewer, _m = props.hasMoreNewer, hasMoreNewer = _m === void 0 ? false : _m, suppressAutoscroll = props.suppressAutoscroll, highlightedMessageId = props.highlightedMessageId, _o = props.jumpToLatestMessage, jumpToLatestMessage = _o === void 0 ? function() {
    return Promise.resolve();
  } : _o;
  var _p = import_react169.default.useState(null), listElement = _p[0], setListElement = _p[1];
  var _q = import_react169.default.useState(null), ulElement = _q[0], setUlElement = _q[1];
  var customClasses = useChatContext("MessageList").customClasses;
  var _r = useComponentContext("MessageList"), _s = _r.EmptyStateIndicator, EmptyStateIndicator2 = _s === void 0 ? EmptyStateIndicator : _s, _t = _r.LoadingIndicator, LoadingIndicator3 = _t === void 0 ? LoadingIndicator2 : _t, _u = _r.MessageListNotifications, MessageListNotifications2 = _u === void 0 ? MessageListNotifications : _u, _v = _r.MessageNotification, MessageNotification2 = _v === void 0 ? MessageNotification : _v, _w = _r.TypingIndicator, TypingIndicator2 = _w === void 0 ? TypingIndicator : _w;
  var loadMoreScrollThreshold = (internalInfiniteScrollProps === null || internalInfiniteScrollProps === void 0 ? void 0 : internalInfiniteScrollProps.threshold) || 250;
  var _x = useScrollLocationLogic({
    hasMoreNewer,
    listElement,
    loadMoreScrollThreshold,
    messages,
    scrolledUpThreshold: props.scrolledUpThreshold,
    suppressAutoscroll
  }), hasNewMessages = _x.hasNewMessages, isMessageListScrolledToBottom = _x.isMessageListScrolledToBottom, onScroll = _x.onScroll, scrollToBottom = _x.scrollToBottom, wrapperRect = _x.wrapperRect;
  var _y = useEnrichedMessages({
    channel,
    disableDateSeparator,
    groupStyles,
    headerPosition,
    hideDeletedMessages,
    hideNewMessageSeparator,
    messages,
    noGroupByUser
  }), messageGroupStyles = _y.messageGroupStyles, enrichedMessages = _y.messages;
  var elements = useMessageListElements({
    enrichedMessages,
    internalMessageProps: {
      additionalMessageInputProps: props.additionalMessageInputProps,
      closeReactionSelectorOnClick: props.closeReactionSelectorOnClick,
      customMessageActions: props.customMessageActions,
      disableQuotedMessages: props.disableQuotedMessages,
      formatDate: props.formatDate,
      getDeleteMessageErrorNotification: props.getDeleteMessageErrorNotification,
      getFlagMessageErrorNotification: props.getFlagMessageErrorNotification,
      getFlagMessageSuccessNotification: props.getFlagMessageSuccessNotification,
      getMuteUserErrorNotification: props.getMuteUserErrorNotification,
      getMuteUserSuccessNotification: props.getMuteUserSuccessNotification,
      getPinMessageErrorNotification: props.getPinMessageErrorNotification,
      Message: props.Message,
      messageActions,
      messageListRect: wrapperRect,
      onlySenderCanEdit: props.onlySenderCanEdit,
      onMentionsClick: props.onMentionsClick,
      onMentionsHover: props.onMentionsHover,
      onUserClick: props.onUserClick,
      onUserHover: props.onUserHover,
      openThread: props.openThread,
      pinPermissions,
      renderText: props.renderText,
      retrySendMessage: props.retrySendMessage,
      unsafeHTML
    },
    messageGroupStyles,
    read: read2,
    returnAllReadData,
    threadList
  });
  var messageListClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.messageList) || "str-chat__list";
  var threadListClass = threadList ? (customClasses === null || customClasses === void 0 ? void 0 : customClasses.threadList) || "str-chat__list--thread str-chat__thread-list" : "";
  var loadMore = import_react169.default.useCallback(function() {
    if (loadMoreCallback) {
      loadMoreCallback(messageLimit);
    }
  }, [loadMoreCallback, messageLimit]);
  var loadMoreNewer = import_react169.default.useCallback(function() {
    if (loadMoreNewerCallback) {
      loadMoreNewerCallback(messageLimit);
    }
  }, [loadMoreNewerCallback, messageLimit]);
  var scrollToBottomFromNotification = import_react169.default.useCallback(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!hasMoreNewer)
              return [3, 2];
            return [4, jumpToLatestMessage()];
          case 1:
            _a2.sent();
            return [3, 3];
          case 2:
            scrollToBottom();
            _a2.label = 3;
          case 3:
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [scrollToBottom, hasMoreNewer]);
  import_react169.default.useLayoutEffect(function() {
    if (highlightedMessageId) {
      var element3 = ulElement === null || ulElement === void 0 ? void 0 : ulElement.querySelector("[data-message-id='".concat(highlightedMessageId, "']"));
      element3 === null || element3 === void 0 ? void 0 : element3.scrollIntoView({ block: "center" });
    }
  }, [highlightedMessageId]);
  var showEmptyStateIndicator = elements.length === 0 && !threadList;
  return import_react169.default.createElement(
    MessageListContextProvider,
    { value: { listElement, scrollToBottom } },
    import_react169.default.createElement(
      MessageListMainPanel,
      null,
      import_react169.default.createElement("div", { className: "".concat(messageListClass, " ").concat(threadListClass), onScroll, ref: setListElement, tabIndex: 0 }, showEmptyStateIndicator ? import_react169.default.createElement(EmptyStateIndicator2, { key: "empty-state-indicator", listType: threadList ? "thread" : "message" }) : import_react169.default.createElement(
        InfiniteScroll,
        __assign({ className: "str-chat__reverse-infinite-scroll  str-chat__message-list-scroll", "data-testid": "reverse-infinite-scroll", hasNextPage: props.hasMoreNewer, hasPreviousPage: props.hasMore, head: props.head, isLoading: props.loadingMore, loader: import_react169.default.createElement("div", { className: "str-chat__list__loading", key: "loading-indicator" }, props.loadingMore && import_react169.default.createElement(LoadingIndicator3, { size: 20 })), loadNextPage: loadMoreNewer, loadPreviousPage: loadMore }, props.internalInfiniteScrollProps, { threshold: loadMoreScrollThreshold }),
        import_react169.default.createElement("ul", { className: "str-chat__ul", ref: setUlElement }, elements),
        import_react169.default.createElement(TypingIndicator2, { threadList }),
        import_react169.default.createElement("div", { key: "bottom" })
      ))
    ),
    import_react169.default.createElement(MessageListNotifications2, { hasNewMessages, isMessageListScrolledToBottom, isNotAtLatestMessageSet: hasMoreNewer, MessageNotification: MessageNotification2, notifications, scrollToBottom: scrollToBottomFromNotification, threadList })
  );
};
var MessageList = function(props) {
  var _a = useChannelActionContext("MessageList"), jumpToLatestMessage = _a.jumpToLatestMessage, loadMore = _a.loadMore, loadMoreNewer = _a.loadMoreNewer;
  var _b = useChannelStateContext("MessageList"), membersPropToNotPass = _b.members, mutesPropToNotPass = _b.mutes, watchersPropToNotPass = _b.watchers, restChannelStateContext = __rest(_b, ["members", "mutes", "watchers"]);
  return import_react169.default.createElement(MessageListWithContext, __assign({ jumpToLatestMessage, loadMore, loadMoreNewer }, restChannelStateContext, props));
};

// node_modules/stream-chat-react/dist/components/MessageList/ScrollToBottomButton.js
var import_react171 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageList/icons.js
var import_react170 = __toESM(require_react());
var ArrowDown = function(_a) {
  var className = _a.className, color2 = _a.color;
  return import_react170.default.createElement(
    "svg",
    { className, "data-testid": "arrow-down", fill: "none", height: "24", viewBox: "0 0 24 24", width: "24", xmlns: "http://www.w3.org/2000/svg" },
    import_react170.default.createElement("path", { d: "M7.41 8.29504L12 12.875L16.59 8.29504L18 9.70504L12 15.705L6 9.70504L7.41 8.29504Z", fill: color2 || "var(--primary-color)" })
  );
};

// node_modules/stream-chat-react/dist/components/MessageList/ScrollToBottomButton.js
var UnMemoizedScrollToBottomButton = function(props) {
  var isMessageListScrolledToBottom = props.isMessageListScrolledToBottom, onClick = props.onClick, threadList = props.threadList;
  var _a = useChatContext(), activeChannel = _a.channel, client = _a.client;
  var thread = useChannelStateContext().thread;
  var _b = (0, import_react171.useState)((activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.countUnread()) || 0), countUnread = _b[0], setCountUnread = _b[1];
  var _c = (0, import_react171.useState)((thread === null || thread === void 0 ? void 0 : thread.reply_count) || 0), replyCount = _c[0], setReplyCount = _c[1];
  var observedEvent = threadList ? "message.updated" : "message.new";
  (0, import_react171.useEffect)(function() {
    var handleEvent = function(event) {
      var _a2, _b2, _c2, _d, _e;
      var newMessageInAnotherChannel = event.cid !== (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid);
      var newMessageIsMine = ((_a2 = event.user) === null || _a2 === void 0 ? void 0 : _a2.id) === ((_b2 = client.user) === null || _b2 === void 0 ? void 0 : _b2.id);
      var isThreadOpen = !!thread;
      var newMessageIsReply = !!((_c2 = event.message) === null || _c2 === void 0 ? void 0 : _c2.parent_id);
      var dontIncreaseMainListCounterOnNewReply = isThreadOpen && !threadList && newMessageIsReply;
      if (isMessageListScrolledToBottom || newMessageInAnotherChannel || newMessageIsMine || dontIncreaseMainListCounterOnNewReply) {
        return;
      }
      if (event.type === "message.new") {
        setCountUnread(function(prev) {
          return prev + 1;
        });
      } else if (((_d = event.message) === null || _d === void 0 ? void 0 : _d.id) === (thread === null || thread === void 0 ? void 0 : thread.id)) {
        var newReplyCount_1 = ((_e = event.message) === null || _e === void 0 ? void 0 : _e.reply_count) || 0;
        setCountUnread(function() {
          return newReplyCount_1 - replyCount;
        });
      }
    };
    client.on(observedEvent, handleEvent);
    return function() {
      client.off(observedEvent, handleEvent);
    };
  }, [activeChannel, isMessageListScrolledToBottom, observedEvent, replyCount, thread]);
  (0, import_react171.useEffect)(function() {
    if (isMessageListScrolledToBottom) {
      setCountUnread(0);
      setReplyCount((thread === null || thread === void 0 ? void 0 : thread.reply_count) || 0);
    }
  }, [isMessageListScrolledToBottom, thread]);
  if (isMessageListScrolledToBottom)
    return null;
  return import_react171.default.createElement(
    "div",
    { className: "str-chat__jump-to-latest-message" },
    import_react171.default.createElement(
      "button",
      { "aria-live": "polite", className: "\n        str-chat__message-notification-right\n        str-chat__message-notification-scroll-to-latest\n        str-chat__circle-fab\n      ", "data-testid": "message-notification", onClick },
      import_react171.default.createElement(ArrowDown, null),
      countUnread > 0 && import_react171.default.createElement("div", { className: clsx_default("str-chat__message-notification", "str-chat__message-notification-scroll-to-latest-unread-count", "str-chat__jump-to-latest-unread-count"), "data-testid": "unread-message-notification-counter" }, countUnread)
    )
  );
};
var ScrollToBottomButton = import_react171.default.memo(UnMemoizedScrollToBottomButton);

// node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageList.js
var import_react179 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useNewMessageNotification.js
var import_react172 = __toESM(require_react());
function useNewMessageNotification(messages, currentUserId, hasMoreNewer) {
  var _a = (0, import_react172.useState)(false), newMessagesNotification = _a[0], setNewMessagesNotification = _a[1];
  var _b = (0, import_react172.useState)(true), isMessageListScrolledToBottom = _b[0], setIsMessageListScrolledToBottom = _b[1];
  var didMount = (0, import_react172.useRef)(false);
  var lastMessageId = (0, import_react172.useRef)("");
  var atBottom = (0, import_react172.useRef)(false);
  (0, import_react172.useEffect)(function() {
    var _a2;
    if (hasMoreNewer) {
      setNewMessagesNotification(true);
      return;
    }
    if (!(messages === null || messages === void 0 ? void 0 : messages.length))
      return;
    var lastMessage = messages[messages.length - 1];
    var prevMessageId = lastMessageId.current;
    lastMessageId.current = lastMessage.id || "";
    if (lastMessage.id === prevMessageId)
      return;
    if (atBottom.current)
      return;
    if (((_a2 = lastMessage.user) === null || _a2 === void 0 ? void 0 : _a2.id) !== currentUserId && didMount.current) {
      setNewMessagesNotification(true);
    }
    didMount.current = true;
  }, [currentUserId, messages, hasMoreNewer]);
  return {
    atBottom,
    isMessageListScrolledToBottom,
    newMessagesNotification,
    setIsMessageListScrolledToBottom,
    setNewMessagesNotification
  };
}

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/usePrependMessagesCount.js
var import_react173 = __toESM(require_react());
var STATUSES_EXCLUDED_FROM_PREPEND = {
  failed: true,
  sending: true
};
function usePrependedMessagesCount(messages, hasDateSeparator) {
  var firstRealMessageIndex = hasDateSeparator ? 1 : 0;
  var firstMessageOnFirstLoadedPage = (0, import_react173.useRef)();
  var previousFirstMessageOnFirstLoadedPage = (0, import_react173.useRef)();
  var previousNumItemsPrepended = (0, import_react173.useRef)(0);
  var numItemsPrepended = (0, import_react173.useMemo)(function() {
    var _a, _b;
    if (!messages || !messages.length) {
      previousNumItemsPrepended.current = 0;
      return 0;
    }
    var currentFirstMessage = messages === null || messages === void 0 ? void 0 : messages[firstRealMessageIndex];
    var noNewMessages = (currentFirstMessage === null || currentFirstMessage === void 0 ? void 0 : currentFirstMessage.id) === ((_a = previousFirstMessageOnFirstLoadedPage.current) === null || _a === void 0 ? void 0 : _a.id);
    var firstMsgMovedAfterMessagesInExcludedStatus = (currentFirstMessage === null || currentFirstMessage === void 0 ? void 0 : currentFirstMessage.status) && STATUSES_EXCLUDED_FROM_PREPEND[currentFirstMessage.status];
    if (noNewMessages || firstMsgMovedAfterMessagesInExcludedStatus) {
      return previousNumItemsPrepended.current;
    }
    if (!firstMessageOnFirstLoadedPage.current) {
      firstMessageOnFirstLoadedPage.current = currentFirstMessage;
    }
    previousFirstMessageOnFirstLoadedPage.current = currentFirstMessage;
    for (var prependedMessageCount = previousNumItemsPrepended.current; prependedMessageCount < messages.length; prependedMessageCount += 1) {
      var messageIsFirstOnFirstLoadedPage = messages[prependedMessageCount].id === ((_b = firstMessageOnFirstLoadedPage.current) === null || _b === void 0 ? void 0 : _b.id);
      if (messageIsFirstOnFirstLoadedPage) {
        previousNumItemsPrepended.current = prependedMessageCount;
        return prependedMessageCount;
      }
    }
    firstMessageOnFirstLoadedPage.current = currentFirstMessage;
    previousNumItemsPrepended.current = 0;
    return 0;
  }, [firstRealMessageIndex, messages, messages === null || messages === void 0 ? void 0 : messages.length]);
  return numItemsPrepended;
}

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useShouldForceScrollToBottom.js
var import_react174 = __toESM(require_react());
function useShouldForceScrollToBottom(messages, currentUserId) {
  var lastFocusedOwnMessage = (0, import_react174.useRef)("");
  var initialFocusRegistered = (0, import_react174.useRef)(false);
  function recheckForNewOwnMessage() {
    var _a;
    if (messages && messages.length > 0) {
      var lastMessage = messages[messages.length - 1];
      if (((_a = lastMessage.user) === null || _a === void 0 ? void 0 : _a.id) === currentUserId && lastFocusedOwnMessage.current !== lastMessage.id) {
        lastFocusedOwnMessage.current = lastMessage.id;
        return true;
      }
    }
    return false;
  }
  (0, import_react174.useEffect)(function() {
    if (messages && messages.length && !initialFocusRegistered.current) {
      initialFocusRegistered.current = true;
      recheckForNewOwnMessage();
    }
  }, [messages, messages === null || messages === void 0 ? void 0 : messages.length]);
  return recheckForNewOwnMessage;
}

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useGiphyPreview.js
var import_react175 = __toESM(require_react());
var useGiphyPreview = function(separateGiphyPreview) {
  var _a = (0, import_react175.useState)(), giphyPreviewMessage = _a[0], setGiphyPreviewMessage = _a[1];
  var client = useChatContext("useGiphyPreview").client;
  (0, import_react175.useEffect)(function() {
    var handleEvent = function(event) {
      var message = event.message, user = event.user;
      if ((message === null || message === void 0 ? void 0 : message.command) === "giphy" && (user === null || user === void 0 ? void 0 : user.id) === client.userID) {
        setGiphyPreviewMessage(void 0);
      }
    };
    if (separateGiphyPreview)
      client.on("message.new", handleEvent);
    return function() {
      return client.off("message.new", handleEvent);
    };
  }, [separateGiphyPreview]);
  return { giphyPreviewMessage, setGiphyPreviewMessage };
};

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useMessageSetKey.js
var import_react176 = __toESM(require_react());
var useMessageSetKey = function(_a) {
  var messages = _a.messages;
  var _b = (0, import_react176.useState)(+/* @__PURE__ */ new Date()), messageSetKey = _b[0], setMessageSetKey = _b[1];
  var firstMessageId = (0, import_react176.useRef)();
  (0, import_react176.useEffect)(function() {
    var _a2;
    var continuousSet = messages === null || messages === void 0 ? void 0 : messages.find(function(message) {
      return message.id === firstMessageId.current;
    });
    if (!continuousSet) {
      setMessageSetKey(+/* @__PURE__ */ new Date());
    }
    firstMessageId.current = (_a2 = messages === null || messages === void 0 ? void 0 : messages[0]) === null || _a2 === void 0 ? void 0 : _a2.id;
  }, [messages]);
  return {
    messageSetKey
  };
};

// node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useScrollToBottomOnNewMessage.js
var import_react177 = __toESM(require_react());
var useScrollToBottomOnNewMessage = function(_a) {
  var messages = _a.messages, scrollToBottom = _a.scrollToBottom, scrollToLatestMessageOnFocus = _a.scrollToLatestMessageOnFocus;
  var _b = import_react177.default.useState(false), newMessagesReceivedInBackground = _b[0], setNewMessagesReceivedInBackground = _b[1];
  var resetNewMessagesReceivedInBackground = (0, import_react177.useCallback)(function() {
    setNewMessagesReceivedInBackground(false);
  }, []);
  (0, import_react177.useEffect)(function() {
    setNewMessagesReceivedInBackground(true);
  }, [messages]);
  var scrollToBottomIfConfigured = (0, import_react177.useCallback)(function(event) {
    if (!scrollToLatestMessageOnFocus || !newMessagesReceivedInBackground || event.target !== window)
      return;
    setTimeout(scrollToBottom, 100);
  }, [scrollToLatestMessageOnFocus, scrollToBottom, newMessagesReceivedInBackground]);
  (0, import_react177.useEffect)(function() {
    if (typeof window !== "undefined") {
      window.addEventListener("focus", scrollToBottomIfConfigured);
      window.addEventListener("blur", resetNewMessagesReceivedInBackground);
    }
    return function() {
      window.removeEventListener("focus", scrollToBottomIfConfigured);
      window.removeEventListener("blur", resetNewMessagesReceivedInBackground);
    };
  }, [scrollToBottomIfConfigured]);
};

// node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageListComponents.js
var import_react178 = __toESM(require_react());
var PREPEND_OFFSET = Math.pow(10, 7);
function calculateItemIndex(virtuosoIndex, numItemsPrepended) {
  return virtuosoIndex + numItemsPrepended - PREPEND_OFFSET;
}
function calculateFirstItemIndex(numItemsPrepended) {
  return PREPEND_OFFSET - numItemsPrepended;
}
var Item3 = function(_a) {
  var _b;
  var _c;
  var context = _a.context, props = __rest(_a, ["context"]);
  if (!context)
    return import_react178.default.createElement(import_react178.default.Fragment, null);
  var message = context.processedMessages[calculateItemIndex(props["data-item-index"], context.numItemsPrepended)];
  var groupStyles = context.messageGroupStyles[message.id];
  return import_react178.default.createElement("div", __assign({}, props, { className: ((_c = context === null || context === void 0 ? void 0 : context.customClasses) === null || _c === void 0 ? void 0 : _c.virtualMessage) || clsx_default("str-chat__virtual-list-message-wrapper str-chat__li", (_b = {}, _b["str-chat__li--".concat(groupStyles)] = groupStyles, _b)) }));
};
var Header = function(_a) {
  var context = _a.context;
  var _b = useComponentContext("VirtualizedMessageListHeader").LoadingIndicator, LoadingIndicator3 = _b === void 0 ? LoadingIndicator2 : _b;
  if (!(context === null || context === void 0 ? void 0 : context.loadingMore))
    return null;
  return LoadingIndicator3 ? import_react178.default.createElement(
    "div",
    { className: "str-chat__virtual-list__loading" },
    import_react178.default.createElement(LoadingIndicator3, { size: 20 })
  ) : (context === null || context === void 0 ? void 0 : context.head) || null;
};
var EmptyPlaceholder = function(_a) {
  var context = _a.context;
  var _b = useComponentContext("VirtualizedMessageList").EmptyStateIndicator, EmptyStateIndicator2 = _b === void 0 ? EmptyStateIndicator : _b;
  return import_react178.default.createElement(import_react178.default.Fragment, null, EmptyStateIndicator2 && import_react178.default.createElement(EmptyStateIndicator2, { listType: (context === null || context === void 0 ? void 0 : context.threadList) ? "thread" : "message" }));
};
var Footer = function() {
  var TypingIndicator2 = useComponentContext("VirtualizedMessageList").TypingIndicator;
  return TypingIndicator2 ? import_react178.default.createElement(TypingIndicator2, { avatarSize: 24 }) : null;
};
var messageRenderer = function(virtuosoIndex, _data, virtuosoContext) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j;
  var additionalMessageInputProps = virtuosoContext.additionalMessageInputProps, closeReactionSelectorOnClick = virtuosoContext.closeReactionSelectorOnClick, customMessageActions = virtuosoContext.customMessageActions, customMessageRenderer = virtuosoContext.customMessageRenderer, DateSeparator2 = virtuosoContext.DateSeparator, lastReceivedMessageId = virtuosoContext.lastReceivedMessageId, MessageUIComponent = virtuosoContext.Message, messageActions = virtuosoContext.messageActions, MessageSystem = virtuosoContext.MessageSystem, numItemsPrepended = virtuosoContext.numItemsPrepended, ownMessagesReadByOthers = virtuosoContext.ownMessagesReadByOthers, messageList = virtuosoContext.processedMessages, shouldGroupByUser = virtuosoContext.shouldGroupByUser, virtuosoRef = virtuosoContext.virtuosoRef;
  var streamMessageIndex = calculateItemIndex(virtuosoIndex, numItemsPrepended);
  if (customMessageRenderer) {
    return customMessageRenderer(messageList, streamMessageIndex);
  }
  var message = messageList[streamMessageIndex];
  if (!message)
    return import_react178.default.createElement("div", { style: { height: "1px" } });
  if (message.customType === CUSTOM_MESSAGE_TYPE.date && message.date && isDate(message.date)) {
    return DateSeparator2 ? import_react178.default.createElement(DateSeparator2, { date: message.date, unread: message.unread }) : null;
  }
  if (message.type === "system") {
    return MessageSystem ? import_react178.default.createElement(MessageSystem, { message }) : null;
  }
  var groupedByUser = shouldGroupByUser && streamMessageIndex > 0 && ((_a = message.user) === null || _a === void 0 ? void 0 : _a.id) === ((_b = messageList[streamMessageIndex - 1].user) === null || _b === void 0 ? void 0 : _b.id);
  var firstOfGroup = shouldGroupByUser && ((_c = message.user) === null || _c === void 0 ? void 0 : _c.id) !== ((_e = (_d = messageList[streamMessageIndex - 1]) === null || _d === void 0 ? void 0 : _d.user) === null || _e === void 0 ? void 0 : _e.id);
  var endOfGroup = shouldGroupByUser && ((_f = message.user) === null || _f === void 0 ? void 0 : _f.id) !== ((_h = (_g = messageList[streamMessageIndex + 1]) === null || _g === void 0 ? void 0 : _g.user) === null || _h === void 0 ? void 0 : _h.id);
  return import_react178.default.createElement(Message, { additionalMessageInputProps, autoscrollToBottom: (_j = virtuosoRef.current) === null || _j === void 0 ? void 0 : _j.autoscrollToBottom, closeReactionSelectorOnClick, customMessageActions, endOfGroup, firstOfGroup, groupedByUser, lastReceivedId: lastReceivedMessageId, message, Message: MessageUIComponent, messageActions, readBy: ownMessagesReadByOthers[message.id] || [] });
};

// node_modules/stream-chat-react/dist/components/MessageList/VirtualizedMessageList.js
function captureResizeObserverExceededError(e) {
  if (e.message === "ResizeObserver loop completed with undelivered notifications." || e.message === "ResizeObserver loop limit exceeded") {
    e.stopImmediatePropagation();
  }
}
function useCaptureResizeObserverExceededError() {
  (0, import_react179.useEffect)(function() {
    window.addEventListener("error", captureResizeObserverExceededError);
    return function() {
      window.removeEventListener("error", captureResizeObserverExceededError);
    };
  }, []);
}
function fractionalItemSize(element3) {
  return element3.getBoundingClientRect().height;
}
function findMessageIndex(messages, id) {
  return messages.findIndex(function(message) {
    return message.id === id;
  });
}
function calculateInitialTopMostItemIndex(messages, highlightedMessageId) {
  if (highlightedMessageId) {
    var index5 = findMessageIndex(messages, highlightedMessageId);
    if (index5 !== -1) {
      return { align: "center", index: index5 };
    }
  }
  return messages.length - 1;
}
var VirtualizedMessageListWithContext = function(props) {
  var additionalMessageInputProps = props.additionalMessageInputProps, _a = props.additionalVirtuosoProps, additionalVirtuosoProps = _a === void 0 ? {} : _a, channel = props.channel, closeReactionSelectorOnClick = props.closeReactionSelectorOnClick, customMessageActions = props.customMessageActions, customMessageRenderer = props.customMessageRenderer, defaultItemHeight = props.defaultItemHeight, _b = props.disableDateSeparator, disableDateSeparator = _b === void 0 ? true : _b, groupStyles = props.groupStyles, hasMore = props.hasMore, hasMoreNewer = props.hasMoreNewer, head = props.head, _c = props.hideDeletedMessages, hideDeletedMessages = _c === void 0 ? false : _c, _d = props.hideNewMessageSeparator, hideNewMessageSeparator = _d === void 0 ? false : _d, highlightedMessageId = props.highlightedMessageId, jumpToLatestMessage = props.jumpToLatestMessage, loadingMore = props.loadingMore, loadMore = props.loadMore, loadMoreNewer = props.loadMoreNewer, MessageUIComponentFromProps = props.Message, messageActions = props.messageActions, _e = props.messageLimit, messageLimit = _e === void 0 ? 100 : _e, messages = props.messages, notifications = props.notifications, _f = props.overscan, overscan = _f === void 0 ? 0 : _f, read2 = props.read, _g = props.returnAllReadData, returnAllReadData = _g === void 0 ? false : _g, scrollSeekPlaceHolder = props.scrollSeekPlaceHolder, _h = props.scrollToLatestMessageOnFocus, scrollToLatestMessageOnFocus = _h === void 0 ? false : _h, _j = props.separateGiphyPreview, separateGiphyPreview = _j === void 0 ? false : _j, _k = props.shouldGroupByUser, shouldGroupByUser = _k === void 0 ? false : _k, _l = props.stickToBottomScrollBehavior, stickToBottomScrollBehavior = _l === void 0 ? "smooth" : _l, suppressAutoscroll = props.suppressAutoscroll, threadList = props.threadList;
  var virtuosoComponentsFromProps = additionalVirtuosoProps.components, overridingVirtuosoProps = __rest(additionalVirtuosoProps, ["components"]);
  useCaptureResizeObserverExceededError();
  var _m = useComponentContext("VirtualizedMessageList"), _o = _m.DateSeparator, DateSeparator2 = _o === void 0 ? DateSeparator : _o, _p = _m.GiphyPreviewMessage, GiphyPreviewMessage2 = _p === void 0 ? GiphyPreviewMessage : _p, _q = _m.MessageListNotifications, MessageListNotifications2 = _q === void 0 ? MessageListNotifications : _q, _r = _m.MessageNotification, MessageNotification2 = _r === void 0 ? MessageNotification : _r, _s = _m.MessageSystem, MessageSystem = _s === void 0 ? EventComponent : _s, _t = _m.VirtualMessage, MessageUIComponentFromContext = _t === void 0 ? MessageSimple : _t;
  var MessageUIComponent = MessageUIComponentFromProps || MessageUIComponentFromContext;
  var _u = useChatContext("VirtualizedMessageList"), client = _u.client, customClasses = _u.customClasses;
  var virtuoso = (0, import_react179.useRef)(null);
  var lastRead = (0, import_react179.useMemo)(function() {
    var _a2;
    return (_a2 = channel.lastRead) === null || _a2 === void 0 ? void 0 : _a2.call(channel);
  }, [channel]);
  var _v = useGiphyPreview(separateGiphyPreview), giphyPreviewMessage = _v.giphyPreviewMessage, setGiphyPreviewMessage = _v.setGiphyPreviewMessage;
  var processedMessages = (0, import_react179.useMemo)(function() {
    if (typeof messages === "undefined") {
      return [];
    }
    if (disableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator && !separateGiphyPreview) {
      return messages;
    }
    return processMessages({
      enableDateSeparator: !disableDateSeparator,
      hideDeletedMessages,
      hideNewMessageSeparator,
      lastRead,
      messages,
      setGiphyPreviewMessage,
      userId: client.userID || ""
    });
  }, [
    disableDateSeparator,
    hideDeletedMessages,
    hideNewMessageSeparator,
    lastRead,
    messages,
    messages === null || messages === void 0 ? void 0 : messages.length,
    client.userID
  ]);
  var ownMessagesReadByOthers = useLastReadData({
    messages: processedMessages,
    read: read2,
    returnAllReadData,
    userID: client.userID
  });
  var lastReceivedMessageId = (0, import_react179.useMemo)(function() {
    return getLastReceived(processedMessages);
  }, [
    processedMessages
  ]);
  var groupStylesFn = groupStyles || getGroupStyles;
  var messageGroupStyles = (0, import_react179.useMemo)(
    function() {
      return processedMessages.reduce(function(acc, message, i) {
        var style = groupStylesFn(message, processedMessages[i - 1], processedMessages[i + 1], !shouldGroupByUser);
        if (style)
          acc[message.id] = style;
        return acc;
      }, {});
    },
    // processedMessages were incorrectly rebuilt with a new object identity at some point, hence the .length usage
    [processedMessages.length, shouldGroupByUser, groupStylesFn]
  );
  var _w = useNewMessageNotification(processedMessages, client.userID, hasMoreNewer), atBottom = _w.atBottom, isMessageListScrolledToBottom = _w.isMessageListScrolledToBottom, newMessagesNotification = _w.newMessagesNotification, setIsMessageListScrolledToBottom = _w.setIsMessageListScrolledToBottom, setNewMessagesNotification = _w.setNewMessagesNotification;
  var scrollToBottom = (0, import_react179.useCallback)(function() {
    return __awaiter(void 0, void 0, void 0, function() {
      return __generator(this, function(_a2) {
        switch (_a2.label) {
          case 0:
            if (!hasMoreNewer)
              return [3, 2];
            return [4, jumpToLatestMessage()];
          case 1:
            _a2.sent();
            return [
              2
              /*return*/
            ];
          case 2:
            if (virtuoso.current) {
              virtuoso.current.scrollToIndex(processedMessages.length - 1);
            }
            setNewMessagesNotification(false);
            return [
              2
              /*return*/
            ];
        }
      });
    });
  }, [
    virtuoso,
    processedMessages,
    setNewMessagesNotification,
    // processedMessages were incorrectly rebuilt with a new object identity at some point, hence the .length usage
    processedMessages.length,
    hasMoreNewer,
    jumpToLatestMessage
  ]);
  useScrollToBottomOnNewMessage({ messages, scrollToBottom, scrollToLatestMessageOnFocus });
  var numItemsPrepended = usePrependedMessagesCount(processedMessages, !disableDateSeparator);
  var messageSetKey = useMessageSetKey({ messages }).messageSetKey;
  var shouldForceScrollToBottom = useShouldForceScrollToBottom(processedMessages, client.userID);
  var followOutput = function(isAtBottom) {
    if (hasMoreNewer || suppressAutoscroll) {
      return false;
    }
    if (shouldForceScrollToBottom()) {
      return isAtBottom ? stickToBottomScrollBehavior : "auto";
    }
    return isAtBottom ? stickToBottomScrollBehavior : false;
  };
  var computeItemKey = (0, import_react179.useCallback)(function(index5, _, _a2) {
    var numItemsPrepended2 = _a2.numItemsPrepended, processedMessages2 = _a2.processedMessages;
    return processedMessages2[calculateItemIndex(index5, numItemsPrepended2)].id;
  }, []);
  var atBottomStateChange = function(isAtBottom) {
    atBottom.current = isAtBottom;
    setIsMessageListScrolledToBottom(isAtBottom);
    if (isAtBottom && newMessagesNotification) {
      setNewMessagesNotification(false);
    }
  };
  var startReached = function() {
    if (hasMore && loadMore) {
      loadMore(messageLimit);
    }
  };
  var endReached = function() {
    if (hasMoreNewer && loadMoreNewer) {
      loadMoreNewer(messageLimit);
    }
  };
  (0, import_react179.useEffect)(function() {
    var _a2;
    if (highlightedMessageId) {
      var index5 = findMessageIndex(processedMessages, highlightedMessageId);
      if (index5 !== -1) {
        (_a2 = virtuoso.current) === null || _a2 === void 0 ? void 0 : _a2.scrollToIndex({ align: "center", index: index5 });
      }
    }
  }, [highlightedMessageId]);
  if (!processedMessages)
    return null;
  return import_react179.default.createElement(
    import_react179.default.Fragment,
    null,
    import_react179.default.createElement(
      MessageListMainPanel,
      null,
      import_react179.default.createElement(
        "div",
        { className: (customClasses === null || customClasses === void 0 ? void 0 : customClasses.virtualizedMessageList) || "str-chat__virtual-list" },
        import_react179.default.createElement(ln, __assign({ atBottomStateChange, atBottomThreshold: 200, className: "str-chat__message-list-scroll", components: __assign({ EmptyPlaceholder, Footer, Header, Item: Item3 }, virtuosoComponentsFromProps), computeItemKey, context: {
          additionalMessageInputProps,
          closeReactionSelectorOnClick,
          customClasses,
          customMessageActions,
          customMessageRenderer,
          DateSeparator: DateSeparator2,
          head,
          lastReceivedMessageId,
          loadingMore,
          Message: MessageUIComponent,
          messageActions,
          messageGroupStyles,
          MessageSystem,
          numItemsPrepended,
          ownMessagesReadByOthers,
          processedMessages,
          shouldGroupByUser,
          threadList,
          virtuosoRef: virtuoso
        }, endReached, firstItemIndex: calculateFirstItemIndex(numItemsPrepended), followOutput, increaseViewportBy: { bottom: 200, top: 0 }, initialTopMostItemIndex: calculateInitialTopMostItemIndex(processedMessages, highlightedMessageId), itemContent: messageRenderer, itemSize: fractionalItemSize, key: messageSetKey, overscan, ref: virtuoso, startReached, style: { overflowX: "hidden" }, totalCount: processedMessages.length }, overridingVirtuosoProps, scrollSeekPlaceHolder ? { scrollSeek: scrollSeekPlaceHolder } : {}, defaultItemHeight ? { defaultItemHeight } : {}))
      )
    ),
    import_react179.default.createElement(MessageListNotifications2, { hasNewMessages: newMessagesNotification, isMessageListScrolledToBottom, isNotAtLatestMessageSet: hasMoreNewer, MessageNotification: MessageNotification2, notifications, scrollToBottom, threadList }),
    giphyPreviewMessage && import_react179.default.createElement(GiphyPreviewMessage2, { message: giphyPreviewMessage })
  );
};
function VirtualizedMessageList(props) {
  var _a = useChannelActionContext("VirtualizedMessageList"), jumpToLatestMessage = _a.jumpToLatestMessage, loadMore = _a.loadMore, loadMoreNewer = _a.loadMoreNewer;
  var _b = useChannelStateContext("VirtualizedMessageList"), channel = _b.channel, hasMore = _b.hasMore, hasMoreNewer = _b.hasMoreNewer, highlightedMessageId = _b.highlightedMessageId, loadingMore = _b.loadingMore, loadingMoreNewer = _b.loadingMoreNewer, contextMessages = _b.messages, notifications = _b.notifications, read2 = _b.read, suppressAutoscroll = _b.suppressAutoscroll;
  var messages = props.messages || contextMessages;
  return import_react179.default.createElement(VirtualizedMessageListWithContext, __assign({ channel, hasMore: !!hasMore, hasMoreNewer: !!hasMoreNewer, highlightedMessageId, jumpToLatestMessage, loadingMore: !!loadingMore, loadingMoreNewer: !!loadingMoreNewer, loadMore, loadMoreNewer, messages, notifications, read: read2, suppressAutoscroll }, props));
}

// node_modules/stream-chat-react/dist/components/Thread/Thread.js
var import_react184 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Thread/ThreadHeader.js
var import_react181 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Thread/icons.js
var import_react180 = __toESM(require_react());
var CloseIcon3 = function(_a) {
  var title = _a.title;
  var t = useTranslationContext("CloseIcon").t;
  return import_react180.default.createElement(
    "svg",
    { "data-testid": "close-no-outline", fill: "none", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg" },
    import_react180.default.createElement("title", null, title !== null && title !== void 0 ? title : t("Close")),
    import_react180.default.createElement("path", { d: "M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z", fill: "black" })
  );
};

// node_modules/stream-chat-react/dist/components/Thread/ThreadHeader.js
var ThreadHeader = function(props) {
  var closeThread = props.closeThread, overrideImage = props.overrideImage, overrideTitle = props.overrideTitle;
  var t = useTranslationContext("ThreadHeader").t;
  var channel = useChannelStateContext("").channel;
  var displayTitle = useChannelPreviewInfo({
    channel,
    overrideImage,
    overrideTitle
  }).displayTitle;
  return import_react181.default.createElement(
    "div",
    { className: "str-chat__thread-header" },
    import_react181.default.createElement(
      "div",
      { className: "str-chat__thread-header-details" },
      import_react181.default.createElement("div", { className: "str-chat__thread-header-title" }, t("Thread")),
      import_react181.default.createElement("div", { className: "str-chat__thread-header-subtitle" }, displayTitle)
    ),
    import_react181.default.createElement(
      "button",
      { "aria-label": "Close thread", className: "str-chat__square-button str-chat__close-thread-button", "data-testid": "close-button", onClick: closeThread },
      import_react181.default.createElement(CloseIcon3, null)
    )
  );
};

// node_modules/stream-chat-react/dist/components/Thread/ThreadHead.js
var import_react183 = __toESM(require_react());

// node_modules/stream-chat-react/dist/components/Thread/ThreadStart.js
var import_react182 = __toESM(require_react());
var ThreadStart = function() {
  var thread = useChannelStateContext("ThreadStart").thread;
  var t = useTranslationContext("ThreadStart").t;
  if (!(thread === null || thread === void 0 ? void 0 : thread.reply_count))
    return null;
  return import_react182.default.createElement("div", { className: "str-chat__thread-start" }, t("replyCount", { count: thread.reply_count }));
};

// node_modules/stream-chat-react/dist/components/Thread/ThreadHead.js
var ThreadHead = function(props) {
  var _a = useComponentContext("ThreadHead").ThreadStart, ThreadStart2 = _a === void 0 ? ThreadStart : _a;
  return import_react183.default.createElement(
    "div",
    { className: "str-chat__parent-message-li" },
    import_react183.default.createElement(Message, __assign({ initialMessage: true, threadList: true }, props)),
    import_react183.default.createElement(ThreadStart2, null)
  );
};

// node_modules/stream-chat-react/dist/components/Thread/Thread.js
var Thread = function(props) {
  var _a = useChannelStateContext("Thread"), channel = _a.channel, channelConfig = _a.channelConfig, thread = _a.thread;
  if (!thread || (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.replies) === false)
    return null;
  return import_react184.default.createElement(ThreadInner, __assign({}, props, { key: "thread-".concat(thread.id, "-").concat(channel === null || channel === void 0 ? void 0 : channel.cid) }));
};
var ThreadInner = function(props) {
  var _a, _b;
  var additionalMessageInputProps = props.additionalMessageInputProps, additionalMessageListProps = props.additionalMessageListProps, additionalParentMessageProps = props.additionalParentMessageProps, additionalVirtualizedMessageListProps = props.additionalVirtualizedMessageListProps, _c = props.autoFocus, autoFocus = _c === void 0 ? true : _c, _d = props.enableDateSeparator, enableDateSeparator = _d === void 0 ? false : _d, _e = props.fullWidth, fullWidth = _e === void 0 ? false : _e, PropInput = props.Input, PropMessage = props.Message, _f = props.messageActions, messageActions = _f === void 0 ? Object.keys(MESSAGE_ACTIONS) : _f, virtualized = props.virtualized;
  var _g = useChannelStateContext("Thread"), thread = _g.thread, threadHasMore = _g.threadHasMore, threadLoadingMore = _g.threadLoadingMore, threadMessages = _g.threadMessages, threadSuppressAutoscroll = _g.threadSuppressAutoscroll;
  var _h = useChannelActionContext("Thread"), closeThread = _h.closeThread, loadMoreThread = _h.loadMoreThread;
  var _j = useChatContext("Thread"), customClasses = _j.customClasses, themeVersion = _j.themeVersion;
  var _k = useComponentContext("Thread"), ContextInput = _k.ThreadInput, ContextMessage = _k.Message, _l = _k.ThreadHead, ThreadHead2 = _l === void 0 ? ThreadHead : _l, _m = _k.ThreadHeader, ThreadHeader2 = _m === void 0 ? ThreadHeader : _m, VirtualMessage = _k.VirtualMessage;
  var ThreadInput = (_b = (_a = PropInput !== null && PropInput !== void 0 ? PropInput : additionalMessageInputProps === null || additionalMessageInputProps === void 0 ? void 0 : additionalMessageInputProps.Input) !== null && _a !== void 0 ? _a : ContextInput) !== null && _b !== void 0 ? _b : themeVersion === "2" ? MessageInputFlat : MessageInputSmall;
  var ThreadMessage = PropMessage || (additionalMessageListProps === null || additionalMessageListProps === void 0 ? void 0 : additionalMessageListProps.Message);
  var FallbackMessage = virtualized && VirtualMessage ? VirtualMessage : ContextMessage;
  var MessageUIComponent = ThreadMessage || FallbackMessage;
  var ThreadMessageList = virtualized ? VirtualizedMessageList : MessageList;
  (0, import_react184.useEffect)(function() {
    if ((thread === null || thread === void 0 ? void 0 : thread.id) && (thread === null || thread === void 0 ? void 0 : thread.reply_count)) {
      loadMoreThread();
    }
  }, []);
  if (!thread)
    return null;
  var threadClass = (customClasses === null || customClasses === void 0 ? void 0 : customClasses.thread) || clsx_default("str-chat__thread-container str-chat__thread", {
    "str-chat__thread--full": fullWidth,
    "str-chat__thread--virtualized": virtualized
  });
  var head = import_react184.default.createElement(ThreadHead2, __assign({ key: thread.id, message: thread, Message: MessageUIComponent }, additionalParentMessageProps));
  return import_react184.default.createElement(
    "div",
    { className: threadClass },
    import_react184.default.createElement(ThreadHeader2, { closeThread, thread }),
    import_react184.default.createElement(ThreadMessageList, __assign({ disableDateSeparator: !enableDateSeparator, hasMore: threadHasMore, head, loadingMore: threadLoadingMore, loadMore: loadMoreThread, Message: MessageUIComponent, messageActions, messages: threadMessages || [], suppressAutoscroll: threadSuppressAutoscroll, threadList: true }, virtualized ? additionalVirtualizedMessageListProps : additionalMessageListProps)),
    import_react184.default.createElement(MessageInput, __assign({ focus: autoFocus, Input: ThreadInput, parent: thread, publishTypingEvent: false }, additionalMessageInputProps))
  );
};

// node_modules/stream-chat-react/dist/components/Window/Window.js
var import_react185 = __toESM(require_react());
var UnMemoizedWindow = function(props) {
  var children = props.children, _a = props.hideOnThread, hideOnThread = _a === void 0 ? false : _a, propThread = props.thread;
  var contextThread = useChannelStateContext("Window").thread;
  return import_react185.default.createElement("div", { className: clsx_default("str-chat__main-panel", {
    "str-chat__main-panel--hideOnThread": hideOnThread && (contextThread || propThread)
  }) }, children);
};
var Window = import_react185.default.memo(UnMemoizedWindow);

// node_modules/stream-chat-react/dist/utils/generateRandomId.js
var generateRandomId = nanoid;
export {
  ATTACHMENT_GROUPS_ORDER,
  ActionsIcon,
  Attachment,
  AttachmentActions,
  AttachmentActionsContainer,
  AttachmentPreviewList,
  AttachmentWithinContainer,
  Audio,
  AudioContainer,
  ReactTextareaAutocomplete as AutoCompleteTextarea,
  Avatar,
  BaseImage,
  Card,
  CardAudio,
  CardContainer,
  Channel,
  ChannelActionContext,
  ChannelActionProvider,
  ChannelHeader,
  ChannelList,
  ChannelListContext,
  ChannelListContextProvider,
  ChannelListMessenger,
  ChannelPreview,
  ChannelPreviewMessenger,
  ChannelSearch,
  ChannelStateContext,
  ChannelStateProvider,
  Chat,
  ChatAutoComplete,
  ChatContext,
  ChatDown,
  ChatProvider,
  CloseIcon2 as CloseIcon,
  CommandItem,
  ComponentContext,
  ComponentProvider,
  ConnectionStatus,
  CooldownTimer,
  DateSeparator,
  List as DefaultSuggestionList,
  DefaultSuggestionListHeader,
  Item as DefaultSuggestionListItem,
  DefaultTriggerProvider,
  DeliveredCheckIcon,
  DownloadIcon2 as DownloadIcon,
  EditMessageForm,
  EmojiContext,
  EmojiIconLarge,
  EmojiIconSmall,
  EmojiPicker,
  EmojiPickerIcon,
  EmojiProvider,
  EmoticonItem,
  EmptyStateIndicator,
  ErrorIcon,
  EventComponent,
  FileAttachment,
  FileContainer,
  FileUploadIcon,
  FileUploadIconFlat,
  FixedHeightMessage,
  Gallery,
  GalleryContainer,
  GiphyPreviewMessage,
  ImageComponent,
  ImageContainer,
  InfiniteScroll,
  LinkIcon,
  LinkPreviewList,
  LinkPreviewState,
  LoadMoreButton,
  LoadMorePaginator,
  LoadingChannels,
  LoadingErrorIndicator,
  LoadingIndicator2 as LoadingIndicator,
  LoadingIndicatorIcon,
  MAX_QUERY_CHANNELS_LIMIT,
  MESSAGE_ACTIONS,
  MML,
  MediaContainer,
  Message,
  MessageActions,
  MessageActionsBox,
  MessageContext,
  MessageDeleted,
  MessageDeliveredIcon,
  MessageDeliveryStatus,
  MessageErrorIcon,
  MessageInput,
  MessageInputContext,
  MessageInputContextProvider,
  MessageInputFlat,
  MessageInputSmall,
  MessageList,
  MessageListContext,
  MessageListContextProvider,
  MessageListNotifications,
  MessageNotification,
  MessageOptions,
  MessageProvider,
  MessageRepliesCountButton,
  MessageSimple,
  MessageStatus,
  MessageText,
  MessageTimestamp,
  Modal,
  ModalGallery,
  NullComponent,
  PinIcon,
  PinIndicator,
  PlayButton,
  PopperTooltip,
  ProgressBar,
  QuotedMessage,
  QuotedMessagePreview,
  QuotedMessagePreviewHeader,
  ReactionIcon,
  ReactionSelector,
  ReactionsList,
  ReplyIcon,
  RetryIcon2 as RetryIcon,
  SUPPORTED_VIDEO_FORMATS,
  SafeAnchor,
  ScrollToBottomButton,
  SearchBar,
  SearchInput,
  SearchResults,
  SendButton,
  SendIconV1,
  SendIconV2,
  SetLinkPreviewMode,
  SimpleReactionsList,
  Streami18n,
  Thread,
  ThreadHeader,
  ThreadIcon,
  ThreadStart,
  Tooltip,
  TranslationContext,
  TranslationProvider,
  TypingContext,
  TypingIndicator,
  TypingProvider,
  UnMemoizedLoadMorePaginator,
  UnsupportedAttachment,
  UnsupportedAttachmentContainer,
  UploadButton,
  UploadIcon,
  UploadsPreview,
  UserItem,
  VirtualizedMessageList,
  Window,
  areMessagePropsEqual,
  areMessageUIPropsEqual,
  darkModeTheme,
  de_default as deTranslations,
  defaultAllowedTagNames,
  defaultDateTimeParser,
  defaultPinPermissions,
  defaultScrollToItem,
  defaultTimestampFormat,
  defaultTranslatorFunction,
  emojiMarkdownPlugin,
  en_default as enTranslations,
  es_default as esTranslations,
  escapeRegExp,
  fr_default as frTranslations,
  generateRandomId,
  getChannel,
  getDisplayImage,
  getDisplayTitle,
  getGroupStyles,
  getImages,
  getLastReceived,
  getLatestMessagePreview,
  getMessageActions,
  getNonImageAttachments,
  getReadByTooltipText,
  getReadStates,
  getWholeChar,
  handleActionWarning,
  hasMoreMessagesProbably,
  hasNotMoreMessages,
  hi_default as hiTranslations,
  htmlToTextPlugin,
  insertIntro,
  isAudioAttachment,
  isChannel,
  isDate,
  isDayOrMoment,
  isFileAttachment,
  isGalleryAttachmentType,
  isLanguageSupported,
  isMediaAttachment,
  isNumberOrString,
  isOnlyEmojis,
  isScrapedContent,
  isSvgAttachment,
  isUploadedImage,
  isUserMuted,
  it_default as itTranslations,
  ja_default as jaTranslations,
  keepLineBreaksPlugin,
  ko_default as koTranslations,
  makeDateMessageId,
  mapToUserNameOrId,
  markDownRenderers,
  matchMarkdownLinks,
  mentionsMarkdownPlugin,
  messageCodeBlocks,
  messageHasAttachments,
  messageHasReactions,
  missingUseFlagHandlerParameterWarning,
  missingUseMuteHandlerParamsWarning,
  moveChannelUp,
  nl_default as nlTranslations,
  processMessages,
  pt_default as ptTranslations,
  reactionHandlerWarning,
  renderAttachmentActions,
  renderAttachmentWithinContainer,
  renderAudio,
  renderCard,
  renderFile,
  renderGallery,
  renderImage,
  renderMedia,
  renderPreviewText,
  renderText,
  ru_default as ruTranslations,
  showMessageActionsBox,
  tr_default as trTranslations,
  useActionHandler,
  useChannelActionContext,
  useChannelDeletedListener,
  useEditMessageHandler as useChannelEditMessageHandler,
  useChannelHiddenListener,
  useChannelListContext,
  useMentionsHandlers as useChannelMentionsHandler,
  useChannelPreviewInfo,
  useChannelStateContext,
  useChannelTruncatedListener,
  useChannelUpdatedListener,
  useChannelVisibleListener,
  useChat,
  useChatContext,
  useComponentContext,
  useConnectionRecoveredListener,
  useCooldownTimer,
  useCustomStyles,
  useDeleteHandler,
  useEditHandler,
  useEmojiContext,
  useEnrichedMessages,
  useFlagHandler,
  useLastReadData,
  useMentionsHandler,
  useMessageContext,
  useMessageInputContext,
  useMessageInputState,
  useMessageListContext,
  useMessageListElements,
  useMessageListScrollManager,
  useMessageNewListener,
  useMobileNavigation,
  useMuteHandler,
  useNewMessageNotification,
  useNotificationAddedToChannelListener,
  useNotificationMessageNewListener,
  useNotificationRemovedFromChannelListener,
  useOpenThreadHandler,
  usePaginatedChannels,
  usePinHandler,
  usePrependedMessagesCount,
  useReactionClick,
  useReactionHandler,
  useRetryHandler,
  useScrollLocationLogic,
  useShouldForceScrollToBottom,
  useTranslationContext,
  useTypingContext,
  useUserHandler,
  useUserPresenceChangedListener,
  useUserRole,
  validateAndGetMessage,
  withChannelActionContext,
  withChannelStateContext,
  withChatContext,
  withComponentContext,
  withEmojiContext,
  withMessageContext,
  withTranslationContext,
  withTypingContext
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=stream-chat-react.js.map
